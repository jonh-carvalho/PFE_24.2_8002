{"config":{"indexing":"full","lang":["pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Projeto Front-End Reposit\u00f3rio do Grupo Sobre Disciplina que apresenta a introdu\u00e7\u00e3o a programa\u00e7\u00e3o web: HTML, CSS e Javascript. Ferramentas Linguagens : HTML, CSS e Javascript <br> Tecnologias : Visual Studio Code e Github <br> As APs dever\u00e3o ser enviadas no github e publicadas no github pages.","title":"Home"},{"location":"#projeto-front-end","text":"Reposit\u00f3rio do Grupo","title":"Projeto Front-End"},{"location":"#sobre","text":"Disciplina que apresenta a introdu\u00e7\u00e3o a programa\u00e7\u00e3o web: HTML, CSS e Javascript.","title":"Sobre"},{"location":"#ferramentas","text":"Linguagens : HTML, CSS e Javascript <br> Tecnologias : Visual Studio Code e Github <br> As APs dever\u00e3o ser enviadas no github e publicadas no github pages.","title":"Ferramentas"},{"location":"_Disciplina/aulas/","text":"Aulas Aula Conte\u00fado 01 - 12/08/24 Apresenta\u00e7\u00e3o da Disciplina - Processo de Desenvolvimento - Processo de Desenvolvimento - Do Cascata ao \u00c1gil 02 - 19/08/24 Apresenta\u00e7\u00e3o de Tema do Projeto - Configura\u00e7\u00e3o reposit\u00f3rio Github - Principais Funcionalidades do Projeto 03 - 26/08/24 Metodologias \u00c1geis - Scrum - User Stories 04 - 02/09/24 Elabora\u00e7\u00e3o 5w2h - Brainstorm e Mapa Mental 05 - 09/09/24 Front-End Checklist - Valida\u00e7\u00e3o HTML, CSS, Link e Wcag Prot\u00f3tipos 06 - 16/09/24 An\u00e1lise de Tarefas 07 - 23/09/24 GOMS 08 - 30/09/24 AP1 09 - 07/10/24 Planejamento de Avalia\u00e7\u00e3o 10 - 14/10/24 11 - 21/10/24 12 - 28/10/24","title":"Aulas"},{"location":"_Disciplina/aulas/#aulas","text":"Aula Conte\u00fado 01 - 12/08/24 Apresenta\u00e7\u00e3o da Disciplina - Processo de Desenvolvimento - Processo de Desenvolvimento - Do Cascata ao \u00c1gil 02 - 19/08/24 Apresenta\u00e7\u00e3o de Tema do Projeto - Configura\u00e7\u00e3o reposit\u00f3rio Github - Principais Funcionalidades do Projeto 03 - 26/08/24 Metodologias \u00c1geis - Scrum - User Stories 04 - 02/09/24 Elabora\u00e7\u00e3o 5w2h - Brainstorm e Mapa Mental 05 - 09/09/24 Front-End Checklist - Valida\u00e7\u00e3o HTML, CSS, Link e Wcag Prot\u00f3tipos 06 - 16/09/24 An\u00e1lise de Tarefas 07 - 23/09/24 GOMS 08 - 30/09/24 AP1 09 - 07/10/24 Planejamento de Avalia\u00e7\u00e3o 10 - 14/10/24 11 - 21/10/24 12 - 28/10/24","title":"Aulas"},{"location":"_Disciplina/github/","text":"Versionamento Git e GitHub \u2013 controle de vers\u00e3o para iniciantes Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes. Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub. Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita. Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista. Pr\u00e9-requisitos Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte: Uma interface de linha de comando, um terminal. Um editor de texto de sua escolha (usarei o VS Code ). Uma conta no GitHub . O que \u00e9 Git? O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original. Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior. Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original. Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil. Como instalar o Git Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial . Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas. Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral. Como configurar o Git Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC. A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos. Para definir seu nome de usu\u00e1rio, digite e execute estes comandos: gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"** gitconfig --global user.email \"SEU_E-MAIL\"**. Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais. Como criar e inicializar um projeto no Git Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto. Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos: cd desktop cd git and github tutorial Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui . Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto. Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** ** git init A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** ** Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git. Arquivos de projeto no Git Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** ** ** MINHA LISTA DE TAREFAS** Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. Me candidatar a trabalhos remotos. Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github. O que \u00e9 o GitHub? O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias. Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub. Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local. Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub. Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem. Como enviar um reposit\u00f3rio para o Github ** Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza. Passo 1 \u2013 Crie uma conta no GitHub Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub. Passo 2 \u2013 Crie um reposit\u00f3rio Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\" (Criar reposit\u00f3rio). Passo 3 \u2013 Adicionar e confirmar arquivos Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit. Estado confirmado (committed) Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub). Estado modificado (modified) Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado . Estado preparado (staged) Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o. Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo. Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica. Como adicionar arquivos ao Git Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt . Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** ** Como confirmar (commit) arquivos no Git O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\" A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\" , \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser). Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta: gitcommit Agora, nosso arquivo est\u00e1 no estado confirmado. Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** ** Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente. No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos: gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git** gitbranch** -M main** git push -u origin main** ** O primeiro comando, gitremoteaddorigin https://github.com/ihechikara/git-and-github-tutorial.git , cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** ** O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet. O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** ** O \u00faltimo comando, gitpush -u originmain , envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta: gitpush Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub. Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados. Vou adicionar uma nova tarefa \u00e0 lista de tarefas: MINHA LISTA DE TAREFAS Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. **6. Me candidatar a trabalhos remotos. ** Praticar programa\u00e7\u00e3o Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** ** git status Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo. Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o. Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain . Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles. **Como usar branches no Git ** Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente. Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso: branchmain A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada). Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas. Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar. checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter: git checkout -b Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1: gitbranch Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch. MINHA LISTA DE TAREFAS 1.Escrever um artigo.** ** 2.Programar. 3.Estudar pelos livros.** ** 4.Chegar nas aulas a tempo.** ** 5.Visitar minha tia.** ** 6.Me candidatar a trabalhos remotos.** ** 7.Praticar programa\u00e7\u00e3o 8.Completar a tarefa de est\u00e1gio.** ** 9.Praticar aberturas do xadrez.** ** 10.Resolver quebra-cabe\u00e7asdo xadrez .** ** 11.Verificar o cronograma dos testes . \u202f** ** ** Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain , voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. ** Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso). Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main. Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** ** Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta: git merge Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio: git merge Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest , mude para ele usando git checkout test e execute o comando gitpush -u origin test . **Como extrair um reposit\u00f3rio no Git ** Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line. Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** ** V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS. Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** ** git clone Conclus\u00e3o Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub. Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando. Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** ** Links git - guia pr\u00e1tico** ** ** ** https://rogerdudler.github.io/git-guide/index.pt_BR.html **--fast-version-control ** https://git-scm.com/book/pt-br/v2 Interactive, Visual Git https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive LearnGitBranching!** ** https://learngitbranching.js.org/?locale=pt_BR UnderstandingGitthroughimages** ** https://dev.to/nopenoshishi/understanding-git-through-images-4an1 A Visual GitReference https://marklodato.github.io/visual-git-guide/index-en.html A Grip OnGit https://agripongit.vincenttunru.com/ VisualizingGitConceptswith D3 https://onlywei.github.io/explain-git-with-d3/#rebase Como criar um reposit\u00f3rio https://www.atlassian.com/br/git/tutorials/setting-up-a-repository","title":"Versionamento"},{"location":"_Disciplina/github/#versionamento","text":"Git e GitHub \u2013 controle de vers\u00e3o para iniciantes Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes. Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub. Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita. Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista. Pr\u00e9-requisitos Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte: Uma interface de linha de comando, um terminal. Um editor de texto de sua escolha (usarei o VS Code ). Uma conta no GitHub .","title":"Versionamento"},{"location":"_Disciplina/github/#o-que-e-git","text":"O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original. Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior. Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original. Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil.","title":"O que \u00e9 Git?"},{"location":"_Disciplina/github/#como-instalar-o-git","text":"Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial . Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas. Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral.","title":"Como instalar o Git"},{"location":"_Disciplina/github/#como-configurar-o-git","text":"Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC. A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos. Para definir seu nome de usu\u00e1rio, digite e execute estes comandos: gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"** gitconfig --global user.email \"SEU_E-MAIL\"**. Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais.","title":"Como configurar o Git"},{"location":"_Disciplina/github/#como-criar-e-inicializar-um-projeto-no-git","text":"Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto. Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos: cd desktop cd git and github tutorial Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui . Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto. Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** ** git init A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** ** Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git.","title":"Como criar e inicializar um projeto no Git"},{"location":"_Disciplina/github/#arquivos-de-projeto-no-git","text":"Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** ** ** MINHA LISTA DE TAREFAS** Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. Me candidatar a trabalhos remotos. Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github.","title":"Arquivos de projeto no Git"},{"location":"_Disciplina/github/#o-que-e-o-github","text":"O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias. Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub. Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local. Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub. Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem.","title":"O que \u00e9 o GitHub?"},{"location":"_Disciplina/github/#como-enviar-um-repositorio-para-o-github","text":"Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza. Passo 1 \u2013 Crie uma conta no GitHub Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub. Passo 2 \u2013 Crie um reposit\u00f3rio Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\" (Criar reposit\u00f3rio). Passo 3 \u2013 Adicionar e confirmar arquivos Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit. Estado confirmado (committed) Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub). Estado modificado (modified) Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado . Estado preparado (staged) Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o. Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo. Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica.","title":"Como enviar um reposit\u00f3rio para o Github**"},{"location":"_Disciplina/github/#como-adicionar-arquivos-ao-git","text":"Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt . Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** **","title":"Como adicionar arquivos ao Git"},{"location":"_Disciplina/github/#como-confirmar-commit-arquivos-no-git","text":"O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\" A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\" , \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser). Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta: gitcommit Agora, nosso arquivo est\u00e1 no estado confirmado. Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** ** Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente. No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos: gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git** gitbranch** -M main** git push -u origin main** ** O primeiro comando, gitremoteaddorigin https://github.com/ihechikara/git-and-github-tutorial.git , cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** ** O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet. O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** ** O \u00faltimo comando, gitpush -u originmain , envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta: gitpush Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub. Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados. Vou adicionar uma nova tarefa \u00e0 lista de tarefas: MINHA LISTA DE TAREFAS Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. **6. Me candidatar a trabalhos remotos. ** Praticar programa\u00e7\u00e3o Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** ** git status Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo. Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o. Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain . Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles.","title":"Como confirmar (commit) arquivos no Git"},{"location":"_Disciplina/github/#como-usar-branches-no-git","text":"Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente. Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso: branchmain A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada). Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas. Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar. checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter: git checkout -b Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1: gitbranch Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch. MINHA LISTA DE TAREFAS 1.Escrever um artigo.** ** 2.Programar. 3.Estudar pelos livros.** ** 4.Chegar nas aulas a tempo.** ** 5.Visitar minha tia.** ** 6.Me candidatar a trabalhos remotos.** ** 7.Praticar programa\u00e7\u00e3o 8.Completar a tarefa de est\u00e1gio.** ** 9.Praticar aberturas do xadrez.** ** 10.Resolver quebra-cabe\u00e7asdo xadrez .** ** 11.Verificar o cronograma dos testes . \u202f** ** ** Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain , voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. ** Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso). Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main. Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** ** Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta: git merge Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio: git merge Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest , mude para ele usando git checkout test e execute o comando gitpush -u origin test .","title":"**Como usar branches no Git **"},{"location":"_Disciplina/github/#como-extrair-um-repositorio-no-git","text":"Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line. Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** ** V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS. Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** ** git clone","title":"**Como extrair um reposit\u00f3rio no Git **"},{"location":"_Disciplina/github/#conclusao","text":"Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub. Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando. Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** **","title":"Conclus\u00e3o"},{"location":"_Disciplina/github/#links","text":"git - guia pr\u00e1tico** ** ** ** https://rogerdudler.github.io/git-guide/index.pt_BR.html **--fast-version-control ** https://git-scm.com/book/pt-br/v2 Interactive, Visual Git https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive LearnGitBranching!** ** https://learngitbranching.js.org/?locale=pt_BR UnderstandingGitthroughimages** ** https://dev.to/nopenoshishi/understanding-git-through-images-4an1 A Visual GitReference https://marklodato.github.io/visual-git-guide/index-en.html A Grip OnGit https://agripongit.vincenttunru.com/ VisualizingGitConceptswith D3 https://onlywei.github.io/explain-git-with-d3/#rebase Como criar um reposit\u00f3rio https://www.atlassian.com/br/git/tutorials/setting-up-a-repository","title":"Links"},{"location":"_Disciplina/mkdocs/","text":"MkDocs Commands * mkdocs new [dir-name] - Create a new project. * mkdocs serve - Start the live-reloading docs server. * mkdocs build - Build the documentation site. * mkdocs -h - Print help message and exit. *mkdocs gh-deploy - Deploy site on github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MkDocs"},{"location":"_Disciplina/mkdocs/#mkdocs","text":"","title":"MkDocs"},{"location":"_Disciplina/mkdocs/#commands","text":"* mkdocs new [dir-name] - Create a new project. * mkdocs serve - Start the live-reloading docs server. * mkdocs build - Build the documentation site. * mkdocs -h - Print help message and exit. *mkdocs gh-deploy - Deploy site on github.","title":"Commands"},{"location":"_Disciplina/mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/","text":"@ampproject/remapping Remap sequential sourcemaps through transformations to point at the original source code Remapping allows you to take the sourcemaps generated through transforming your code and \"remap\" them to the original source locations. Think \"my minified code, transformed with babel and bundled with webpack\", all pointing to the correct location in your original source code. With remapping, none of your source code transformations need to be aware of the input's sourcemap, they only need to generate an output sourcemap. This greatly simplifies building custom transformations (think a find-and-replace). Installation npm install @ampproject/remapping Usage function remapping( map: SourceMap | SourceMap[], loader: (file: string, ctx: LoaderContext) => (SourceMap | null | undefined), options?: { excludeContent: boolean, decodedMappings: boolean } ): SourceMap; // LoaderContext gives the loader the importing sourcemap, tree depth, the ability to override the // \"source\" location (where child sources are resolved relative to, or the location of original // source), and the ability to override the \"content\" of an original source for inclusion in the // output sourcemap. type LoaderContext = { readonly importer: string; readonly depth: number; source: string; content: string | null | undefined; } remapping takes the final output sourcemap, and a loader function. For every source file pointer in the sourcemap, the loader will be called with the resolved path. If the path itself represents a transformed file (it has a sourcmap associated with it), then the loader should return that sourcemap. If not, the path will be treated as an original, untransformed source code. // Babel transformed \"helloworld.js\" into \"transformed.js\" const transformedMap = JSON.stringify({ file: 'transformed.js', // 1st column of 2nd line of output file translates into the 1st source // file, line 3, column 2 mappings: ';CAEE', sources: ['helloworld.js'], version: 3, }); // Uglify minified \"transformed.js\" into \"transformed.min.js\" const minifiedTransformedMap = JSON.stringify({ file: 'transformed.min.js', // 0th column of 1st line of output file translates into the 1st source // file, line 2, column 1. mappings: 'AACC', names: [], sources: ['transformed.js'], version: 3, }); const remapped = remapping( minifiedTransformedMap, (file, ctx) => { // The \"transformed.js\" file is an transformed file. if (file === 'transformed.js') { // The root importer is empty. console.assert(ctx.importer === ''); // The depth in the sourcemap tree we're currently loading. // The root `minifiedTransformedMap` is depth 0, and its source children are depth 1, etc. console.assert(ctx.depth === 1); return transformedMap; } // Loader will be called to load transformedMap's source file pointers as well. console.assert(file === 'helloworld.js'); // `transformed.js`'s sourcemap points into `helloworld.js`. console.assert(ctx.importer === 'transformed.js'); // This is a source child of `transformed`, which is a source child of `minifiedTransformedMap`. console.assert(ctx.depth === 2); return null; } ); console.log(remapped); // { // file: 'transpiled.min.js', // mappings: 'AAEE', // sources: ['helloworld.js'], // version: 3, // }; In this example, loader will be called twice: \"transformed.js\" , the first source file pointer in the minifiedTransformedMap . We return the associated sourcemap for it (its a transformed file, after all) so that sourcemap locations can be traced through it into the source files it represents. \"helloworld.js\" , our original, unmodified source code. This file does not have a sourcemap, so we return null . The remapped sourcemap now points from transformed.min.js into locations in helloworld.js . If you were to read the mappings , it says \"0th column of the first line output line points to the 1st column of the 2nd line of the file helloworld.js \". Multiple transformations of a file As a convenience, if you have multiple single-source transformations of a file, you may pass an array of sourcemap files in the order of most-recent transformation sourcemap first. Note that this changes the importer and depth of each call to our loader. So our above example could have been written as: const remapped = remapping( [minifiedTransformedMap, transformedMap], () => null ); console.log(remapped); // { // file: 'transpiled.min.js', // mappings: 'AAEE', // sources: ['helloworld.js'], // version: 3, // }; Advanced control of the loading graph source The source property can overridden to any value to change the location of the current load. Eg, for an original source file, it allows us to change the location to the original source regardless of what the sourcemap source entry says. And for transformed files, it allows us to change the relative resolving location for child sources of the loaded sourcemap. const remapped = remapping( minifiedTransformedMap, (file, ctx) => { if (file === 'transformed.js') { // We pretend the transformed.js file actually exists in the 'src/' directory. When the nested // source files are loaded, they will now be relative to `src/`. ctx.source = 'src/transformed.js'; return transformedMap; } console.assert(file === 'src/helloworld.js'); // We could futher change the source of this original file, eg, to be inside a nested directory // itself. This will be reflected in the remapped sourcemap. ctx.source = 'src/nested/transformed.js'; return null; } ); console.log(remapped); // { // \u2026, // sources: ['src/nested/helloworld.js'], // }; content The content property can be overridden when we encounter an original source file. Eg, this allows you to manually provide the source content of the original file regardless of whether the sourcesContent field is present in the parent sourcemap. It can also be set to null to remove the source content. const remapped = remapping( minifiedTransformedMap, (file, ctx) => { if (file === 'transformed.js') { // transformedMap does not include a `sourcesContent` field, so usually the remapped sourcemap // would not include any `sourcesContent` values. return transformedMap; } console.assert(file === 'helloworld.js'); // We can read the file to provide the source content. ctx.content = fs.readFileSync(file, 'utf8'); return null; } ); console.log(remapped); // { // \u2026, // sourcesContent: [ // 'console.log(\"Hello world!\")', // ], // }; Options excludeContent By default, excludeContent is false . Passing { excludeContent: true } will exclude the sourcesContent field from the returned sourcemap. This is mainly useful when you want to reduce the size out the sourcemap. decodedMappings By default, decodedMappings is false . Passing { decodedMappings: true } will leave the mappings field in a decoded state instead of encoding into a VLQ string.","title":"@ampproject/remapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#ampprojectremapping","text":"Remap sequential sourcemaps through transformations to point at the original source code Remapping allows you to take the sourcemaps generated through transforming your code and \"remap\" them to the original source locations. Think \"my minified code, transformed with babel and bundled with webpack\", all pointing to the correct location in your original source code. With remapping, none of your source code transformations need to be aware of the input's sourcemap, they only need to generate an output sourcemap. This greatly simplifies building custom transformations (think a find-and-replace).","title":"@ampproject/remapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#installation","text":"npm install @ampproject/remapping","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#usage","text":"function remapping( map: SourceMap | SourceMap[], loader: (file: string, ctx: LoaderContext) => (SourceMap | null | undefined), options?: { excludeContent: boolean, decodedMappings: boolean } ): SourceMap; // LoaderContext gives the loader the importing sourcemap, tree depth, the ability to override the // \"source\" location (where child sources are resolved relative to, or the location of original // source), and the ability to override the \"content\" of an original source for inclusion in the // output sourcemap. type LoaderContext = { readonly importer: string; readonly depth: number; source: string; content: string | null | undefined; } remapping takes the final output sourcemap, and a loader function. For every source file pointer in the sourcemap, the loader will be called with the resolved path. If the path itself represents a transformed file (it has a sourcmap associated with it), then the loader should return that sourcemap. If not, the path will be treated as an original, untransformed source code. // Babel transformed \"helloworld.js\" into \"transformed.js\" const transformedMap = JSON.stringify({ file: 'transformed.js', // 1st column of 2nd line of output file translates into the 1st source // file, line 3, column 2 mappings: ';CAEE', sources: ['helloworld.js'], version: 3, }); // Uglify minified \"transformed.js\" into \"transformed.min.js\" const minifiedTransformedMap = JSON.stringify({ file: 'transformed.min.js', // 0th column of 1st line of output file translates into the 1st source // file, line 2, column 1. mappings: 'AACC', names: [], sources: ['transformed.js'], version: 3, }); const remapped = remapping( minifiedTransformedMap, (file, ctx) => { // The \"transformed.js\" file is an transformed file. if (file === 'transformed.js') { // The root importer is empty. console.assert(ctx.importer === ''); // The depth in the sourcemap tree we're currently loading. // The root `minifiedTransformedMap` is depth 0, and its source children are depth 1, etc. console.assert(ctx.depth === 1); return transformedMap; } // Loader will be called to load transformedMap's source file pointers as well. console.assert(file === 'helloworld.js'); // `transformed.js`'s sourcemap points into `helloworld.js`. console.assert(ctx.importer === 'transformed.js'); // This is a source child of `transformed`, which is a source child of `minifiedTransformedMap`. console.assert(ctx.depth === 2); return null; } ); console.log(remapped); // { // file: 'transpiled.min.js', // mappings: 'AAEE', // sources: ['helloworld.js'], // version: 3, // }; In this example, loader will be called twice: \"transformed.js\" , the first source file pointer in the minifiedTransformedMap . We return the associated sourcemap for it (its a transformed file, after all) so that sourcemap locations can be traced through it into the source files it represents. \"helloworld.js\" , our original, unmodified source code. This file does not have a sourcemap, so we return null . The remapped sourcemap now points from transformed.min.js into locations in helloworld.js . If you were to read the mappings , it says \"0th column of the first line output line points to the 1st column of the 2nd line of the file helloworld.js \".","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#multiple-transformations-of-a-file","text":"As a convenience, if you have multiple single-source transformations of a file, you may pass an array of sourcemap files in the order of most-recent transformation sourcemap first. Note that this changes the importer and depth of each call to our loader. So our above example could have been written as: const remapped = remapping( [minifiedTransformedMap, transformedMap], () => null ); console.log(remapped); // { // file: 'transpiled.min.js', // mappings: 'AAEE', // sources: ['helloworld.js'], // version: 3, // };","title":"Multiple transformations of a file"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#advanced-control-of-the-loading-graph","text":"","title":"Advanced control of the loading graph"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#source","text":"The source property can overridden to any value to change the location of the current load. Eg, for an original source file, it allows us to change the location to the original source regardless of what the sourcemap source entry says. And for transformed files, it allows us to change the relative resolving location for child sources of the loaded sourcemap. const remapped = remapping( minifiedTransformedMap, (file, ctx) => { if (file === 'transformed.js') { // We pretend the transformed.js file actually exists in the 'src/' directory. When the nested // source files are loaded, they will now be relative to `src/`. ctx.source = 'src/transformed.js'; return transformedMap; } console.assert(file === 'src/helloworld.js'); // We could futher change the source of this original file, eg, to be inside a nested directory // itself. This will be reflected in the remapped sourcemap. ctx.source = 'src/nested/transformed.js'; return null; } ); console.log(remapped); // { // \u2026, // sources: ['src/nested/helloworld.js'], // };","title":"source"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#content","text":"The content property can be overridden when we encounter an original source file. Eg, this allows you to manually provide the source content of the original file regardless of whether the sourcesContent field is present in the parent sourcemap. It can also be set to null to remove the source content. const remapped = remapping( minifiedTransformedMap, (file, ctx) => { if (file === 'transformed.js') { // transformedMap does not include a `sourcesContent` field, so usually the remapped sourcemap // would not include any `sourcesContent` values. return transformedMap; } console.assert(file === 'helloworld.js'); // We can read the file to provide the source content. ctx.content = fs.readFileSync(file, 'utf8'); return null; } ); console.log(remapped); // { // \u2026, // sourcesContent: [ // 'console.log(\"Hello world!\")', // ], // };","title":"content"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#options","text":"","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#excludecontent","text":"By default, excludeContent is false . Passing { excludeContent: true } will exclude the sourcesContent field from the returned sourcemap. This is mainly useful when you want to reduce the size out the sourcemap.","title":"excludeContent"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40ampproject/remapping/#decodedmappings","text":"By default, decodedMappings is false . Passing { decodedMappings: true } will leave the mappings field in a decoded state instead of encoding into a VLQ string.","title":"decodedMappings"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/code-frame/","text":"@babel/code-frame Generate errors that contain a code frame that point to source locations. See our website @babel/code-frame for more information. Install Using npm: npm install --save-dev @babel/code-frame or using yarn: yarn add @babel/code-frame --dev","title":"@babel/code-frame"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/code-frame/#babelcode-frame","text":"Generate errors that contain a code frame that point to source locations. See our website @babel/code-frame for more information.","title":"@babel/code-frame"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/code-frame/#install","text":"Using npm: npm install --save-dev @babel/code-frame or using yarn: yarn add @babel/code-frame --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/compat-data/","text":"@babel/compat-data See our website @babel/compat-data for more information. Install Using npm: npm install --save @babel/compat-data or using yarn: yarn add @babel/compat-data","title":"@babel/compat-data"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/compat-data/#babelcompat-data","text":"See our website @babel/compat-data for more information.","title":"@babel/compat-data"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/compat-data/#install","text":"Using npm: npm install --save @babel/compat-data or using yarn: yarn add @babel/compat-data","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/core/","text":"@babel/core Babel compiler core. See our website @babel/core for more information or the issues associated with this package. Install Using npm: npm install --save-dev @babel/core or using yarn: yarn add @babel/core --dev","title":"@babel/core"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/core/#babelcore","text":"Babel compiler core. See our website @babel/core for more information or the issues associated with this package.","title":"@babel/core"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/core/#install","text":"Using npm: npm install --save-dev @babel/core or using yarn: yarn add @babel/core --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/generator/","text":"@babel/generator Turns an AST into code. See our website @babel/generator for more information or the issues associated with this package. Install Using npm: npm install --save-dev @babel/generator or using yarn: yarn add @babel/generator --dev","title":"@babel/generator"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/generator/#babelgenerator","text":"Turns an AST into code. See our website @babel/generator for more information or the issues associated with this package.","title":"@babel/generator"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/generator/#install","text":"Using npm: npm install --save-dev @babel/generator or using yarn: yarn add @babel/generator --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-compilation-targets/","text":"@babel/helper-compilation-targets Helper functions on Babel compilation targets See our website @babel/helper-compilation-targets for more information. Install Using npm: npm install --save @babel/helper-compilation-targets or using yarn: yarn add @babel/helper-compilation-targets","title":"@babel/helper-compilation-targets"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-compilation-targets/#babelhelper-compilation-targets","text":"Helper functions on Babel compilation targets See our website @babel/helper-compilation-targets for more information.","title":"@babel/helper-compilation-targets"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-compilation-targets/#install","text":"Using npm: npm install --save @babel/helper-compilation-targets or using yarn: yarn add @babel/helper-compilation-targets","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-module-imports/","text":"@babel/helper-module-imports Babel helper functions for inserting module loads See our website @babel/helper-module-imports for more information. Install Using npm: npm install --save @babel/helper-module-imports or using yarn: yarn add @babel/helper-module-imports","title":"@babel/helper-module-imports"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-module-imports/#babelhelper-module-imports","text":"Babel helper functions for inserting module loads See our website @babel/helper-module-imports for more information.","title":"@babel/helper-module-imports"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-module-imports/#install","text":"Using npm: npm install --save @babel/helper-module-imports or using yarn: yarn add @babel/helper-module-imports","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-module-transforms/","text":"@babel/helper-module-transforms Babel helper functions for implementing ES6 module transformations See our website @babel/helper-module-transforms for more information. Install Using npm: npm install --save @babel/helper-module-transforms or using yarn: yarn add @babel/helper-module-transforms","title":"@babel/helper-module-transforms"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-module-transforms/#babelhelper-module-transforms","text":"Babel helper functions for implementing ES6 module transformations See our website @babel/helper-module-transforms for more information.","title":"@babel/helper-module-transforms"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-module-transforms/#install","text":"Using npm: npm install --save @babel/helper-module-transforms or using yarn: yarn add @babel/helper-module-transforms","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-plugin-utils/","text":"@babel/helper-plugin-utils General utilities for plugins to use See our website @babel/helper-plugin-utils for more information. Install Using npm: npm install --save @babel/helper-plugin-utils or using yarn: yarn add @babel/helper-plugin-utils","title":"@babel/helper-plugin-utils"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-plugin-utils/#babelhelper-plugin-utils","text":"General utilities for plugins to use See our website @babel/helper-plugin-utils for more information.","title":"@babel/helper-plugin-utils"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-plugin-utils/#install","text":"Using npm: npm install --save @babel/helper-plugin-utils or using yarn: yarn add @babel/helper-plugin-utils","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-simple-access/","text":"@babel/helper-simple-access Babel helper for ensuring that access to a given value is performed through simple accesses See our website @babel/helper-simple-access for more information. Install Using npm: npm install --save @babel/helper-simple-access or using yarn: yarn add @babel/helper-simple-access","title":"@babel/helper-simple-access"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-simple-access/#babelhelper-simple-access","text":"Babel helper for ensuring that access to a given value is performed through simple accesses See our website @babel/helper-simple-access for more information.","title":"@babel/helper-simple-access"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-simple-access/#install","text":"Using npm: npm install --save @babel/helper-simple-access or using yarn: yarn add @babel/helper-simple-access","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-string-parser/","text":"@babel/helper-string-parser A utility package to parse strings See our website @babel/helper-string-parser for more information. Install Using npm: npm install --save @babel/helper-string-parser or using yarn: yarn add @babel/helper-string-parser","title":"@babel/helper-string-parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-string-parser/#babelhelper-string-parser","text":"A utility package to parse strings See our website @babel/helper-string-parser for more information.","title":"@babel/helper-string-parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-string-parser/#install","text":"Using npm: npm install --save @babel/helper-string-parser or using yarn: yarn add @babel/helper-string-parser","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-validator-identifier/","text":"@babel/helper-validator-identifier Validate identifier/keywords name See our website @babel/helper-validator-identifier for more information. Install Using npm: npm install --save @babel/helper-validator-identifier or using yarn: yarn add @babel/helper-validator-identifier","title":"@babel/helper-validator-identifier"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-validator-identifier/#babelhelper-validator-identifier","text":"Validate identifier/keywords name See our website @babel/helper-validator-identifier for more information.","title":"@babel/helper-validator-identifier"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-validator-identifier/#install","text":"Using npm: npm install --save @babel/helper-validator-identifier or using yarn: yarn add @babel/helper-validator-identifier","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-validator-option/","text":"@babel/helper-validator-option Validate plugin/preset options See our website @babel/helper-validator-option for more information. Install Using npm: npm install --save @babel/helper-validator-option or using yarn: yarn add @babel/helper-validator-option","title":"@babel/helper-validator-option"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-validator-option/#babelhelper-validator-option","text":"Validate plugin/preset options See our website @babel/helper-validator-option for more information.","title":"@babel/helper-validator-option"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helper-validator-option/#install","text":"Using npm: npm install --save @babel/helper-validator-option or using yarn: yarn add @babel/helper-validator-option","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helpers/","text":"@babel/helpers Collection of helper functions used by Babel transforms. See our website @babel/helpers for more information. Install Using npm: npm install --save-dev @babel/helpers or using yarn: yarn add @babel/helpers --dev","title":"@babel/helpers"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helpers/#babelhelpers","text":"Collection of helper functions used by Babel transforms. See our website @babel/helpers for more information.","title":"@babel/helpers"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/helpers/#install","text":"Using npm: npm install --save-dev @babel/helpers or using yarn: yarn add @babel/helpers --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/highlight/","text":"@babel/highlight Syntax highlight JavaScript strings for output in terminals. See our website @babel/highlight for more information. Install Using npm: npm install --save-dev @babel/highlight or using yarn: yarn add @babel/highlight --dev","title":"@babel/highlight"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/highlight/#babelhighlight","text":"Syntax highlight JavaScript strings for output in terminals. See our website @babel/highlight for more information.","title":"@babel/highlight"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/highlight/#install","text":"Using npm: npm install --save-dev @babel/highlight or using yarn: yarn add @babel/highlight --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/","text":"@babel/parser A JavaScript parser See our website @babel/parser for more information or the issues associated with this package. Install Using npm: npm install --save-dev @babel/parser or using yarn: yarn add @babel/parser --dev","title":"@babel/parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/#babelparser","text":"A JavaScript parser See our website @babel/parser for more information or the issues associated with this package.","title":"@babel/parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/#install","text":"Using npm: npm install --save-dev @babel/parser or using yarn: yarn add @babel/parser --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/","text":"Changelog Tags: - :boom: [Breaking Change] - :eyeglasses: [Spec Compliance] - :rocket: [New Feature] - :bug: [Bug Fix] - :memo: [Documentation] - :house: [Internal] - :nail_care: [Polish] Semver Policy: https://github.com/babel/babel/tree/main/packages/babel-parser#semver Note: Gaps between patch versions are faulty, broken or test releases. See the Babel Changelog for the pre-6.8.0 version Changelog. 6.17.1 (2017-05-10) :bug: Bug Fix Fix typo in flow spread operator error (Brian Ng) Fixed invalid number literal parsing ( #473 ) (Alex Kuzmenko) Fix number parser ( #433 ) (Alex Kuzmenko) Ensure non pattern shorthand props are checked for reserved words ( #479 ) (Brian Ng) Remove jsx context when parsing arrow functions ( #475 ) (Brian Ng) Allow super in class properties ( #499 ) (Brian Ng) Allow flow class field to be named constructor ( #510 ) (Brian Ng) 6.17.0 (2017-04-20) :bug: Bug Fix Cherry-pick #418 to 6.x ( #476 ) (Sebastian McKenzie) Add support for invalid escapes in tagged templates ( #274 ) (Kevin Gibbons) Throw error if new.target is used outside of a function ( #402 ) (Brian Ng) Fix parsing of class properties ( #351 ) (Kevin Gibbons) Fix parsing yield with dynamicImport ( #383 ) (Brian Ng) Ensure consistent start args for parseParenItem ( #386 ) (Brian Ng) 7.0.0-beta.8 (2017-04-04) New Feature Add support for flow type spread (#418) (Conrad Buck) Allow statics in flow interfaces (#427) (Brian Ng) Bug Fix Fix predicate attachment to match flow parser (#428) (Brian Ng) Add extra.raw back to JSXText and JSXAttribute (#344) (Alex Rattray) Fix rest parameters with array and objects (#424) (Brian Ng) Fix number parser (#433) (Alex Kuzmenko) Docs Fix CONTRIBUTING.md [skip ci] (#432) (Alex Kuzmenko) Internal Use babel-register script when running babel smoke tests (#442) (Brian Ng) 7.0.0-beta.7 (2017-03-22) Spec Compliance Remove babylon plugin for template revision since it's stage-4 (#426) (Henry Zhu) Bug Fix Fix push-pop logic in flow (#405) (Daniel Tschinder) 7.0.0-beta.6 (2017-03-21) New Feature Add support for invalid escapes in tagged templates (#274) (Kevin Gibbons) Polish Improves error message when super is called outside of constructor (#408) (Arshabh Kumar Agarwal) Docs [7.0] Moved value field in spec from ObjectMember to ObjectProperty as ObjectMethod's don't have it (#415) [skip ci] (James Browning) 7.0.0-beta.5 (2017-03-21) Bug Fix Throw error if new.target is used outside of a function (#402) (Brian Ng) Fix parsing of class properties (#351) (Kevin Gibbons) Other Test runner: Detect extra property in 'actual' but not in 'expected'. (#407) (Andy) Optimize travis builds (#419) (Daniel Tschinder) Update codecov to 2.0 (#412) (Daniel Tschinder) Fix spec for ClassMethod: It doesn't have a function, it is a function. (#406) [skip ci] (Andy) Changed Non-existent RestPattern to RestElement which is what is actually parsed (#409) [skip ci] (James Browning) Upgrade flow to 0.41 (Daniel Tschinder) Fix watch command (#403) (Brian Ng) Update yarn lock (Daniel Tschinder) Fix watch command (#403) (Brian Ng) chore(package): update flow-bin to version 0.41.0 (#395) (greenkeeper[bot]) Add estree test for correct order of directives (Daniel Tschinder) Add DoExpression to spec (#364) (Alex Kuzmenko) Mention cloning of repository in CONTRIBUTING.md (#391) [skip ci] (Sumedh Nimkarde) Explain how to run only one test (#389) [skip ci] (Aaron Ang) ## 7.0.0-beta.4 (2017-03-01) Don't consume async when checking for async func decl (#377) (Brian Ng) add ranges option [skip ci] (Henry Zhu) Don't parse class properties without initializers when classProperties is disabled and Flow is enabled (#300) (Andrew Levine) 7.0.0-beta.3 (2017-02-28) [7.0] Change RestProperty/SpreadProperty to RestElement/SpreadElement (#384) Merge changes from 6.x 7.0.0-beta.2 (2017-02-20) estree: correctly change literals in all cases (#368) (Daniel Tschinder) 7.0.0-beta.1 (2017-02-20) Fix negative number literal typeannotations (#366) (Daniel Tschinder) Update contributing with more test info [skip ci] (#355) (Brian Ng) 7.0.0-beta.0 (2017-02-15) Reintroduce Variance node (#333) (Daniel Tschinder) Rename NumericLiteralTypeAnnotation to NumberLiteralTypeAnnotation (#332) (Charles Pick) [7.0] Remove ForAwaitStatement, add await flag to ForOfStatement (#349) (Brandon Dail) chore(package): update ava to version 0.18.0 (#345) (greenkeeper[bot]) chore(package): update babel-plugin-istanbul to version 4.0.0 (#350) (greenkeeper[bot]) Change location of ObjectTypeIndexer to match flow (#228) (Daniel Tschinder) Rename flow AST Type ExistentialTypeParam to ExistsTypeAnnotation (#322) (Toru Kobayashi) Revert \"Temporary rollback for erroring on trailing comma with spread (#154)\" (#290) (Daniel Tschinder) Remove classConstructorCall plugin (#291) (Brian Ng) Update yarn.lock (Daniel Tschinder) Update cross-env to 3.x (Daniel Tschinder) [7.0] Remove node 0.10, 0.12 and 5 from Travis (#284) (Sergey Rubanov) Remove String.fromCodePoint shim (#279) (Mathias Bynens) 6.16.1 (2017-02-23) :bug: Regression Revert \"Fix export default async function to be FunctionDeclaration\" ( #375 ) Need to modify Babel for this AST node change, so moving to 7.0. Revert \"Don't parse class properties without initializers when classProperties plugin is disabled, and Flow is enabled\" ( #376 ) react-native broke with this so we reverted. 6.16.0 (2017-02-23) :rocket: New Feature ESTree compatibility as plugin ( #277 ) (Daniel Tschinder) We finally introduce a new compatibility layer for ESTree. To put babylon into ESTree-compatible mode the new plugin estree can be enabled. In this mode the parser will output an AST that is compliant to the specs of ESTree We highly recommend everyone who uses babylon outside of babel to use this plugin. This will make it much easier for users to switch between different ESTree-compatible parsers. We so far tested several projects with different parsers and exchanged their parser to babylon and in nearly all cases it worked out of the box. Some other estree-compatible parsers include acorn , esprima , espree , flow-parser , etc. To enable estree mode simply add the plugin in the config: { \"plugins\": [ \"estree\" ] } If you want to migrate your project from non-ESTree mode to ESTree, have a look at our Readme , where all deviations are mentioned. Add a parseExpression public method ( #213 ) (jeromew) Babylon exports a new function to parse a single expression import { parseExpression } from 'babylon'; const ast = parseExpression('x || y && z', options); The returned AST will only consist of the expression. The options are the same as for parse() Add startLine option ( #346 ) (Raphael Mu) A new option was added to babylon allowing to change the initial linenumber for the first line which is usually 1 . Changing this for example to 100 will make line 1 of the input source to be marked as line 100 , line 2 as 101 , line 3 as 102 , ... Function predicate declaration ( #103 ) (Panagiotis Vekris) Added support for function predicates which flow introduced in version 0.33.0 declare function is_number(x: mixed): boolean %checks(typeof x === \"number\"); Allow imports in declare module ( #315 ) (Daniel Tschinder) Added support for imports within module declarations which flow introduced in version 0.37.0 declare module \"C\" { import type { DT } from \"D\"; declare export type CT = { D: DT }; } :eyeglasses: Spec Compliance Forbid semicolons after decorators in classes ( #352 ) (Kevin Gibbons) This example now correctly throws an error when there is a semicolon after the decorator: class A { @a; foo(){} } Keywords are not allowed as local specifier ( #307 ) (Daniel Tschinder) Using keywords in imports is not allowed anymore: import { default } from \"foo\"; import { a as debugger } from \"foo\"; Do not allow overwritting of primitive types ( #314 ) (Daniel Tschinder) In flow it is now forbidden to overwrite the primitive types \"any\" , \"mixed\" , \"empty\" , \"bool\" , \"boolean\" , \"number\" , \"string\" , \"void\" and \"null\" with your own type declaration. Disallow import type { type a } from \u2026 ( #305 ) (Daniel Tschinder) The following code now correctly throws an error import type { type a } from \"foo\"; Don't parse class properties without initializers when classProperties is disabled and Flow is enabled ( #300 ) (Andrew Levine) Ensure that you enable the classProperties plugin in order to enable correct parsing of class properties. Prior to this version it was possible to parse them by enabling the flow plugin but this was not intended the behaviour. If you enable the flow plugin you can only define the type of the class properties, but not initialize them. Fix export default async function to be FunctionDeclaration ( #324 ) (Daniel Tschinder) Parsing the following code now returns a FunctionDeclaration AST node instead of FunctionExpression . export default async function bar() {}; :nail_care: Polish Improve error message on attempt to destructure named import ( #288 ) (Brian Ng) :bug: Bug Fix Fix negative number literal typeannotations ( #366 ) (Daniel Tschinder) Ensure takeDecorators is called on exported class ( #358 ) (Brian Ng) ESTree: correctly change literals in all cases ( #368 ) (Daniel Tschinder) Correctly convert RestProperty to Assignable ( #339 ) (Daniel Tschinder) Fix #321 by allowing question marks in type params ( #338 ) (Daniel Tschinder) Fix #336 by correctly setting arrow-param ( #337 ) (Daniel Tschinder) Fix parse error when destructuring set with default value ( #317 ) (Brian Ng) Fix ObjectTypeCallProperty static ( #298 ) (Dan Harper) :house: Internal Fix generator-method-with-computed-name spec ( #360 ) (Alex Rattray) Fix flow type-parameter-declaration test with unintended semantic ( #361 ) (Alex Rattray) Cleanup and splitup parser functions ( #295 ) (Daniel Tschinder) chore(package): update flow-bin to version 0.38.0 ( #313 ) (greenkeeper[bot]) Call inner function instead of 1:1 copy to plugin ( #294 ) (Daniel Tschinder) Update eslint-config-babel to the latest version \ud83d\ude80 ( #299 ) (greenkeeper[bot]) Update eslint-config-babel to the latest version \ud83d\ude80 ( #293 ) (greenkeeper[bot]) devDeps: remove eslint-plugin-babel ( #292 ) (Kai Cataldo) Correct indent eslint rule config ( #276 ) (Daniel Tschinder) Fail tests that have expected.json and throws-option ( #285 ) (Daniel Tschinder) :memo: Documentation Update contributing with more test info [skip ci] ( #355 ) (Brian Ng) Update API documentation ( #330 ) (Timothy Gu) Added keywords to package.json ( #323 ) (Dmytro) AST spec: fix casing of RegExpLiteral ( #318 ) (Mathias Bynens) 6.15.0 (2017-01-10) :eyeglasses: Spec Compliance Add support for Flow shorthand import type ( #267 ) (Jeff Morrison) This change implements flows new shorthand import syntax and where previously you had to write this code: import {someValue} from \"blah\"; import type {someType} from \"blah\"; import typeof {someOtherValue} from \"blah\"; you can now write it like this: import { someValue, type someType, typeof someOtherValue, } from \"blah\"; For more information look at this pull request. flow: allow leading pipes in all positions ( #256 ) (Vladimir Kurchatkin) This change now allows a leading pipe everywhere types can be used: var f = (x): | 1 | 2 => 1; Throw error when exporting non-declaration ( #241 ) (Kai Cataldo) Previously babylon parsed the following exports, although they are not valid: export typeof foo; export new Foo(); export function() {}; export for (;;); export while(foo); :bug: Bug Fix Don't set inType flag when parsing property names ( #266 ) (Vladimir Kurchatkin) This fixes parsing of this case: const map = { [age <= 17] : 'Too young' }; Fix source location for JSXEmptyExpression nodes (fixes #248) ( #249 ) (James Long) The following case produced an invalid AST <div>{/* foo */}</div> Use fromCodePoint to convert high value unicode entities ( #243 ) (Ryan Duffy) When high value unicode entities (e.g. \ud83d\udca9) were used in the input source code they are now correctly encoded in the resulting AST. Rename folder to avoid Windows-illegal characters ( #281 ) (Ryan Plant) Allow this.state.clone() when parsing decorators ( #262 ) (Alex Rattray) :house: Internal User external-helpers ( #254 ) (Daniel Tschinder) Add watch script for dev ( #234 ) (Kai Cataldo) Freeze current plugins list for \"*\" option, and remove from README.md ( #245 ) (Andrew Levine) Prepare tests for multiple fixture runners. ( #240 ) (Daniel Tschinder) Add some test coverage for decorators stage-0 plugin ( #250 ) (Andrew Levine) Refactor tokenizer types file ( #263 ) (Sven SAULEAU) Update eslint-config-babel to the latest version \ud83d\ude80 ( #273 ) (greenkeeper[bot]) chore(package): update rollup to version 0.41.0 ( #272 ) (greenkeeper[bot]) chore(package): update flow-bin to version 0.37.0 ( #255 ) (greenkeeper[bot]) 6.14.1 (2016-11-17) :bug: Bug Fix Allow \"plugins\": [\"*\"] ( #229 ) (Daniel Tschinder) { \"plugins\": [\"*\"] } Will include all parser plugins instead of specifying each one individually. Useful for tools like babel-eslint, jscodeshift, and ast-explorer. 6.14.0 (2016-11-16) :eyeglasses: Spec Compliance Throw error for reserved words enum and await ( #195 ) (Kai Cataldo) 11.6.2.2 Future Reserved Words Babylon will throw for more reserved words such as enum or await (in strict mode). class enum {} // throws class await {} // throws in strict mode (module) Optional names for function types and object type indexers ( #197 ) (Gabe Levi) So where you used to have to write type A = (x: string, y: boolean) => number; type B = (z: string) => number; type C = { [key: string]: number }; you can now write (with flow 0.34.0) type A = (string, boolean) => number; type B = string => number; type C = { [string]: number }; Parse flow nested array type annotations like number[][] ( #219 ) (Bernhard H\u00e4ussner) Supports these form now of specifying array types: var a: number[][][][]; var b: string[][]; :bug: Bug Fix Correctly eat semicolon at the end of DelcareModuleExports ( #223 ) (Daniel Tschinder) declare module \"foo\" { declare module.exports: number } declare module \"foo\" { declare module.exports: number; } // also allowed now :house: Internal Count Babel tests towards Babylon code coverage ( #182 ) (Moti Zilberman) Fix strange line endings ( #214 ) (Thomas Grainger) Add node 7 (Daniel Tschinder) chore(package): update flow-bin to version 0.34.0 ( #204 ) (Greenkeeper) v6.13.1 (2016-10-26) :nail_care: Polish Use rollup for bundling to speed up startup time ( #190 ) ( @drewml ) const babylon = require('babylon'); const ast = babylon.parse('var foo = \"lol\";'); With that test case, there was a ~95ms savings by removing the need for node to build/traverse the dependency graph. Without bundling With bundling add clean command [skip ci] ( #201 ) (Henry Zhu) add ForAwaitStatement (async generator already added) [skip ci] ( #196 ) (Henry Zhu) v6.13.0 (2016-10-21) :eyeglasses: Spec Compliance Property variance type annotations for Flow plugin ( #161 ) (Sam Goldman) See https://flowtype.org/docs/variance.html for more information type T = { +p: T }; interface T { -p: T }; declare class T { +[k:K]: V }; class T { -[k:K]: V }; class C2 { +p: T = e }; Raise error on duplicate definition of proto ( #183 ) (Moti Zilberman) ({ __proto__: 1, __proto__: 2 }) // Throws an error now :bug: Bug Fix Flow: Allow class properties to be named static ( #184 ) (Moti Zilberman) declare class A { static: T; } Allow \"async\" as identifier for object literal property shorthand ( #187 ) (Andrew Levine) var foo = { async, bar }; :nail_care: Polish Fix flowtype and add inType to state ( #189 ) (Daniel Tschinder) This improves the performance slightly (because of hidden classes) :house: Internal Fix .gitattributes line ending setting ( #191 ) (Moti Zilberman) Increase test coverage ( #175 (Moti Zilberman) Readd missin .eslinignore for IDEs (Daniel Tschinder) Error on missing expected.json fixture in CI ( #188 ) (Moti Zilberman) Add .gitattributes and .editorconfig for LF line endings ( #179 ) (Moti Zilberman) Fixes two tests that are failing after the merge of #172 ( #177 ) (Moti Zilberman) v6.12.0 (2016-10-14) :eyeglasses: Spec Compliance Implement import() syntax ( #163 ) (Jordan Gensler) Dynamic Import Proposal Repo: https://github.com/domenic/proposal-dynamic-import Championed by @domenic stage-2 sept-28 tc39 notes This repository contains a proposal for adding a \"function-like\" import() module loading syntactic form to JavaScript import(`./section-modules/${link.dataset.entryModule}.js`) .then(module => { module.loadPageInto(main); }) Add EmptyTypeAnnotation ( #171 ) (Sam Goldman) EmptyTypeAnnotation Just wasn't covered before. type T = empty; :bug: Bug Fix Fix crash when exporting with destructuring and sparse array ( #170 ) (Jeroen Engels) // was failing due to sparse array export const { foo: [ ,, qux7 ] } = bar; Allow keyword in Flow object declaration property names with type parameters ( #146 ) (Dan Harper) declare class X { foobar<T>(): void; static foobar<T>(): void; } Allow keyword in object/class property names with Flow type parameters ( #145 ) (Dan Harper) class Foo { delete<T>(item: T): T { return item; } } Allow typeAnnotations for yield expressions ( #174 )) (Daniel Tschinder) function *foo() { const x = (yield 5: any); } :nail_care: Polish Annotate more errors with expected token ( #172 )) (Moti Zilberman) // Unexpected token, expected ; (1:6) { set 1 } :house: Internal Remove kcheck ( #173 )) (Daniel Tschinder) Also run flow, linting, babel tests on separate instances (add back node 0.10) v6.11.6 (2016-10-12) :bug: Bug Fix/Regression Fix crash when exporting with destructuring and sparse array ( #170 ) (Jeroen Engels) // was failing with `Cannot read property 'type' of null` because of null identifiers export const { foo: [ ,, qux7 ] } = bar; v6.11.5 (2016-10-12) :eyeglasses: Spec Compliance Fix: Check for duplicate named exports in exported destructuring assignments ( #144 ) (Kai Cataldo) // `foo` has already been exported. Exported identifiers must be unique. (2:20) export function foo() {}; export const { a: [{foo}] } = bar; Fix: Check for duplicate named exports in exported rest elements/properties ( #164 ) (Kai Cataldo) // `foo` has already been exported. Exported identifiers must be unique. (2:22) export const foo = 1; export const [bar, ...foo] = baz; :bug: Bug Fix Fix: Allow identifier async for default param in arrow expression ( #165 ) (Kai Cataldo) // this is ok now const test = ({async = true}) => {}; :nail_care: Polish Babylon will now print out the token it's expecting if there's a SyntaxError ( #150 ) (Daniel Tschinder) # So in the case of a missing ending curly (`}`) Module build failed: SyntaxError: Unexpected token, expected } (30:0) 28 | } 29 | > 30 | | ^ v6.11.4 (2016-10-03) Temporary rollback for erroring on trailing comma with spread (#154) (Henry Zhu) v6.11.3 (2016-10-01) :eyeglasses: Spec Compliance Add static errors for object rest (#149) ( @danez ) https://github.com/sebmarkbage/ecmascript-rest-spread Object rest copies the rest of properties from the right hand side obj starting from the left to right. let { x, y, ...z } = { x: 1, y: 2, z: 3 }; // x = 1 // y = 2 // z = { z: 3 } New Syntax Errors: SyntaxError : The rest element has to be the last element when destructuring (1:10) > 1 | let { ...x, y, z } = { x: 1, y: 2, z: 3}; | ^ # Previous behavior: # x = { x: 1, y: 2, z: 3 } # y = 2 # z = 3 Before, this was just a more verbose way of shallow copying obj since it doesn't actually do what you think. SyntaxError : Cannot have multiple rest elements when destructuring (1:13) > 1 | let { x, ...y, ...z } = { x: 1, y: 2, z: 3}; | ^ # Previous behavior: # x = 1 # y = { y: 2, z: 3 } # z = { y: 2, z: 3 } Before y and z would just be the same value anyway so there is no reason to need to have both. SyntaxError : A trailing comma is not permitted after the rest element (1:16) let { x, y, ...z, } = obj; The rationale for this is that the use case for trailing comma is that you can add something at the end without affecting the line above. Since a RestProperty always has to be the last property it doesn't make sense. get / set are valid property names in default assignment (#142) ( @jezell ) // valid function something({ set = null, get = null }) {} v6.11.2 (2016-09-23) Bug Fix #139 Don't do the duplicate check if not an identifier (#140) @hzoo // regression with duplicate export check SyntaxError: ./typography.js: `undefined` has already been exported. Exported identifiers must be unique. (22:13) 20 | 21 | export const { rhythm } = typography; > 22 | export const { TypographyStyle } = typography Bail out for now, and make a change to account for destructuring in the next release. 6.11.1 (2016-09-22) Bug Fix #137 - Fix a regression with duplicate exports - it was erroring on all keys in Object.prototype . @danez export toString from './toString'; `toString` has already been exported. Exported identifiers must be unique. (1:7) > 1 | export toString from './toString'; | ^ 2 | 6.11.0 (2016-09-22) Spec Compliance (will break CI) Disallow duplicate named exports ( #107 ) @kaicataldo // Only one default export allowed per module. (2:9) export default function() {}; export { foo as default }; // Only one default export allowed per module. (2:0) export default {}; export default function() {}; // `Foo` has already been exported. Exported identifiers must be unique. (2:0) export { Foo }; export class Foo {}; New Feature (Syntax) Add support for computed class property names ( #121 ) @motiz88 // AST interface ClassProperty <: Node { type: \"ClassProperty\"; key: Identifier; value: Expression; computed: boolean; // added } // with \"plugins\": [\"classProperties\"] class Foo { [x] ['y'] } class Bar { [p] [m] () {} } ``` ### Bug Fix - Fix `static` property falling through in the declare class Flow AST ([#135](https://github.com/babel/babylon/pull/135)) @danharper ```js declare class X { a: number; static b: number; // static c: number; // this was being marked as static in the AST as well } Polish Rephrase \"assigning/binding to rvalue\" errors to include context ( #119 ) @motiz88 // Used to error with: // SyntaxError: Assigning to rvalue (1:0) // Now: // Invalid left-hand side in assignment expression (1:0) 3 = 4 // Invalid left-hand side in for-in statement (1:5) for (+i in {}); Internal Fix call to this.parseMaybeAssign with correct arguments ( #133 ) @danez Add semver note to changelog ( #131 ) @hzoo 6.10.0 (2016-09-19) We plan to include some spec compliance bugs in patch versions. An example was the multiple default exports issue. Spec Compliance Implement ES2016 check for simple parameter list in strict mode ( #106 ) (Timothy Gu) It is a Syntax Error if ContainsUseStrict of FunctionBody is true and IsSimpleParameterList of FormalParameters is false. https://tc39.github.io/ecma262/2016/#sec-function-definitions-static-semantics-early-errors More Context: tc39-notes For example: // this errors because it uses destructuring and default parameters // in a function with a \"use strict\" directive function a([ option1, option2 ] = []) { \"use strict\"; } ``` The solution would be to use a top level \"use strict\" or to remove the destructuring or default parameters when using a function + \"use strict\" or to. ### New Feature * Exact object type annotations for Flow plugin ([#104](https://github.com/babel/babylon/pull/104)) (Basil Hosmer) Added to flow in https://github.com/facebook/flow/commit/c710c40aa2a115435098d6c0dfeaadb023cd39b8 Looks like: ```js var a : {| x: number, y: string |} = { x: 0, y: 'foo' }; Bug Fixes Include typeParameter location in ArrowFunctionExpression ( #126 ) (Daniel Tschinder) Error on invalid flow type annotation with default assignment ( #122 ) (Dan Harper) Fix Flow return types on arrow functions ( #124 ) (Dan Harper) Misc Add tests for export extensions ( #127 ) (Daniel Tschinder) Fix Contributing guidelines [skip ci] (Daniel Tschinder) 6.9.2 (2016-09-09) The only change is to remove the babel-runtime dependency by compiling with Babel's ES2015 loose mode. So using babylon standalone should be smaller. 6.9.1 (2016-08-23) This release contains mainly small bugfixes but also updates babylons default mode to es2017. The features for exponentiationOperator , asyncFunctions and trailingFunctionCommas which previously needed to be activated via plugin are now enabled by default and the plugins are now no-ops. Bug Fixes Fix issues with default object params in async functions ( #96 ) @danez Fix issues with flow-types and async function ( #95 ) @danez Fix arrow functions with destructuring, types & default value ( #94 ) @danharper Fix declare class with qualified type identifier ( #97 ) @danez Remove exponentiationOperator, asyncFunctions, trailingFunctionCommas plugins and enable them by default ( #98 ) @danez 6.9.0 (2016-08-16) New syntax support Add JSX spread children ( #42 ) @calebmer (Be aware that React is not going to support this syntax) <div> {...todos.map(todo => <Todo key={todo.id} todo={todo}/>)} </div> Add support for declare module.exports ( #72 ) @danez declare module \"foo\" { declare module.exports: {} } New Features If supplied, attach filename property to comment node loc. ( #80 ) @divmain Add identifier name to node loc field ( #90 ) @kittens Bug Fixes Fix exponential operator to behave according to spec ( #75 ) @danez Fix lookahead to not add comments to arrays which are not cloned ( #76 ) @danez Fix accidental fall-through in Flow type parsing. ( #82 ) @xiemaisi Only allow declares inside declare module ( #73 ) @danez Small fix for parsing type parameter declarations ( #83 ) @gabelevi Fix arrow param locations with flow types ( #57 ) @danez Fixes SyntaxError position with flow optional type ( #65 ) @danez Internal Add codecoverage to tests @danez Fix tests to not save expected output if we expect the test to fail @danez Make a shallow clone of babel for testing @danez chore(package): update cross-env to version 2.0.0 ( #77 ) @greenkeeperio-bot chore(package): update ava to version 0.16.0 ( #86 ) @greenkeeperio-bot chore(package): update babel-plugin-istanbul to version 2.0.0 ( #89 ) @greenkeeperio-bot chore(package): update nyc to version 8.0.0 ( #88 ) @greenkeeperio-bot 6.8.4 (2016-07-06) Bug Fixes Fix the location of params, when flow and default value used ( #68 ) @danez 6.8.3 (2016-07-02) Bug Fixes Fix performance regression introduced in 6.8.2 with conditionals ( #63 ) @danez 6.8.2 (2016-06-24) Bug Fixes Fix parse error with yielding jsx elements in generators function* it() { yield <a></a>; } ( #31 ) @eldereal When cloning nodes do not clone its comments ( #24 ) @danez Fix parse errors when using arrow functions with an spread element and return type (...props): void => {} ( #10 ) @danez Fix leading comments added from previous node ( #23 ) @danez Fix parse errors with flow's optional arguments (arg?) => {} ( #19 ) @danez Support negative numeric type literals @kittens Remove line terminator restriction after await keyword @kittens Remove grouped type arrow restriction as it seems flow no longer has it @kittens Fix parse error with generic methods that have the name get or set class foo { get() {} } ( #55 ) @vkurchatkin Fix parse error with arrow functions that have flow type parameter declarations <T>(x: T): T => x; ( #54 ) @gabelevi Documentation Document AST differences from ESTree ( #41 ) @nene Move ast spec from babel/babel ( #46 ) @hzoo Internal Enable skipped tests ( #16 ) @danez Add script to test latest version of babylon with babel ( #21 ) @danez Upgrade test runner ava @kittens Add missing generate-identifier-regex script @kittens Rename parser context types @kittens Add node v6 to travis testing @hzoo Update to Unicode v9 ( #45 ) @mathiasbynens 6.8.1 (2016-06-06) New Feature Parse type parameter declarations with defaults like type Foo<T = string> = T Bug Fixes Type parameter declarations need 1 or more type parameters. The existential type * is not a valid type parameter. The existential type * is a primary type Spec Compliance The param list for type parameter declarations now consists of TypeParameter nodes New TypeParameter AST Node (replaces using the Identifier node before) interface TypeParameter <: Node { bound: TypeAnnotation; default: TypeAnnotation; name: string; variance: \"plus\" | \"minus\"; } 6.8.0 (2016-05-02) New Feature Parse Method Parameter Decorators ( #12 ) Method Parameter Decorators is now a TC39 stage 0 proposal . Examples: class Foo { constructor(@foo() x, @bar({ a: 123 }) @baz() y) {} } export default function func(@foo() x, @bar({ a: 123 }) @baz() y) {} var obj = { method(@foo() x, @bar({ a: 123 }) @baz() y) {} }; Parse for-await statements (w/ asyncGenerators plugin) ( #17 ) There is also a new node type, ForAwaitStatement . Async generators and for-await are now a stage 2 proposal . Example: async function f() { for await (let x of y); }","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#changelog","text":"Tags: - :boom: [Breaking Change] - :eyeglasses: [Spec Compliance] - :rocket: [New Feature] - :bug: [Bug Fix] - :memo: [Documentation] - :house: [Internal] - :nail_care: [Polish] Semver Policy: https://github.com/babel/babel/tree/main/packages/babel-parser#semver Note: Gaps between patch versions are faulty, broken or test releases. See the Babel Changelog for the pre-6.8.0 version Changelog.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6171-2017-05-10","text":"","title":"6.17.1 (2017-05-10)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix","text":"Fix typo in flow spread operator error (Brian Ng) Fixed invalid number literal parsing ( #473 ) (Alex Kuzmenko) Fix number parser ( #433 ) (Alex Kuzmenko) Ensure non pattern shorthand props are checked for reserved words ( #479 ) (Brian Ng) Remove jsx context when parsing arrow functions ( #475 ) (Brian Ng) Allow super in class properties ( #499 ) (Brian Ng) Allow flow class field to be named constructor ( #510 ) (Brian Ng)","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6170-2017-04-20","text":"","title":"6.17.0 (2017-04-20)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_1","text":"Cherry-pick #418 to 6.x ( #476 ) (Sebastian McKenzie) Add support for invalid escapes in tagged templates ( #274 ) (Kevin Gibbons) Throw error if new.target is used outside of a function ( #402 ) (Brian Ng) Fix parsing of class properties ( #351 ) (Kevin Gibbons) Fix parsing yield with dynamicImport ( #383 ) (Brian Ng) Ensure consistent start args for parseParenItem ( #386 ) (Brian Ng)","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta8-2017-04-04","text":"","title":"7.0.0-beta.8 (2017-04-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-feature","text":"Add support for flow type spread (#418) (Conrad Buck) Allow statics in flow interfaces (#427) (Brian Ng)","title":"New Feature"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fix","text":"Fix predicate attachment to match flow parser (#428) (Brian Ng) Add extra.raw back to JSXText and JSXAttribute (#344) (Alex Rattray) Fix rest parameters with array and objects (#424) (Brian Ng) Fix number parser (#433) (Alex Kuzmenko)","title":"Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#docs","text":"Fix CONTRIBUTING.md [skip ci] (#432) (Alex Kuzmenko)","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#internal","text":"Use babel-register script when running babel smoke tests (#442) (Brian Ng)","title":"Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta7-2017-03-22","text":"","title":"7.0.0-beta.7 (2017-03-22)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#spec-compliance","text":"Remove babylon plugin for template revision since it's stage-4 (#426) (Henry Zhu)","title":"Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fix_1","text":"Fix push-pop logic in flow (#405) (Daniel Tschinder)","title":"Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta6-2017-03-21","text":"","title":"7.0.0-beta.6 (2017-03-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-feature_1","text":"Add support for invalid escapes in tagged templates (#274) (Kevin Gibbons)","title":"New Feature"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#polish","text":"Improves error message when super is called outside of constructor (#408) (Arshabh Kumar Agarwal)","title":"Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#docs_1","text":"[7.0] Moved value field in spec from ObjectMember to ObjectProperty as ObjectMethod's don't have it (#415) [skip ci] (James Browning)","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta5-2017-03-21","text":"","title":"7.0.0-beta.5 (2017-03-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fix_2","text":"Throw error if new.target is used outside of a function (#402) (Brian Ng) Fix parsing of class properties (#351) (Kevin Gibbons)","title":"Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#other","text":"Test runner: Detect extra property in 'actual' but not in 'expected'. (#407) (Andy) Optimize travis builds (#419) (Daniel Tschinder) Update codecov to 2.0 (#412) (Daniel Tschinder) Fix spec for ClassMethod: It doesn't have a function, it is a function. (#406) [skip ci] (Andy) Changed Non-existent RestPattern to RestElement which is what is actually parsed (#409) [skip ci] (James Browning) Upgrade flow to 0.41 (Daniel Tschinder) Fix watch command (#403) (Brian Ng) Update yarn lock (Daniel Tschinder) Fix watch command (#403) (Brian Ng) chore(package): update flow-bin to version 0.41.0 (#395) (greenkeeper[bot]) Add estree test for correct order of directives (Daniel Tschinder) Add DoExpression to spec (#364) (Alex Kuzmenko) Mention cloning of repository in CONTRIBUTING.md (#391) [skip ci] (Sumedh Nimkarde) Explain how to run only one test (#389) [skip ci] (Aaron Ang) ## 7.0.0-beta.4 (2017-03-01) Don't consume async when checking for async func decl (#377) (Brian Ng) add ranges option [skip ci] (Henry Zhu) Don't parse class properties without initializers when classProperties is disabled and Flow is enabled (#300) (Andrew Levine)","title":"Other"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta3-2017-02-28","text":"[7.0] Change RestProperty/SpreadProperty to RestElement/SpreadElement (#384) Merge changes from 6.x","title":"7.0.0-beta.3 (2017-02-28)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta2-2017-02-20","text":"estree: correctly change literals in all cases (#368) (Daniel Tschinder)","title":"7.0.0-beta.2 (2017-02-20)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta1-2017-02-20","text":"Fix negative number literal typeannotations (#366) (Daniel Tschinder) Update contributing with more test info [skip ci] (#355) (Brian Ng)","title":"7.0.0-beta.1 (2017-02-20)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#700-beta0-2017-02-15","text":"Reintroduce Variance node (#333) (Daniel Tschinder) Rename NumericLiteralTypeAnnotation to NumberLiteralTypeAnnotation (#332) (Charles Pick) [7.0] Remove ForAwaitStatement, add await flag to ForOfStatement (#349) (Brandon Dail) chore(package): update ava to version 0.18.0 (#345) (greenkeeper[bot]) chore(package): update babel-plugin-istanbul to version 4.0.0 (#350) (greenkeeper[bot]) Change location of ObjectTypeIndexer to match flow (#228) (Daniel Tschinder) Rename flow AST Type ExistentialTypeParam to ExistsTypeAnnotation (#322) (Toru Kobayashi) Revert \"Temporary rollback for erroring on trailing comma with spread (#154)\" (#290) (Daniel Tschinder) Remove classConstructorCall plugin (#291) (Brian Ng) Update yarn.lock (Daniel Tschinder) Update cross-env to 3.x (Daniel Tschinder) [7.0] Remove node 0.10, 0.12 and 5 from Travis (#284) (Sergey Rubanov) Remove String.fromCodePoint shim (#279) (Mathias Bynens)","title":"7.0.0-beta.0 (2017-02-15)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6161-2017-02-23","text":"","title":"6.16.1 (2017-02-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-regression","text":"Revert \"Fix export default async function to be FunctionDeclaration\" ( #375 ) Need to modify Babel for this AST node change, so moving to 7.0. Revert \"Don't parse class properties without initializers when classProperties plugin is disabled, and Flow is enabled\" ( #376 ) react-native broke with this so we reverted.","title":":bug: Regression"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6160-2017-02-23","text":"","title":"6.16.0 (2017-02-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#rocket-new-feature","text":"ESTree compatibility as plugin ( #277 ) (Daniel Tschinder) We finally introduce a new compatibility layer for ESTree. To put babylon into ESTree-compatible mode the new plugin estree can be enabled. In this mode the parser will output an AST that is compliant to the specs of ESTree We highly recommend everyone who uses babylon outside of babel to use this plugin. This will make it much easier for users to switch between different ESTree-compatible parsers. We so far tested several projects with different parsers and exchanged their parser to babylon and in nearly all cases it worked out of the box. Some other estree-compatible parsers include acorn , esprima , espree , flow-parser , etc. To enable estree mode simply add the plugin in the config: { \"plugins\": [ \"estree\" ] } If you want to migrate your project from non-ESTree mode to ESTree, have a look at our Readme , where all deviations are mentioned. Add a parseExpression public method ( #213 ) (jeromew) Babylon exports a new function to parse a single expression import { parseExpression } from 'babylon'; const ast = parseExpression('x || y && z', options); The returned AST will only consist of the expression. The options are the same as for parse() Add startLine option ( #346 ) (Raphael Mu) A new option was added to babylon allowing to change the initial linenumber for the first line which is usually 1 . Changing this for example to 100 will make line 1 of the input source to be marked as line 100 , line 2 as 101 , line 3 as 102 , ... Function predicate declaration ( #103 ) (Panagiotis Vekris) Added support for function predicates which flow introduced in version 0.33.0 declare function is_number(x: mixed): boolean %checks(typeof x === \"number\"); Allow imports in declare module ( #315 ) (Daniel Tschinder) Added support for imports within module declarations which flow introduced in version 0.37.0 declare module \"C\" { import type { DT } from \"D\"; declare export type CT = { D: DT }; }","title":":rocket: New Feature"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance","text":"Forbid semicolons after decorators in classes ( #352 ) (Kevin Gibbons) This example now correctly throws an error when there is a semicolon after the decorator: class A { @a; foo(){} } Keywords are not allowed as local specifier ( #307 ) (Daniel Tschinder) Using keywords in imports is not allowed anymore: import { default } from \"foo\"; import { a as debugger } from \"foo\"; Do not allow overwritting of primitive types ( #314 ) (Daniel Tschinder) In flow it is now forbidden to overwrite the primitive types \"any\" , \"mixed\" , \"empty\" , \"bool\" , \"boolean\" , \"number\" , \"string\" , \"void\" and \"null\" with your own type declaration. Disallow import type { type a } from \u2026 ( #305 ) (Daniel Tschinder) The following code now correctly throws an error import type { type a } from \"foo\"; Don't parse class properties without initializers when classProperties is disabled and Flow is enabled ( #300 ) (Andrew Levine) Ensure that you enable the classProperties plugin in order to enable correct parsing of class properties. Prior to this version it was possible to parse them by enabling the flow plugin but this was not intended the behaviour. If you enable the flow plugin you can only define the type of the class properties, but not initialize them. Fix export default async function to be FunctionDeclaration ( #324 ) (Daniel Tschinder) Parsing the following code now returns a FunctionDeclaration AST node instead of FunctionExpression . export default async function bar() {};","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#nail_care-polish","text":"Improve error message on attempt to destructure named import ( #288 ) (Brian Ng)","title":":nail_care: Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_2","text":"Fix negative number literal typeannotations ( #366 ) (Daniel Tschinder) Ensure takeDecorators is called on exported class ( #358 ) (Brian Ng) ESTree: correctly change literals in all cases ( #368 ) (Daniel Tschinder) Correctly convert RestProperty to Assignable ( #339 ) (Daniel Tschinder) Fix #321 by allowing question marks in type params ( #338 ) (Daniel Tschinder) Fix #336 by correctly setting arrow-param ( #337 ) (Daniel Tschinder) Fix parse error when destructuring set with default value ( #317 ) (Brian Ng) Fix ObjectTypeCallProperty static ( #298 ) (Dan Harper)","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#house-internal","text":"Fix generator-method-with-computed-name spec ( #360 ) (Alex Rattray) Fix flow type-parameter-declaration test with unintended semantic ( #361 ) (Alex Rattray) Cleanup and splitup parser functions ( #295 ) (Daniel Tschinder) chore(package): update flow-bin to version 0.38.0 ( #313 ) (greenkeeper[bot]) Call inner function instead of 1:1 copy to plugin ( #294 ) (Daniel Tschinder) Update eslint-config-babel to the latest version \ud83d\ude80 ( #299 ) (greenkeeper[bot]) Update eslint-config-babel to the latest version \ud83d\ude80 ( #293 ) (greenkeeper[bot]) devDeps: remove eslint-plugin-babel ( #292 ) (Kai Cataldo) Correct indent eslint rule config ( #276 ) (Daniel Tschinder) Fail tests that have expected.json and throws-option ( #285 ) (Daniel Tschinder)","title":":house: Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#memo-documentation","text":"Update contributing with more test info [skip ci] ( #355 ) (Brian Ng) Update API documentation ( #330 ) (Timothy Gu) Added keywords to package.json ( #323 ) (Dmytro) AST spec: fix casing of RegExpLiteral ( #318 ) (Mathias Bynens)","title":":memo: Documentation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6150-2017-01-10","text":"","title":"6.15.0 (2017-01-10)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance_1","text":"Add support for Flow shorthand import type ( #267 ) (Jeff Morrison) This change implements flows new shorthand import syntax and where previously you had to write this code: import {someValue} from \"blah\"; import type {someType} from \"blah\"; import typeof {someOtherValue} from \"blah\"; you can now write it like this: import { someValue, type someType, typeof someOtherValue, } from \"blah\"; For more information look at this pull request. flow: allow leading pipes in all positions ( #256 ) (Vladimir Kurchatkin) This change now allows a leading pipe everywhere types can be used: var f = (x): | 1 | 2 => 1; Throw error when exporting non-declaration ( #241 ) (Kai Cataldo) Previously babylon parsed the following exports, although they are not valid: export typeof foo; export new Foo(); export function() {}; export for (;;); export while(foo);","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_3","text":"Don't set inType flag when parsing property names ( #266 ) (Vladimir Kurchatkin) This fixes parsing of this case: const map = { [age <= 17] : 'Too young' }; Fix source location for JSXEmptyExpression nodes (fixes #248) ( #249 ) (James Long) The following case produced an invalid AST <div>{/* foo */}</div> Use fromCodePoint to convert high value unicode entities ( #243 ) (Ryan Duffy) When high value unicode entities (e.g. \ud83d\udca9) were used in the input source code they are now correctly encoded in the resulting AST. Rename folder to avoid Windows-illegal characters ( #281 ) (Ryan Plant) Allow this.state.clone() when parsing decorators ( #262 ) (Alex Rattray)","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#house-internal_1","text":"User external-helpers ( #254 ) (Daniel Tschinder) Add watch script for dev ( #234 ) (Kai Cataldo) Freeze current plugins list for \"*\" option, and remove from README.md ( #245 ) (Andrew Levine) Prepare tests for multiple fixture runners. ( #240 ) (Daniel Tschinder) Add some test coverage for decorators stage-0 plugin ( #250 ) (Andrew Levine) Refactor tokenizer types file ( #263 ) (Sven SAULEAU) Update eslint-config-babel to the latest version \ud83d\ude80 ( #273 ) (greenkeeper[bot]) chore(package): update rollup to version 0.41.0 ( #272 ) (greenkeeper[bot]) chore(package): update flow-bin to version 0.37.0 ( #255 ) (greenkeeper[bot])","title":":house: Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6141-2016-11-17","text":"","title":"6.14.1 (2016-11-17)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_4","text":"Allow \"plugins\": [\"*\"] ( #229 ) (Daniel Tschinder) { \"plugins\": [\"*\"] } Will include all parser plugins instead of specifying each one individually. Useful for tools like babel-eslint, jscodeshift, and ast-explorer.","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6140-2016-11-16","text":"","title":"6.14.0 (2016-11-16)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance_2","text":"Throw error for reserved words enum and await ( #195 ) (Kai Cataldo) 11.6.2.2 Future Reserved Words Babylon will throw for more reserved words such as enum or await (in strict mode). class enum {} // throws class await {} // throws in strict mode (module) Optional names for function types and object type indexers ( #197 ) (Gabe Levi) So where you used to have to write type A = (x: string, y: boolean) => number; type B = (z: string) => number; type C = { [key: string]: number }; you can now write (with flow 0.34.0) type A = (string, boolean) => number; type B = string => number; type C = { [string]: number }; Parse flow nested array type annotations like number[][] ( #219 ) (Bernhard H\u00e4ussner) Supports these form now of specifying array types: var a: number[][][][]; var b: string[][];","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_5","text":"Correctly eat semicolon at the end of DelcareModuleExports ( #223 ) (Daniel Tschinder) declare module \"foo\" { declare module.exports: number } declare module \"foo\" { declare module.exports: number; } // also allowed now","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#house-internal_2","text":"Count Babel tests towards Babylon code coverage ( #182 ) (Moti Zilberman) Fix strange line endings ( #214 ) (Thomas Grainger) Add node 7 (Daniel Tschinder) chore(package): update flow-bin to version 0.34.0 ( #204 ) (Greenkeeper)","title":":house: Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6131-2016-10-26","text":"","title":"v6.13.1 (2016-10-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#nail_care-polish_1","text":"Use rollup for bundling to speed up startup time ( #190 ) ( @drewml ) const babylon = require('babylon'); const ast = babylon.parse('var foo = \"lol\";'); With that test case, there was a ~95ms savings by removing the need for node to build/traverse the dependency graph. Without bundling With bundling add clean command [skip ci] ( #201 ) (Henry Zhu) add ForAwaitStatement (async generator already added) [skip ci] ( #196 ) (Henry Zhu)","title":":nail_care: Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6130-2016-10-21","text":"","title":"v6.13.0 (2016-10-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance_3","text":"Property variance type annotations for Flow plugin ( #161 ) (Sam Goldman) See https://flowtype.org/docs/variance.html for more information type T = { +p: T }; interface T { -p: T }; declare class T { +[k:K]: V }; class T { -[k:K]: V }; class C2 { +p: T = e }; Raise error on duplicate definition of proto ( #183 ) (Moti Zilberman) ({ __proto__: 1, __proto__: 2 }) // Throws an error now","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_6","text":"Flow: Allow class properties to be named static ( #184 ) (Moti Zilberman) declare class A { static: T; } Allow \"async\" as identifier for object literal property shorthand ( #187 ) (Andrew Levine) var foo = { async, bar };","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#nail_care-polish_2","text":"Fix flowtype and add inType to state ( #189 ) (Daniel Tschinder) This improves the performance slightly (because of hidden classes)","title":":nail_care: Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#house-internal_3","text":"Fix .gitattributes line ending setting ( #191 ) (Moti Zilberman) Increase test coverage ( #175 (Moti Zilberman) Readd missin .eslinignore for IDEs (Daniel Tschinder) Error on missing expected.json fixture in CI ( #188 ) (Moti Zilberman) Add .gitattributes and .editorconfig for LF line endings ( #179 ) (Moti Zilberman) Fixes two tests that are failing after the merge of #172 ( #177 ) (Moti Zilberman)","title":":house: Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6120-2016-10-14","text":"","title":"v6.12.0 (2016-10-14)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance_4","text":"Implement import() syntax ( #163 ) (Jordan Gensler)","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#dynamic-import","text":"Proposal Repo: https://github.com/domenic/proposal-dynamic-import Championed by @domenic stage-2 sept-28 tc39 notes This repository contains a proposal for adding a \"function-like\" import() module loading syntactic form to JavaScript import(`./section-modules/${link.dataset.entryModule}.js`) .then(module => { module.loadPageInto(main); }) Add EmptyTypeAnnotation ( #171 ) (Sam Goldman)","title":"Dynamic Import"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#emptytypeannotation","text":"Just wasn't covered before. type T = empty;","title":"EmptyTypeAnnotation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_7","text":"Fix crash when exporting with destructuring and sparse array ( #170 ) (Jeroen Engels) // was failing due to sparse array export const { foo: [ ,, qux7 ] } = bar; Allow keyword in Flow object declaration property names with type parameters ( #146 ) (Dan Harper) declare class X { foobar<T>(): void; static foobar<T>(): void; } Allow keyword in object/class property names with Flow type parameters ( #145 ) (Dan Harper) class Foo { delete<T>(item: T): T { return item; } } Allow typeAnnotations for yield expressions ( #174 )) (Daniel Tschinder) function *foo() { const x = (yield 5: any); }","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#nail_care-polish_3","text":"Annotate more errors with expected token ( #172 )) (Moti Zilberman) // Unexpected token, expected ; (1:6) { set 1 }","title":":nail_care: Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#house-internal_4","text":"Remove kcheck ( #173 )) (Daniel Tschinder) Also run flow, linting, babel tests on separate instances (add back node 0.10)","title":":house: Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6116-2016-10-12","text":"","title":"v6.11.6 (2016-10-12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fixregression","text":"Fix crash when exporting with destructuring and sparse array ( #170 ) (Jeroen Engels) // was failing with `Cannot read property 'type' of null` because of null identifiers export const { foo: [ ,, qux7 ] } = bar;","title":":bug: Bug Fix/Regression"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6115-2016-10-12","text":"","title":"v6.11.5 (2016-10-12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance_5","text":"Fix: Check for duplicate named exports in exported destructuring assignments ( #144 ) (Kai Cataldo) // `foo` has already been exported. Exported identifiers must be unique. (2:20) export function foo() {}; export const { a: [{foo}] } = bar; Fix: Check for duplicate named exports in exported rest elements/properties ( #164 ) (Kai Cataldo) // `foo` has already been exported. Exported identifiers must be unique. (2:22) export const foo = 1; export const [bar, ...foo] = baz;","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-bug-fix_8","text":"Fix: Allow identifier async for default param in arrow expression ( #165 ) (Kai Cataldo) // this is ok now const test = ({async = true}) => {};","title":":bug: Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#nail_care-polish_4","text":"Babylon will now print out the token it's expecting if there's a SyntaxError ( #150 ) (Daniel Tschinder) # So in the case of a missing ending curly (`}`) Module build failed: SyntaxError: Unexpected token, expected } (30:0) 28 | } 29 | > 30 | | ^","title":":nail_care: Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6114-2016-10-03","text":"Temporary rollback for erroring on trailing comma with spread (#154) (Henry Zhu)","title":"v6.11.4 (2016-10-03)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6113-2016-10-01","text":"","title":"v6.11.3 (2016-10-01)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#eyeglasses-spec-compliance_6","text":"Add static errors for object rest (#149) ( @danez ) https://github.com/sebmarkbage/ecmascript-rest-spread Object rest copies the rest of properties from the right hand side obj starting from the left to right. let { x, y, ...z } = { x: 1, y: 2, z: 3 }; // x = 1 // y = 2 // z = { z: 3 }","title":":eyeglasses: Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-syntax-errors","text":"SyntaxError : The rest element has to be the last element when destructuring (1:10) > 1 | let { ...x, y, z } = { x: 1, y: 2, z: 3}; | ^ # Previous behavior: # x = { x: 1, y: 2, z: 3 } # y = 2 # z = 3 Before, this was just a more verbose way of shallow copying obj since it doesn't actually do what you think. SyntaxError : Cannot have multiple rest elements when destructuring (1:13) > 1 | let { x, ...y, ...z } = { x: 1, y: 2, z: 3}; | ^ # Previous behavior: # x = 1 # y = { y: 2, z: 3 } # z = { y: 2, z: 3 } Before y and z would just be the same value anyway so there is no reason to need to have both. SyntaxError : A trailing comma is not permitted after the rest element (1:16) let { x, y, ...z, } = obj; The rationale for this is that the use case for trailing comma is that you can add something at the end without affecting the line above. Since a RestProperty always has to be the last property it doesn't make sense. get / set are valid property names in default assignment (#142) ( @jezell ) // valid function something({ set = null, get = null }) {}","title":"New Syntax Errors:"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#v6112-2016-09-23","text":"","title":"v6.11.2 (2016-09-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fix_3","text":"#139 Don't do the duplicate check if not an identifier (#140) @hzoo // regression with duplicate export check SyntaxError: ./typography.js: `undefined` has already been exported. Exported identifiers must be unique. (22:13) 20 | 21 | export const { rhythm } = typography; > 22 | export const { TypographyStyle } = typography Bail out for now, and make a change to account for destructuring in the next release.","title":"Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6111-2016-09-22","text":"","title":"6.11.1 (2016-09-22)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fix_4","text":"#137 - Fix a regression with duplicate exports - it was erroring on all keys in Object.prototype . @danez export toString from './toString'; `toString` has already been exported. Exported identifiers must be unique. (1:7) > 1 | export toString from './toString'; | ^ 2 |","title":"Bug Fix"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6110-2016-09-22","text":"","title":"6.11.0 (2016-09-22)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#spec-compliance-will-break-ci","text":"Disallow duplicate named exports ( #107 ) @kaicataldo // Only one default export allowed per module. (2:9) export default function() {}; export { foo as default }; // Only one default export allowed per module. (2:0) export default {}; export default function() {}; // `Foo` has already been exported. Exported identifiers must be unique. (2:0) export { Foo }; export class Foo {};","title":"Spec Compliance (will break CI)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-feature-syntax","text":"Add support for computed class property names ( #121 ) @motiz88 // AST interface ClassProperty <: Node { type: \"ClassProperty\"; key: Identifier; value: Expression; computed: boolean; // added } // with \"plugins\": [\"classProperties\"] class Foo { [x] ['y'] } class Bar { [p] [m] () {} } ``` ### Bug Fix - Fix `static` property falling through in the declare class Flow AST ([#135](https://github.com/babel/babylon/pull/135)) @danharper ```js declare class X { a: number; static b: number; // static c: number; // this was being marked as static in the AST as well }","title":"New Feature (Syntax)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#polish_1","text":"Rephrase \"assigning/binding to rvalue\" errors to include context ( #119 ) @motiz88 // Used to error with: // SyntaxError: Assigning to rvalue (1:0) // Now: // Invalid left-hand side in assignment expression (1:0) 3 = 4 // Invalid left-hand side in for-in statement (1:5) for (+i in {});","title":"Polish"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#internal_1","text":"Fix call to this.parseMaybeAssign with correct arguments ( #133 ) @danez Add semver note to changelog ( #131 ) @hzoo","title":"Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#6100-2016-09-19","text":"We plan to include some spec compliance bugs in patch versions. An example was the multiple default exports issue.","title":"6.10.0 (2016-09-19)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#spec-compliance_1","text":"Implement ES2016 check for simple parameter list in strict mode ( #106 ) (Timothy Gu) It is a Syntax Error if ContainsUseStrict of FunctionBody is true and IsSimpleParameterList of FormalParameters is false. https://tc39.github.io/ecma262/2016/#sec-function-definitions-static-semantics-early-errors More Context: tc39-notes For example: // this errors because it uses destructuring and default parameters // in a function with a \"use strict\" directive function a([ option1, option2 ] = []) { \"use strict\"; } ``` The solution would be to use a top level \"use strict\" or to remove the destructuring or default parameters when using a function + \"use strict\" or to. ### New Feature * Exact object type annotations for Flow plugin ([#104](https://github.com/babel/babylon/pull/104)) (Basil Hosmer) Added to flow in https://github.com/facebook/flow/commit/c710c40aa2a115435098d6c0dfeaadb023cd39b8 Looks like: ```js var a : {| x: number, y: string |} = { x: 0, y: 'foo' };","title":"Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes","text":"Include typeParameter location in ArrowFunctionExpression ( #126 ) (Daniel Tschinder) Error on invalid flow type annotation with default assignment ( #122 ) (Dan Harper) Fix Flow return types on arrow functions ( #124 ) (Dan Harper)","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#misc","text":"Add tests for export extensions ( #127 ) (Daniel Tschinder) Fix Contributing guidelines [skip ci] (Daniel Tschinder)","title":"Misc"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#692-2016-09-09","text":"The only change is to remove the babel-runtime dependency by compiling with Babel's ES2015 loose mode. So using babylon standalone should be smaller.","title":"6.9.2 (2016-09-09)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#691-2016-08-23","text":"This release contains mainly small bugfixes but also updates babylons default mode to es2017. The features for exponentiationOperator , asyncFunctions and trailingFunctionCommas which previously needed to be activated via plugin are now enabled by default and the plugins are now no-ops.","title":"6.9.1 (2016-08-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes_1","text":"Fix issues with default object params in async functions ( #96 ) @danez Fix issues with flow-types and async function ( #95 ) @danez Fix arrow functions with destructuring, types & default value ( #94 ) @danharper Fix declare class with qualified type identifier ( #97 ) @danez Remove exponentiationOperator, asyncFunctions, trailingFunctionCommas plugins and enable them by default ( #98 ) @danez","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#690-2016-08-16","text":"","title":"6.9.0 (2016-08-16)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-syntax-support","text":"Add JSX spread children ( #42 ) @calebmer (Be aware that React is not going to support this syntax) <div> {...todos.map(todo => <Todo key={todo.id} todo={todo}/>)} </div> Add support for declare module.exports ( #72 ) @danez declare module \"foo\" { declare module.exports: {} }","title":"New syntax support"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-features","text":"If supplied, attach filename property to comment node loc. ( #80 ) @divmain Add identifier name to node loc field ( #90 ) @kittens","title":"New Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes_2","text":"Fix exponential operator to behave according to spec ( #75 ) @danez Fix lookahead to not add comments to arrays which are not cloned ( #76 ) @danez Fix accidental fall-through in Flow type parsing. ( #82 ) @xiemaisi Only allow declares inside declare module ( #73 ) @danez Small fix for parsing type parameter declarations ( #83 ) @gabelevi Fix arrow param locations with flow types ( #57 ) @danez Fixes SyntaxError position with flow optional type ( #65 ) @danez","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#internal_2","text":"Add codecoverage to tests @danez Fix tests to not save expected output if we expect the test to fail @danez Make a shallow clone of babel for testing @danez chore(package): update cross-env to version 2.0.0 ( #77 ) @greenkeeperio-bot chore(package): update ava to version 0.16.0 ( #86 ) @greenkeeperio-bot chore(package): update babel-plugin-istanbul to version 2.0.0 ( #89 ) @greenkeeperio-bot chore(package): update nyc to version 8.0.0 ( #88 ) @greenkeeperio-bot","title":"Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#684-2016-07-06","text":"","title":"6.8.4 (2016-07-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes_3","text":"Fix the location of params, when flow and default value used ( #68 ) @danez","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#683-2016-07-02","text":"","title":"6.8.3 (2016-07-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes_4","text":"Fix performance regression introduced in 6.8.2 with conditionals ( #63 ) @danez","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#682-2016-06-24","text":"","title":"6.8.2 (2016-06-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes_5","text":"Fix parse error with yielding jsx elements in generators function* it() { yield <a></a>; } ( #31 ) @eldereal When cloning nodes do not clone its comments ( #24 ) @danez Fix parse errors when using arrow functions with an spread element and return type (...props): void => {} ( #10 ) @danez Fix leading comments added from previous node ( #23 ) @danez Fix parse errors with flow's optional arguments (arg?) => {} ( #19 ) @danez Support negative numeric type literals @kittens Remove line terminator restriction after await keyword @kittens Remove grouped type arrow restriction as it seems flow no longer has it @kittens Fix parse error with generic methods that have the name get or set class foo { get() {} } ( #55 ) @vkurchatkin Fix parse error with arrow functions that have flow type parameter declarations <T>(x: T): T => x; ( #54 ) @gabelevi","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#documentation","text":"Document AST differences from ESTree ( #41 ) @nene Move ast spec from babel/babel ( #46 ) @hzoo","title":"Documentation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#internal_3","text":"Enable skipped tests ( #16 ) @danez Add script to test latest version of babylon with babel ( #21 ) @danez Upgrade test runner ava @kittens Add missing generate-identifier-regex script @kittens Rename parser context types @kittens Add node v6 to travis testing @hzoo Update to Unicode v9 ( #45 ) @mathiasbynens","title":"Internal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#681-2016-06-06","text":"","title":"6.8.1 (2016-06-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-feature_2","text":"Parse type parameter declarations with defaults like type Foo<T = string> = T","title":"New Feature"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#bug-fixes_6","text":"Type parameter declarations need 1 or more type parameters. The existential type * is not a valid type parameter. The existential type * is a primary type","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#spec-compliance_2","text":"The param list for type parameter declarations now consists of TypeParameter nodes New TypeParameter AST Node (replaces using the Identifier node before) interface TypeParameter <: Node { bound: TypeAnnotation; default: TypeAnnotation; name: string; variance: \"plus\" | \"minus\"; }","title":"Spec Compliance"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#680-2016-05-02","text":"","title":"6.8.0 (2016-05-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#new-feature_3","text":"","title":"New Feature"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#parse-method-parameter-decorators-12","text":"Method Parameter Decorators is now a TC39 stage 0 proposal . Examples: class Foo { constructor(@foo() x, @bar({ a: 123 }) @baz() y) {} } export default function func(@foo() x, @bar({ a: 123 }) @baz() y) {} var obj = { method(@foo() x, @bar({ a: 123 }) @baz() y) {} };","title":"Parse Method Parameter Decorators (#12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/parser/CHANGELOG/#parse-for-await-statements-w-asyncgenerators-plugin-17","text":"There is also a new node type, ForAwaitStatement . Async generators and for-await are now a stage 2 proposal . Example: async function f() { for await (let x of y); }","title":"Parse for-await statements (w/ asyncGenerators plugin) (#17)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/plugin-transform-react-jsx-self/","text":"@babel/plugin-transform-react-jsx-self Add a __self prop to all JSX Elements See our website @babel/plugin-transform-react-jsx-self for more information. Install Using npm: npm install --save-dev @babel/plugin-transform-react-jsx-self or using yarn: yarn add @babel/plugin-transform-react-jsx-self --dev","title":"@babel/plugin-transform-react-jsx-self"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/plugin-transform-react-jsx-self/#babelplugin-transform-react-jsx-self","text":"Add a __self prop to all JSX Elements See our website @babel/plugin-transform-react-jsx-self for more information.","title":"@babel/plugin-transform-react-jsx-self"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/plugin-transform-react-jsx-self/#install","text":"Using npm: npm install --save-dev @babel/plugin-transform-react-jsx-self or using yarn: yarn add @babel/plugin-transform-react-jsx-self --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/plugin-transform-react-jsx-source/","text":"@babel/plugin-transform-react-jsx-source Add a __source prop to all JSX Elements See our website @babel/plugin-transform-react-jsx-source for more information. Install Using npm: npm install --save-dev @babel/plugin-transform-react-jsx-source or using yarn: yarn add @babel/plugin-transform-react-jsx-source --dev","title":"@babel/plugin-transform-react-jsx-source"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/plugin-transform-react-jsx-source/#babelplugin-transform-react-jsx-source","text":"Add a __source prop to all JSX Elements See our website @babel/plugin-transform-react-jsx-source for more information.","title":"@babel/plugin-transform-react-jsx-source"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/plugin-transform-react-jsx-source/#install","text":"Using npm: npm install --save-dev @babel/plugin-transform-react-jsx-source or using yarn: yarn add @babel/plugin-transform-react-jsx-source --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/template/","text":"@babel/template Generate an AST from a string template. See our website @babel/template for more information or the issues associated with this package. Install Using npm: npm install --save-dev @babel/template or using yarn: yarn add @babel/template --dev","title":"@babel/template"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/template/#babeltemplate","text":"Generate an AST from a string template. See our website @babel/template for more information or the issues associated with this package.","title":"@babel/template"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/template/#install","text":"Using npm: npm install --save-dev @babel/template or using yarn: yarn add @babel/template --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/","text":"@babel/traverse The Babel Traverse module maintains the overall tree state, and is responsible for replacing, removing, and adding nodes See our website @babel/traverse for more information or the issues associated with this package. Install Using npm: npm install --save-dev @babel/traverse or using yarn: yarn add @babel/traverse --dev","title":"@babel/traverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/#babeltraverse","text":"The Babel Traverse module maintains the overall tree state, and is responsible for replacing, removing, and adding nodes See our website @babel/traverse for more information or the issues associated with this package.","title":"@babel/traverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/#install","text":"Using npm: npm install --save-dev @babel/traverse or using yarn: yarn add @babel/traverse --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/node_modules/globals/readme/","text":"globals Global identifiers from different JavaScript environments Extracted from JSHint and ESLint and merged. It's just a JSON file , so use it in whatever environment you like. This module no longer accepts new environments. If you need it for ESLint, just create a plugin . Install $ npm install globals Usage const globals = require('globals'); console.log(globals.browser); /* { addEventListener: false, applicationCache: false, ArrayBuffer: false, atob: false, ... } */ Each global is given a value of true or false . A value of true indicates that the variable may be overwritten. A value of false indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be false unless we hear otherwise. License MIT \u00a9 Sindre Sorhus","title":"globals Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/node_modules/globals/readme/#globals","text":"Global identifiers from different JavaScript environments Extracted from JSHint and ESLint and merged. It's just a JSON file , so use it in whatever environment you like. This module no longer accepts new environments. If you need it for ESLint, just create a plugin .","title":"globals"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/node_modules/globals/readme/#install","text":"$ npm install globals","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/node_modules/globals/readme/#usage","text":"const globals = require('globals'); console.log(globals.browser); /* { addEventListener: false, applicationCache: false, ArrayBuffer: false, atob: false, ... } */ Each global is given a value of true or false . A value of true indicates that the variable may be overwritten. A value of false indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be false unless we hear otherwise.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/traverse/node_modules/globals/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/types/","text":"@babel/types Babel Types is a Lodash-esque utility library for AST nodes See our website @babel/types for more information or the issues associated with this package. Install Using npm: npm install --save-dev @babel/types or using yarn: yarn add @babel/types --dev","title":"@babel/types"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/types/#babeltypes","text":"Babel Types is a Lodash-esque utility library for AST nodes See our website @babel/types for more information or the issues associated with this package.","title":"@babel/types"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40babel/types/#install","text":"Using npm: npm install --save-dev @babel/types or using yarn: yarn add @babel/types --dev","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40esbuild/win32-x64/","text":"esbuild This is the Windows 64-bit binary for esbuild, a JavaScript bundler and minifier. See https://github.com/evanw/esbuild for details.","title":"esbuild"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40esbuild/win32-x64/#esbuild","text":"This is the Windows 64-bit binary for esbuild, a JavaScript bundler and minifier. See https://github.com/evanw/esbuild for details.","title":"esbuild"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/","text":"Config Array Description A config array is a way of managing configurations that are based on glob pattern matching of filenames. Each config array contains the information needed to determine the correct configuration for any file based on the filename. Note: This is a generic package that can be used outside of ESLint. It contains no ESLint-specific functionality. Installation For Node.js and compatible runtimes: npm install @eslint/config-array # or yarn add @eslint/config-array # or pnpm install @eslint/config-array # or bun install @eslint/config-array For Deno: deno add @eslint/config-array Background The basic idea is that all configuration, including overrides, can be represented by a single array where each item in the array is a config object. Config objects appearing later in the array override config objects appearing earlier in the array. You can calculate a config for a given file by traversing all config objects in the array to find the ones that match the filename. Matching is done by specifying glob patterns in files and ignores properties on each config object. Here's an example: export default [ // match all JSON files { name: \"JSON Handler\", files: [\"**/*.json\"], handler: jsonHandler, }, // match only package.json { name: \"package.json Handler\", files: [\"package.json\"], handler: packageJsonHandler, }, ]; In this example, there are two config objects: the first matches all JSON files in all directories and the second matches just package.json in the base path directory (all the globs are evaluated as relative to a base path that can be specified). When you retrieve a configuration for foo.json , only the first config object matches so handler is equal to jsonHandler ; when you retrieve a configuration for package.json , handler is equal to packageJsonHandler (because both config objects match, the second one wins). Usage First, import the ConfigArray constructor: import { ConfigArray } from \"@eslint/config-array\"; // or using CommonJS const { ConfigArray } = require(\"@eslint/config-array\"); When you create a new instance of ConfigArray , you must pass in two arguments: an array of configs and an options object. The array of configs is most likely read in from a configuration file, so here's a typical example: const configFilename = path.resolve(process.cwd(), \"my.config.js\"); const { default: rawConfigs } = await import(configFilename); const configs = new ConfigArray(rawConfigs, { // the path to match filenames from basePath: process.cwd(), // additional items in each config schema: mySchema, }); This example reads in an object or array from my.config.js and passes it into the ConfigArray constructor as the first argument. The second argument is an object specifying the basePath (the directory in which my.config.js is found) and a schema to define the additional properties of a config object beyond files , ignores , and name . Specifying a Schema The schema option is required for you to use additional properties in config objects. The schema is an object that follows the format of an ObjectSchema . The schema specifies both validation and merge rules that the ConfigArray instance needs to combine configs when there are multiple matches. Here's an example: const configFilename = path.resolve(process.cwd(), \"my.config.js\"); const { default: rawConfigs } = await import(configFilename); const mySchema = { // define the handler key in configs handler: { required: true, merge(a, b) { if (!b) return a; if (!a) return b; }, validate(value) { if (typeof value !== \"function\") { throw new TypeError(\"Function expected.\"); } } } }; const configs = new ConfigArray(rawConfigs, { // the path to match filenames from basePath: process.cwd(), // additional item schemas in each config schema: mySchema, // additional config types supported (default: []) extraConfigTypes: [\"array\", \"function\"]; }); Config Arrays Config arrays can be multidimensional, so it's possible for a config array to contain another config array when extraConfigTypes contains \"array\" , such as: export default [ // JS config { files: [\"**/*.js\"], handler: jsHandler, }, // JSON configs [ // match all JSON files { name: \"JSON Handler\", files: [\"**/*.json\"], handler: jsonHandler, }, // match only package.json { name: \"package.json Handler\", files: [\"package.json\"], handler: packageJsonHandler, }, ], // filename must match function { files: [filePath => filePath.endsWith(\".md\")], handler: markdownHandler, }, // filename must match all patterns in subarray { files: [[\"*.test.*\", \"*.js\"]], handler: jsTestHandler, }, // filename must not match patterns beginning with ! { name: \"Non-JS files\", files: [\"!*.js\"], settings: { js: false, }, }, ]; In this example, the array contains both config objects and a config array. When a config array is normalized (see details below), it is flattened so only config objects remain. However, the order of evaluation remains the same. If the files array contains a function, then that function is called with the absolute path of the file and is expected to return true if there is a match and false if not. (The ignores array can also contain functions.) If the files array contains an item that is an array of strings and functions, then all patterns must match in order for the config to match. In the preceding examples, both *.test.* and *.js must match in order for the config object to be used. If a pattern in the files array begins with ! then it excludes that pattern. In the preceding example, any filename that doesn't end with .js will automatically get a settings.js property set to false . You can also specify an ignores key that will force files matching those patterns to not be included. If the ignores key is in a config object without any other keys, then those ignores will always be applied; otherwise those ignores act as exclusions. Here's an example: export default [ // Always ignored { ignores: [\"**/.git/**\", \"**/node_modules/**\"] }, // .eslintrc.js file is ignored only when .js file matches { files: [\"**/*.js\"], ignores: [\".eslintrc.js\"] handler: jsHandler } ]; You can use negated patterns in ignores to exclude a file that was already ignored, such as: export default [ // Ignore all JSON files except tsconfig.json { files: [\"**/*\"], ignores: [\"**/*.json\", \"!tsconfig.json\"], }, ]; Config Functions Config arrays can also include config functions when extraConfigTypes contains \"function\" . A config function accepts a single parameter, context (defined by you), and must return either a config object or a config array (it cannot return another function). Config functions allow end users to execute code in the creation of appropriate config objects. Here's an example: export default [ // JS config { files: [\"**/*.js\"], handler: jsHandler, }, // JSON configs function (context) { return [ // match all JSON files { name: context.name + \" JSON Handler\", files: [\"**/*.json\"], handler: jsonHandler, }, // match only package.json { name: context.name + \" package.json Handler\", files: [\"package.json\"], handler: packageJsonHandler, }, ]; }, ]; When a config array is normalized, each function is executed and replaced in the config array with the return value. Note: Config functions can also be async. Normalizing Config Arrays Once a config array has been created and loaded with all of the raw config data, it must be normalized before it can be used. The normalization process goes through and flattens the config array as well as executing all config functions to get their final values. To normalize a config array, call the normalize() method and pass in a context object: await configs.normalize({ name: \"MyApp\", }); The normalize() method returns a promise, so be sure to use the await operator. The config array instance is normalized in-place, so you don't need to create a new variable. If you want to disallow async config functions, you can call normalizeSync() instead. This method is completely synchronous and does not require using the await operator as it does not return a promise: await configs.normalizeSync({ name: \"MyApp\", }); Important: Once a ConfigArray is normalized, it cannot be changed further. You can, however, create a new ConfigArray and pass in the normalized instance to create an unnormalized copy. Getting Config for a File To get the config for a file, use the getConfig() method on a normalized config array and pass in the filename to get a config for: // pass in absolute filename const fileConfig = configs.getConfig( path.resolve(process.cwd(), \"package.json\"), ); The config array always returns an object, even if there are no configs matching the given filename. You can then inspect the returned config object to determine how to proceed. A few things to keep in mind: You must pass in the absolute filename to get a config for. The returned config object never has files , ignores , or name properties; the only properties on the object will be the other configuration options specified. The config array caches configs, so subsequent calls to getConfig() with the same filename will return in a fast lookup rather than another calculation. A config will only be generated if the filename matches an entry in a files key. A config will not be generated without matching a files key (configs without a files key are only applied when another config with a files key is applied; configs without files are never applied on their own). Any config with a files key entry that is * or ends with /** or /* will only be applied if another entry in the same files key matches or another config matches. Determining Ignored Paths You can determine if a file is ignored by using the isFileIgnored() method and passing in the absolute path of any file, as in this example: const ignored = configs.isFileIgnored(\"/foo/bar/baz.txt\"); A file is considered ignored if any of the following is true: It's parent directory is ignored. For example, if foo is in ignores , then foo/a.js is considered ignored. It has an ancestor directory that is ignored. For example, if foo is in ignores , then foo/baz/a.js is considered ignored. It matches an ignored file pattern. For example, if **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. If it matches an entry in files and also in ignores . For example, if **/*.js is in files and **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. The file is outside the basePath . If the basePath is /usr/me , then /foo/a.js is considered ignored. For directories, use the isDirectoryIgnored() method and pass in the absolute path of any directory, as in this example: const ignored = configs.isDirectoryIgnored(\"/foo/bar/\"); A directory is considered ignored if any of the following is true: It's parent directory is ignored. For example, if foo is in ignores , then foo/baz is considered ignored. It has an ancestor directory that is ignored. For example, if foo is in ignores , then foo/bar/baz/a.js is considered ignored. It matches and ignored file pattern. For example, if **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. If it matches an entry in files and also in ignores . For example, if **/*.js is in files and **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. The file is outside the basePath . If the basePath is /usr/me , then /foo/a.js is considered ignored. Important: A pattern such as foo/** means that foo and foo/ are not ignored whereas foo/bar is ignored. If you want to ignore foo and all of its subdirectories, use the pattern foo or foo/ in ignores . Caching Mechanisms Each ConfigArray aggressively caches configuration objects to avoid unnecessary work. This caching occurs in two ways: File-based Caching. For each filename that is passed into a method, the resulting config is cached against that filename so you're always guaranteed to get the same object returned from getConfig() whenever you pass the same filename in. Index-based Caching. Whenever a config is calculated, the config elements that were used to create the config are also cached. So if a given filename matches elements 1, 5, and 7, the resulting config is cached with a key of 1,5,7 . That way, if another file is passed that matches the same config elements, the result is already known and doesn't have to be recalculated. That means two files that match all the same elements will return the same config from getConfig() . Acknowledgements The design of this project was influenced by feedback on the ESLint RFC, and incorporates ideas from: Teddy Katz (@not-an-aardvark) Toru Nagashima (@mysticatea) Kai Cataldo (@kaicataldo) License Apache 2.0 Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"Config Array"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#config-array","text":"","title":"Config Array"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#description","text":"A config array is a way of managing configurations that are based on glob pattern matching of filenames. Each config array contains the information needed to determine the correct configuration for any file based on the filename. Note: This is a generic package that can be used outside of ESLint. It contains no ESLint-specific functionality.","title":"Description"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#installation","text":"For Node.js and compatible runtimes: npm install @eslint/config-array # or yarn add @eslint/config-array # or pnpm install @eslint/config-array # or bun install @eslint/config-array For Deno: deno add @eslint/config-array","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#background","text":"The basic idea is that all configuration, including overrides, can be represented by a single array where each item in the array is a config object. Config objects appearing later in the array override config objects appearing earlier in the array. You can calculate a config for a given file by traversing all config objects in the array to find the ones that match the filename. Matching is done by specifying glob patterns in files and ignores properties on each config object. Here's an example: export default [ // match all JSON files { name: \"JSON Handler\", files: [\"**/*.json\"], handler: jsonHandler, }, // match only package.json { name: \"package.json Handler\", files: [\"package.json\"], handler: packageJsonHandler, }, ]; In this example, there are two config objects: the first matches all JSON files in all directories and the second matches just package.json in the base path directory (all the globs are evaluated as relative to a base path that can be specified). When you retrieve a configuration for foo.json , only the first config object matches so handler is equal to jsonHandler ; when you retrieve a configuration for package.json , handler is equal to packageJsonHandler (because both config objects match, the second one wins).","title":"Background"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#usage","text":"First, import the ConfigArray constructor: import { ConfigArray } from \"@eslint/config-array\"; // or using CommonJS const { ConfigArray } = require(\"@eslint/config-array\"); When you create a new instance of ConfigArray , you must pass in two arguments: an array of configs and an options object. The array of configs is most likely read in from a configuration file, so here's a typical example: const configFilename = path.resolve(process.cwd(), \"my.config.js\"); const { default: rawConfigs } = await import(configFilename); const configs = new ConfigArray(rawConfigs, { // the path to match filenames from basePath: process.cwd(), // additional items in each config schema: mySchema, }); This example reads in an object or array from my.config.js and passes it into the ConfigArray constructor as the first argument. The second argument is an object specifying the basePath (the directory in which my.config.js is found) and a schema to define the additional properties of a config object beyond files , ignores , and name .","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#specifying-a-schema","text":"The schema option is required for you to use additional properties in config objects. The schema is an object that follows the format of an ObjectSchema . The schema specifies both validation and merge rules that the ConfigArray instance needs to combine configs when there are multiple matches. Here's an example: const configFilename = path.resolve(process.cwd(), \"my.config.js\"); const { default: rawConfigs } = await import(configFilename); const mySchema = { // define the handler key in configs handler: { required: true, merge(a, b) { if (!b) return a; if (!a) return b; }, validate(value) { if (typeof value !== \"function\") { throw new TypeError(\"Function expected.\"); } } } }; const configs = new ConfigArray(rawConfigs, { // the path to match filenames from basePath: process.cwd(), // additional item schemas in each config schema: mySchema, // additional config types supported (default: []) extraConfigTypes: [\"array\", \"function\"]; });","title":"Specifying a Schema"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#config-arrays","text":"Config arrays can be multidimensional, so it's possible for a config array to contain another config array when extraConfigTypes contains \"array\" , such as: export default [ // JS config { files: [\"**/*.js\"], handler: jsHandler, }, // JSON configs [ // match all JSON files { name: \"JSON Handler\", files: [\"**/*.json\"], handler: jsonHandler, }, // match only package.json { name: \"package.json Handler\", files: [\"package.json\"], handler: packageJsonHandler, }, ], // filename must match function { files: [filePath => filePath.endsWith(\".md\")], handler: markdownHandler, }, // filename must match all patterns in subarray { files: [[\"*.test.*\", \"*.js\"]], handler: jsTestHandler, }, // filename must not match patterns beginning with ! { name: \"Non-JS files\", files: [\"!*.js\"], settings: { js: false, }, }, ]; In this example, the array contains both config objects and a config array. When a config array is normalized (see details below), it is flattened so only config objects remain. However, the order of evaluation remains the same. If the files array contains a function, then that function is called with the absolute path of the file and is expected to return true if there is a match and false if not. (The ignores array can also contain functions.) If the files array contains an item that is an array of strings and functions, then all patterns must match in order for the config to match. In the preceding examples, both *.test.* and *.js must match in order for the config object to be used. If a pattern in the files array begins with ! then it excludes that pattern. In the preceding example, any filename that doesn't end with .js will automatically get a settings.js property set to false . You can also specify an ignores key that will force files matching those patterns to not be included. If the ignores key is in a config object without any other keys, then those ignores will always be applied; otherwise those ignores act as exclusions. Here's an example: export default [ // Always ignored { ignores: [\"**/.git/**\", \"**/node_modules/**\"] }, // .eslintrc.js file is ignored only when .js file matches { files: [\"**/*.js\"], ignores: [\".eslintrc.js\"] handler: jsHandler } ]; You can use negated patterns in ignores to exclude a file that was already ignored, such as: export default [ // Ignore all JSON files except tsconfig.json { files: [\"**/*\"], ignores: [\"**/*.json\", \"!tsconfig.json\"], }, ];","title":"Config Arrays"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#config-functions","text":"Config arrays can also include config functions when extraConfigTypes contains \"function\" . A config function accepts a single parameter, context (defined by you), and must return either a config object or a config array (it cannot return another function). Config functions allow end users to execute code in the creation of appropriate config objects. Here's an example: export default [ // JS config { files: [\"**/*.js\"], handler: jsHandler, }, // JSON configs function (context) { return [ // match all JSON files { name: context.name + \" JSON Handler\", files: [\"**/*.json\"], handler: jsonHandler, }, // match only package.json { name: context.name + \" package.json Handler\", files: [\"package.json\"], handler: packageJsonHandler, }, ]; }, ]; When a config array is normalized, each function is executed and replaced in the config array with the return value. Note: Config functions can also be async.","title":"Config Functions"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#normalizing-config-arrays","text":"Once a config array has been created and loaded with all of the raw config data, it must be normalized before it can be used. The normalization process goes through and flattens the config array as well as executing all config functions to get their final values. To normalize a config array, call the normalize() method and pass in a context object: await configs.normalize({ name: \"MyApp\", }); The normalize() method returns a promise, so be sure to use the await operator. The config array instance is normalized in-place, so you don't need to create a new variable. If you want to disallow async config functions, you can call normalizeSync() instead. This method is completely synchronous and does not require using the await operator as it does not return a promise: await configs.normalizeSync({ name: \"MyApp\", }); Important: Once a ConfigArray is normalized, it cannot be changed further. You can, however, create a new ConfigArray and pass in the normalized instance to create an unnormalized copy.","title":"Normalizing Config Arrays"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#getting-config-for-a-file","text":"To get the config for a file, use the getConfig() method on a normalized config array and pass in the filename to get a config for: // pass in absolute filename const fileConfig = configs.getConfig( path.resolve(process.cwd(), \"package.json\"), ); The config array always returns an object, even if there are no configs matching the given filename. You can then inspect the returned config object to determine how to proceed. A few things to keep in mind: You must pass in the absolute filename to get a config for. The returned config object never has files , ignores , or name properties; the only properties on the object will be the other configuration options specified. The config array caches configs, so subsequent calls to getConfig() with the same filename will return in a fast lookup rather than another calculation. A config will only be generated if the filename matches an entry in a files key. A config will not be generated without matching a files key (configs without a files key are only applied when another config with a files key is applied; configs without files are never applied on their own). Any config with a files key entry that is * or ends with /** or /* will only be applied if another entry in the same files key matches or another config matches.","title":"Getting Config for a File"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#determining-ignored-paths","text":"You can determine if a file is ignored by using the isFileIgnored() method and passing in the absolute path of any file, as in this example: const ignored = configs.isFileIgnored(\"/foo/bar/baz.txt\"); A file is considered ignored if any of the following is true: It's parent directory is ignored. For example, if foo is in ignores , then foo/a.js is considered ignored. It has an ancestor directory that is ignored. For example, if foo is in ignores , then foo/baz/a.js is considered ignored. It matches an ignored file pattern. For example, if **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. If it matches an entry in files and also in ignores . For example, if **/*.js is in files and **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. The file is outside the basePath . If the basePath is /usr/me , then /foo/a.js is considered ignored. For directories, use the isDirectoryIgnored() method and pass in the absolute path of any directory, as in this example: const ignored = configs.isDirectoryIgnored(\"/foo/bar/\"); A directory is considered ignored if any of the following is true: It's parent directory is ignored. For example, if foo is in ignores , then foo/baz is considered ignored. It has an ancestor directory that is ignored. For example, if foo is in ignores , then foo/bar/baz/a.js is considered ignored. It matches and ignored file pattern. For example, if **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. If it matches an entry in files and also in ignores . For example, if **/*.js is in files and **/a.js is in ignores , then foo/a.js and foo/baz/a.js are considered ignored. The file is outside the basePath . If the basePath is /usr/me , then /foo/a.js is considered ignored. Important: A pattern such as foo/** means that foo and foo/ are not ignored whereas foo/bar is ignored. If you want to ignore foo and all of its subdirectories, use the pattern foo or foo/ in ignores .","title":"Determining Ignored Paths"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#caching-mechanisms","text":"Each ConfigArray aggressively caches configuration objects to avoid unnecessary work. This caching occurs in two ways: File-based Caching. For each filename that is passed into a method, the resulting config is cached against that filename so you're always guaranteed to get the same object returned from getConfig() whenever you pass the same filename in. Index-based Caching. Whenever a config is calculated, the config elements that were used to create the config are also cached. So if a given filename matches elements 1, 5, and 7, the resulting config is cached with a key of 1,5,7 . That way, if another file is passed that matches the same config elements, the result is already known and doesn't have to be recalculated. That means two files that match all the same elements will return the same config from getConfig() .","title":"Caching Mechanisms"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#acknowledgements","text":"The design of this project was influenced by feedback on the ESLint RFC, and incorporates ideas from: Teddy Katz (@not-an-aardvark) Toru Nagashima (@mysticatea) Kai Cataldo (@kaicataldo)","title":"Acknowledgements"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/config-array/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/core/","text":"ESLint Core Overview This package is the future home of the rewritten, runtime-agnostic ESLint core. Right now, it exports the core types necessary to implement language plugins. License Apache 2.0 Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"ESLint Core"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/core/#eslint-core","text":"","title":"ESLint Core"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/core/#overview","text":"This package is the future home of the rewritten, runtime-agnostic ESLint core. Right now, it exports the core types necessary to implement language plugins.","title":"Overview"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/core/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/core/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/","text":"ESLintRC Library This repository contains the legacy ESLintRC configuration file format for ESLint. This package is not intended for use outside of the ESLint ecosystem. It is ESLint-specific and not intended for use in other programs. Note: This package is frozen except for critical bug fixes as ESLint moves to a new config system. Installation You can install the package as follows: npm install @eslint/eslintrc --save-dev # or yarn add @eslint/eslintrc -D Usage (ESM) The primary class in this package is FlatCompat , which is a utility to translate ESLintRC-style configs into flat configs. Here's how you use it inside of your eslint.config.js file: import { FlatCompat } from \"@eslint/eslintrc\"; import js from \"@eslint/js\"; import path from \"path\"; import { fileURLToPath } from \"url\"; // mimic CommonJS variables -- not needed if using CommonJS const __filename = fileURLToPath(import.meta.url); const __dirname = path.dirname(__filename); const compat = new FlatCompat({ baseDirectory: __dirname, // optional; default: process.cwd() resolvePluginsRelativeTo: __dirname, // optional recommendedConfig: js.configs.recommended, // optional unless you're using \"eslint:recommended\" allConfig: js.configs.all, // optional unless you're using \"eslint:all\" }); export default [ // mimic ESLintRC-style extends ...compat.extends(\"standard\", \"example\"), // mimic environments ...compat.env({ es2020: true, node: true }), // mimic plugins ...compat.plugins(\"airbnb\", \"react\"), // translate an entire config ...compat.config({ plugins: [\"airbnb\", \"react\"], extends: \"standard\", env: { es2020: true, node: true }, rules: { semi: \"error\" } }) ]; Usage (CommonJS) Using FlatCompat in CommonJS files is similar to ESM, but you'll use require() and module.exports instead of import and export . Here's how you use it inside of your eslint.config.js CommonJS file: const { FlatCompat } = require(\"@eslint/eslintrc\"); const js = require(\"@eslint/js\"); const compat = new FlatCompat({ baseDirectory: __dirname, // optional; default: process.cwd() resolvePluginsRelativeTo: __dirname, // optional recommendedConfig: js.configs.recommended, // optional unless using \"eslint:recommended\" allConfig: js.configs.all, // optional unless using \"eslint:all\" }); module.exports = [ // mimic ESLintRC-style extends ...compat.extends(\"standard\", \"example\"), // mimic environments ...compat.env({ es2020: true, node: true }), // mimic plugins ...compat.plugins(\"airbnb\", \"react\"), // translate an entire config ...compat.config({ plugins: [\"airbnb\", \"react\"], extends: \"standard\", env: { es2020: true, node: true }, rules: { semi: \"error\" } }) ]; Troubleshooting TypeError: Missing parameter 'recommendedConfig' in FlatCompat constructor The recommendedConfig option is required when any config uses eslint:recommended , including any config in an extends clause. To fix this, follow the example above using @eslint/js to provide the eslint:recommended config. TypeError: Missing parameter 'allConfig' in FlatCompat constructor The allConfig option is required when any config uses eslint:all , including any config in an extends clause. To fix this, follow the example above using @eslint/js to provide the eslint:all config. License MIT License","title":"ESLintRC Library"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/#eslintrc-library","text":"This repository contains the legacy ESLintRC configuration file format for ESLint. This package is not intended for use outside of the ESLint ecosystem. It is ESLint-specific and not intended for use in other programs. Note: This package is frozen except for critical bug fixes as ESLint moves to a new config system.","title":"ESLintRC Library"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/#installation","text":"You can install the package as follows: npm install @eslint/eslintrc --save-dev # or yarn add @eslint/eslintrc -D","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/#usage-esm","text":"The primary class in this package is FlatCompat , which is a utility to translate ESLintRC-style configs into flat configs. Here's how you use it inside of your eslint.config.js file: import { FlatCompat } from \"@eslint/eslintrc\"; import js from \"@eslint/js\"; import path from \"path\"; import { fileURLToPath } from \"url\"; // mimic CommonJS variables -- not needed if using CommonJS const __filename = fileURLToPath(import.meta.url); const __dirname = path.dirname(__filename); const compat = new FlatCompat({ baseDirectory: __dirname, // optional; default: process.cwd() resolvePluginsRelativeTo: __dirname, // optional recommendedConfig: js.configs.recommended, // optional unless you're using \"eslint:recommended\" allConfig: js.configs.all, // optional unless you're using \"eslint:all\" }); export default [ // mimic ESLintRC-style extends ...compat.extends(\"standard\", \"example\"), // mimic environments ...compat.env({ es2020: true, node: true }), // mimic plugins ...compat.plugins(\"airbnb\", \"react\"), // translate an entire config ...compat.config({ plugins: [\"airbnb\", \"react\"], extends: \"standard\", env: { es2020: true, node: true }, rules: { semi: \"error\" } }) ];","title":"Usage (ESM)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/#usage-commonjs","text":"Using FlatCompat in CommonJS files is similar to ESM, but you'll use require() and module.exports instead of import and export . Here's how you use it inside of your eslint.config.js CommonJS file: const { FlatCompat } = require(\"@eslint/eslintrc\"); const js = require(\"@eslint/js\"); const compat = new FlatCompat({ baseDirectory: __dirname, // optional; default: process.cwd() resolvePluginsRelativeTo: __dirname, // optional recommendedConfig: js.configs.recommended, // optional unless using \"eslint:recommended\" allConfig: js.configs.all, // optional unless using \"eslint:all\" }); module.exports = [ // mimic ESLintRC-style extends ...compat.extends(\"standard\", \"example\"), // mimic environments ...compat.env({ es2020: true, node: true }), // mimic plugins ...compat.plugins(\"airbnb\", \"react\"), // translate an entire config ...compat.config({ plugins: [\"airbnb\", \"react\"], extends: \"standard\", env: { es2020: true, node: true }, rules: { semi: \"error\" } }) ];","title":"Usage (CommonJS)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/#troubleshooting","text":"TypeError: Missing parameter 'recommendedConfig' in FlatCompat constructor The recommendedConfig option is required when any config uses eslint:recommended , including any config in an extends clause. To fix this, follow the example above using @eslint/js to provide the eslint:recommended config. TypeError: Missing parameter 'allConfig' in FlatCompat constructor The allConfig option is required when any config uses eslint:all , including any config in an extends clause. To fix this, follow the example above using @eslint/js to provide the eslint:all config.","title":"Troubleshooting"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/#license","text":"MIT License","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/node_modules/globals/readme/","text":"globals Global identifiers from different JavaScript environments It's just a JSON file , so use it in any environment. This package is used by ESLint. This package no longer accepts new environments. If you need it for ESLint, just create a plugin . Install npm install globals Usage const globals = require('globals'); console.log(globals.browser); /* { addEventListener: false, applicationCache: false, ArrayBuffer: false, atob: false, \u2026 } */ Each global is given a value of true or false . A value of true indicates that the variable may be overwritten. A value of false indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be false unless we hear otherwise. For Node.js this package provides two sets of globals: globals.nodeBuiltin : Globals available to all code running in Node.js. These will usually be available as properties on the global object and include process , Buffer , but not CommonJS arguments like require . See: https://nodejs.org/api/globals.html globals.node : A combination of the globals from nodeBuiltin plus all CommonJS arguments (\"CommonJS module scope\"). See: https://nodejs.org/api/modules.html#modules_the_module_scope When analyzing code that is known to run outside of a CommonJS wrapper, for example, JavaScript modules, nodeBuiltin can find accidental CommonJS references.","title":"globals"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/node_modules/globals/readme/#globals","text":"Global identifiers from different JavaScript environments It's just a JSON file , so use it in any environment. This package is used by ESLint. This package no longer accepts new environments. If you need it for ESLint, just create a plugin .","title":"globals"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/node_modules/globals/readme/#install","text":"npm install globals","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/eslintrc/node_modules/globals/readme/#usage","text":"const globals = require('globals'); console.log(globals.browser); /* { addEventListener: false, applicationCache: false, ArrayBuffer: false, atob: false, \u2026 } */ Each global is given a value of true or false . A value of true indicates that the variable may be overwritten. A value of false indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be false unless we hear otherwise. For Node.js this package provides two sets of globals: globals.nodeBuiltin : Globals available to all code running in Node.js. These will usually be available as properties on the global object and include process , Buffer , but not CommonJS arguments like require . See: https://nodejs.org/api/globals.html globals.node : A combination of the globals from nodeBuiltin plus all CommonJS arguments (\"CommonJS module scope\"). See: https://nodejs.org/api/modules.html#modules_the_module_scope When analyzing code that is known to run outside of a CommonJS wrapper, for example, JavaScript modules, nodeBuiltin can find accidental CommonJS references.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/js/","text":"ESLint JavaScript Plugin Website | Configure ESLint | Rules | Contributing | Twitter | Chatroom The beginnings of separating out JavaScript-specific functionality from ESLint. Right now, this plugin contains two configurations: recommended - enables the rules recommended by the ESLint team (the replacement for \"eslint:recommended\" ) all - enables all ESLint rules (the replacement for \"eslint:all\" ) Installation npm install @eslint/js -D Usage Use in your eslint.config.js file anytime you want to extend one of the configs: import js from \"@eslint/js\"; export default [ // apply recommended rules to JS files { files: [\"**/*.js\"], rules: js.configs.recommended.rules }, // apply recommended rules to JS files with an override { files: [\"**/*.js\"], rules: { ...js.configs.recommended.rules, \"no-unused-vars\": \"warn\" } }, // apply all rules to JS files { files: [\"**/*.js\"], rules: { ...js.configs.all.rules, \"no-unused-vars\": \"warn\" } } ] License MIT","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/js/#eslint-javascript-plugin","text":"Website | Configure ESLint | Rules | Contributing | Twitter | Chatroom The beginnings of separating out JavaScript-specific functionality from ESLint. Right now, this plugin contains two configurations: recommended - enables the rules recommended by the ESLint team (the replacement for \"eslint:recommended\" ) all - enables all ESLint rules (the replacement for \"eslint:all\" )","title":"ESLint JavaScript Plugin"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/js/#installation","text":"npm install @eslint/js -D","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/js/#usage","text":"Use in your eslint.config.js file anytime you want to extend one of the configs: import js from \"@eslint/js\"; export default [ // apply recommended rules to JS files { files: [\"**/*.js\"], rules: js.configs.recommended.rules }, // apply recommended rules to JS files with an override { files: [\"**/*.js\"], rules: { ...js.configs.recommended.rules, \"no-unused-vars\": \"warn\" } }, // apply all rules to JS files { files: [\"**/*.js\"], rules: { ...js.configs.all.rules, \"no-unused-vars\": \"warn\" } } ]","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/js/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/","text":"ObjectSchema Package Overview A JavaScript object merge/validation utility where you can define a different merge and validation strategy for each key. This is helpful when you need to validate complex data structures and then merge them in a way that is more complex than Object.assign() . This is used in the @eslint/config-array package but can also be used on its own. Installation For Node.js and compatible runtimes: npm install @eslint/object-schema # or yarn add @eslint/object-schema # or pnpm install @eslint/object-schema # or bun install @eslint/object-schema For Deno: deno add @eslint/object-schema Usage Import the ObjectSchema constructor: // using ESM import { ObjectSchema } from \"@eslint/object-schema\"; // using CommonJS const { ObjectSchema } = require(\"@eslint/object-schema\"); const schema = new ObjectSchema({ // define a definition for the \"downloads\" key downloads: { required: true, merge(value1, value2) { return value1 + value2; }, validate(value) { if (typeof value !== \"number\") { throw new Error(\"Expected downloads to be a number.\"); } }, }, // define a strategy for the \"versions\" key version: { required: true, merge(value1, value2) { return value1.concat(value2); }, validate(value) { if (!Array.isArray(value)) { throw new Error(\"Expected versions to be an array.\"); } }, }, }); const record1 = { downloads: 25, versions: [\"v1.0.0\", \"v1.1.0\", \"v1.2.0\"], }; const record2 = { downloads: 125, versions: [\"v2.0.0\", \"v2.1.0\", \"v3.0.0\"], }; // make sure the records are valid schema.validate(record1); schema.validate(record2); // merge together (schema.merge() accepts any number of objects) const result = schema.merge(record1, record2); // result looks like this: const result = { downloads: 75, versions: [\"v1.0.0\", \"v1.1.0\", \"v1.2.0\", \"v2.0.0\", \"v2.1.0\", \"v3.0.0\"], }; Tips and Tricks Named merge strategies Instead of specifying a merge() method, you can specify one of the following strings to use a default merge strategy: \"assign\" - use Object.assign() to merge the two values into one object. \"overwrite\" - the second value always replaces the first. \"replace\" - the second value replaces the first if the second is not undefined . For example: const schema = new ObjectSchema({ name: { merge: \"replace\", validate() {}, }, }); Named validation strategies Instead of specifying a validate() method, you can specify one of the following strings to use a default validation strategy: \"array\" - value must be an array. \"boolean\" - value must be a boolean. \"number\" - value must be a number. \"object\" - value must be an object. \"object?\" - value must be an object or null. \"string\" - value must be a string. \"string!\" - value must be a non-empty string. For example: const schema = new ObjectSchema({ name: { merge: \"replace\", validate: \"string\", }, }); Subschemas If you are defining a key that is, itself, an object, you can simplify the process by using a subschema. Instead of defining merge() and validate() , assign a schema key that contains a schema definition, like this: const schema = new ObjectSchema({ name: { schema: { first: { merge: \"replace\", validate: \"string\", }, last: { merge: \"replace\", validate: \"string\", }, }, }, }); schema.validate({ name: { first: \"n\", last: \"z\", }, }); Remove Keys During Merge If the merge strategy for a key returns undefined , then the key will not appear in the final object. For example: const schema = new ObjectSchema({ date: { merge() { return undefined; }, validate(value) { Date.parse(value); // throws an error when invalid }, }, }); const object1 = { date: \"5/5/2005\" }; const object2 = { date: \"6/6/2006\" }; const result = schema.merge(object1, object2); console.log(\"date\" in result); // false Requiring Another Key Be Present If you'd like the presence of one key to require the presence of another key, you can use the requires property to specify an array of other properties that any key requires. For example: const schema = new ObjectSchema(); const schema = new ObjectSchema({ date: { merge() { return undefined; }, validate(value) { Date.parse(value); // throws an error when invalid }, }, time: { requires: [\"date\"], merge(first, second) { return second; }, validate(value) { // ... }, }, }); // throws error: Key \"time\" requires keys \"date\" schema.validate({ time: \"13:45\", }); In this example, even though date is an optional key, it is required to be present whenever time is present. License Apache 2.0 Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors","title":"ObjectSchema Package"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#objectschema-package","text":"","title":"ObjectSchema Package"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#overview","text":"A JavaScript object merge/validation utility where you can define a different merge and validation strategy for each key. This is helpful when you need to validate complex data structures and then merge them in a way that is more complex than Object.assign() . This is used in the @eslint/config-array package but can also be used on its own.","title":"Overview"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#installation","text":"For Node.js and compatible runtimes: npm install @eslint/object-schema # or yarn add @eslint/object-schema # or pnpm install @eslint/object-schema # or bun install @eslint/object-schema For Deno: deno add @eslint/object-schema","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#usage","text":"Import the ObjectSchema constructor: // using ESM import { ObjectSchema } from \"@eslint/object-schema\"; // using CommonJS const { ObjectSchema } = require(\"@eslint/object-schema\"); const schema = new ObjectSchema({ // define a definition for the \"downloads\" key downloads: { required: true, merge(value1, value2) { return value1 + value2; }, validate(value) { if (typeof value !== \"number\") { throw new Error(\"Expected downloads to be a number.\"); } }, }, // define a strategy for the \"versions\" key version: { required: true, merge(value1, value2) { return value1.concat(value2); }, validate(value) { if (!Array.isArray(value)) { throw new Error(\"Expected versions to be an array.\"); } }, }, }); const record1 = { downloads: 25, versions: [\"v1.0.0\", \"v1.1.0\", \"v1.2.0\"], }; const record2 = { downloads: 125, versions: [\"v2.0.0\", \"v2.1.0\", \"v3.0.0\"], }; // make sure the records are valid schema.validate(record1); schema.validate(record2); // merge together (schema.merge() accepts any number of objects) const result = schema.merge(record1, record2); // result looks like this: const result = { downloads: 75, versions: [\"v1.0.0\", \"v1.1.0\", \"v1.2.0\", \"v2.0.0\", \"v2.1.0\", \"v3.0.0\"], };","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#tips-and-tricks","text":"","title":"Tips and Tricks"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#named-merge-strategies","text":"Instead of specifying a merge() method, you can specify one of the following strings to use a default merge strategy: \"assign\" - use Object.assign() to merge the two values into one object. \"overwrite\" - the second value always replaces the first. \"replace\" - the second value replaces the first if the second is not undefined . For example: const schema = new ObjectSchema({ name: { merge: \"replace\", validate() {}, }, });","title":"Named merge strategies"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#named-validation-strategies","text":"Instead of specifying a validate() method, you can specify one of the following strings to use a default validation strategy: \"array\" - value must be an array. \"boolean\" - value must be a boolean. \"number\" - value must be a number. \"object\" - value must be an object. \"object?\" - value must be an object or null. \"string\" - value must be a string. \"string!\" - value must be a non-empty string. For example: const schema = new ObjectSchema({ name: { merge: \"replace\", validate: \"string\", }, });","title":"Named validation strategies"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#subschemas","text":"If you are defining a key that is, itself, an object, you can simplify the process by using a subschema. Instead of defining merge() and validate() , assign a schema key that contains a schema definition, like this: const schema = new ObjectSchema({ name: { schema: { first: { merge: \"replace\", validate: \"string\", }, last: { merge: \"replace\", validate: \"string\", }, }, }, }); schema.validate({ name: { first: \"n\", last: \"z\", }, });","title":"Subschemas"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#remove-keys-during-merge","text":"If the merge strategy for a key returns undefined , then the key will not appear in the final object. For example: const schema = new ObjectSchema({ date: { merge() { return undefined; }, validate(value) { Date.parse(value); // throws an error when invalid }, }, }); const object1 = { date: \"5/5/2005\" }; const object2 = { date: \"6/6/2006\" }; const result = schema.merge(object1, object2); console.log(\"date\" in result); // false","title":"Remove Keys During Merge"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#requiring-another-key-be-present","text":"If you'd like the presence of one key to require the presence of another key, you can use the requires property to specify an array of other properties that any key requires. For example: const schema = new ObjectSchema(); const schema = new ObjectSchema({ date: { merge() { return undefined; }, validate(value) { Date.parse(value); // throws an error when invalid }, }, time: { requires: [\"date\"], merge(first, second) { return second; }, validate(value) { // ... }, }, }); // throws error: Key \"time\" requires keys \"date\" schema.validate({ time: \"13:45\", }); In this example, even though date is an optional key, it is required to be present whenever time is present.","title":"Requiring Another Key Be Present"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/object-schema/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/","text":"ESLint Plugin Kit Description A collection of utilities to help build ESLint plugins. Installation For Node.js and compatible runtimes: npm install @eslint/plugin-kit # or yarn add @eslint/plugin-kit # or pnpm install @eslint/plugin-kit # or bun install @eslint/plugin-kit For Deno: deno add @eslint/plugin-kit Usage This package exports the following utilities: ConfigCommentParser - used to parse ESLint configuration comments (i.e., /* eslint-disable rule */ ) VisitNodeStep and CallMethodStep - used to help implement SourceCode#traverse() Directive - used to help implement SourceCode#getDisableDirectives() TextSourceCodeBase - base class to help implement the SourceCode interface ConfigCommentParser To use the ConfigCommentParser class, import it from the package and create a new instance, such as: import { ConfigCommentParser } from \"@eslint/plugin-kit\"; // create a new instance const commentParser = new ConfigCommentParser(); // pass in a comment string without the comment delimiters const directive = commentParser.parseDirective( \"eslint-disable prefer-const, semi -- I don't want to use these.\", ); // will be undefined when a directive can't be parsed if (directive) { console.log(directive.label); // \"eslint-disable\" console.log(directive.value); // \"prefer-const, semi\" console.log(directive.justification); // \"I don't want to use these\" } There are different styles of directive values that you'll need to parse separately to get the correct format: import { ConfigCommentParser } from \"@eslint/plugin-kit\"; // create a new instance const commentParser = new ConfigCommentParser(); // list format const list = commentParser.parseListConfig(\"prefer-const, semi\"); console.log(Object.entries(list)); // [[\"prefer-const\", true], [\"semi\", true]] // string format const strings = commentParser.parseStringConfig(\"foo:off, bar\"); console.log(Object.entries(strings)); // [[\"foo\", \"off\"], [\"bar\", null]] // JSON-like config format const jsonLike = commentParser.parseJSONLikeConfig( \"semi:[error, never], prefer-const: warn\", ); console.log(Object.entries(jsonLike.config)); // [[\"semi\", [\"error\", \"never\"]], [\"prefer-const\", \"warn\"]] VisitNodeStep and CallMethodStep The VisitNodeStep and CallMethodStep classes represent steps in the traversal of source code. They implement the correct interfaces to return from the SourceCode#traverse() method. The VisitNodeStep class is the more common of the two, where you are describing a visit to a particular node during the traversal. The constructor accepts three arguments: target - the node being visited. This is used to determine the method to call inside of a rule. For instance, if the node's type is Literal then ESLint will call a method named Literal() on the rule (if present). phase - either 1 for enter or 2 for exit. args - an array of arguments to pass into the visitor method of a rule. For example: import { VisitNodeStep } from \"@eslint/plugin-kit\"; class MySourceCode { traverse() { const steps = []; for (const { node, parent, phase } of iterator(this.ast)) { steps.push( new VisitNodeStep({ target: node, phase: phase === \"enter\" ? 1 : 2, args: [node, parent], }), ); } return steps; } } The CallMethodStep class is less common and is used to tell ESLint to call a specific method on the rule. The constructor accepts two arguments: target - the name of the method to call, frequently beginning with \"on\" such as \"onCodePathStart\" . args - an array of arguments to pass to the method. For example: import { VisitNodeStep, CallMethodStep } from \"@eslint/plugin-kit\"; class MySourceCode { traverse() { const steps = []; for (const { node, parent, phase } of iterator(this.ast)) { steps.push( new VisitNodeStep({ target: node, phase: phase === \"enter\" ? 1 : 2, args: [node, parent], }), ); // call a method indicating how many times we've been through the loop steps.push( new CallMethodStep({ target: \"onIteration\", args: [steps.length] }); ) } return steps; } } Directive The Directive class represents a disable directive in the source code and implements the Directive interface from @eslint/core . You can tell ESLint about disable directives using the SourceCode#getDisableDirectives() method, where part of the return value is an array of Directive objects. Here's an example: import { Directive, ConfigCommentParser } from \"@eslint/plugin-kit\"; class MySourceCode { getDisableDirectives() { const directives = []; const problems = []; const commentParser = new ConfigCommentParser(); // read in the inline config nodes to check each one this.getInlineConfigNodes().forEach(comment => { // Step 1: Parse the directive const { label, value, justification } = commentParser.parseDirective(comment.value); // Step 2: Extract the directive value and create the `Directive` object switch (label) { case \"eslint-disable\": case \"eslint-enable\": case \"eslint-disable-next-line\": case \"eslint-disable-line\": { const directiveType = label.slice(\"eslint-\".length); directives.push( new Directive({ type: directiveType, node: comment, value, justification, }), ); } // ignore any comments that don't begin with known labels } }); return { directives, problems, }; } } TextSourceCodeBase The TextSourceCodeBase class is intended to be a base class that has several of the common members found in SourceCode objects already implemented. Those members are: lines - an array of text lines that is created automatically when the constructor is called. getLoc(node) - gets the location of a node. Works for nodes that have the ESLint-style loc property and nodes that have the Unist-style position property . If you're using an AST with a different location format, you'll still need to implement this method yourself. getRange(node) - gets the range of a node within the source text. Works for nodes that have the ESLint-style range property and nodes that have the Unist-style position property . If you're using an AST with a different range format, you'll still need to implement this method yourself. getText(nodeOrToken, charsBefore, charsAfter) - gets the source text for the given node or token that has range information attached. Optionally, can return additional characters before and after the given node or token. As long as getRange() is properly implemented, this method will just work. getAncestors(node) - returns the ancestry of the node. In order for this to work, you must implement the getParent() method yourself. Here's an example: import { TextSourceCodeBase } from \"@eslint/plugin-kit\"; export class MySourceCode extends TextSourceCodeBase { #parents = new Map(); constructor({ ast, text }) { super({ ast, text }); } getParent(node) { return this.#parents.get(node); } traverse() { const steps = []; for (const { node, parent, phase } of iterator(this.ast)) { //save the parent information this.#parent.set(node, parent); steps.push( new VisitNodeStep({ target: node, phase: phase === \"enter\" ? 1 : 2, args: [node, parent], }), ); } return steps; } } In general, it's safe to collect the parent information during the traverse() method as getParent() and getAncestor() will only be called from rules once the AST has been traversed at least once. License Apache 2.0 Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"ESLint Plugin Kit"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#eslint-plugin-kit","text":"","title":"ESLint Plugin Kit"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#description","text":"A collection of utilities to help build ESLint plugins.","title":"Description"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#installation","text":"For Node.js and compatible runtimes: npm install @eslint/plugin-kit # or yarn add @eslint/plugin-kit # or pnpm install @eslint/plugin-kit # or bun install @eslint/plugin-kit For Deno: deno add @eslint/plugin-kit","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#usage","text":"This package exports the following utilities: ConfigCommentParser - used to parse ESLint configuration comments (i.e., /* eslint-disable rule */ ) VisitNodeStep and CallMethodStep - used to help implement SourceCode#traverse() Directive - used to help implement SourceCode#getDisableDirectives() TextSourceCodeBase - base class to help implement the SourceCode interface","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#configcommentparser","text":"To use the ConfigCommentParser class, import it from the package and create a new instance, such as: import { ConfigCommentParser } from \"@eslint/plugin-kit\"; // create a new instance const commentParser = new ConfigCommentParser(); // pass in a comment string without the comment delimiters const directive = commentParser.parseDirective( \"eslint-disable prefer-const, semi -- I don't want to use these.\", ); // will be undefined when a directive can't be parsed if (directive) { console.log(directive.label); // \"eslint-disable\" console.log(directive.value); // \"prefer-const, semi\" console.log(directive.justification); // \"I don't want to use these\" } There are different styles of directive values that you'll need to parse separately to get the correct format: import { ConfigCommentParser } from \"@eslint/plugin-kit\"; // create a new instance const commentParser = new ConfigCommentParser(); // list format const list = commentParser.parseListConfig(\"prefer-const, semi\"); console.log(Object.entries(list)); // [[\"prefer-const\", true], [\"semi\", true]] // string format const strings = commentParser.parseStringConfig(\"foo:off, bar\"); console.log(Object.entries(strings)); // [[\"foo\", \"off\"], [\"bar\", null]] // JSON-like config format const jsonLike = commentParser.parseJSONLikeConfig( \"semi:[error, never], prefer-const: warn\", ); console.log(Object.entries(jsonLike.config)); // [[\"semi\", [\"error\", \"never\"]], [\"prefer-const\", \"warn\"]]","title":"ConfigCommentParser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#visitnodestep-and-callmethodstep","text":"The VisitNodeStep and CallMethodStep classes represent steps in the traversal of source code. They implement the correct interfaces to return from the SourceCode#traverse() method. The VisitNodeStep class is the more common of the two, where you are describing a visit to a particular node during the traversal. The constructor accepts three arguments: target - the node being visited. This is used to determine the method to call inside of a rule. For instance, if the node's type is Literal then ESLint will call a method named Literal() on the rule (if present). phase - either 1 for enter or 2 for exit. args - an array of arguments to pass into the visitor method of a rule. For example: import { VisitNodeStep } from \"@eslint/plugin-kit\"; class MySourceCode { traverse() { const steps = []; for (const { node, parent, phase } of iterator(this.ast)) { steps.push( new VisitNodeStep({ target: node, phase: phase === \"enter\" ? 1 : 2, args: [node, parent], }), ); } return steps; } } The CallMethodStep class is less common and is used to tell ESLint to call a specific method on the rule. The constructor accepts two arguments: target - the name of the method to call, frequently beginning with \"on\" such as \"onCodePathStart\" . args - an array of arguments to pass to the method. For example: import { VisitNodeStep, CallMethodStep } from \"@eslint/plugin-kit\"; class MySourceCode { traverse() { const steps = []; for (const { node, parent, phase } of iterator(this.ast)) { steps.push( new VisitNodeStep({ target: node, phase: phase === \"enter\" ? 1 : 2, args: [node, parent], }), ); // call a method indicating how many times we've been through the loop steps.push( new CallMethodStep({ target: \"onIteration\", args: [steps.length] }); ) } return steps; } }","title":"VisitNodeStep and CallMethodStep"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#directive","text":"The Directive class represents a disable directive in the source code and implements the Directive interface from @eslint/core . You can tell ESLint about disable directives using the SourceCode#getDisableDirectives() method, where part of the return value is an array of Directive objects. Here's an example: import { Directive, ConfigCommentParser } from \"@eslint/plugin-kit\"; class MySourceCode { getDisableDirectives() { const directives = []; const problems = []; const commentParser = new ConfigCommentParser(); // read in the inline config nodes to check each one this.getInlineConfigNodes().forEach(comment => { // Step 1: Parse the directive const { label, value, justification } = commentParser.parseDirective(comment.value); // Step 2: Extract the directive value and create the `Directive` object switch (label) { case \"eslint-disable\": case \"eslint-enable\": case \"eslint-disable-next-line\": case \"eslint-disable-line\": { const directiveType = label.slice(\"eslint-\".length); directives.push( new Directive({ type: directiveType, node: comment, value, justification, }), ); } // ignore any comments that don't begin with known labels } }); return { directives, problems, }; } }","title":"Directive"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#textsourcecodebase","text":"The TextSourceCodeBase class is intended to be a base class that has several of the common members found in SourceCode objects already implemented. Those members are: lines - an array of text lines that is created automatically when the constructor is called. getLoc(node) - gets the location of a node. Works for nodes that have the ESLint-style loc property and nodes that have the Unist-style position property . If you're using an AST with a different location format, you'll still need to implement this method yourself. getRange(node) - gets the range of a node within the source text. Works for nodes that have the ESLint-style range property and nodes that have the Unist-style position property . If you're using an AST with a different range format, you'll still need to implement this method yourself. getText(nodeOrToken, charsBefore, charsAfter) - gets the source text for the given node or token that has range information attached. Optionally, can return additional characters before and after the given node or token. As long as getRange() is properly implemented, this method will just work. getAncestors(node) - returns the ancestry of the node. In order for this to work, you must implement the getParent() method yourself. Here's an example: import { TextSourceCodeBase } from \"@eslint/plugin-kit\"; export class MySourceCode extends TextSourceCodeBase { #parents = new Map(); constructor({ ast, text }) { super({ ast, text }); } getParent(node) { return this.#parents.get(node); } traverse() { const steps = []; for (const { node, parent, phase } of iterator(this.ast)) { //save the parent information this.#parent.set(node, parent); steps.push( new VisitNodeStep({ target: node, phase: phase === \"enter\" ? 1 : 2, args: [node, parent], }), ); } return steps; } } In general, it's safe to collect the parent information during the traverse() method as getParent() and getAncestor() will only be called from rules once the AST has been traversed at least once.","title":"TextSourceCodeBase"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint/plugin-kit/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/","text":"@eslint-community/eslint-utils \ud83c\udfc1 Goal This package provides utility functions and classes for make ESLint custom rules. For examples: getStaticValue evaluates static value on AST. ReferenceTracker checks the members of modules/globals as handling assignments and destructuring. \ud83d\udcd6 Usage See documentation . \ud83d\udcf0 Changelog See releases . \u2764\ufe0f Contributing Welcome contributing! Please use GitHub's Issues/PRs. Development Tools npm test runs tests and measures coverage. npm run clean removes the coverage result of npm test command. npm run coverage shows the coverage result of the last npm test command. npm run lint runs ESLint. npm run watch runs tests on each file change.","title":"@eslint-community/eslint-utils"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/#eslint-communityeslint-utils","text":"","title":"@eslint-community/eslint-utils"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/#goal","text":"This package provides utility functions and classes for make ESLint custom rules. For examples: getStaticValue evaluates static value on AST. ReferenceTracker checks the members of modules/globals as handling assignments and destructuring.","title":"\ud83c\udfc1 Goal"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/#usage","text":"See documentation .","title":"\ud83d\udcd6 Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/#changelog","text":"See releases .","title":"\ud83d\udcf0 Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/#contributing","text":"Welcome contributing! Please use GitHub's Issues/PRs.","title":"\u2764\ufe0f Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/#development-tools","text":"npm test runs tests and measures coverage. npm run clean removes the coverage result of npm test command. npm run coverage shows the coverage result of the last npm test command. npm run lint runs ESLint. npm run watch runs tests on each file change.","title":"Development Tools"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/","text":"eslint-visitor-keys Constants and utilities about visitor keys to traverse AST. \ud83d\udcbf Installation Use npm to install. $ npm install eslint-visitor-keys Requirements Node.js ^12.22.0 , ^14.17.0 , or >=16.0.0 \ud83d\udcd6 Usage To use in an ESM file: import * as evk from \"eslint-visitor-keys\" To use in a CommonJS file: const evk = require(\"eslint-visitor-keys\") evk.KEYS type: { [type: string]: string[] | undefined } Visitor keys. This keys are frozen. This is an object. Keys are the type of ESTree nodes. Their values are an array of property names which have child nodes. For example: console.log(evk.KEYS.AssignmentExpression) // \u2192 [\"left\", \"right\"] evk.getKeys(node) type: (node: object) => string[] Get the visitor keys of a given AST node. This is similar to Object.keys(node) of ES Standard, but some keys are excluded: parent , leadingComments , trailingComments , and names which start with _ . This will be used to traverse unknown nodes. For example: const node = { type: \"AssignmentExpression\", left: { type: \"Identifier\", name: \"foo\" }, right: { type: \"Literal\", value: 0 } } console.log(evk.getKeys(node)) // \u2192 [\"type\", \"left\", \"right\"] evk.unionWith(additionalKeys) type: (additionalKeys: object) => { [type: string]: string[] | undefined } Make the union set with evk.KEYS and the given keys. The order of keys is, additionalKeys is at first, then evk.KEYS is concatenated after that. It removes duplicated keys as keeping the first one. For example: console.log(evk.unionWith({ MethodDefinition: [\"decorators\"] })) // \u2192 { ..., MethodDefinition: [\"decorators\", \"key\", \"value\"], ... } \ud83d\udcf0 Change log See GitHub releases . \ud83c\udf7b Contributing Welcome. See ESLint contribution guidelines . Development commands npm test runs tests and measures code coverage. npm run lint checks source codes with ESLint. npm run test:open-coverage opens the code coverage report of the previous test with your default browser.","title":"eslint-visitor-keys"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#eslint-visitor-keys","text":"Constants and utilities about visitor keys to traverse AST.","title":"eslint-visitor-keys"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#installation","text":"Use npm to install. $ npm install eslint-visitor-keys","title":"\ud83d\udcbf Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#requirements","text":"Node.js ^12.22.0 , ^14.17.0 , or >=16.0.0","title":"Requirements"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#usage","text":"To use in an ESM file: import * as evk from \"eslint-visitor-keys\" To use in a CommonJS file: const evk = require(\"eslint-visitor-keys\")","title":"\ud83d\udcd6 Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#evkkeys","text":"type: { [type: string]: string[] | undefined } Visitor keys. This keys are frozen. This is an object. Keys are the type of ESTree nodes. Their values are an array of property names which have child nodes. For example: console.log(evk.KEYS.AssignmentExpression) // \u2192 [\"left\", \"right\"]","title":"evk.KEYS"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#evkgetkeysnode","text":"type: (node: object) => string[] Get the visitor keys of a given AST node. This is similar to Object.keys(node) of ES Standard, but some keys are excluded: parent , leadingComments , trailingComments , and names which start with _ . This will be used to traverse unknown nodes. For example: const node = { type: \"AssignmentExpression\", left: { type: \"Identifier\", name: \"foo\" }, right: { type: \"Literal\", value: 0 } } console.log(evk.getKeys(node)) // \u2192 [\"type\", \"left\", \"right\"]","title":"evk.getKeys(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#evkunionwithadditionalkeys","text":"type: (additionalKeys: object) => { [type: string]: string[] | undefined } Make the union set with evk.KEYS and the given keys. The order of keys is, additionalKeys is at first, then evk.KEYS is concatenated after that. It removes duplicated keys as keeping the first one. For example: console.log(evk.unionWith({ MethodDefinition: [\"decorators\"] })) // \u2192 { ..., MethodDefinition: [\"decorators\", \"key\", \"value\"], ... }","title":"evk.unionWith(additionalKeys)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#change-log","text":"See GitHub releases .","title":"\ud83d\udcf0 Change log"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#contributing","text":"Welcome. See ESLint contribution guidelines .","title":"\ud83c\udf7b Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/eslint-utils/node_modules/eslint-visitor-keys/#development-commands","text":"npm test runs tests and measures code coverage. npm run lint checks source codes with ESLint. npm run test:open-coverage opens the code coverage report of the previous test with your default browser.","title":"Development commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/","text":"@eslint-community/regexpp A regular expression parser for ECMAScript. \ud83d\udcbf Installation $ npm install @eslint-community/regexpp require Node@^12.0.0 || ^14.0.0 || >=16.0.0. \ud83d\udcd6 Usage import { AST, RegExpParser, RegExpValidator, RegExpVisitor, parseRegExpLiteral, validateRegExpLiteral, visitRegExpAST } from \"@eslint-community/regexpp\" parseRegExpLiteral(source, options?) Parse a given regular expression literal then make AST object. This is equivalent to new RegExpParser(options).parseLiteral(source) . Parameters: source ( string | RegExp ) The source code to parse. options? ([ RegExpParser.Options ]) The options to parse. Return: The AST of the regular expression. validateRegExpLiteral(source, options?) Validate a given regular expression literal. This is equivalent to new RegExpValidator(options).validateLiteral(source) . Parameters: source ( string ) The source code to validate. options? ([ RegExpValidator.Options ]) The options to validate. visitRegExpAST(ast, handlers) Visit each node of a given AST. This is equivalent to new RegExpVisitor(handlers).visit(ast) . Parameters: ast ([ AST.Node ]) The AST to visit. handlers ([ RegExpVisitor.Handlers ]) The callbacks. RegExpParser new RegExpParser(options?) Parameters: options? ([ RegExpParser.Options ]) The options to parse. parser.parseLiteral(source, start?, end?) Parse a regular expression literal. Parameters: source ( string ) The source code to parse. E.g. \"/abc/g\" . start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . Return: The AST of the regular expression. parser.parsePattern(source, start?, end?, flags?) Parse a regular expression pattern. Parameters: source ( string ) The source code to parse. E.g. \"abc\" . start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . flags? ( { unicode?: boolean, unicodeSets?: boolean } ) The flags to enable Unicode mode, and Unicode Set mode. Return: The AST of the regular expression pattern. parser.parseFlags(source, start?, end?) Parse a regular expression flags. Parameters: source ( string ) The source code to parse. E.g. \"gim\" . start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . Return: The AST of the regular expression flags. RegExpValidator new RegExpValidator(options) Parameters: options ([ RegExpValidator.Options ]) The options to validate. validator.validateLiteral(source, start, end) Validate a regular expression literal. Parameters: source ( string ) The source code to validate. start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . validator.validatePattern(source, start, end, flags) Validate a regular expression pattern. Parameters: source ( string ) The source code to validate. start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . flags? ( { unicode?: boolean, unicodeSets?: boolean } ) The flags to enable Unicode mode, and Unicode Set mode. validator.validateFlags(source, start, end) Validate a regular expression flags. Parameters: source ( string ) The source code to validate. start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . RegExpVisitor new RegExpVisitor(handlers) Parameters: handlers ([ RegExpVisitor.Handlers ]) The callbacks. visitor.visit(ast) Validate a regular expression literal. Parameters: ast ([ AST.Node ]) The AST to visit. \ud83d\udcf0 Changelog GitHub Releases \ud83c\udf7b Contributing Welcome contributing! Please use GitHub's Issues/PRs. Development Tools npm test runs tests and measures coverage. npm run build compiles TypeScript source code to index.js , index.js.map , and index.d.ts . npm run clean removes the temporary files which are created by npm test and npm run build . npm run lint runs ESLint. npm run update:test updates test fixtures. npm run update:ids updates src/unicode/ids.ts . npm run watch runs tests with --watch option.","title":"@eslint-community/regexpp"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#eslint-communityregexpp","text":"A regular expression parser for ECMAScript.","title":"@eslint-community/regexpp"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#installation","text":"$ npm install @eslint-community/regexpp require Node@^12.0.0 || ^14.0.0 || >=16.0.0.","title":"\ud83d\udcbf Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#usage","text":"import { AST, RegExpParser, RegExpValidator, RegExpVisitor, parseRegExpLiteral, validateRegExpLiteral, visitRegExpAST } from \"@eslint-community/regexpp\"","title":"\ud83d\udcd6 Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#parseregexpliteralsource-options","text":"Parse a given regular expression literal then make AST object. This is equivalent to new RegExpParser(options).parseLiteral(source) . Parameters: source ( string | RegExp ) The source code to parse. options? ([ RegExpParser.Options ]) The options to parse. Return: The AST of the regular expression.","title":"parseRegExpLiteral(source, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#validateregexpliteralsource-options","text":"Validate a given regular expression literal. This is equivalent to new RegExpValidator(options).validateLiteral(source) . Parameters: source ( string ) The source code to validate. options? ([ RegExpValidator.Options ]) The options to validate.","title":"validateRegExpLiteral(source, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#visitregexpastast-handlers","text":"Visit each node of a given AST. This is equivalent to new RegExpVisitor(handlers).visit(ast) . Parameters: ast ([ AST.Node ]) The AST to visit. handlers ([ RegExpVisitor.Handlers ]) The callbacks.","title":"visitRegExpAST(ast, handlers)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#regexpparser","text":"","title":"RegExpParser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#new-regexpparseroptions","text":"Parameters: options? ([ RegExpParser.Options ]) The options to parse.","title":"new RegExpParser(options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#parserparseliteralsource-start-end","text":"Parse a regular expression literal. Parameters: source ( string ) The source code to parse. E.g. \"/abc/g\" . start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . Return: The AST of the regular expression.","title":"parser.parseLiteral(source, start?, end?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#parserparsepatternsource-start-end-flags","text":"Parse a regular expression pattern. Parameters: source ( string ) The source code to parse. E.g. \"abc\" . start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . flags? ( { unicode?: boolean, unicodeSets?: boolean } ) The flags to enable Unicode mode, and Unicode Set mode. Return: The AST of the regular expression pattern.","title":"parser.parsePattern(source, start?, end?, flags?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#parserparseflagssource-start-end","text":"Parse a regular expression flags. Parameters: source ( string ) The source code to parse. E.g. \"gim\" . start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . Return: The AST of the regular expression flags.","title":"parser.parseFlags(source, start?, end?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#regexpvalidator","text":"","title":"RegExpValidator"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#new-regexpvalidatoroptions","text":"Parameters: options ([ RegExpValidator.Options ]) The options to validate.","title":"new RegExpValidator(options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#validatorvalidateliteralsource-start-end","text":"Validate a regular expression literal. Parameters: source ( string ) The source code to validate. start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length .","title":"validator.validateLiteral(source, start, end)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#validatorvalidatepatternsource-start-end-flags","text":"Validate a regular expression pattern. Parameters: source ( string ) The source code to validate. start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length . flags? ( { unicode?: boolean, unicodeSets?: boolean } ) The flags to enable Unicode mode, and Unicode Set mode.","title":"validator.validatePattern(source, start, end, flags)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#validatorvalidateflagssource-start-end","text":"Validate a regular expression flags. Parameters: source ( string ) The source code to validate. start? ( number ) The start index in the source code. Default is 0 . end? ( number ) The end index in the source code. Default is source.length .","title":"validator.validateFlags(source, start, end)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#regexpvisitor","text":"","title":"RegExpVisitor"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#new-regexpvisitorhandlers","text":"Parameters: handlers ([ RegExpVisitor.Handlers ]) The callbacks.","title":"new RegExpVisitor(handlers)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#visitorvisitast","text":"Validate a regular expression literal. Parameters: ast ([ AST.Node ]) The AST to visit.","title":"visitor.visit(ast)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#changelog","text":"GitHub Releases","title":"\ud83d\udcf0 Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#contributing","text":"Welcome contributing! Please use GitHub's Issues/PRs.","title":"\ud83c\udf7b Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40eslint-community/regexpp/#development-tools","text":"npm test runs tests and measures coverage. npm run build compiles TypeScript source code to index.js , index.js.map , and index.d.ts . npm run clean removes the temporary files which are created by npm test and npm run build . npm run lint runs ESLint. npm run update:test updates test fixtures. npm run update:ids updates src/unicode/ids.ts . npm run watch runs tests with --watch option.","title":"Development Tools"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/","text":"@humanfs/core by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation or nominate me for a GitHub Star. Description The core functionality for humanfs that is shared across all implementations for all runtimes. The contents of this package are intentionally runtime agnostic and are not intended to be used alone. Currently, this package simply exports the Hfs class, which is an abstract base class intended to be inherited from in runtime-specific hfs packages (like @humanfs/node ). [!WARNING] This project is experimental and may change significantly before v1.0.0. Use at your own caution and definitely not in production! Installation Node.js Install using your favorite package manager for Node.js: npm install @humanfs/core # or pnpm install @humanfs/core # or yarn add @humanfs/core # or bun install @humanfs/core Then you can import the Hfs and Path classes like this: import { Hfs, Path } from \"@humanfs/core\"; Deno Install using JSR : deno add @humanfs/core # or jsr add @humanfs/core Then you can import the Hfs class like this: import { Hfs, Path } from \"@humanfs/core\"; Browser It's recommended to import the minified version to save bandwidth: import { Hfs, Path } from \"https://cdn.skypack.dev/@humanfs/core?min\"; However, you can also import the unminified version for debugging purposes: import { Hfs, Path } from \"https://cdn.skypack.dev/@humanfs/core\"; Usage Hfs Class The Hfs class contains all of the basic functionality for an Hfs instance without a predefined impl. This class is mostly used for creating runtime-specific impls, such as NodeHfs and DenoHfs . You can create your own instance by providing an impl directly: const hfs = new Hfs({ impl: { async text() {} }}); The specified impl becomes the base impl for the instance, meaning you can always reset back to it using resetImpl() . You can also inherit from Hfs to create your own class with a preconfigured impl, such as: class MyHfs extends Hfs { constructor() { super({ impl: myImpl }); } } Path Class The Path class represents the path to a directory or file within a file system. It's an abstract representation that can be used even outside of traditional file systems where string paths might not make sense. const myPath = new Path([\"dir\", \"subdir\"]); console.log(myPath.toString()); // \"dir/subdir\" // add another step myPath.push(\"file.txt\"); console.log(myPath.toString()); // \"dir/subdir/file.txt\" // get just the last step console.log(myPath.name); // \"file.txt\" // change just the last step myPath.name = \"file.json\"; console.log(myPath.name); // \"file.json\" console.log(myPath.toString()); // \"dir/subdir/file.json\" // get the size of the path console.log(myPath.size); // 3 // remove the last step myPath.pop(); console.log(myPath.toString()); // \"dir/subdir\" // iterate over the steps for (const step of myPath) { // do something } // create a new path from a string const newPath = Path.fromString(\"/foo/bar\"); License Apache 2.0","title":"@humanfs/core"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#humanfscore","text":"by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation or nominate me for a GitHub Star.","title":"@humanfs/core"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#description","text":"The core functionality for humanfs that is shared across all implementations for all runtimes. The contents of this package are intentionally runtime agnostic and are not intended to be used alone. Currently, this package simply exports the Hfs class, which is an abstract base class intended to be inherited from in runtime-specific hfs packages (like @humanfs/node ). [!WARNING] This project is experimental and may change significantly before v1.0.0. Use at your own caution and definitely not in production!","title":"Description"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#installation","text":"","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#nodejs","text":"Install using your favorite package manager for Node.js: npm install @humanfs/core # or pnpm install @humanfs/core # or yarn add @humanfs/core # or bun install @humanfs/core Then you can import the Hfs and Path classes like this: import { Hfs, Path } from \"@humanfs/core\";","title":"Node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#deno","text":"Install using JSR : deno add @humanfs/core # or jsr add @humanfs/core Then you can import the Hfs class like this: import { Hfs, Path } from \"@humanfs/core\";","title":"Deno"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#browser","text":"It's recommended to import the minified version to save bandwidth: import { Hfs, Path } from \"https://cdn.skypack.dev/@humanfs/core?min\"; However, you can also import the unminified version for debugging purposes: import { Hfs, Path } from \"https://cdn.skypack.dev/@humanfs/core\";","title":"Browser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#usage","text":"","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#hfs-class","text":"The Hfs class contains all of the basic functionality for an Hfs instance without a predefined impl. This class is mostly used for creating runtime-specific impls, such as NodeHfs and DenoHfs . You can create your own instance by providing an impl directly: const hfs = new Hfs({ impl: { async text() {} }}); The specified impl becomes the base impl for the instance, meaning you can always reset back to it using resetImpl() . You can also inherit from Hfs to create your own class with a preconfigured impl, such as: class MyHfs extends Hfs { constructor() { super({ impl: myImpl }); } }","title":"Hfs Class"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#path-class","text":"The Path class represents the path to a directory or file within a file system. It's an abstract representation that can be used even outside of traditional file systems where string paths might not make sense. const myPath = new Path([\"dir\", \"subdir\"]); console.log(myPath.toString()); // \"dir/subdir\" // add another step myPath.push(\"file.txt\"); console.log(myPath.toString()); // \"dir/subdir/file.txt\" // get just the last step console.log(myPath.name); // \"file.txt\" // change just the last step myPath.name = \"file.json\"; console.log(myPath.name); // \"file.json\" console.log(myPath.toString()); // \"dir/subdir/file.json\" // get the size of the path console.log(myPath.size); // 3 // remove the last step myPath.pop(); console.log(myPath.toString()); // \"dir/subdir\" // iterate over the steps for (const step of myPath) { // do something } // create a new path from a string const newPath = Path.fromString(\"/foo/bar\");","title":"Path Class"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/core/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/","text":"@humanfs/node by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation or nominate me for a GitHub Star. Description The hfs bindings for use in Node.js and Node.js-compatible runtimes. [!WARNING] This project is experimental and may change significantly before v1.0.0. Use at your own caution and definitely not in production! Installation Install using your favorite package manager: npm install @humanfs/node # or pnpm install @humanfs/node # or yarn add @humanfs/node # or bun install @humanfs/node Usage The easiest way to use hfs in your project is to import the hfs object: import { hfs } from \"@humanfs/node\"; Then, you can use the API methods: // 1. Files // read from a text file const text = await hfs.text(\"file.txt\"); // read from a JSON file const json = await hfs.json(\"file.json\"); // read raw bytes from a text file const arrayBuffer = await hfs.arrayBuffer(\"file.txt\"); // write text to a file await hfs.write(\"file.txt\", \"Hello world!\"); // write bytes to a file await hfs.write(\"file.txt\", new TextEncoder().encode(\"Hello world!\")); // append text to a file await hfs.append(\"file.txt\", \"Hello world!\"); // append bytes to a file await hfs.append(\"file.txt\", new TextEncoder().encode(\"Hello world!\")); // does the file exist? const found = await hfs.isFile(\"file.txt\"); // how big is the file? const size = await hfs.size(\"file.txt\"); // when was the file modified? const mtime = await hfs.lastModified(\"file.txt\"); // copy a file from one location to another await hfs.copy(\"file.txt\", \"file-copy.txt\"); // move a file from one location to another await hfs.move(\"file.txt\", \"renamed.txt\"); // delete a file await hfs.delete(\"file.txt\"); // 2. Directories // create a directory await hfs.createDirectory(\"dir\"); // create a directory recursively await hfs.createDirectory(\"dir/subdir\"); // does the directory exist? const dirFound = await hfs.isDirectory(\"dir\"); // copy the entire directory hfs.copyAll(\"from-dir\", \"to-dir\"); // move the entire directory hfs.moveAll(\"from-dir\", \"to-dir\"); // delete a directory await hfs.delete(\"dir\"); // delete a non-empty directory await hfs.deleteAll(\"dir\"); If you'd like to create your own instance, import the NodeHfs constructor: import { NodeHfs } from \"@humanfs/node\"; import fsp from \"fs/promises\"; const hfs = new NodeHfs(); // optionally specify the fs/promises object to use const hfs = new NodeHfs({ fsp }); If you'd like to use just the impl, import the NodeHfsImpl constructor: import { NodeHfsImpl } from \"@humanfs/node\"; import fsp from \"fs/promises\"; const hfs = new NodeHfsImpl(); // optionally specify the fs/promises object to use const hfs = new NodeHfsImpl({ fsp }); Errors Handled ENOENT - in most cases, these errors are handled silently. ENFILE and EMFILE - calls that result in these errors are retried for up to 60 seconds before giving up for good. License Apache 2.0","title":"@humanfs/node"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/#humanfsnode","text":"by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation or nominate me for a GitHub Star.","title":"@humanfs/node"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/#description","text":"The hfs bindings for use in Node.js and Node.js-compatible runtimes. [!WARNING] This project is experimental and may change significantly before v1.0.0. Use at your own caution and definitely not in production!","title":"Description"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/#installation","text":"Install using your favorite package manager: npm install @humanfs/node # or pnpm install @humanfs/node # or yarn add @humanfs/node # or bun install @humanfs/node","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/#usage","text":"The easiest way to use hfs in your project is to import the hfs object: import { hfs } from \"@humanfs/node\"; Then, you can use the API methods: // 1. Files // read from a text file const text = await hfs.text(\"file.txt\"); // read from a JSON file const json = await hfs.json(\"file.json\"); // read raw bytes from a text file const arrayBuffer = await hfs.arrayBuffer(\"file.txt\"); // write text to a file await hfs.write(\"file.txt\", \"Hello world!\"); // write bytes to a file await hfs.write(\"file.txt\", new TextEncoder().encode(\"Hello world!\")); // append text to a file await hfs.append(\"file.txt\", \"Hello world!\"); // append bytes to a file await hfs.append(\"file.txt\", new TextEncoder().encode(\"Hello world!\")); // does the file exist? const found = await hfs.isFile(\"file.txt\"); // how big is the file? const size = await hfs.size(\"file.txt\"); // when was the file modified? const mtime = await hfs.lastModified(\"file.txt\"); // copy a file from one location to another await hfs.copy(\"file.txt\", \"file-copy.txt\"); // move a file from one location to another await hfs.move(\"file.txt\", \"renamed.txt\"); // delete a file await hfs.delete(\"file.txt\"); // 2. Directories // create a directory await hfs.createDirectory(\"dir\"); // create a directory recursively await hfs.createDirectory(\"dir/subdir\"); // does the directory exist? const dirFound = await hfs.isDirectory(\"dir\"); // copy the entire directory hfs.copyAll(\"from-dir\", \"to-dir\"); // move the entire directory hfs.moveAll(\"from-dir\", \"to-dir\"); // delete a directory await hfs.delete(\"dir\"); // delete a non-empty directory await hfs.deleteAll(\"dir\"); If you'd like to create your own instance, import the NodeHfs constructor: import { NodeHfs } from \"@humanfs/node\"; import fsp from \"fs/promises\"; const hfs = new NodeHfs(); // optionally specify the fs/promises object to use const hfs = new NodeHfs({ fsp }); If you'd like to use just the impl, import the NodeHfsImpl constructor: import { NodeHfsImpl } from \"@humanfs/node\"; import fsp from \"fs/promises\"; const hfs = new NodeHfsImpl(); // optionally specify the fs/promises object to use const hfs = new NodeHfsImpl({ fsp });","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/#errors-handled","text":"ENOENT - in most cases, these errors are handled silently. ENFILE and EMFILE - calls that result in these errors are retried for up to 60 seconds before giving up for good.","title":"Errors Handled"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanfs/node/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/","text":"ModuleImporter by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation . Description A utility for seamlessly importing modules in Node.js regardless if they are CommonJS or ESM format. Under the hood, this uses import() and relies on Node.js's CommonJS compatibility to work correctly. This ensures that the correct locations and formats are used for CommonJS so you can call one method and not worry about any compatibility issues. The problem with the default import() is that it always resolves relative to the file location in which it is called. If you want to resolve from a different location, you need to jump through a few hoops to achieve that. This package makes it easy to both resolve and import modules from any directory. Usage Node.js Install using npm or yarn : npm install @humanwhocodes/module-importer # or yarn add @humanwhocodes/module-importer Import into your Node.js project: // CommonJS const { ModuleImporter } = require(\"@humanwhocodes/module-importer\"); // ESM import { ModuleImporter } from \"@humanwhocodes/module-importer\"; Bun Install using this command: bun add @humanwhocodes/module-importer Import into your Bun project: import { ModuleImporter } from \"@humanwhocodes/module-importer\"; API After importing, create a new instance of ModuleImporter to start emitting events: // cwd can be omitted to use process.cwd() const importer = new ModuleImporter(cwd); // you can resolve the location of any package const location = importer.resolve(\"./some-file.cjs\"); // you can also import directly const module = importer.import(\"./some-file.cjs\"); For both resolve() and import() , you can pass in package names and filenames. Developer Setup Fork the repository Clone your fork Run npm install to setup dependencies Run npm test to run tests License Apache 2.0","title":"ModuleImporter"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#moduleimporter","text":"by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation .","title":"ModuleImporter"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#description","text":"A utility for seamlessly importing modules in Node.js regardless if they are CommonJS or ESM format. Under the hood, this uses import() and relies on Node.js's CommonJS compatibility to work correctly. This ensures that the correct locations and formats are used for CommonJS so you can call one method and not worry about any compatibility issues. The problem with the default import() is that it always resolves relative to the file location in which it is called. If you want to resolve from a different location, you need to jump through a few hoops to achieve that. This package makes it easy to both resolve and import modules from any directory.","title":"Description"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#usage","text":"","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#nodejs","text":"Install using npm or yarn : npm install @humanwhocodes/module-importer # or yarn add @humanwhocodes/module-importer Import into your Node.js project: // CommonJS const { ModuleImporter } = require(\"@humanwhocodes/module-importer\"); // ESM import { ModuleImporter } from \"@humanwhocodes/module-importer\";","title":"Node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#bun","text":"Install using this command: bun add @humanwhocodes/module-importer Import into your Bun project: import { ModuleImporter } from \"@humanwhocodes/module-importer\";","title":"Bun"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#api","text":"After importing, create a new instance of ModuleImporter to start emitting events: // cwd can be omitted to use process.cwd() const importer = new ModuleImporter(cwd); // you can resolve the location of any package const location = importer.resolve(\"./some-file.cjs\"); // you can also import directly const module = importer.import(\"./some-file.cjs\"); For both resolve() and import() , you can pass in package names and filenames.","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#developer-setup","text":"Fork the repository Clone your fork Run npm install to setup dependencies Run npm test to run tests","title":"Developer Setup"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/CHANGELOG/","text":"Changelog 1.0.1 (2022-08-18) Bug Fixes Ensure CommonJS mode works correctly. ( cf54a0b ), closes #6 1.0.0 (2022-08-17) Features Implement ModuleImporter ( 3ce4e82 )","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/CHANGELOG/#101-2022-08-18","text":"","title":"1.0.1 (2022-08-18)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/CHANGELOG/#bug-fixes","text":"Ensure CommonJS mode works correctly. ( cf54a0b ), closes #6","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/CHANGELOG/#100-2022-08-17","text":"","title":"1.0.0 (2022-08-17)"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/module-importer/CHANGELOG/#features","text":"Implement ModuleImporter ( 3ce4e82 )","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/","text":"Retry utility by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation or nominate me for a GitHub Star. Description A utility for retrying failed async JavaScript calls based on the error returned. Usage Node.js Install using npm or yarn : npm install @humanwhocodes/retry # or yarn add @humanwhocodes/retry Import into your Node.js project: // CommonJS const { Retrier } = require(\"@humanwhocodes/retry\"); // ESM import { Retrier } from \"@humanwhocodes/retry\"; Deno Install using JSR : deno add @humanwhocodes/retry #or jsr add @humanwhocodes/retry Then import into your Deno project: import { Retrier } from \"@humanwhocodes/retry\"; Bun Install using this command: bun add @humanwhocodes/retry Import into your Bun project: import { Retrier } from \"@humanwhocodes/retry\"; Browser It's recommended to import the minified version to save bandwidth: import { Retrier } from \"https://cdn.skypack.dev/@humanwhocodes/retry?min\"; However, you can also import the unminified version for debugging purposes: import { Retrier } from \"https://cdn.skypack.dev/@humanwhocodes/retry\"; API After importing, create a new instance of Retrier and specify the function to run on the error. This function should return true if you want the call retried and false if not. // this instance will retry if the specific error code is found const retrier = new Retrier(error => { return error.code === \"ENFILE\" || error.code === \"EMFILE\"; }); Then, call the retry() method around the function you'd like to retry, such as: import fs from \"fs/promises\"; const retrier = new Retrier(error => { return error.code === \"ENFILE\" || error.code === \"EMFILE\"; }); const text = await retrier.retry(() => fs.readFile(\"README.md\", \"utf8\")); The retry() method will either pass through the result on success or wait and retry on failure. Any error that isn't caught by the retrier is automatically rejected so the end result is a transparent passing through of both success and failure. You can also pass an AbortSignal to cancel a retry: import fs from \"fs/promises\"; const controller = new AbortController(); const retrier = new Retrier(error => { return error.code === \"ENFILE\" || error.code === \"EMFILE\"; }); const text = await retrier.retry( () => fs.readFile(\"README.md\", \"utf8\"), { signal: controller.signal } ); Developer Setup Fork the repository Clone your fork Run npm install to setup dependencies Run npm test to run tests License Apache 2.0 Prior Art This utility is inspired by, and contains code from graceful-fs .","title":"Retry utility"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#retry-utility","text":"by Nicholas C. Zakas If you find this useful, please consider supporting my work with a donation or nominate me for a GitHub Star.","title":"Retry utility"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#description","text":"A utility for retrying failed async JavaScript calls based on the error returned.","title":"Description"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#usage","text":"","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#nodejs","text":"Install using npm or yarn : npm install @humanwhocodes/retry # or yarn add @humanwhocodes/retry Import into your Node.js project: // CommonJS const { Retrier } = require(\"@humanwhocodes/retry\"); // ESM import { Retrier } from \"@humanwhocodes/retry\";","title":"Node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#deno","text":"Install using JSR : deno add @humanwhocodes/retry #or jsr add @humanwhocodes/retry Then import into your Deno project: import { Retrier } from \"@humanwhocodes/retry\";","title":"Deno"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#bun","text":"Install using this command: bun add @humanwhocodes/retry Import into your Bun project: import { Retrier } from \"@humanwhocodes/retry\";","title":"Bun"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#browser","text":"It's recommended to import the minified version to save bandwidth: import { Retrier } from \"https://cdn.skypack.dev/@humanwhocodes/retry?min\"; However, you can also import the unminified version for debugging purposes: import { Retrier } from \"https://cdn.skypack.dev/@humanwhocodes/retry\";","title":"Browser"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#api","text":"After importing, create a new instance of Retrier and specify the function to run on the error. This function should return true if you want the call retried and false if not. // this instance will retry if the specific error code is found const retrier = new Retrier(error => { return error.code === \"ENFILE\" || error.code === \"EMFILE\"; }); Then, call the retry() method around the function you'd like to retry, such as: import fs from \"fs/promises\"; const retrier = new Retrier(error => { return error.code === \"ENFILE\" || error.code === \"EMFILE\"; }); const text = await retrier.retry(() => fs.readFile(\"README.md\", \"utf8\")); The retry() method will either pass through the result on success or wait and retry on failure. Any error that isn't caught by the retrier is automatically rejected so the end result is a transparent passing through of both success and failure. You can also pass an AbortSignal to cancel a retry: import fs from \"fs/promises\"; const controller = new AbortController(); const retrier = new Retrier(error => { return error.code === \"ENFILE\" || error.code === \"EMFILE\"; }); const text = await retrier.retry( () => fs.readFile(\"README.md\", \"utf8\"), { signal: controller.signal } );","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#developer-setup","text":"Fork the repository Clone your fork Run npm install to setup dependencies Run npm test to run tests","title":"Developer Setup"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#license","text":"Apache 2.0","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40humanwhocodes/retry/#prior-art","text":"This utility is inspired by, and contains code from graceful-fs .","title":"Prior Art"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/gen-mapping/","text":"@jridgewell/gen-mapping Generate source maps gen-mapping allows you to generate a source map during transpilation or minification. With a source map, you're able to trace the original location in the source file, either in Chrome's DevTools or using a library like @jridgewell/trace-mapping . You may already be familiar with the source-map package's SourceMapGenerator . This provides the same addMapping and setSourceContent API. Installation npm install @jridgewell/gen-mapping Usage import { GenMapping, addMapping, setSourceContent, toEncodedMap, toDecodedMap } from '@jridgewell/gen-mapping'; const map = new GenMapping({ file: 'output.js', sourceRoot: 'https://example.com/', }); setSourceContent(map, 'input.js', `function foo() {}`); addMapping(map, { // Lines start at line 1, columns at column 0. generated: { line: 1, column: 0 }, source: 'input.js', original: { line: 1, column: 0 }, }); addMapping(map, { generated: { line: 1, column: 9 }, source: 'input.js', original: { line: 1, column: 9 }, name: 'foo', }); assert.deepEqual(toDecodedMap(map), { version: 3, file: 'output.js', names: ['foo'], sourceRoot: 'https://example.com/', sources: ['input.js'], sourcesContent: ['function foo() {}'], mappings: [ [ [0, 0, 0, 0], [9, 0, 0, 9, 0] ] ], }); assert.deepEqual(toEncodedMap(map), { version: 3, file: 'output.js', names: ['foo'], sourceRoot: 'https://example.com/', sources: ['input.js'], sourcesContent: ['function foo() {}'], mappings: 'AAAA,SAASA', }); Smaller Sourcemaps Not everything needs to be added to a sourcemap, and needless markings can cause signficantly larger file sizes. gen-mapping exposes maybeAddSegment / maybeAddMapping APIs that will intelligently determine if this marking adds useful information. If not, the marking will be skipped. import { maybeAddMapping } from '@jridgewell/gen-mapping'; const map = new GenMapping(); // Adding a sourceless marking at the beginning of a line isn't useful. maybeAddMapping(map, { generated: { line: 1, column: 0 }, }); // Adding a new source marking is useful. maybeAddMapping(map, { generated: { line: 1, column: 0 }, source: 'input.js', original: { line: 1, column: 0 }, }); // But adding another marking pointing to the exact same original location isn't, even if the // generated column changed. maybeAddMapping(map, { generated: { line: 1, column: 9 }, source: 'input.js', original: { line: 1, column: 0 }, }); assert.deepEqual(toEncodedMap(map), { version: 3, names: [], sources: ['input.js'], sourcesContent: [null], mappings: 'AAAA', }); Benchmarks node v18.0.0 amp.js.map Memory Usage: gen-mapping: addSegment 5852872 bytes gen-mapping: addMapping 7716042 bytes source-map-js 6143250 bytes source-map-0.6.1 6124102 bytes source-map-0.8.0 6121173 bytes Smallest memory usage is gen-mapping: addSegment Adding speed: gen-mapping: addSegment x 441 ops/sec \u00b12.07% (90 runs sampled) gen-mapping: addMapping x 350 ops/sec \u00b12.40% (86 runs sampled) source-map-js: addMapping x 169 ops/sec \u00b12.42% (80 runs sampled) source-map-0.6.1: addMapping x 167 ops/sec \u00b12.56% (80 runs sampled) source-map-0.8.0: addMapping x 168 ops/sec \u00b12.52% (80 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 150,824,370 ops/sec \u00b10.07% (102 runs sampled) gen-mapping: encoded output x 663 ops/sec \u00b10.22% (98 runs sampled) source-map-js: encoded output x 197 ops/sec \u00b10.45% (84 runs sampled) source-map-0.6.1: encoded output x 198 ops/sec \u00b10.33% (85 runs sampled) source-map-0.8.0: encoded output x 197 ops/sec \u00b10.06% (93 runs sampled) Fastest is gen-mapping: decoded output *** babel.min.js.map Memory Usage: gen-mapping: addSegment 37578063 bytes gen-mapping: addMapping 37212897 bytes source-map-js 47638527 bytes source-map-0.6.1 47690503 bytes source-map-0.8.0 47470188 bytes Smallest memory usage is gen-mapping: addMapping Adding speed: gen-mapping: addSegment x 31.05 ops/sec \u00b18.31% (43 runs sampled) gen-mapping: addMapping x 29.83 ops/sec \u00b17.36% (51 runs sampled) source-map-js: addMapping x 20.73 ops/sec \u00b16.22% (38 runs sampled) source-map-0.6.1: addMapping x 20.03 ops/sec \u00b110.51% (38 runs sampled) source-map-0.8.0: addMapping x 19.30 ops/sec \u00b18.27% (37 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 381,379,234 ops/sec \u00b10.29% (96 runs sampled) gen-mapping: encoded output x 95.15 ops/sec \u00b12.98% (72 runs sampled) source-map-js: encoded output x 15.20 ops/sec \u00b17.41% (33 runs sampled) source-map-0.6.1: encoded output x 16.36 ops/sec \u00b110.46% (31 runs sampled) source-map-0.8.0: encoded output x 16.06 ops/sec \u00b16.45% (31 runs sampled) Fastest is gen-mapping: decoded output *** preact.js.map Memory Usage: gen-mapping: addSegment 416247 bytes gen-mapping: addMapping 419824 bytes source-map-js 1024619 bytes source-map-0.6.1 1146004 bytes source-map-0.8.0 1113250 bytes Smallest memory usage is gen-mapping: addSegment Adding speed: gen-mapping: addSegment x 13,755 ops/sec \u00b10.15% (98 runs sampled) gen-mapping: addMapping x 13,013 ops/sec \u00b10.11% (101 runs sampled) source-map-js: addMapping x 4,564 ops/sec \u00b10.21% (98 runs sampled) source-map-0.6.1: addMapping x 4,562 ops/sec \u00b10.11% (99 runs sampled) source-map-0.8.0: addMapping x 4,593 ops/sec \u00b10.11% (100 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 379,864,020 ops/sec \u00b10.23% (93 runs sampled) gen-mapping: encoded output x 14,368 ops/sec \u00b14.07% (82 runs sampled) source-map-js: encoded output x 5,261 ops/sec \u00b10.21% (99 runs sampled) source-map-0.6.1: encoded output x 5,124 ops/sec \u00b10.58% (99 runs sampled) source-map-0.8.0: encoded output x 5,434 ops/sec \u00b10.33% (96 runs sampled) Fastest is gen-mapping: decoded output *** react.js.map Memory Usage: gen-mapping: addSegment 975096 bytes gen-mapping: addMapping 1102981 bytes source-map-js 2918836 bytes source-map-0.6.1 2885435 bytes source-map-0.8.0 2874336 bytes Smallest memory usage is gen-mapping: addSegment Adding speed: gen-mapping: addSegment x 4,772 ops/sec \u00b10.15% (100 runs sampled) gen-mapping: addMapping x 4,456 ops/sec \u00b10.13% (97 runs sampled) source-map-js: addMapping x 1,618 ops/sec \u00b10.24% (97 runs sampled) source-map-0.6.1: addMapping x 1,622 ops/sec \u00b10.12% (99 runs sampled) source-map-0.8.0: addMapping x 1,631 ops/sec \u00b10.12% (100 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 379,107,695 ops/sec \u00b10.07% (99 runs sampled) gen-mapping: encoded output x 5,421 ops/sec \u00b11.60% (89 runs sampled) source-map-js: encoded output x 2,113 ops/sec \u00b11.81% (98 runs sampled) source-map-0.6.1: encoded output x 2,126 ops/sec \u00b10.10% (100 runs sampled) source-map-0.8.0: encoded output x 2,176 ops/sec \u00b10.39% (98 runs sampled) Fastest is gen-mapping: decoded output","title":"@jridgewell/gen-mapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/gen-mapping/#jridgewellgen-mapping","text":"Generate source maps gen-mapping allows you to generate a source map during transpilation or minification. With a source map, you're able to trace the original location in the source file, either in Chrome's DevTools or using a library like @jridgewell/trace-mapping . You may already be familiar with the source-map package's SourceMapGenerator . This provides the same addMapping and setSourceContent API.","title":"@jridgewell/gen-mapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/gen-mapping/#installation","text":"npm install @jridgewell/gen-mapping","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/gen-mapping/#usage","text":"import { GenMapping, addMapping, setSourceContent, toEncodedMap, toDecodedMap } from '@jridgewell/gen-mapping'; const map = new GenMapping({ file: 'output.js', sourceRoot: 'https://example.com/', }); setSourceContent(map, 'input.js', `function foo() {}`); addMapping(map, { // Lines start at line 1, columns at column 0. generated: { line: 1, column: 0 }, source: 'input.js', original: { line: 1, column: 0 }, }); addMapping(map, { generated: { line: 1, column: 9 }, source: 'input.js', original: { line: 1, column: 9 }, name: 'foo', }); assert.deepEqual(toDecodedMap(map), { version: 3, file: 'output.js', names: ['foo'], sourceRoot: 'https://example.com/', sources: ['input.js'], sourcesContent: ['function foo() {}'], mappings: [ [ [0, 0, 0, 0], [9, 0, 0, 9, 0] ] ], }); assert.deepEqual(toEncodedMap(map), { version: 3, file: 'output.js', names: ['foo'], sourceRoot: 'https://example.com/', sources: ['input.js'], sourcesContent: ['function foo() {}'], mappings: 'AAAA,SAASA', });","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/gen-mapping/#smaller-sourcemaps","text":"Not everything needs to be added to a sourcemap, and needless markings can cause signficantly larger file sizes. gen-mapping exposes maybeAddSegment / maybeAddMapping APIs that will intelligently determine if this marking adds useful information. If not, the marking will be skipped. import { maybeAddMapping } from '@jridgewell/gen-mapping'; const map = new GenMapping(); // Adding a sourceless marking at the beginning of a line isn't useful. maybeAddMapping(map, { generated: { line: 1, column: 0 }, }); // Adding a new source marking is useful. maybeAddMapping(map, { generated: { line: 1, column: 0 }, source: 'input.js', original: { line: 1, column: 0 }, }); // But adding another marking pointing to the exact same original location isn't, even if the // generated column changed. maybeAddMapping(map, { generated: { line: 1, column: 9 }, source: 'input.js', original: { line: 1, column: 0 }, }); assert.deepEqual(toEncodedMap(map), { version: 3, names: [], sources: ['input.js'], sourcesContent: [null], mappings: 'AAAA', });","title":"Smaller Sourcemaps"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/gen-mapping/#benchmarks","text":"node v18.0.0 amp.js.map Memory Usage: gen-mapping: addSegment 5852872 bytes gen-mapping: addMapping 7716042 bytes source-map-js 6143250 bytes source-map-0.6.1 6124102 bytes source-map-0.8.0 6121173 bytes Smallest memory usage is gen-mapping: addSegment Adding speed: gen-mapping: addSegment x 441 ops/sec \u00b12.07% (90 runs sampled) gen-mapping: addMapping x 350 ops/sec \u00b12.40% (86 runs sampled) source-map-js: addMapping x 169 ops/sec \u00b12.42% (80 runs sampled) source-map-0.6.1: addMapping x 167 ops/sec \u00b12.56% (80 runs sampled) source-map-0.8.0: addMapping x 168 ops/sec \u00b12.52% (80 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 150,824,370 ops/sec \u00b10.07% (102 runs sampled) gen-mapping: encoded output x 663 ops/sec \u00b10.22% (98 runs sampled) source-map-js: encoded output x 197 ops/sec \u00b10.45% (84 runs sampled) source-map-0.6.1: encoded output x 198 ops/sec \u00b10.33% (85 runs sampled) source-map-0.8.0: encoded output x 197 ops/sec \u00b10.06% (93 runs sampled) Fastest is gen-mapping: decoded output *** babel.min.js.map Memory Usage: gen-mapping: addSegment 37578063 bytes gen-mapping: addMapping 37212897 bytes source-map-js 47638527 bytes source-map-0.6.1 47690503 bytes source-map-0.8.0 47470188 bytes Smallest memory usage is gen-mapping: addMapping Adding speed: gen-mapping: addSegment x 31.05 ops/sec \u00b18.31% (43 runs sampled) gen-mapping: addMapping x 29.83 ops/sec \u00b17.36% (51 runs sampled) source-map-js: addMapping x 20.73 ops/sec \u00b16.22% (38 runs sampled) source-map-0.6.1: addMapping x 20.03 ops/sec \u00b110.51% (38 runs sampled) source-map-0.8.0: addMapping x 19.30 ops/sec \u00b18.27% (37 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 381,379,234 ops/sec \u00b10.29% (96 runs sampled) gen-mapping: encoded output x 95.15 ops/sec \u00b12.98% (72 runs sampled) source-map-js: encoded output x 15.20 ops/sec \u00b17.41% (33 runs sampled) source-map-0.6.1: encoded output x 16.36 ops/sec \u00b110.46% (31 runs sampled) source-map-0.8.0: encoded output x 16.06 ops/sec \u00b16.45% (31 runs sampled) Fastest is gen-mapping: decoded output *** preact.js.map Memory Usage: gen-mapping: addSegment 416247 bytes gen-mapping: addMapping 419824 bytes source-map-js 1024619 bytes source-map-0.6.1 1146004 bytes source-map-0.8.0 1113250 bytes Smallest memory usage is gen-mapping: addSegment Adding speed: gen-mapping: addSegment x 13,755 ops/sec \u00b10.15% (98 runs sampled) gen-mapping: addMapping x 13,013 ops/sec \u00b10.11% (101 runs sampled) source-map-js: addMapping x 4,564 ops/sec \u00b10.21% (98 runs sampled) source-map-0.6.1: addMapping x 4,562 ops/sec \u00b10.11% (99 runs sampled) source-map-0.8.0: addMapping x 4,593 ops/sec \u00b10.11% (100 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 379,864,020 ops/sec \u00b10.23% (93 runs sampled) gen-mapping: encoded output x 14,368 ops/sec \u00b14.07% (82 runs sampled) source-map-js: encoded output x 5,261 ops/sec \u00b10.21% (99 runs sampled) source-map-0.6.1: encoded output x 5,124 ops/sec \u00b10.58% (99 runs sampled) source-map-0.8.0: encoded output x 5,434 ops/sec \u00b10.33% (96 runs sampled) Fastest is gen-mapping: decoded output *** react.js.map Memory Usage: gen-mapping: addSegment 975096 bytes gen-mapping: addMapping 1102981 bytes source-map-js 2918836 bytes source-map-0.6.1 2885435 bytes source-map-0.8.0 2874336 bytes Smallest memory usage is gen-mapping: addSegment Adding speed: gen-mapping: addSegment x 4,772 ops/sec \u00b10.15% (100 runs sampled) gen-mapping: addMapping x 4,456 ops/sec \u00b10.13% (97 runs sampled) source-map-js: addMapping x 1,618 ops/sec \u00b10.24% (97 runs sampled) source-map-0.6.1: addMapping x 1,622 ops/sec \u00b10.12% (99 runs sampled) source-map-0.8.0: addMapping x 1,631 ops/sec \u00b10.12% (100 runs sampled) Fastest is gen-mapping: addSegment Generate speed: gen-mapping: decoded output x 379,107,695 ops/sec \u00b10.07% (99 runs sampled) gen-mapping: encoded output x 5,421 ops/sec \u00b11.60% (89 runs sampled) source-map-js: encoded output x 2,113 ops/sec \u00b11.81% (98 runs sampled) source-map-0.6.1: encoded output x 2,126 ops/sec \u00b10.10% (100 runs sampled) source-map-0.8.0: encoded output x 2,176 ops/sec \u00b10.39% (98 runs sampled) Fastest is gen-mapping: decoded output","title":"Benchmarks"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/resolve-uri/","text":"@jridgewell/resolve-uri Resolve a URI relative to an optional base URI Resolve any combination of absolute URIs, protocol-realtive URIs, absolute paths, or relative paths. Installation npm install @jridgewell/resolve-uri Usage function resolve(input: string, base?: string): string; import resolve from '@jridgewell/resolve-uri'; resolve('foo', 'https://example.com'); // => 'https://example.com/foo' Input Base Resolution Explanation https://example.com any https://example.com/ Input is normalized only //example.com https://base.com/ https://example.com/ Input inherits the base's protocol //example.com rest //example.com/ Input is normalized only /example https://base.com/ https://base.com/example Input inherits the base's origin /example //base.com/ //base.com/example Input inherits the base's host and remains protocol relative /example rest /example Input is normalized only example https://base.com/dir/ https://base.com/dir/example Input is joined with the base example https://base.com/file https://base.com/example Input is joined with the base without its file example //base.com/dir/ //base.com/dir/example Input is joined with the base's last directory example //base.com/file //base.com/example Input is joined with the base without its file example /base/dir/ /base/dir/example Input is joined with the base's last directory example /base/file /base/example Input is joined with the base without its file example base/dir/ base/dir/example Input is joined with the base's last directory example base/file base/example Input is joined with the base without its file","title":"@jridgewell/resolve-uri"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/resolve-uri/#jridgewellresolve-uri","text":"Resolve a URI relative to an optional base URI Resolve any combination of absolute URIs, protocol-realtive URIs, absolute paths, or relative paths.","title":"@jridgewell/resolve-uri"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/resolve-uri/#installation","text":"npm install @jridgewell/resolve-uri","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/resolve-uri/#usage","text":"function resolve(input: string, base?: string): string; import resolve from '@jridgewell/resolve-uri'; resolve('foo', 'https://example.com'); // => 'https://example.com/foo' Input Base Resolution Explanation https://example.com any https://example.com/ Input is normalized only //example.com https://base.com/ https://example.com/ Input inherits the base's protocol //example.com rest //example.com/ Input is normalized only /example https://base.com/ https://base.com/example Input inherits the base's origin /example //base.com/ //base.com/example Input inherits the base's host and remains protocol relative /example rest /example Input is normalized only example https://base.com/dir/ https://base.com/dir/example Input is joined with the base example https://base.com/file https://base.com/example Input is joined with the base without its file example //base.com/dir/ //base.com/dir/example Input is joined with the base's last directory example //base.com/file //base.com/example Input is joined with the base without its file example /base/dir/ /base/dir/example Input is joined with the base's last directory example /base/file /base/example Input is joined with the base without its file example base/dir/ base/dir/example Input is joined with the base's last directory example base/file base/example Input is joined with the base without its file","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/set-array/","text":"@jridgewell/set-array Like a Set, but provides the index of the key in the backing array This is designed to allow synchronizing a second array with the contents of the backing array, like how in a sourcemap sourcesContent[i] is the source content associated with source[i] , and there are never duplicates. Installation npm install @jridgewell/set-array Usage import { SetArray, get, put, pop } from '@jridgewell/set-array'; const sa = new SetArray(); let index = put(sa, 'first'); assert.strictEqual(index, 0); index = put(sa, 'second'); assert.strictEqual(index, 1); assert.deepEqual(sa.array, [ 'first', 'second' ]); index = get(sa, 'first'); assert.strictEqual(index, 0); pop(sa); index = get(sa, 'second'); assert.strictEqual(index, undefined); assert.deepEqual(sa.array, [ 'first' ]);","title":"@jridgewell/set-array"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/set-array/#jridgewellset-array","text":"Like a Set, but provides the index of the key in the backing array This is designed to allow synchronizing a second array with the contents of the backing array, like how in a sourcemap sourcesContent[i] is the source content associated with source[i] , and there are never duplicates.","title":"@jridgewell/set-array"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/set-array/#installation","text":"npm install @jridgewell/set-array","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/set-array/#usage","text":"import { SetArray, get, put, pop } from '@jridgewell/set-array'; const sa = new SetArray(); let index = put(sa, 'first'); assert.strictEqual(index, 0); index = put(sa, 'second'); assert.strictEqual(index, 1); assert.deepEqual(sa.array, [ 'first', 'second' ]); index = get(sa, 'first'); assert.strictEqual(index, 0); pop(sa); index = get(sa, 'second'); assert.strictEqual(index, undefined); assert.deepEqual(sa.array, [ 'first' ]);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/","text":"@jridgewell/sourcemap-codec Encode/decode the mappings property of a sourcemap . Why? Sourcemaps are difficult to generate and manipulate, because the mappings property \u2013 the part that actually links the generated code back to the original source \u2013 is encoded using an obscure method called Variable-length quantity . On top of that, each segment in the mapping contains offsets rather than absolute indices, which means that you can't look at a segment in isolation \u2013 you have to understand the whole sourcemap. This package makes the process slightly easier. Installation npm install @jridgewell/sourcemap-codec Usage import { encode, decode } from '@jridgewell/sourcemap-codec'; var decoded = decode( ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' ); assert.deepEqual( decoded, [ // the first line (of the generated code) has no mappings, // as shown by the starting semi-colon (which separates lines) [], // the second line contains four (comma-separated) segments [ // segments are encoded as you'd expect: // [ generatedCodeColumn, sourceIndex, sourceCodeLine, sourceCodeColumn, nameIndex ] // i.e. the first segment begins at column 2, and maps back to the second column // of the second line (both zero-based) of the 0th source, and uses the 0th // name in the `map.names` array [ 2, 0, 2, 2, 0 ], // the remaining segments are 4-length rather than 5-length, // because they don't map a name [ 4, 0, 2, 4 ], [ 6, 0, 2, 5 ], [ 7, 0, 2, 7 ] ], // the final line contains two segments [ [ 2, 1, 10, 19 ], [ 12, 1, 11, 20 ] ] ]); var encoded = encode( decoded ); assert.equal( encoded, ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' ); Benchmarks node v20.10.0 amp.js.map - 45120 segments Decode Memory Usage: local code 5815135 bytes @jridgewell/sourcemap-codec 1.4.15 5868160 bytes sourcemap-codec 5492584 bytes source-map-0.6.1 13569984 bytes source-map-0.8.0 6390584 bytes chrome dev tools 8011136 bytes Smallest memory usage is sourcemap-codec Decode speed: decode: local code x 492 ops/sec \u00b11.22% (90 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 499 ops/sec \u00b11.16% (89 runs sampled) decode: sourcemap-codec x 376 ops/sec \u00b11.66% (89 runs sampled) decode: source-map-0.6.1 x 34.99 ops/sec \u00b10.94% (48 runs sampled) decode: source-map-0.8.0 x 351 ops/sec \u00b10.07% (95 runs sampled) chrome dev tools x 165 ops/sec \u00b10.91% (86 runs sampled) Fastest is decode: @jridgewell/sourcemap-codec 1.4.15 Encode Memory Usage: local code 444248 bytes @jridgewell/sourcemap-codec 1.4.15 623024 bytes sourcemap-codec 8696280 bytes source-map-0.6.1 8745176 bytes source-map-0.8.0 8736624 bytes Smallest memory usage is local code Encode speed: encode: local code x 796 ops/sec \u00b10.11% (97 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 795 ops/sec \u00b10.25% (98 runs sampled) encode: sourcemap-codec x 231 ops/sec \u00b10.83% (86 runs sampled) encode: source-map-0.6.1 x 166 ops/sec \u00b10.57% (86 runs sampled) encode: source-map-0.8.0 x 203 ops/sec \u00b10.45% (88 runs sampled) Fastest is encode: local code,encode: @jridgewell/sourcemap-codec 1.4.15 *** babel.min.js.map - 347793 segments Decode Memory Usage: local code 35424960 bytes @jridgewell/sourcemap-codec 1.4.15 35424696 bytes sourcemap-codec 36033464 bytes source-map-0.6.1 62253704 bytes source-map-0.8.0 43843920 bytes chrome dev tools 45111400 bytes Smallest memory usage is @jridgewell/sourcemap-codec 1.4.15 Decode speed: decode: local code x 38.18 ops/sec \u00b15.44% (52 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 38.36 ops/sec \u00b15.02% (52 runs sampled) decode: sourcemap-codec x 34.05 ops/sec \u00b14.45% (47 runs sampled) decode: source-map-0.6.1 x 4.31 ops/sec \u00b12.76% (15 runs sampled) decode: source-map-0.8.0 x 55.60 ops/sec \u00b10.13% (73 runs sampled) chrome dev tools x 16.94 ops/sec \u00b13.78% (46 runs sampled) Fastest is decode: source-map-0.8.0 Encode Memory Usage: local code 2606016 bytes @jridgewell/sourcemap-codec 1.4.15 2626440 bytes sourcemap-codec 21152576 bytes source-map-0.6.1 25023928 bytes source-map-0.8.0 25256448 bytes Smallest memory usage is local code Encode speed: encode: local code x 127 ops/sec \u00b10.18% (83 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 128 ops/sec \u00b10.26% (83 runs sampled) encode: sourcemap-codec x 29.31 ops/sec \u00b12.55% (53 runs sampled) encode: source-map-0.6.1 x 18.85 ops/sec \u00b13.19% (36 runs sampled) encode: source-map-0.8.0 x 19.34 ops/sec \u00b11.97% (36 runs sampled) Fastest is encode: @jridgewell/sourcemap-codec 1.4.15 *** preact.js.map - 1992 segments Decode Memory Usage: local code 261696 bytes @jridgewell/sourcemap-codec 1.4.15 244296 bytes sourcemap-codec 302816 bytes source-map-0.6.1 939176 bytes source-map-0.8.0 336 bytes chrome dev tools 587368 bytes Smallest memory usage is source-map-0.8.0 Decode speed: decode: local code x 17,782 ops/sec \u00b10.32% (97 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 17,863 ops/sec \u00b10.40% (100 runs sampled) decode: sourcemap-codec x 12,453 ops/sec \u00b10.27% (101 runs sampled) decode: source-map-0.6.1 x 1,288 ops/sec \u00b11.05% (96 runs sampled) decode: source-map-0.8.0 x 9,289 ops/sec \u00b10.27% (101 runs sampled) chrome dev tools x 4,769 ops/sec \u00b10.18% (100 runs sampled) Fastest is decode: @jridgewell/sourcemap-codec 1.4.15 Encode Memory Usage: local code 262944 bytes @jridgewell/sourcemap-codec 1.4.15 25544 bytes sourcemap-codec 323048 bytes source-map-0.6.1 507808 bytes source-map-0.8.0 507480 bytes Smallest memory usage is @jridgewell/sourcemap-codec 1.4.15 Encode speed: encode: local code x 24,207 ops/sec \u00b10.79% (95 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 24,288 ops/sec \u00b10.48% (96 runs sampled) encode: sourcemap-codec x 6,761 ops/sec \u00b10.21% (100 runs sampled) encode: source-map-0.6.1 x 5,374 ops/sec \u00b10.17% (99 runs sampled) encode: source-map-0.8.0 x 5,633 ops/sec \u00b10.32% (99 runs sampled) Fastest is encode: @jridgewell/sourcemap-codec 1.4.15,encode: local code *** react.js.map - 5726 segments Decode Memory Usage: local code 678816 bytes @jridgewell/sourcemap-codec 1.4.15 678816 bytes sourcemap-codec 816400 bytes source-map-0.6.1 2288864 bytes source-map-0.8.0 721360 bytes chrome dev tools 1012512 bytes Smallest memory usage is local code Decode speed: decode: local code x 6,178 ops/sec \u00b10.19% (98 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 6,261 ops/sec \u00b10.22% (100 runs sampled) decode: sourcemap-codec x 4,472 ops/sec \u00b10.90% (99 runs sampled) decode: source-map-0.6.1 x 449 ops/sec \u00b10.31% (95 runs sampled) decode: source-map-0.8.0 x 3,219 ops/sec \u00b10.13% (100 runs sampled) chrome dev tools x 1,743 ops/sec \u00b10.20% (99 runs sampled) Fastest is decode: @jridgewell/sourcemap-codec 1.4.15 Encode Memory Usage: local code 140960 bytes @jridgewell/sourcemap-codec 1.4.15 159808 bytes sourcemap-codec 969304 bytes source-map-0.6.1 930520 bytes source-map-0.8.0 930248 bytes Smallest memory usage is local code Encode speed: encode: local code x 8,013 ops/sec \u00b10.19% (100 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 7,989 ops/sec \u00b10.20% (101 runs sampled) encode: sourcemap-codec x 2,472 ops/sec \u00b10.21% (99 runs sampled) encode: source-map-0.6.1 x 2,200 ops/sec \u00b10.17% (99 runs sampled) encode: source-map-0.8.0 x 2,220 ops/sec \u00b10.37% (99 runs sampled) Fastest is encode: local code *** vscode.map - 2141001 segments Decode Memory Usage: local code 198955264 bytes @jridgewell/sourcemap-codec 1.4.15 199175352 bytes sourcemap-codec 199102688 bytes source-map-0.6.1 386323432 bytes source-map-0.8.0 244116432 bytes chrome dev tools 293734280 bytes Smallest memory usage is local code Decode speed: decode: local code x 3.90 ops/sec \u00b122.21% (15 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 3.95 ops/sec \u00b123.53% (15 runs sampled) decode: sourcemap-codec x 3.82 ops/sec \u00b117.94% (14 runs sampled) decode: source-map-0.6.1 x 0.61 ops/sec \u00b17.81% (6 runs sampled) decode: source-map-0.8.0 x 9.54 ops/sec \u00b10.28% (28 runs sampled) chrome dev tools x 2.18 ops/sec \u00b110.58% (10 runs sampled) Fastest is decode: source-map-0.8.0 Encode Memory Usage: local code 13509880 bytes @jridgewell/sourcemap-codec 1.4.15 13537648 bytes sourcemap-codec 32540104 bytes source-map-0.6.1 127531040 bytes source-map-0.8.0 127535312 bytes Smallest memory usage is local code Encode speed: encode: local code x 20.10 ops/sec \u00b10.19% (38 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 20.26 ops/sec \u00b10.32% (38 runs sampled) encode: sourcemap-codec x 5.44 ops/sec \u00b11.64% (18 runs sampled) encode: source-map-0.6.1 x 2.30 ops/sec \u00b14.79% (10 runs sampled) encode: source-map-0.8.0 x 2.46 ops/sec \u00b16.53% (10 runs sampled) Fastest is encode: @jridgewell/sourcemap-codec 1.4.15 License MIT","title":"@jridgewell/sourcemap-codec"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/#jridgewellsourcemap-codec","text":"Encode/decode the mappings property of a sourcemap .","title":"@jridgewell/sourcemap-codec"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/#why","text":"Sourcemaps are difficult to generate and manipulate, because the mappings property \u2013 the part that actually links the generated code back to the original source \u2013 is encoded using an obscure method called Variable-length quantity . On top of that, each segment in the mapping contains offsets rather than absolute indices, which means that you can't look at a segment in isolation \u2013 you have to understand the whole sourcemap. This package makes the process slightly easier.","title":"Why?"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/#installation","text":"npm install @jridgewell/sourcemap-codec","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/#usage","text":"import { encode, decode } from '@jridgewell/sourcemap-codec'; var decoded = decode( ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' ); assert.deepEqual( decoded, [ // the first line (of the generated code) has no mappings, // as shown by the starting semi-colon (which separates lines) [], // the second line contains four (comma-separated) segments [ // segments are encoded as you'd expect: // [ generatedCodeColumn, sourceIndex, sourceCodeLine, sourceCodeColumn, nameIndex ] // i.e. the first segment begins at column 2, and maps back to the second column // of the second line (both zero-based) of the 0th source, and uses the 0th // name in the `map.names` array [ 2, 0, 2, 2, 0 ], // the remaining segments are 4-length rather than 5-length, // because they don't map a name [ 4, 0, 2, 4 ], [ 6, 0, 2, 5 ], [ 7, 0, 2, 7 ] ], // the final line contains two segments [ [ 2, 1, 10, 19 ], [ 12, 1, 11, 20 ] ] ]); var encoded = encode( decoded ); assert.equal( encoded, ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/#benchmarks","text":"node v20.10.0 amp.js.map - 45120 segments Decode Memory Usage: local code 5815135 bytes @jridgewell/sourcemap-codec 1.4.15 5868160 bytes sourcemap-codec 5492584 bytes source-map-0.6.1 13569984 bytes source-map-0.8.0 6390584 bytes chrome dev tools 8011136 bytes Smallest memory usage is sourcemap-codec Decode speed: decode: local code x 492 ops/sec \u00b11.22% (90 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 499 ops/sec \u00b11.16% (89 runs sampled) decode: sourcemap-codec x 376 ops/sec \u00b11.66% (89 runs sampled) decode: source-map-0.6.1 x 34.99 ops/sec \u00b10.94% (48 runs sampled) decode: source-map-0.8.0 x 351 ops/sec \u00b10.07% (95 runs sampled) chrome dev tools x 165 ops/sec \u00b10.91% (86 runs sampled) Fastest is decode: @jridgewell/sourcemap-codec 1.4.15 Encode Memory Usage: local code 444248 bytes @jridgewell/sourcemap-codec 1.4.15 623024 bytes sourcemap-codec 8696280 bytes source-map-0.6.1 8745176 bytes source-map-0.8.0 8736624 bytes Smallest memory usage is local code Encode speed: encode: local code x 796 ops/sec \u00b10.11% (97 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 795 ops/sec \u00b10.25% (98 runs sampled) encode: sourcemap-codec x 231 ops/sec \u00b10.83% (86 runs sampled) encode: source-map-0.6.1 x 166 ops/sec \u00b10.57% (86 runs sampled) encode: source-map-0.8.0 x 203 ops/sec \u00b10.45% (88 runs sampled) Fastest is encode: local code,encode: @jridgewell/sourcemap-codec 1.4.15 *** babel.min.js.map - 347793 segments Decode Memory Usage: local code 35424960 bytes @jridgewell/sourcemap-codec 1.4.15 35424696 bytes sourcemap-codec 36033464 bytes source-map-0.6.1 62253704 bytes source-map-0.8.0 43843920 bytes chrome dev tools 45111400 bytes Smallest memory usage is @jridgewell/sourcemap-codec 1.4.15 Decode speed: decode: local code x 38.18 ops/sec \u00b15.44% (52 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 38.36 ops/sec \u00b15.02% (52 runs sampled) decode: sourcemap-codec x 34.05 ops/sec \u00b14.45% (47 runs sampled) decode: source-map-0.6.1 x 4.31 ops/sec \u00b12.76% (15 runs sampled) decode: source-map-0.8.0 x 55.60 ops/sec \u00b10.13% (73 runs sampled) chrome dev tools x 16.94 ops/sec \u00b13.78% (46 runs sampled) Fastest is decode: source-map-0.8.0 Encode Memory Usage: local code 2606016 bytes @jridgewell/sourcemap-codec 1.4.15 2626440 bytes sourcemap-codec 21152576 bytes source-map-0.6.1 25023928 bytes source-map-0.8.0 25256448 bytes Smallest memory usage is local code Encode speed: encode: local code x 127 ops/sec \u00b10.18% (83 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 128 ops/sec \u00b10.26% (83 runs sampled) encode: sourcemap-codec x 29.31 ops/sec \u00b12.55% (53 runs sampled) encode: source-map-0.6.1 x 18.85 ops/sec \u00b13.19% (36 runs sampled) encode: source-map-0.8.0 x 19.34 ops/sec \u00b11.97% (36 runs sampled) Fastest is encode: @jridgewell/sourcemap-codec 1.4.15 *** preact.js.map - 1992 segments Decode Memory Usage: local code 261696 bytes @jridgewell/sourcemap-codec 1.4.15 244296 bytes sourcemap-codec 302816 bytes source-map-0.6.1 939176 bytes source-map-0.8.0 336 bytes chrome dev tools 587368 bytes Smallest memory usage is source-map-0.8.0 Decode speed: decode: local code x 17,782 ops/sec \u00b10.32% (97 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 17,863 ops/sec \u00b10.40% (100 runs sampled) decode: sourcemap-codec x 12,453 ops/sec \u00b10.27% (101 runs sampled) decode: source-map-0.6.1 x 1,288 ops/sec \u00b11.05% (96 runs sampled) decode: source-map-0.8.0 x 9,289 ops/sec \u00b10.27% (101 runs sampled) chrome dev tools x 4,769 ops/sec \u00b10.18% (100 runs sampled) Fastest is decode: @jridgewell/sourcemap-codec 1.4.15 Encode Memory Usage: local code 262944 bytes @jridgewell/sourcemap-codec 1.4.15 25544 bytes sourcemap-codec 323048 bytes source-map-0.6.1 507808 bytes source-map-0.8.0 507480 bytes Smallest memory usage is @jridgewell/sourcemap-codec 1.4.15 Encode speed: encode: local code x 24,207 ops/sec \u00b10.79% (95 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 24,288 ops/sec \u00b10.48% (96 runs sampled) encode: sourcemap-codec x 6,761 ops/sec \u00b10.21% (100 runs sampled) encode: source-map-0.6.1 x 5,374 ops/sec \u00b10.17% (99 runs sampled) encode: source-map-0.8.0 x 5,633 ops/sec \u00b10.32% (99 runs sampled) Fastest is encode: @jridgewell/sourcemap-codec 1.4.15,encode: local code *** react.js.map - 5726 segments Decode Memory Usage: local code 678816 bytes @jridgewell/sourcemap-codec 1.4.15 678816 bytes sourcemap-codec 816400 bytes source-map-0.6.1 2288864 bytes source-map-0.8.0 721360 bytes chrome dev tools 1012512 bytes Smallest memory usage is local code Decode speed: decode: local code x 6,178 ops/sec \u00b10.19% (98 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 6,261 ops/sec \u00b10.22% (100 runs sampled) decode: sourcemap-codec x 4,472 ops/sec \u00b10.90% (99 runs sampled) decode: source-map-0.6.1 x 449 ops/sec \u00b10.31% (95 runs sampled) decode: source-map-0.8.0 x 3,219 ops/sec \u00b10.13% (100 runs sampled) chrome dev tools x 1,743 ops/sec \u00b10.20% (99 runs sampled) Fastest is decode: @jridgewell/sourcemap-codec 1.4.15 Encode Memory Usage: local code 140960 bytes @jridgewell/sourcemap-codec 1.4.15 159808 bytes sourcemap-codec 969304 bytes source-map-0.6.1 930520 bytes source-map-0.8.0 930248 bytes Smallest memory usage is local code Encode speed: encode: local code x 8,013 ops/sec \u00b10.19% (100 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 7,989 ops/sec \u00b10.20% (101 runs sampled) encode: sourcemap-codec x 2,472 ops/sec \u00b10.21% (99 runs sampled) encode: source-map-0.6.1 x 2,200 ops/sec \u00b10.17% (99 runs sampled) encode: source-map-0.8.0 x 2,220 ops/sec \u00b10.37% (99 runs sampled) Fastest is encode: local code *** vscode.map - 2141001 segments Decode Memory Usage: local code 198955264 bytes @jridgewell/sourcemap-codec 1.4.15 199175352 bytes sourcemap-codec 199102688 bytes source-map-0.6.1 386323432 bytes source-map-0.8.0 244116432 bytes chrome dev tools 293734280 bytes Smallest memory usage is local code Decode speed: decode: local code x 3.90 ops/sec \u00b122.21% (15 runs sampled) decode: @jridgewell/sourcemap-codec 1.4.15 x 3.95 ops/sec \u00b123.53% (15 runs sampled) decode: sourcemap-codec x 3.82 ops/sec \u00b117.94% (14 runs sampled) decode: source-map-0.6.1 x 0.61 ops/sec \u00b17.81% (6 runs sampled) decode: source-map-0.8.0 x 9.54 ops/sec \u00b10.28% (28 runs sampled) chrome dev tools x 2.18 ops/sec \u00b110.58% (10 runs sampled) Fastest is decode: source-map-0.8.0 Encode Memory Usage: local code 13509880 bytes @jridgewell/sourcemap-codec 1.4.15 13537648 bytes sourcemap-codec 32540104 bytes source-map-0.6.1 127531040 bytes source-map-0.8.0 127535312 bytes Smallest memory usage is local code Encode speed: encode: local code x 20.10 ops/sec \u00b10.19% (38 runs sampled) encode: @jridgewell/sourcemap-codec 1.4.15 x 20.26 ops/sec \u00b10.32% (38 runs sampled) encode: sourcemap-codec x 5.44 ops/sec \u00b11.64% (18 runs sampled) encode: source-map-0.6.1 x 2.30 ops/sec \u00b14.79% (10 runs sampled) encode: source-map-0.8.0 x 2.46 ops/sec \u00b16.53% (10 runs sampled) Fastest is encode: @jridgewell/sourcemap-codec 1.4.15","title":"Benchmarks"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/sourcemap-codec/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/trace-mapping/","text":"@jridgewell/trace-mapping Trace the original position through a source map trace-mapping allows you to take the line and column of an output file and trace it to the original location in the source file through a source map. You may already be familiar with the source-map package's SourceMapConsumer . This provides the same originalPositionFor and generatedPositionFor API, without requiring WASM. Installation npm install @jridgewell/trace-mapping Usage import { TraceMap, originalPositionFor, generatedPositionFor, sourceContentFor, isIgnored, } from '@jridgewell/trace-mapping'; const tracer = new TraceMap({ version: 3, sources: ['input.js'], sourcesContent: ['content of input.js'], names: ['foo'], mappings: 'KAyCIA', ignoreList: [], }); // Lines start at line 1, columns at column 0. const traced = originalPositionFor(tracer, { line: 1, column: 5 }); assert.deepEqual(traced, { source: 'input.js', line: 42, column: 4, name: 'foo', }); const content = sourceContentFor(tracer, traced.source); assert.strictEqual(content, 'content for input.js'); const generated = generatedPositionFor(tracer, { source: 'input.js', line: 42, column: 4, }); assert.deepEqual(generated, { line: 1, column: 5, }); const ignored = isIgnored(tracer, 'input.js'); assert.equal(ignored, false); We also provide a lower level API to get the actual segment that matches our line and column. Unlike originalPositionFor , traceSegment uses a 0-base for line : import { traceSegment } from '@jridgewell/trace-mapping'; // line is 0-base. const traced = traceSegment(tracer, /* line */ 0, /* column */ 5); // Segments are [outputColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex] // Again, line is 0-base and so is sourceLine assert.deepEqual(traced, [5, 0, 41, 4, 0]); SectionedSourceMaps The sourcemap spec defines a special sections field that's designed to handle concatenation of output code with associated sourcemaps. This type of sourcemap is rarely used (no major build tool produces it), but if you are hand coding a concatenation you may need it. We provide an AnyMap helper that can receive either a regular sourcemap or a SectionedSourceMap and returns a TraceMap instance: import { AnyMap } from '@jridgewell/trace-mapping'; const fooOutput = 'foo'; const barOutput = 'bar'; const output = [fooOutput, barOutput].join('\\n'); const sectioned = new AnyMap({ version: 3, sections: [ { // 0-base line and column offset: { line: 0, column: 0 }, // fooOutput's sourcemap map: { version: 3, sources: ['foo.js'], names: ['foo'], mappings: 'AAAAA', }, }, { // barOutput's sourcemap will not affect the first line, only the second offset: { line: 1, column: 0 }, map: { version: 3, sources: ['bar.js'], names: ['bar'], mappings: 'AAAAA', }, }, ], }); const traced = originalPositionFor(sectioned, { line: 2, column: 0, }); assert.deepEqual(traced, { source: 'bar.js', line: 1, column: 0, name: 'bar', }); Benchmarks node v18.0.0 amp.js.map - 45120 segments Memory Usage: trace-mapping decoded 562400 bytes trace-mapping encoded 5706544 bytes source-map-js 10717664 bytes source-map-0.6.1 17446384 bytes source-map-0.8.0 9701757 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 180 ops/sec \u00b10.34% (85 runs sampled) trace-mapping: encoded JSON input x 364 ops/sec \u00b11.77% (89 runs sampled) trace-mapping: decoded Object input x 3,116 ops/sec \u00b10.50% (96 runs sampled) trace-mapping: encoded Object input x 410 ops/sec \u00b12.62% (85 runs sampled) source-map-js: encoded Object input x 84.23 ops/sec \u00b10.91% (73 runs sampled) source-map-0.6.1: encoded Object input x 37.21 ops/sec \u00b12.08% (51 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 3,952,212 ops/sec \u00b10.17% (98 runs sampled) trace-mapping: encoded originalPositionFor x 3,487,468 ops/sec \u00b11.58% (90 runs sampled) source-map-js: encoded originalPositionFor x 827,730 ops/sec \u00b10.78% (97 runs sampled) source-map-0.6.1: encoded originalPositionFor x 748,991 ops/sec \u00b10.53% (94 runs sampled) source-map-0.8.0: encoded originalPositionFor x 2,532,894 ops/sec \u00b10.57% (95 runs sampled) Fastest is trace-mapping: decoded originalPositionFor *** babel.min.js.map - 347793 segments Memory Usage: trace-mapping decoded 89832 bytes trace-mapping encoded 35474640 bytes source-map-js 51257176 bytes source-map-0.6.1 63515664 bytes source-map-0.8.0 42933752 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 15.41 ops/sec \u00b18.65% (34 runs sampled) trace-mapping: encoded JSON input x 28.20 ops/sec \u00b112.87% (42 runs sampled) trace-mapping: decoded Object input x 964 ops/sec \u00b10.36% (99 runs sampled) trace-mapping: encoded Object input x 31.77 ops/sec \u00b113.79% (45 runs sampled) source-map-js: encoded Object input x 6.45 ops/sec \u00b15.16% (21 runs sampled) source-map-0.6.1: encoded Object input x 4.07 ops/sec \u00b15.24% (15 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 7,183,038 ops/sec \u00b10.58% (95 runs sampled) trace-mapping: encoded originalPositionFor x 5,192,185 ops/sec \u00b10.41% (100 runs sampled) source-map-js: encoded originalPositionFor x 4,259,489 ops/sec \u00b10.79% (94 runs sampled) source-map-0.6.1: encoded originalPositionFor x 3,742,629 ops/sec \u00b10.71% (95 runs sampled) source-map-0.8.0: encoded originalPositionFor x 6,270,211 ops/sec \u00b10.64% (94 runs sampled) Fastest is trace-mapping: decoded originalPositionFor *** preact.js.map - 1992 segments Memory Usage: trace-mapping decoded 37128 bytes trace-mapping encoded 247280 bytes source-map-js 1143536 bytes source-map-0.6.1 1290992 bytes source-map-0.8.0 96544 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 3,483 ops/sec \u00b10.30% (98 runs sampled) trace-mapping: encoded JSON input x 6,092 ops/sec \u00b10.18% (97 runs sampled) trace-mapping: decoded Object input x 249,076 ops/sec \u00b10.24% (98 runs sampled) trace-mapping: encoded Object input x 14,555 ops/sec \u00b10.48% (100 runs sampled) source-map-js: encoded Object input x 2,447 ops/sec \u00b10.36% (99 runs sampled) source-map-0.6.1: encoded Object input x 1,201 ops/sec \u00b10.57% (96 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 7,620,192 ops/sec \u00b10.09% (99 runs sampled) trace-mapping: encoded originalPositionFor x 6,872,554 ops/sec \u00b10.30% (97 runs sampled) source-map-js: encoded originalPositionFor x 2,489,570 ops/sec \u00b10.35% (94 runs sampled) source-map-0.6.1: encoded originalPositionFor x 1,698,633 ops/sec \u00b10.28% (98 runs sampled) source-map-0.8.0: encoded originalPositionFor x 4,015,644 ops/sec \u00b10.22% (98 runs sampled) Fastest is trace-mapping: decoded originalPositionFor *** react.js.map - 5726 segments Memory Usage: trace-mapping decoded 16176 bytes trace-mapping encoded 681552 bytes source-map-js 2418352 bytes source-map-0.6.1 2443672 bytes source-map-0.8.0 111768 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 1,720 ops/sec \u00b10.34% (98 runs sampled) trace-mapping: encoded JSON input x 4,406 ops/sec \u00b10.35% (100 runs sampled) trace-mapping: decoded Object input x 92,122 ops/sec \u00b10.10% (99 runs sampled) trace-mapping: encoded Object input x 5,385 ops/sec \u00b10.37% (99 runs sampled) source-map-js: encoded Object input x 794 ops/sec \u00b10.40% (98 runs sampled) source-map-0.6.1: encoded Object input x 416 ops/sec \u00b10.54% (91 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 32,759,519 ops/sec \u00b10.33% (100 runs sampled) trace-mapping: encoded originalPositionFor x 31,116,306 ops/sec \u00b10.33% (97 runs sampled) source-map-js: encoded originalPositionFor x 17,458,435 ops/sec \u00b10.44% (97 runs sampled) source-map-0.6.1: encoded originalPositionFor x 12,687,097 ops/sec \u00b10.43% (95 runs sampled) source-map-0.8.0: encoded originalPositionFor x 23,538,275 ops/sec \u00b10.38% (95 runs sampled) Fastest is trace-mapping: decoded originalPositionFor","title":"@jridgewell/trace-mapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/trace-mapping/#jridgewelltrace-mapping","text":"Trace the original position through a source map trace-mapping allows you to take the line and column of an output file and trace it to the original location in the source file through a source map. You may already be familiar with the source-map package's SourceMapConsumer . This provides the same originalPositionFor and generatedPositionFor API, without requiring WASM.","title":"@jridgewell/trace-mapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/trace-mapping/#installation","text":"npm install @jridgewell/trace-mapping","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/trace-mapping/#usage","text":"import { TraceMap, originalPositionFor, generatedPositionFor, sourceContentFor, isIgnored, } from '@jridgewell/trace-mapping'; const tracer = new TraceMap({ version: 3, sources: ['input.js'], sourcesContent: ['content of input.js'], names: ['foo'], mappings: 'KAyCIA', ignoreList: [], }); // Lines start at line 1, columns at column 0. const traced = originalPositionFor(tracer, { line: 1, column: 5 }); assert.deepEqual(traced, { source: 'input.js', line: 42, column: 4, name: 'foo', }); const content = sourceContentFor(tracer, traced.source); assert.strictEqual(content, 'content for input.js'); const generated = generatedPositionFor(tracer, { source: 'input.js', line: 42, column: 4, }); assert.deepEqual(generated, { line: 1, column: 5, }); const ignored = isIgnored(tracer, 'input.js'); assert.equal(ignored, false); We also provide a lower level API to get the actual segment that matches our line and column. Unlike originalPositionFor , traceSegment uses a 0-base for line : import { traceSegment } from '@jridgewell/trace-mapping'; // line is 0-base. const traced = traceSegment(tracer, /* line */ 0, /* column */ 5); // Segments are [outputColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex] // Again, line is 0-base and so is sourceLine assert.deepEqual(traced, [5, 0, 41, 4, 0]);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/trace-mapping/#sectionedsourcemaps","text":"The sourcemap spec defines a special sections field that's designed to handle concatenation of output code with associated sourcemaps. This type of sourcemap is rarely used (no major build tool produces it), but if you are hand coding a concatenation you may need it. We provide an AnyMap helper that can receive either a regular sourcemap or a SectionedSourceMap and returns a TraceMap instance: import { AnyMap } from '@jridgewell/trace-mapping'; const fooOutput = 'foo'; const barOutput = 'bar'; const output = [fooOutput, barOutput].join('\\n'); const sectioned = new AnyMap({ version: 3, sections: [ { // 0-base line and column offset: { line: 0, column: 0 }, // fooOutput's sourcemap map: { version: 3, sources: ['foo.js'], names: ['foo'], mappings: 'AAAAA', }, }, { // barOutput's sourcemap will not affect the first line, only the second offset: { line: 1, column: 0 }, map: { version: 3, sources: ['bar.js'], names: ['bar'], mappings: 'AAAAA', }, }, ], }); const traced = originalPositionFor(sectioned, { line: 2, column: 0, }); assert.deepEqual(traced, { source: 'bar.js', line: 1, column: 0, name: 'bar', });","title":"SectionedSourceMaps"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40jridgewell/trace-mapping/#benchmarks","text":"node v18.0.0 amp.js.map - 45120 segments Memory Usage: trace-mapping decoded 562400 bytes trace-mapping encoded 5706544 bytes source-map-js 10717664 bytes source-map-0.6.1 17446384 bytes source-map-0.8.0 9701757 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 180 ops/sec \u00b10.34% (85 runs sampled) trace-mapping: encoded JSON input x 364 ops/sec \u00b11.77% (89 runs sampled) trace-mapping: decoded Object input x 3,116 ops/sec \u00b10.50% (96 runs sampled) trace-mapping: encoded Object input x 410 ops/sec \u00b12.62% (85 runs sampled) source-map-js: encoded Object input x 84.23 ops/sec \u00b10.91% (73 runs sampled) source-map-0.6.1: encoded Object input x 37.21 ops/sec \u00b12.08% (51 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 3,952,212 ops/sec \u00b10.17% (98 runs sampled) trace-mapping: encoded originalPositionFor x 3,487,468 ops/sec \u00b11.58% (90 runs sampled) source-map-js: encoded originalPositionFor x 827,730 ops/sec \u00b10.78% (97 runs sampled) source-map-0.6.1: encoded originalPositionFor x 748,991 ops/sec \u00b10.53% (94 runs sampled) source-map-0.8.0: encoded originalPositionFor x 2,532,894 ops/sec \u00b10.57% (95 runs sampled) Fastest is trace-mapping: decoded originalPositionFor *** babel.min.js.map - 347793 segments Memory Usage: trace-mapping decoded 89832 bytes trace-mapping encoded 35474640 bytes source-map-js 51257176 bytes source-map-0.6.1 63515664 bytes source-map-0.8.0 42933752 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 15.41 ops/sec \u00b18.65% (34 runs sampled) trace-mapping: encoded JSON input x 28.20 ops/sec \u00b112.87% (42 runs sampled) trace-mapping: decoded Object input x 964 ops/sec \u00b10.36% (99 runs sampled) trace-mapping: encoded Object input x 31.77 ops/sec \u00b113.79% (45 runs sampled) source-map-js: encoded Object input x 6.45 ops/sec \u00b15.16% (21 runs sampled) source-map-0.6.1: encoded Object input x 4.07 ops/sec \u00b15.24% (15 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 7,183,038 ops/sec \u00b10.58% (95 runs sampled) trace-mapping: encoded originalPositionFor x 5,192,185 ops/sec \u00b10.41% (100 runs sampled) source-map-js: encoded originalPositionFor x 4,259,489 ops/sec \u00b10.79% (94 runs sampled) source-map-0.6.1: encoded originalPositionFor x 3,742,629 ops/sec \u00b10.71% (95 runs sampled) source-map-0.8.0: encoded originalPositionFor x 6,270,211 ops/sec \u00b10.64% (94 runs sampled) Fastest is trace-mapping: decoded originalPositionFor *** preact.js.map - 1992 segments Memory Usage: trace-mapping decoded 37128 bytes trace-mapping encoded 247280 bytes source-map-js 1143536 bytes source-map-0.6.1 1290992 bytes source-map-0.8.0 96544 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 3,483 ops/sec \u00b10.30% (98 runs sampled) trace-mapping: encoded JSON input x 6,092 ops/sec \u00b10.18% (97 runs sampled) trace-mapping: decoded Object input x 249,076 ops/sec \u00b10.24% (98 runs sampled) trace-mapping: encoded Object input x 14,555 ops/sec \u00b10.48% (100 runs sampled) source-map-js: encoded Object input x 2,447 ops/sec \u00b10.36% (99 runs sampled) source-map-0.6.1: encoded Object input x 1,201 ops/sec \u00b10.57% (96 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 7,620,192 ops/sec \u00b10.09% (99 runs sampled) trace-mapping: encoded originalPositionFor x 6,872,554 ops/sec \u00b10.30% (97 runs sampled) source-map-js: encoded originalPositionFor x 2,489,570 ops/sec \u00b10.35% (94 runs sampled) source-map-0.6.1: encoded originalPositionFor x 1,698,633 ops/sec \u00b10.28% (98 runs sampled) source-map-0.8.0: encoded originalPositionFor x 4,015,644 ops/sec \u00b10.22% (98 runs sampled) Fastest is trace-mapping: decoded originalPositionFor *** react.js.map - 5726 segments Memory Usage: trace-mapping decoded 16176 bytes trace-mapping encoded 681552 bytes source-map-js 2418352 bytes source-map-0.6.1 2443672 bytes source-map-0.8.0 111768 bytes Smallest memory usage is trace-mapping decoded Init speed: trace-mapping: decoded JSON input x 1,720 ops/sec \u00b10.34% (98 runs sampled) trace-mapping: encoded JSON input x 4,406 ops/sec \u00b10.35% (100 runs sampled) trace-mapping: decoded Object input x 92,122 ops/sec \u00b10.10% (99 runs sampled) trace-mapping: encoded Object input x 5,385 ops/sec \u00b10.37% (99 runs sampled) source-map-js: encoded Object input x 794 ops/sec \u00b10.40% (98 runs sampled) source-map-0.6.1: encoded Object input x 416 ops/sec \u00b10.54% (91 runs sampled) Fastest is trace-mapping: decoded Object input Trace speed: trace-mapping: decoded originalPositionFor x 32,759,519 ops/sec \u00b10.33% (100 runs sampled) trace-mapping: encoded originalPositionFor x 31,116,306 ops/sec \u00b10.33% (97 runs sampled) source-map-js: encoded originalPositionFor x 17,458,435 ops/sec \u00b10.44% (97 runs sampled) source-map-0.6.1: encoded originalPositionFor x 12,687,097 ops/sec \u00b10.43% (95 runs sampled) source-map-0.8.0: encoded originalPositionFor x 23,538,275 ops/sec \u00b10.38% (95 runs sampled) Fastest is trace-mapping: decoded originalPositionFor","title":"Benchmarks"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/","text":"Remix Router The @remix-run/router package is a framework-agnostic routing package (sometimes referred to as a browser-emulator) that serves as the heart of React Router and Remix and provides all the core functionality for routing coupled with data loading and data mutations. It comes with built-in handling of errors, race-conditions, interruptions, cancellations, lazy-loading data, and much, much more. If you're using React Router, you should never import anything directly from the @remix-run/router - you should have everything you need in react-router-dom (or react-router / react-router-native if you're not rendering in the browser). All of those packages should re-export everything you would otherwise need from @remix-run/router . [!WARNING] This router is a low-level package intended to be consumed by UI layer routing libraries. You should very likely not be using this package directly unless you are authoring a routing library such as react-router-dom or one of it's other UI ports . API A Router instance can be created using createRouter : // Create and initialize a router. \"initialize\" contains all side effects // including history listeners and kicking off the initial data fetch let router = createRouter({ // Required properties routes: [{ path: '/', loader: ({ request, params }) => { /* ... */ }, children: [{ path: 'home', loader: ({ request, params }) => { /* ... */ }, }] }, history: createBrowserHistory(), // Optional properties basename, // Base path mapRouteProperties, // Map framework-agnostic routes to framework-aware routes future, // Future flags hydrationData, // Hydration data if using server-side-rendering }).initialize(); Internally, the Router represents the state in an object of the following format, which is available through router.state . You can also register a subscriber of the signature (state: RouterState) => void to execute when the state updates via router.subscribe() ; interface RouterState { // False during the initial data load, true once we have our initial data initialized: boolean; // The `history` action of the most recently completed navigation historyAction: Action; // The current location of the router. During a navigation this reflects // the \"old\" location and is updated upon completion of the navigation location: Location; // The current set of route matches matches: DataRouteMatch[]; // The state of the current navigation navigation: Navigation; // The state of any in-progress router.revalidate() calls revalidation: RevalidationState; // Data from the loaders for the current matches loaderData: RouteData; // Data from the action for the current matches actionData: RouteData | null; // Errors thrown from loaders/actions for the current matches errors: RouteData | null; // Map of all active fetchers fetchers: Map<string, Fetcher>; // Scroll position to restore to for the active Location, false if we // should not restore, or null if we don't have a saved position // Note: must be enabled via router.enableScrollRestoration() restoreScrollPosition: number | false | null; // Proxied `preventScrollReset` value passed to router.navigate() preventScrollReset: boolean; } Navigations All navigations are done through the router.navigate API which is overloaded to support different types of navigations: // Link navigation (pushes onto the history stack by default) router.navigate(\"/page\"); // Link navigation (replacing the history stack) router.navigate(\"/page\", { replace: true }); // Pop navigation (moving backward/forward in the history stack) router.navigate(-1); // Form submission navigation let formData = new FormData(); formData.append(key, value); router.navigate(\"/page\", { formMethod: \"post\", formData, }); // Relative routing from a source routeId router.navigate(\"../../somewhere\", { fromRouteId: \"active-route-id\", }); Fetchers Fetchers are a mechanism to call loaders/actions without triggering a navigation, and are done through the router.fetch() API. All fetch calls require a unique key to identify the fetcher. // Execute the loader for /page router.fetch(\"key\", \"/page\"); // Submit to the action for /page let formData = new FormData(); formData.append(key, value); router.fetch(\"key\", \"/page\", { formMethod: \"post\", formData, }); Revalidation By default, active loaders will revalidate after any navigation or fetcher mutation. If you need to kick off a revalidation for other use-cases, you can use router.revalidate() to re-execute all active loaders. Future Flags We use Future Flags in the router to help us introduce breaking changes in an opt-in fashion ahead of major releases. Please check out the blog post and React Router Docs for more information on this process. The currently available future flags in @remix-run/router are: Flag Description v7_normalizeFormMethod Normalize useNavigation().formMethod to be an uppercase HTTP Method v7_prependBasename Prepend the basename to incoming router.navigate / router.fetch paths","title":"Remix Router"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/#remix-router","text":"The @remix-run/router package is a framework-agnostic routing package (sometimes referred to as a browser-emulator) that serves as the heart of React Router and Remix and provides all the core functionality for routing coupled with data loading and data mutations. It comes with built-in handling of errors, race-conditions, interruptions, cancellations, lazy-loading data, and much, much more. If you're using React Router, you should never import anything directly from the @remix-run/router - you should have everything you need in react-router-dom (or react-router / react-router-native if you're not rendering in the browser). All of those packages should re-export everything you would otherwise need from @remix-run/router . [!WARNING] This router is a low-level package intended to be consumed by UI layer routing libraries. You should very likely not be using this package directly unless you are authoring a routing library such as react-router-dom or one of it's other UI ports .","title":"Remix Router"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/#api","text":"A Router instance can be created using createRouter : // Create and initialize a router. \"initialize\" contains all side effects // including history listeners and kicking off the initial data fetch let router = createRouter({ // Required properties routes: [{ path: '/', loader: ({ request, params }) => { /* ... */ }, children: [{ path: 'home', loader: ({ request, params }) => { /* ... */ }, }] }, history: createBrowserHistory(), // Optional properties basename, // Base path mapRouteProperties, // Map framework-agnostic routes to framework-aware routes future, // Future flags hydrationData, // Hydration data if using server-side-rendering }).initialize(); Internally, the Router represents the state in an object of the following format, which is available through router.state . You can also register a subscriber of the signature (state: RouterState) => void to execute when the state updates via router.subscribe() ; interface RouterState { // False during the initial data load, true once we have our initial data initialized: boolean; // The `history` action of the most recently completed navigation historyAction: Action; // The current location of the router. During a navigation this reflects // the \"old\" location and is updated upon completion of the navigation location: Location; // The current set of route matches matches: DataRouteMatch[]; // The state of the current navigation navigation: Navigation; // The state of any in-progress router.revalidate() calls revalidation: RevalidationState; // Data from the loaders for the current matches loaderData: RouteData; // Data from the action for the current matches actionData: RouteData | null; // Errors thrown from loaders/actions for the current matches errors: RouteData | null; // Map of all active fetchers fetchers: Map<string, Fetcher>; // Scroll position to restore to for the active Location, false if we // should not restore, or null if we don't have a saved position // Note: must be enabled via router.enableScrollRestoration() restoreScrollPosition: number | false | null; // Proxied `preventScrollReset` value passed to router.navigate() preventScrollReset: boolean; }","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/#navigations","text":"All navigations are done through the router.navigate API which is overloaded to support different types of navigations: // Link navigation (pushes onto the history stack by default) router.navigate(\"/page\"); // Link navigation (replacing the history stack) router.navigate(\"/page\", { replace: true }); // Pop navigation (moving backward/forward in the history stack) router.navigate(-1); // Form submission navigation let formData = new FormData(); formData.append(key, value); router.navigate(\"/page\", { formMethod: \"post\", formData, }); // Relative routing from a source routeId router.navigate(\"../../somewhere\", { fromRouteId: \"active-route-id\", });","title":"Navigations"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/#fetchers","text":"Fetchers are a mechanism to call loaders/actions without triggering a navigation, and are done through the router.fetch() API. All fetch calls require a unique key to identify the fetcher. // Execute the loader for /page router.fetch(\"key\", \"/page\"); // Submit to the action for /page let formData = new FormData(); formData.append(key, value); router.fetch(\"key\", \"/page\", { formMethod: \"post\", formData, });","title":"Fetchers"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/#revalidation","text":"By default, active loaders will revalidate after any navigation or fetcher mutation. If you need to kick off a revalidation for other use-cases, you can use router.revalidate() to re-execute all active loaders.","title":"Revalidation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/#future-flags","text":"We use Future Flags in the router to help us introduce breaking changes in an opt-in fashion ahead of major releases. Please check out the blog post and React Router Docs for more information on this process. The currently available future flags in @remix-run/router are: Flag Description v7_normalizeFormMethod Normalize useNavigation().formMethod to be an uppercase HTTP Method v7_prependBasename Prepend the basename to incoming router.navigate / router.fetch paths","title":"Future Flags"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/","text":"@remix-run/router 1.20.0 Minor Changes Stabilize unstable_patchRoutesOnNavigation ( #11973 ) Add new PatchRoutesOnNavigationFunctionArgs type for convenience ( #11967 ) Stabilize unstable_dataStrategy ( #11974 ) Stabilize the unstable_flushSync option for navigations and fetchers ( #11989 ) Stabilize the unstable_viewTransition option for navigations and the corresponding unstable_useViewTransitionState hook ( #11989 ) Patch Changes Fix bug when submitting to the current contextual route (parent route with an index child) when an ?index param already exists from a prior submission ( #12003 ) Fix useFormAction bug - when removing ?index param it would not keep other non-Remix index params ( #12003 ) Fix bug with fetchers not persisting preventScrollReset through redirects during concurrent fetches ( #11999 ) Remove internal cache to fix issues with interrupted patchRoutesOnNavigation calls ( #12055 ) We used to cache in-progress calls to patchRoutesOnNavigation internally so that multiple navigations with the same start/end would only execute the function once and use the same promise However, this approach was at odds with patch short circuiting if a navigation was interrupted (and the request.signal aborted) since the first invocation's patch would no-op This cache also made some assumptions as to what a valid cache key might be - and is oblivious to any other application-state changes that may have occurred So, the cache has been removed because in most cases, repeated calls to something like import() for async routes will already be cached automatically - and if not it's easy enough for users to implement this cache in userland Avoid unnecessary console.error on fetcher abort due to back-to-back revalidation calls ( #12050 ) Expose errors thrown from patchRoutesOnNavigation directly to useRouteError instead of wrapping them in a 400 ErrorResponse instance ( #12111 ) Fix types for RouteObject within PatchRoutesOnNavigationFunction 's patch method so it doesn't expect agnostic route objects passed to patch ( #11967 ) Fix bugs with partialHydration when hydrating with errors ( #12070 ) Remove internal discoveredRoutes FIFO queue from unstable_patchRoutesOnNavigation ( #11977 ) 1.19.2 Patch Changes Update the unstable_dataStrategy API to allow for more advanced implementations ( #11943 ) Rename unstable_HandlerResult to unstable_DataStrategyResult The return signature has changed from a parallel array of unstable_DataStrategyResult[] (parallel to matches ) to a key/value object of routeId => unstable_DataStrategyResult This allows you to more easily decide to opt-into or out-of revalidating data that may not have been revalidated by default (via match.shouldLoad ) \u26a0\ufe0f This is a breaking change if you've currently adopted unstable_dataStrategy Added a new fetcherKey parameter to unstable_dataStrategy to allow differentiation from navigational and fetcher calls You should now return/throw a result from your handlerOverride instead of returning a DataStrategyResult If you are aggregating the results of match.resolve() into a final results object you should not need to think about the DataStrategyResult type If you are manually filling your results object from within your handlerOverride , then you will need to assign a DataStrategyResult as the value so React Router knows if it's a successful execution or an error. Preserve view transition through redirects ( #11925 ) Fix blocker usage when blocker.proceed is called quickly/synchronously ( #11930 ) Preserve pending view transitions through a router revalidation call ( #11917 ) 1.19.1 Patch Changes Fog of War: Update unstable_patchRoutesOnMiss logic so that we call the method when we match routes with dynamic param or splat segments in case there exists a higher-scoring static route that we've not yet discovered. ( #11883 ) We also now leverage an internal FIFO queue of previous paths we've already called unstable_patchRouteOnMiss against so that we don't re-call on subsequent navigations to the same path Rename unstable_patchRoutesOnMiss to unstable_patchRoutesOnNavigation to match new behavior ( #11888 ) 1.19.0 Minor Changes Add a new replace(url, init?) alternative to redirect(url, init?) that performs a history.replaceState instead of a history.pushState on client-side navigation redirects ( #11811 ) Add a new unstable_data() API for usage with Remix Single Fetch ( #11836 ) This API is not intended for direct usage in React Router SPA applications It is primarily intended for usage with createStaticHandler.query() to allow loaders/actions to return arbitrary data + status / headers without forcing the serialization of data into a Response instance This allows for more advanced serialization tactics via unstable_dataStrategy such as serializing via turbo-stream in Remix Single Fetch \u26a0\ufe0f This removes the status field from HandlerResult If you need to return a specific status from unstable_dataStrategy you should instead do so via unstable_data() Patch Changes Fix internal cleanup of interrupted fetchers to avoid invalid revalidations on navigations ( #11839 ) When a fetcher.load is interrupted by an action submission, we track it internally and force revalidation once the action completes We previously only cleared out this internal tracking info on a successful navigation submission Therefore, if the fetcher.load was interrupted by a fetcher.submit , then we wouldn't remove it from this internal tracking info on successful load (incorrectly) And then on the next navigation it's presence in the internal tracking would automatically trigger execution of the fetcher.load again, ignoring any shouldRevalidate logic This fix cleans up the internal tracking so it applies to both navigation submission and fetcher submissions Fix initial hydration behavior when using future.v7_partialHydration along with unstable_patchRoutesOnMiss ( #11838 ) During initial hydration, router.state.matches will now include any partial matches so that we can render ancestor HydrateFallback components 1.18.0 Minor Changes Stabilize future.unstable_skipActionErrorRevalidation as future.v7_skipActionErrorRevalidation ( #11769 ) When this flag is enabled, actions will not automatically trigger a revalidation if they return/throw a Response with a 4xx / 5xx status code You may still opt-into revalidation via shouldRevalidate This also changes shouldRevalidate 's unstable_actionStatus parameter to actionStatus Patch Changes Fix bubbling of errors thrown from unstable_patchRoutesOnMiss ( #11786 ) Fix hydration in SSR apps using unstable_patchRoutesOnMiss that matched a splat route on the server ( #11790 ) 1.17.1 Patch Changes Fog of War (unstable): Trigger a new router.routes identity/reflow during route patching ( #11740 ) Fog of War (unstable): Fix initial matching when a splat route matches ( #11759 ) 1.17.0 Minor Changes Add support for Lazy Route Discovery (a.k.a. Fog of War) ( #11626 ) RFC: https://github.com/remix-run/react-router/discussions/11113 unstable_patchRoutesOnMiss docs: https://reactrouter.com/en/main/routers/create-browser-router 1.16.1 Patch Changes Support unstable_dataStrategy on staticHandler.queryRoute ( #11515 ) 1.16.0 Minor Changes Add a new unstable_dataStrategy configuration option ( #11098 ) This option allows Data Router applications to take control over the approach for executing route loaders and actions The default implementation is today's behavior, to fetch all loaders in parallel, but this option allows users to implement more advanced data flows including Remix single-fetch, middleware/context APIs, automatic loader caching, and more Move unstable_dataStrategy from createStaticHandler to staticHandler.query so it can be request-specific for use with the ResponseStub approach in Remix. It's not really applicable to queryRoute for now since that's a singular handler call anyway so any pre-processing/post/processing could be done there manually. ( #11377 ) Add a new future.unstable_skipActionRevalidation future flag ( #11098 ) Currently, active loaders revalidate after any action, regardless of the result With this flag enabled, actions that return/throw a 4xx/5xx response status will no longer automatically revalidate This should reduce load on your server since it's rare that a 4xx/5xx should actually mutate any data If you need to revalidate after a 4xx/5xx result with this flag enabled, you can still do that via returning true from shouldRevalidate shouldRevalidate now also receives a new unstable_actionStatus argument alongside actionResult so you can make decision based on the status of the action response without having to encode it into the action data Added a skipLoaderErrorBubbling flag to staticHandler.query to disable error bubbling on loader executions for single-fetch scenarios where the client-side router will handle the bubbling ( #11098 ) 1.15.3 Patch Changes Fix a future.v7_partialHydration bug that would re-run loaders below the boundary on hydration if SSR loader errors bubbled to a parent boundary ( #11324 ) Fix a future.v7_partialHydration bug that would consider the router uninitialized if a route did not have a loader ( #11325 ) 1.15.2 Patch Changes Preserve hydrated errors during partial hydration runs ( #11305 ) 1.15.1 Patch Changes Fix encoding/decoding issues with pre-encoded dynamic parameter values ( #11199 ) 1.15.0 Minor Changes Add a createStaticHandler future.v7_throwAbortReason flag to throw request.signal.reason (defaults to a DOMException ) when a request is aborted instead of an Error such as new Error(\"query() call aborted: GET /path\") ( #11104 ) Please note that DOMException was added in Node v17 so you will not get a DOMException on Node 16 and below. Patch Changes Respect the ErrorResponse status code if passed to getStaticContextFormError ( #11213 ) 1.14.2 Patch Changes Fix bug where dashes were not picked up in dynamic parameter names ( #11160 ) Do not attempt to deserialize empty JSON responses ( #11164 ) 1.14.1 Patch Changes Fix bug with route.lazy not working correctly on initial SPA load when v7_partialHydration is specified ( #11121 ) Fix bug preventing revalidation from occurring for persisted fetchers unmounted during the submitting phase ( #11102 ) De-dup relative path logic in resolveTo ( #11097 ) 1.14.0 Minor Changes Added a new future.v7_partialHydration future flag that enables partial hydration of a data router when Server-Side Rendering. This allows you to provide hydrationData.loaderData that has values for some initially matched route loaders, but not all. When this flag is enabled, the router will call loader functions for routes that do not have hydration loader data during router.initialize() , and it will render down to the deepest provided HydrateFallback (up to the first route without hydration data) while it executes the unhydrated routes. ( #11033 ) For example, the following router has a root and index route, but only provided hydrationData.loaderData for the root route. Because the index route has a loader , we need to run that during initialization. With future.v7_partialHydration specified, <RouterProvider> will render the RootComponent (because it has data) and then the IndexFallback (since it does not have data). Once indexLoader finishes, application will update and display IndexComponent . jsx let router = createBrowserRouter( [ { id: \"root\", path: \"/\", loader: rootLoader, Component: RootComponent, Fallback: RootFallback, children: [ { id: \"index\", index: true, loader: indexLoader, Component: IndexComponent, HydrateFallback: IndexFallback, }, ], }, ], { future: { v7_partialHydration: true, }, hydrationData: { loaderData: { root: { message: \"Hydrated from Root!\" }, }, }, } ); If the above example did not have an IndexFallback , then RouterProvider would instead render the RootFallback while it executed the indexLoader . Note: When future.v7_partialHydration is provided, the <RouterProvider fallbackElement> prop is ignored since you can move it to a Fallback on your top-most route. The fallbackElement prop will be removed in React Router v7 when v7_partialHydration behavior becomes the standard behavior. Add a new future.v7_relativeSplatPath flag to implement a breaking bug fix to relative routing when inside a splat route. ( #11087 ) This fix was originally added in #10983 and was later reverted in #11078 because it was determined that a large number of existing applications were relying on the buggy behavior (see #11052 ) The Bug The buggy behavior is that without this flag, the default behavior when resolving relative paths is to ignore any splat ( * ) portion of the current route path. The Background This decision was originally made thinking that it would make the concept of nested different sections of your apps in <Routes> easier if relative routing would replace the current splat: jsx <BrowserRouter> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"dashboard/*\" element={<Dashboard />} /> </Routes> </BrowserRouter> Any paths like /dashboard , /dashboard/team , /dashboard/projects will match the Dashboard route. The dashboard component itself can then render nested <Routes> : ```jsx function Dashboard() { return ( Dashboard Dashboard Home Team Projects <Routes> <Route path=\"/\" element={<DashboardHome />} /> <Route path=\"team\" element={<DashboardTeam />} /> <Route path=\"projects\" element={<DashboardProjects />} /> </Routes> </div> ); } ``` Now, all links and route paths are relative to the router above them. This makes code splitting and compartmentalizing your app really easy. You could render the Dashboard as its own independent app, or embed it into your large app without making any changes to it. The Problem The problem is that this concept of ignoring part of a path breaks a lot of other assumptions in React Router - namely that \".\" always means the current location pathname for that route. When we ignore the splat portion, we start getting invalid paths when using \".\" : ```jsx // If we are on URL /dashboard/team, and we want to link to /dashboard/team: function DashboardTeam() { // \u274c This is broken and results in return A broken link to the Current URL ; // \u2705 This is fixed but super unintuitive since we're already at /dashboard/team! return <Link to=\"./team\">A broken link to the Current URL</Link>; } ``` We've also introduced an issue that we can no longer move our DashboardTeam component around our route hierarchy easily - since it behaves differently if we're underneath a non-splat route, such as /dashboard/:widget . Now, our \".\" links will, properly point to ourself inclusive of the dynamic param value so behavior will break from it's corresponding usage in a /dashboard/* route. Even worse, consider a nested splat route configuration: jsx <BrowserRouter> <Routes> <Route path=\"dashboard\"> <Route path=\"*\" element={<Dashboard />} /> </Route> </Routes> </BrowserRouter> Now, a <Link to=\".\"> and a <Link to=\"..\"> inside the Dashboard component go to the same place! That is definitely not correct! Another common issue arose in Data Routers (and Remix) where any <Form> should post to it's own route action if you the user doesn't specify a form action: jsx let router = createBrowserRouter({ path: \"/dashboard\", children: [ { path: \"*\", action: dashboardAction, Component() { // \u274c This form is broken! It throws a 405 error when it submits because // it tries to submit to /dashboard (without the splat value) and the parent // `/dashboard` route doesn't have an action return <Form method=\"post\">...</Form>; }, }, ], }); This is just a compounded issue from the above because the default location for a Form to submit to is itself ( \".\" ) - and if we ignore the splat portion, that now resolves to the parent route. The Solution If you are leveraging this behavior, it's recommended to enable the future flag, move your splat to it's own route, and leverage ../ for any links to \"sibling\" pages: ```jsx } /> function Dashboard() { return ( Dashboard Dashboard Home Team Projects <Routes> <Route path=\"/\" element={<DashboardHome />} /> <Route path=\"team\" element={<DashboardTeam />} /> <Route path=\"projects\" element={<DashboardProjects />} /> </Router> </div> ); } ``` This way, . means \"the full current pathname for my route\" in all cases (including static, dynamic, and splat routes) and .. always means \"my parents pathname\". Patch Changes Catch and bubble errors thrown when trying to unwrap responses from loader / action functions ( #11061 ) Fix relative=\"path\" issue when rendering Link / NavLink outside of matched routes ( #11062 ) 1.13.1 Patch Changes Revert the useResolvedPath fix for splat routes due to a large number of applications that were relying on the buggy behavior (see https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329 ). We plan to re-introduce this fix behind a future flag in the next minor version. ( #11078 ) 1.13.0 Minor Changes Export the PathParam type from the public API ( #10719 ) Patch Changes Fix bug with resolveTo in splat routes ( #11045 ) This is a follow up to #10983 to handle the few other code paths using getPathContributingMatches This removes the UNSAFE_getPathContributingMatches export from @remix-run/router since we no longer need this in the react-router / react-router-dom layers Do not revalidate unmounted fetchers when v7_fetcherPersist is enabled ( #11044 ) 1.12.0 Minor Changes Add unstable_flushSync option to router.navigate and router.fetch to tell the React Router layer to opt-out of React.startTransition and into ReactDOM.flushSync for state updates ( #11005 ) Patch Changes Fix relative=\"path\" bug where relative path calculations started from the full location pathname, instead of from the current contextual route pathname. ( #11006 ) ```jsx }> ; function Component() { return ( <> {/ This is now correctly relative to /a/b, not /a/b/c /} ); } ``` 1.11.0 Minor Changes Add a new future.v7_fetcherPersist flag to the @remix-run/router to change the persistence behavior of fetchers when router.deleteFetcher is called. Instead of being immediately cleaned up, fetchers will persist until they return to an idle state ( RFC ) ( #10962 ) This is sort of a long-standing bug fix as the useFetchers() API was always supposed to only reflect in-flight fetcher information for pending/optimistic UI -- it was not intended to reflect fetcher data or hang onto fetchers after they returned to an idle state Keep an eye out for the following specific behavioral changes when opting into this flag and check your app for compatibility: Fetchers that complete while still mounted will no longer appear in useFetchers() . They served effectively no purpose in there since you can access the data via useFetcher().data ). Fetchers that previously unmounted while in-flight will not be immediately aborted and will instead be cleaned up once they return to an idle state. They will remain exposed via useFetchers while in-flight so you can still access pending/optimistic data after unmount. When v7_fetcherPersist is enabled, the router now performs ref-counting on fetcher keys via getFetcher / deleteFetcher so it knows when a given fetcher is totally unmounted from the UI ( #10977 ) Once a fetcher has been totally unmounted, we can ignore post-processing of a persisted fetcher result such as a redirect or an error The router will also pass a new deletedFetchers array to the subscriber callbacks so that the UI layer can remove associated fetcher data Add support for optional path segments in matchPath ( #10768 ) Patch Changes Fix router.getFetcher / router.deleteFetcher type definitions which incorrectly specified key as an optional parameter ( #10960 ) 1.10.0 Minor Changes Add experimental support for the View Transitions API by allowing users to opt-into view transitions on navigations via the new unstable_viewTransition option to router.navigate ( #10916 ) Patch Changes Allow 404 detection to leverage root route error boundary if path contains a URL segment ( #10852 ) Fix ErrorResponse type to avoid leaking internal field ( #10876 ) 1.9.0 Minor Changes In order to move towards stricter TypeScript support in the future, we're aiming to replace current usages of any with unknown on exposed typings for user-provided data. To do this in Remix v2 without introducing breaking changes in React Router v6, we have added generics to a number of shared types. These continue to default to any in React Router and are overridden with unknown in Remix. In React Router v7 we plan to move these to unknown as a breaking change. ( #10843 ) Location now accepts a generic for the location.state value ActionFunctionArgs / ActionFunction / LoaderFunctionArgs / LoaderFunction now accept a generic for the context parameter (only used in SSR usages via createStaticHandler ) The return type of useMatches (now exported as UIMatch ) accepts generics for match.data and match.handle - both of which were already set to unknown Move the @private class export ErrorResponse to an UNSAFE_ErrorResponseImpl export since it is an implementation detail and there should be no construction of ErrorResponse instances in userland. This frees us up to export a type ErrorResponse which correlates to an instance of the class via InstanceType . Userland code should only ever be using ErrorResponse as a type and should be type-narrowing via isRouteErrorResponse . ( #10811 ) Export ShouldRevalidateFunctionArgs interface ( #10797 ) Removed private/internal APIs only required for the Remix v1 backwards compatibility layer and no longer needed in Remix v2 ( _isFetchActionRedirect , _hasFetcherDoneAnything ) ( #10715 ) Patch Changes Add method/url to error message on aborted query / queryRoute calls ( #10793 ) Fix a race-condition with loader/action-thrown errors on route.lazy routes ( #10778 ) Fix type for actionResult on the arguments object passed to shouldRevalidate ( #10779 ) 1.8.0 Minor Changes Add's a new redirectDocument() function which allows users to specify that a redirect from a loader / action should trigger a document reload (via window.location ) instead of attempting to navigate to the redirected location via React Router ( #10705 ) Patch Changes Fix an issue in queryRoute that was not always identifying thrown Response instances ( #10717 ) Ensure hash history always includes a leading slash on hash pathnames ( #10753 ) 1.7.2 Patch Changes Trigger an error if a defer promise resolves/rejects with undefined in order to match the behavior of loaders and actions which must return a value or null ( #10690 ) Properly handle fetcher redirects interrupted by normal navigations ( #10674 , #10709 ) Initial-load fetchers should not automatically revalidate on GET navigations ( #10688 ) Enhance the return type of Route.lazy to prohibit returning an empty object ( #10634 ) 1.7.1 Patch Changes Fix issues with reused blockers on subsequent navigations ( #10656 ) 1.7.0 Minor Changes Add support for application/json and text/plain encodings for router.navigate / router.fetch submissions. To leverage these encodings, pass your data in a body parameter and specify the desired formEncType : ( #10413 ) ```js // By default, the encoding is \"application/x-www-form-urlencoded\" router.navigate(\"/\", { formMethod: \"post\", body: { key: \"value\" }, }); async function action({ request }) { // await request.formData() => FormData instance with entry [key=value] } ``` ``js // Pass formEncType` to opt-into a different encoding (json) router.navigate(\"/\", { formMethod: \"post\", formEncType: \"application/json\", body: { key: \"value\" }, }); async function action({ request }) { // await request.json() => { key: \"value\" } } ``` ``js // Pass formEncType` to opt-into a different encoding (text) router.navigate(\"/\", { formMethod: \"post\", formEncType: \"text/plain\", body: \"Text submission\", }); async function action({ request }) { // await request.text() => \"Text submission\" } ``` Patch Changes Call window.history.pushState/replaceState before updating React Router state (instead of after) so that window.location matches useLocation during synchronous React 17 rendering ( #10448 ) \u26a0\ufe0f However, generally apps should not be relying on window.location and should always reference useLocation when possible, as window.location will not be in sync 100% of the time (due to popstate events, concurrent mode, etc.) Strip basename from the location provided to <ScrollRestoration getKey> to match the useLocation behavior ( #10550 ) Avoid calling shouldRevalidate for fetchers that have not yet completed a data load ( #10623 ) Fix unstable_useBlocker key issues in StrictMode ( #10573 ) Upgrade typescript to 5.1 ( #10581 ) 1.6.3 Patch Changes Allow fetcher revalidations to complete if submitting fetcher is deleted ( #10535 ) Re-throw DOMException ( DataCloneError ) when attempting to perform a PUSH navigation with non-serializable state. ( #10427 ) Ensure revalidations happen when hash is present ( #10516 ) upgrade jest and jsdom ( #10453 ) 1.6.2 Patch Changes Fix HMR-driven error boundaries by properly reconstructing new routes and manifest in \\_internalSetRoutes ( #10437 ) Fix bug where initial data load would not kick off when hash is present ( #10493 ) 1.6.1 Patch Changes Fix basename handling when navigating without a path ( #10433 ) \"Same hash\" navigations no longer re-run loaders to match browser behavior (i.e. /path#hash -> /path#hash ) ( #10408 ) 1.6.0 Minor Changes Enable relative routing in the @remix-run/router when providing a source route ID from which the path is relative to: ( #10336 ) Example: router.navigate(\"../path\", { fromRouteId: \"some-route\" }) . This also applies to router.fetch which already receives a source route ID Introduce a new @remix-run/router future.v7_prependBasename flag to enable basename prefixing to all paths coming into router.navigate and router.fetch . Previously the basename was prepended in the React Router layer, but now that relative routing is being handled by the router we need prepend the basename after resolving any relative paths This also enables basename support in useFetcher as well Patch Changes Enhance LoaderFunction / ActionFunction return type to prevent undefined from being a valid return value ( #10267 ) Ensure proper 404 error on fetcher.load call to a route without a loader ( #10345 ) Deprecate the createRouter detectErrorBoundary option in favor of the new mapRouteProperties option for converting a framework-agnostic route to a framework-aware route. This allows us to set more than just the hasErrorBoundary property during route pre-processing, and is now used for mapping Component -> element and ErrorBoundary -> errorElement in react-router . ( #10287 ) Fixed a bug where fetchers were incorrectly attempting to revalidate on search params changes or routing to the same URL (using the same logic for route loader revalidations). However, since fetchers have a static href, they should only revalidate on action submissions or router.revalidate calls. ( #10344 ) Decouple AbortController usage between revalidating fetchers and the thing that triggered them such that the unmount/deletion of a revalidating fetcher doesn't impact the ongoing triggering navigation/revalidation ( #10271 ) 1.5.0 Minor Changes Added support for Future Flags in React Router. The first flag being introduced is future.v7_normalizeFormMethod which will normalize the exposed useNavigation()/useFetcher() formMethod fields as uppercase HTTP methods to align with the fetch() behavior. ( #10207 ) When future.v7_normalizeFormMethod === false (default v6 behavior), useNavigation().formMethod is lowercase useFetcher().formMethod is lowercase When future.v7_normalizeFormMethod === true : useNavigation().formMethod is uppercase useFetcher().formMethod is uppercase Patch Changes Provide fetcher submission to shouldRevalidate if the fetcher action redirects ( #10208 ) Properly handle lazy() errors during router initialization ( #10201 ) Remove instanceof check for DeferredData to be resilient to ESM/CJS boundaries in SSR bundling scenarios ( #10247 ) Update to latest @remix-run/web-fetch@4.3.3 ( #10216 ) 1.4.0 Minor Changes Introducing Lazy Route Modules! ( #10045 ) In order to keep your application bundles small and support code-splitting of your routes, we've introduced a new lazy() route property. This is an async function that resolves the non-route-matching portions of your route definition ( loader , action , element / Component , errorElement / ErrorBoundary , shouldRevalidate , handle ). Lazy routes are resolved on initial load and during the loading or submitting phase of a navigation or fetcher call. You cannot lazily define route-matching properties ( path , index , children ) since we only execute your lazy route functions after we've matched known routes. Your lazy functions will typically return the result of a dynamic import. jsx // In this example, we assume most folks land on the homepage so we include that // in our critical-path bundle, but then we lazily load modules for /a and /b so // they don't load until the user navigates to those routes let routes = createRoutesFromElements( <Route path=\"/\" element={<Layout />}> <Route index element={<Home />} /> <Route path=\"a\" lazy={() => import(\"./a\")} /> <Route path=\"b\" lazy={() => import(\"./b\")} /> </Route> ); Then in your lazy route modules, export the properties you want defined for the route: ```jsx export async function loader({ request }) { let data = await fetchData(request); return json(data); } // Export a Component directly instead of needing to create a React Element from it export function Component() { let data = useLoaderData(); return ( <> <h1>You made it!</h1> <p>{data}</p> ); } // Export an ErrorBoundary directly instead of needing to create a React Element from it export function ErrorBoundary() { let error = useRouteError(); return isRouteErrorResponse(error) ? ( {error.status} {error.statusText} ) : ( {error.message || error} ); } ``` An example of this in action can be found in the examples/lazy-loading-router-provider directory of the repository. \ud83d\ude4c Huge thanks to @rossipedia for the Initial Proposal and POC Implementation . Patch Changes Fix generatePath incorrectly applying parameters in some cases ( #10078 ) 1.3.3 Patch Changes Correctly perform a hard redirect for same-origin absolute URLs outside of the router basename ( #10076 ) Ensure status code and headers are maintained for defer loader responses in createStaticHandler 's query() method ( #10077 ) Change invariant to an UNSAFE_invariant export since it's only intended for internal use ( #10066 ) Add internal API for custom HMR implementations ( #9996 ) 1.3.2 Patch Changes Remove inaccurate console warning for POP navigations and update active blocker logic ( #10030 ) Only check for differing origin on absolute URL redirects ( #10033 ) 1.3.1 Patch Changes Fixes 2 separate issues for revalidating fetcher shouldRevalidate calls ( #9948 ) The shouldRevalidate function was only being called for explicit revalidation scenarios (after a mutation, manual useRevalidator call, or an X-Remix-Revalidate header used for cookie setting in Remix). It was not properly being called on implicit revalidation scenarios that also apply to navigation loader revalidation, such as a change in search params or clicking a link for the page we're already on. It's now correctly called in those additional scenarios. The parameters being passed were incorrect and inconsistent with one another since the current* / next* parameters reflected the static fetcher.load URL (and thus were identical). Instead, they should have reflected the the navigation that triggered the revalidation (as the form* parameters did). These parameters now correctly reflect the triggering navigation. Respect preventScrollReset on <fetcher.Form> ( #9963 ) Do not short circuit on hash change only mutation submissions ( #9944 ) Remove instanceof check from isRouteErrorResponse to avoid bundling issues on the server ( #9930 ) Fix navigation for hash routers on manual URL changes ( #9980 ) Detect when a defer call only contains critical data and remove the AbortController ( #9965 ) Send the name as the value when url-encoding File FormData entries ( #9867 ) 1.3.0 Minor Changes Added support for navigation blocking APIs ( #9709 ) Expose deferred information from createStaticHandler ( #9760 ) Patch Changes Improved absolute redirect url detection in actions/loaders ( #9829 ) Fix URL creation with memory histories ( #9814 ) Fix generatePath when optional params are present ( #9764 ) Fix scroll reset if a submission redirects ( #9886 ) Fix 404 bug with same-origin absolute redirects ( #9913 ) Support OPTIONS requests in staticHandler.queryRoute ( #9914 ) 1.2.1 Patch Changes Include submission info in shouldRevalidate on action redirects ( #9777 , #9782 ) Reset actionData on action redirect to current location ( #9772 ) 1.2.0 Minor Changes Remove unstable_ prefix from createStaticHandler / createStaticRouter / StaticRouterProvider ( #9738 ) Patch Changes Fix explicit replace on submissions and PUSH on submission to new paths ( #9734 ) Fix a few bugs where loader/action data wasn't properly cleared on errors ( #9735 ) Prevent useLoaderData usage in errorElement ( #9735 ) Skip initial scroll restoration for SSR apps with hydrationData ( #9664 ) 1.1.0 This release introduces support for Optional Route Segments . Now, adding a ? to the end of any path segment will make that entire segment optional. This works for both static segments and dynamic parameters. Optional Params Examples Path lang?/about will match: /:lang/about /about Path /multistep/:widget1?/widget2?/widget3? will match: /multistep /multistep/:widget1 /multistep/:widget1/:widget2 /multistep/:widget1/:widget2/:widget3 Optional Static Segment Example Path /home? will match: / /home Path /fr?/about will match: /about /fr/about Minor Changes Allows optional routes and optional static segments ( #9650 ) Patch Changes Stop incorrectly matching on partial named parameters, i.e. <Route path=\"prefix-:param\"> , to align with how splat parameters work. If you were previously relying on this behavior then it's recommended to extract the static portion of the path at the useParams call site: ( #9506 ) // Old behavior at URL /prefix-123 <Route path=\"prefix-:id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: '123' } let id = params.id; // \"123\" ... } // New behavior at URL /prefix-123 <Route path=\":id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: 'prefix-123' } let id = params.id.replace(/^prefix-/, ''); // \"123\" ... } Persist headers on loader request 's after SSR document action request ( #9721 ) Fix requests sent to revalidating loaders so they reflect a GET request ( #9660 ) Fix issue with deeply nested optional segments ( #9727 ) GET forms now expose a submission on the loading navigation ( #9695 ) Fix error boundary tracking for multiple errors bubbling to the same boundary ( #9702 ) 1.0.5 Patch Changes Fix requests sent to revalidating loaders so they reflect a GET request ( #9680 ) Remove instanceof Response checks in favor of isResponse ( #9690 ) Fix URL creation in Cloudflare Pages or other non-browser-environments ( #9682 , #9689 ) Add requestContext support to static handler query / queryRoute ( #9696 ) Note that the unstable API of queryRoute(path, routeId) has been changed to queryRoute(path, { routeId, requestContext }) 1.0.4 Patch Changes Throw an error if an action / loader function returns undefined as revalidations need to know whether the loader has previously been executed. undefined also causes issues during SSR stringification for hydration. You should always ensure you loader / action returns a value, and you may return null if you don't wish to return anything. ( #9511 ) Properly handle redirects to external domains ( #9590 , #9654 ) Preserve the HTTP method on 307/308 redirects ( #9597 ) Support basename in static data routers ( #9591 ) Enhanced ErrorResponse bodies to contain more descriptive text in internal 403/404/405 scenarios 1.0.3 Patch Changes Fix hrefs generated when using createHashRouter ( #9409 ) fix encoding/matching issues with special chars ( #9477 , #9496 ) Support basename and relative routing in loader / action redirects ( #9447 ) Ignore pathless layout routes when looking for proper submission action function ( #9455 ) properly support index routes with a path in useResolvedPath ( #9486 ) Add UMD build for @remix-run/router ( #9446 ) fix createURL in local file execution in Firefox ( #9464 ) Updates to unstable_createStaticHandler for incorporating into Remix ( #9482 , #9465 ) 1.0.2 Patch Changes Reset actionData after a successful action redirect ( #9334 ) Update matchPath to avoid false positives on dash-separated segments ( #9300 ) If an index route has children, it will result in a runtime error. We have strengthened our RouteObject / RouteProps types to surface the error in TypeScript. ( #9366 ) 1.0.1 Patch Changes Preserve state from initialEntries ( #9288 ) Preserve ?index for fetcher get submissions to index routes ( #9312 ) 1.0.0 This is the first stable release of @remix-run/router , which provides all the underlying routing and data loading/mutation logic for react-router . You should not be using this package directly unless you are authoring a routing library similar to react-router . For an overview of the features provided by react-router , we recommend you go check out the docs , especially the feature overview and the tutorial . For an overview of the features provided by @remix-run/router , please check out the README .","title":"@remix-run/router"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#remix-runrouter","text":"","title":"@remix-run/router"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1200","text":"","title":"1.20.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes","text":"Stabilize unstable_patchRoutesOnNavigation ( #11973 ) Add new PatchRoutesOnNavigationFunctionArgs type for convenience ( #11967 ) Stabilize unstable_dataStrategy ( #11974 ) Stabilize the unstable_flushSync option for navigations and fetchers ( #11989 ) Stabilize the unstable_viewTransition option for navigations and the corresponding unstable_useViewTransitionState hook ( #11989 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes","text":"Fix bug when submitting to the current contextual route (parent route with an index child) when an ?index param already exists from a prior submission ( #12003 ) Fix useFormAction bug - when removing ?index param it would not keep other non-Remix index params ( #12003 ) Fix bug with fetchers not persisting preventScrollReset through redirects during concurrent fetches ( #11999 ) Remove internal cache to fix issues with interrupted patchRoutesOnNavigation calls ( #12055 ) We used to cache in-progress calls to patchRoutesOnNavigation internally so that multiple navigations with the same start/end would only execute the function once and use the same promise However, this approach was at odds with patch short circuiting if a navigation was interrupted (and the request.signal aborted) since the first invocation's patch would no-op This cache also made some assumptions as to what a valid cache key might be - and is oblivious to any other application-state changes that may have occurred So, the cache has been removed because in most cases, repeated calls to something like import() for async routes will already be cached automatically - and if not it's easy enough for users to implement this cache in userland Avoid unnecessary console.error on fetcher abort due to back-to-back revalidation calls ( #12050 ) Expose errors thrown from patchRoutesOnNavigation directly to useRouteError instead of wrapping them in a 400 ErrorResponse instance ( #12111 ) Fix types for RouteObject within PatchRoutesOnNavigationFunction 's patch method so it doesn't expect agnostic route objects passed to patch ( #11967 ) Fix bugs with partialHydration when hydrating with errors ( #12070 ) Remove internal discoveredRoutes FIFO queue from unstable_patchRoutesOnNavigation ( #11977 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1192","text":"","title":"1.19.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_1","text":"Update the unstable_dataStrategy API to allow for more advanced implementations ( #11943 ) Rename unstable_HandlerResult to unstable_DataStrategyResult The return signature has changed from a parallel array of unstable_DataStrategyResult[] (parallel to matches ) to a key/value object of routeId => unstable_DataStrategyResult This allows you to more easily decide to opt-into or out-of revalidating data that may not have been revalidated by default (via match.shouldLoad ) \u26a0\ufe0f This is a breaking change if you've currently adopted unstable_dataStrategy Added a new fetcherKey parameter to unstable_dataStrategy to allow differentiation from navigational and fetcher calls You should now return/throw a result from your handlerOverride instead of returning a DataStrategyResult If you are aggregating the results of match.resolve() into a final results object you should not need to think about the DataStrategyResult type If you are manually filling your results object from within your handlerOverride , then you will need to assign a DataStrategyResult as the value so React Router knows if it's a successful execution or an error. Preserve view transition through redirects ( #11925 ) Fix blocker usage when blocker.proceed is called quickly/synchronously ( #11930 ) Preserve pending view transitions through a router revalidation call ( #11917 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1191","text":"","title":"1.19.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_2","text":"Fog of War: Update unstable_patchRoutesOnMiss logic so that we call the method when we match routes with dynamic param or splat segments in case there exists a higher-scoring static route that we've not yet discovered. ( #11883 ) We also now leverage an internal FIFO queue of previous paths we've already called unstable_patchRouteOnMiss against so that we don't re-call on subsequent navigations to the same path Rename unstable_patchRoutesOnMiss to unstable_patchRoutesOnNavigation to match new behavior ( #11888 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1190","text":"","title":"1.19.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_1","text":"Add a new replace(url, init?) alternative to redirect(url, init?) that performs a history.replaceState instead of a history.pushState on client-side navigation redirects ( #11811 ) Add a new unstable_data() API for usage with Remix Single Fetch ( #11836 ) This API is not intended for direct usage in React Router SPA applications It is primarily intended for usage with createStaticHandler.query() to allow loaders/actions to return arbitrary data + status / headers without forcing the serialization of data into a Response instance This allows for more advanced serialization tactics via unstable_dataStrategy such as serializing via turbo-stream in Remix Single Fetch \u26a0\ufe0f This removes the status field from HandlerResult If you need to return a specific status from unstable_dataStrategy you should instead do so via unstable_data()","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_3","text":"Fix internal cleanup of interrupted fetchers to avoid invalid revalidations on navigations ( #11839 ) When a fetcher.load is interrupted by an action submission, we track it internally and force revalidation once the action completes We previously only cleared out this internal tracking info on a successful navigation submission Therefore, if the fetcher.load was interrupted by a fetcher.submit , then we wouldn't remove it from this internal tracking info on successful load (incorrectly) And then on the next navigation it's presence in the internal tracking would automatically trigger execution of the fetcher.load again, ignoring any shouldRevalidate logic This fix cleans up the internal tracking so it applies to both navigation submission and fetcher submissions Fix initial hydration behavior when using future.v7_partialHydration along with unstable_patchRoutesOnMiss ( #11838 ) During initial hydration, router.state.matches will now include any partial matches so that we can render ancestor HydrateFallback components","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1180","text":"","title":"1.18.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_2","text":"Stabilize future.unstable_skipActionErrorRevalidation as future.v7_skipActionErrorRevalidation ( #11769 ) When this flag is enabled, actions will not automatically trigger a revalidation if they return/throw a Response with a 4xx / 5xx status code You may still opt-into revalidation via shouldRevalidate This also changes shouldRevalidate 's unstable_actionStatus parameter to actionStatus","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_4","text":"Fix bubbling of errors thrown from unstable_patchRoutesOnMiss ( #11786 ) Fix hydration in SSR apps using unstable_patchRoutesOnMiss that matched a splat route on the server ( #11790 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1171","text":"","title":"1.17.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_5","text":"Fog of War (unstable): Trigger a new router.routes identity/reflow during route patching ( #11740 ) Fog of War (unstable): Fix initial matching when a splat route matches ( #11759 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1170","text":"","title":"1.17.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_3","text":"Add support for Lazy Route Discovery (a.k.a. Fog of War) ( #11626 ) RFC: https://github.com/remix-run/react-router/discussions/11113 unstable_patchRoutesOnMiss docs: https://reactrouter.com/en/main/routers/create-browser-router","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1161","text":"","title":"1.16.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_6","text":"Support unstable_dataStrategy on staticHandler.queryRoute ( #11515 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1160","text":"","title":"1.16.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_4","text":"Add a new unstable_dataStrategy configuration option ( #11098 ) This option allows Data Router applications to take control over the approach for executing route loaders and actions The default implementation is today's behavior, to fetch all loaders in parallel, but this option allows users to implement more advanced data flows including Remix single-fetch, middleware/context APIs, automatic loader caching, and more Move unstable_dataStrategy from createStaticHandler to staticHandler.query so it can be request-specific for use with the ResponseStub approach in Remix. It's not really applicable to queryRoute for now since that's a singular handler call anyway so any pre-processing/post/processing could be done there manually. ( #11377 ) Add a new future.unstable_skipActionRevalidation future flag ( #11098 ) Currently, active loaders revalidate after any action, regardless of the result With this flag enabled, actions that return/throw a 4xx/5xx response status will no longer automatically revalidate This should reduce load on your server since it's rare that a 4xx/5xx should actually mutate any data If you need to revalidate after a 4xx/5xx result with this flag enabled, you can still do that via returning true from shouldRevalidate shouldRevalidate now also receives a new unstable_actionStatus argument alongside actionResult so you can make decision based on the status of the action response without having to encode it into the action data Added a skipLoaderErrorBubbling flag to staticHandler.query to disable error bubbling on loader executions for single-fetch scenarios where the client-side router will handle the bubbling ( #11098 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1153","text":"","title":"1.15.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_7","text":"Fix a future.v7_partialHydration bug that would re-run loaders below the boundary on hydration if SSR loader errors bubbled to a parent boundary ( #11324 ) Fix a future.v7_partialHydration bug that would consider the router uninitialized if a route did not have a loader ( #11325 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1152","text":"","title":"1.15.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_8","text":"Preserve hydrated errors during partial hydration runs ( #11305 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1151","text":"","title":"1.15.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_9","text":"Fix encoding/decoding issues with pre-encoded dynamic parameter values ( #11199 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1150","text":"","title":"1.15.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_5","text":"Add a createStaticHandler future.v7_throwAbortReason flag to throw request.signal.reason (defaults to a DOMException ) when a request is aborted instead of an Error such as new Error(\"query() call aborted: GET /path\") ( #11104 ) Please note that DOMException was added in Node v17 so you will not get a DOMException on Node 16 and below.","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_10","text":"Respect the ErrorResponse status code if passed to getStaticContextFormError ( #11213 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1142","text":"","title":"1.14.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_11","text":"Fix bug where dashes were not picked up in dynamic parameter names ( #11160 ) Do not attempt to deserialize empty JSON responses ( #11164 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1141","text":"","title":"1.14.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_12","text":"Fix bug with route.lazy not working correctly on initial SPA load when v7_partialHydration is specified ( #11121 ) Fix bug preventing revalidation from occurring for persisted fetchers unmounted during the submitting phase ( #11102 ) De-dup relative path logic in resolveTo ( #11097 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1140","text":"","title":"1.14.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_6","text":"Added a new future.v7_partialHydration future flag that enables partial hydration of a data router when Server-Side Rendering. This allows you to provide hydrationData.loaderData that has values for some initially matched route loaders, but not all. When this flag is enabled, the router will call loader functions for routes that do not have hydration loader data during router.initialize() , and it will render down to the deepest provided HydrateFallback (up to the first route without hydration data) while it executes the unhydrated routes. ( #11033 ) For example, the following router has a root and index route, but only provided hydrationData.loaderData for the root route. Because the index route has a loader , we need to run that during initialization. With future.v7_partialHydration specified, <RouterProvider> will render the RootComponent (because it has data) and then the IndexFallback (since it does not have data). Once indexLoader finishes, application will update and display IndexComponent . jsx let router = createBrowserRouter( [ { id: \"root\", path: \"/\", loader: rootLoader, Component: RootComponent, Fallback: RootFallback, children: [ { id: \"index\", index: true, loader: indexLoader, Component: IndexComponent, HydrateFallback: IndexFallback, }, ], }, ], { future: { v7_partialHydration: true, }, hydrationData: { loaderData: { root: { message: \"Hydrated from Root!\" }, }, }, } ); If the above example did not have an IndexFallback , then RouterProvider would instead render the RootFallback while it executed the indexLoader . Note: When future.v7_partialHydration is provided, the <RouterProvider fallbackElement> prop is ignored since you can move it to a Fallback on your top-most route. The fallbackElement prop will be removed in React Router v7 when v7_partialHydration behavior becomes the standard behavior. Add a new future.v7_relativeSplatPath flag to implement a breaking bug fix to relative routing when inside a splat route. ( #11087 ) This fix was originally added in #10983 and was later reverted in #11078 because it was determined that a large number of existing applications were relying on the buggy behavior (see #11052 ) The Bug The buggy behavior is that without this flag, the default behavior when resolving relative paths is to ignore any splat ( * ) portion of the current route path. The Background This decision was originally made thinking that it would make the concept of nested different sections of your apps in <Routes> easier if relative routing would replace the current splat: jsx <BrowserRouter> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"dashboard/*\" element={<Dashboard />} /> </Routes> </BrowserRouter> Any paths like /dashboard , /dashboard/team , /dashboard/projects will match the Dashboard route. The dashboard component itself can then render nested <Routes> : ```jsx function Dashboard() { return (","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_13","text":"Catch and bubble errors thrown when trying to unwrap responses from loader / action functions ( #11061 ) Fix relative=\"path\" issue when rendering Link / NavLink outside of matched routes ( #11062 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1131","text":"","title":"1.13.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_14","text":"Revert the useResolvedPath fix for splat routes due to a large number of applications that were relying on the buggy behavior (see https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329 ). We plan to re-introduce this fix behind a future flag in the next minor version. ( #11078 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1130","text":"","title":"1.13.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_7","text":"Export the PathParam type from the public API ( #10719 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_15","text":"Fix bug with resolveTo in splat routes ( #11045 ) This is a follow up to #10983 to handle the few other code paths using getPathContributingMatches This removes the UNSAFE_getPathContributingMatches export from @remix-run/router since we no longer need this in the react-router / react-router-dom layers Do not revalidate unmounted fetchers when v7_fetcherPersist is enabled ( #11044 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1120","text":"","title":"1.12.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_8","text":"Add unstable_flushSync option to router.navigate and router.fetch to tell the React Router layer to opt-out of React.startTransition and into ReactDOM.flushSync for state updates ( #11005 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_16","text":"Fix relative=\"path\" bug where relative path calculations started from the full location pathname, instead of from the current contextual route pathname. ( #11006 ) ```jsx }> ; function Component() { return ( <> {/ This is now correctly relative to /a/b, not /a/b/c /} ); } ```","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1110","text":"","title":"1.11.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_9","text":"Add a new future.v7_fetcherPersist flag to the @remix-run/router to change the persistence behavior of fetchers when router.deleteFetcher is called. Instead of being immediately cleaned up, fetchers will persist until they return to an idle state ( RFC ) ( #10962 ) This is sort of a long-standing bug fix as the useFetchers() API was always supposed to only reflect in-flight fetcher information for pending/optimistic UI -- it was not intended to reflect fetcher data or hang onto fetchers after they returned to an idle state Keep an eye out for the following specific behavioral changes when opting into this flag and check your app for compatibility: Fetchers that complete while still mounted will no longer appear in useFetchers() . They served effectively no purpose in there since you can access the data via useFetcher().data ). Fetchers that previously unmounted while in-flight will not be immediately aborted and will instead be cleaned up once they return to an idle state. They will remain exposed via useFetchers while in-flight so you can still access pending/optimistic data after unmount. When v7_fetcherPersist is enabled, the router now performs ref-counting on fetcher keys via getFetcher / deleteFetcher so it knows when a given fetcher is totally unmounted from the UI ( #10977 ) Once a fetcher has been totally unmounted, we can ignore post-processing of a persisted fetcher result such as a redirect or an error The router will also pass a new deletedFetchers array to the subscriber callbacks so that the UI layer can remove associated fetcher data Add support for optional path segments in matchPath ( #10768 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_17","text":"Fix router.getFetcher / router.deleteFetcher type definitions which incorrectly specified key as an optional parameter ( #10960 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#1100","text":"","title":"1.10.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_10","text":"Add experimental support for the View Transitions API by allowing users to opt-into view transitions on navigations via the new unstable_viewTransition option to router.navigate ( #10916 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_18","text":"Allow 404 detection to leverage root route error boundary if path contains a URL segment ( #10852 ) Fix ErrorResponse type to avoid leaking internal field ( #10876 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#190","text":"","title":"1.9.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_11","text":"In order to move towards stricter TypeScript support in the future, we're aiming to replace current usages of any with unknown on exposed typings for user-provided data. To do this in Remix v2 without introducing breaking changes in React Router v6, we have added generics to a number of shared types. These continue to default to any in React Router and are overridden with unknown in Remix. In React Router v7 we plan to move these to unknown as a breaking change. ( #10843 ) Location now accepts a generic for the location.state value ActionFunctionArgs / ActionFunction / LoaderFunctionArgs / LoaderFunction now accept a generic for the context parameter (only used in SSR usages via createStaticHandler ) The return type of useMatches (now exported as UIMatch ) accepts generics for match.data and match.handle - both of which were already set to unknown Move the @private class export ErrorResponse to an UNSAFE_ErrorResponseImpl export since it is an implementation detail and there should be no construction of ErrorResponse instances in userland. This frees us up to export a type ErrorResponse which correlates to an instance of the class via InstanceType . Userland code should only ever be using ErrorResponse as a type and should be type-narrowing via isRouteErrorResponse . ( #10811 ) Export ShouldRevalidateFunctionArgs interface ( #10797 ) Removed private/internal APIs only required for the Remix v1 backwards compatibility layer and no longer needed in Remix v2 ( _isFetchActionRedirect , _hasFetcherDoneAnything ) ( #10715 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_19","text":"Add method/url to error message on aborted query / queryRoute calls ( #10793 ) Fix a race-condition with loader/action-thrown errors on route.lazy routes ( #10778 ) Fix type for actionResult on the arguments object passed to shouldRevalidate ( #10779 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#180","text":"","title":"1.8.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_12","text":"Add's a new redirectDocument() function which allows users to specify that a redirect from a loader / action should trigger a document reload (via window.location ) instead of attempting to navigate to the redirected location via React Router ( #10705 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_20","text":"Fix an issue in queryRoute that was not always identifying thrown Response instances ( #10717 ) Ensure hash history always includes a leading slash on hash pathnames ( #10753 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#172","text":"","title":"1.7.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_21","text":"Trigger an error if a defer promise resolves/rejects with undefined in order to match the behavior of loaders and actions which must return a value or null ( #10690 ) Properly handle fetcher redirects interrupted by normal navigations ( #10674 , #10709 ) Initial-load fetchers should not automatically revalidate on GET navigations ( #10688 ) Enhance the return type of Route.lazy to prohibit returning an empty object ( #10634 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#171","text":"","title":"1.7.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_22","text":"Fix issues with reused blockers on subsequent navigations ( #10656 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#170","text":"","title":"1.7.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_13","text":"Add support for application/json and text/plain encodings for router.navigate / router.fetch submissions. To leverage these encodings, pass your data in a body parameter and specify the desired formEncType : ( #10413 ) ```js // By default, the encoding is \"application/x-www-form-urlencoded\" router.navigate(\"/\", { formMethod: \"post\", body: { key: \"value\" }, }); async function action({ request }) { // await request.formData() => FormData instance with entry [key=value] } ``` ``js // Pass formEncType` to opt-into a different encoding (json) router.navigate(\"/\", { formMethod: \"post\", formEncType: \"application/json\", body: { key: \"value\" }, }); async function action({ request }) { // await request.json() => { key: \"value\" } } ``` ``js // Pass formEncType` to opt-into a different encoding (text) router.navigate(\"/\", { formMethod: \"post\", formEncType: \"text/plain\", body: \"Text submission\", }); async function action({ request }) { // await request.text() => \"Text submission\" } ```","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_23","text":"Call window.history.pushState/replaceState before updating React Router state (instead of after) so that window.location matches useLocation during synchronous React 17 rendering ( #10448 ) \u26a0\ufe0f However, generally apps should not be relying on window.location and should always reference useLocation when possible, as window.location will not be in sync 100% of the time (due to popstate events, concurrent mode, etc.) Strip basename from the location provided to <ScrollRestoration getKey> to match the useLocation behavior ( #10550 ) Avoid calling shouldRevalidate for fetchers that have not yet completed a data load ( #10623 ) Fix unstable_useBlocker key issues in StrictMode ( #10573 ) Upgrade typescript to 5.1 ( #10581 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#163","text":"","title":"1.6.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_24","text":"Allow fetcher revalidations to complete if submitting fetcher is deleted ( #10535 ) Re-throw DOMException ( DataCloneError ) when attempting to perform a PUSH navigation with non-serializable state. ( #10427 ) Ensure revalidations happen when hash is present ( #10516 ) upgrade jest and jsdom ( #10453 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#162","text":"","title":"1.6.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_25","text":"Fix HMR-driven error boundaries by properly reconstructing new routes and manifest in \\_internalSetRoutes ( #10437 ) Fix bug where initial data load would not kick off when hash is present ( #10493 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#161","text":"","title":"1.6.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_26","text":"Fix basename handling when navigating without a path ( #10433 ) \"Same hash\" navigations no longer re-run loaders to match browser behavior (i.e. /path#hash -> /path#hash ) ( #10408 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#160","text":"","title":"1.6.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_14","text":"Enable relative routing in the @remix-run/router when providing a source route ID from which the path is relative to: ( #10336 ) Example: router.navigate(\"../path\", { fromRouteId: \"some-route\" }) . This also applies to router.fetch which already receives a source route ID Introduce a new @remix-run/router future.v7_prependBasename flag to enable basename prefixing to all paths coming into router.navigate and router.fetch . Previously the basename was prepended in the React Router layer, but now that relative routing is being handled by the router we need prepend the basename after resolving any relative paths This also enables basename support in useFetcher as well","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_27","text":"Enhance LoaderFunction / ActionFunction return type to prevent undefined from being a valid return value ( #10267 ) Ensure proper 404 error on fetcher.load call to a route without a loader ( #10345 ) Deprecate the createRouter detectErrorBoundary option in favor of the new mapRouteProperties option for converting a framework-agnostic route to a framework-aware route. This allows us to set more than just the hasErrorBoundary property during route pre-processing, and is now used for mapping Component -> element and ErrorBoundary -> errorElement in react-router . ( #10287 ) Fixed a bug where fetchers were incorrectly attempting to revalidate on search params changes or routing to the same URL (using the same logic for route loader revalidations). However, since fetchers have a static href, they should only revalidate on action submissions or router.revalidate calls. ( #10344 ) Decouple AbortController usage between revalidating fetchers and the thing that triggered them such that the unmount/deletion of a revalidating fetcher doesn't impact the ongoing triggering navigation/revalidation ( #10271 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#150","text":"","title":"1.5.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_15","text":"Added support for Future Flags in React Router. The first flag being introduced is future.v7_normalizeFormMethod which will normalize the exposed useNavigation()/useFetcher() formMethod fields as uppercase HTTP methods to align with the fetch() behavior. ( #10207 ) When future.v7_normalizeFormMethod === false (default v6 behavior), useNavigation().formMethod is lowercase useFetcher().formMethod is lowercase When future.v7_normalizeFormMethod === true : useNavigation().formMethod is uppercase useFetcher().formMethod is uppercase","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_28","text":"Provide fetcher submission to shouldRevalidate if the fetcher action redirects ( #10208 ) Properly handle lazy() errors during router initialization ( #10201 ) Remove instanceof check for DeferredData to be resilient to ESM/CJS boundaries in SSR bundling scenarios ( #10247 ) Update to latest @remix-run/web-fetch@4.3.3 ( #10216 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#140","text":"","title":"1.4.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_16","text":"Introducing Lazy Route Modules! ( #10045 ) In order to keep your application bundles small and support code-splitting of your routes, we've introduced a new lazy() route property. This is an async function that resolves the non-route-matching portions of your route definition ( loader , action , element / Component , errorElement / ErrorBoundary , shouldRevalidate , handle ). Lazy routes are resolved on initial load and during the loading or submitting phase of a navigation or fetcher call. You cannot lazily define route-matching properties ( path , index , children ) since we only execute your lazy route functions after we've matched known routes. Your lazy functions will typically return the result of a dynamic import. jsx // In this example, we assume most folks land on the homepage so we include that // in our critical-path bundle, but then we lazily load modules for /a and /b so // they don't load until the user navigates to those routes let routes = createRoutesFromElements( <Route path=\"/\" element={<Layout />}> <Route index element={<Home />} /> <Route path=\"a\" lazy={() => import(\"./a\")} /> <Route path=\"b\" lazy={() => import(\"./b\")} /> </Route> ); Then in your lazy route modules, export the properties you want defined for the route: ```jsx export async function loader({ request }) { let data = await fetchData(request); return json(data); } // Export a Component directly instead of needing to create a React Element from it export function Component() { let data = useLoaderData(); return ( <> <h1>You made it!</h1> <p>{data}</p> ); } // Export an ErrorBoundary directly instead of needing to create a React Element from it export function ErrorBoundary() { let error = useRouteError(); return isRouteErrorResponse(error) ? (","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_29","text":"Fix generatePath incorrectly applying parameters in some cases ( #10078 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#133","text":"","title":"1.3.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_30","text":"Correctly perform a hard redirect for same-origin absolute URLs outside of the router basename ( #10076 ) Ensure status code and headers are maintained for defer loader responses in createStaticHandler 's query() method ( #10077 ) Change invariant to an UNSAFE_invariant export since it's only intended for internal use ( #10066 ) Add internal API for custom HMR implementations ( #9996 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#132","text":"","title":"1.3.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_31","text":"Remove inaccurate console warning for POP navigations and update active blocker logic ( #10030 ) Only check for differing origin on absolute URL redirects ( #10033 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#131","text":"","title":"1.3.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_32","text":"Fixes 2 separate issues for revalidating fetcher shouldRevalidate calls ( #9948 ) The shouldRevalidate function was only being called for explicit revalidation scenarios (after a mutation, manual useRevalidator call, or an X-Remix-Revalidate header used for cookie setting in Remix). It was not properly being called on implicit revalidation scenarios that also apply to navigation loader revalidation, such as a change in search params or clicking a link for the page we're already on. It's now correctly called in those additional scenarios. The parameters being passed were incorrect and inconsistent with one another since the current* / next* parameters reflected the static fetcher.load URL (and thus were identical). Instead, they should have reflected the the navigation that triggered the revalidation (as the form* parameters did). These parameters now correctly reflect the triggering navigation. Respect preventScrollReset on <fetcher.Form> ( #9963 ) Do not short circuit on hash change only mutation submissions ( #9944 ) Remove instanceof check from isRouteErrorResponse to avoid bundling issues on the server ( #9930 ) Fix navigation for hash routers on manual URL changes ( #9980 ) Detect when a defer call only contains critical data and remove the AbortController ( #9965 ) Send the name as the value when url-encoding File FormData entries ( #9867 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#130","text":"","title":"1.3.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_17","text":"Added support for navigation blocking APIs ( #9709 ) Expose deferred information from createStaticHandler ( #9760 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_33","text":"Improved absolute redirect url detection in actions/loaders ( #9829 ) Fix URL creation with memory histories ( #9814 ) Fix generatePath when optional params are present ( #9764 ) Fix scroll reset if a submission redirects ( #9886 ) Fix 404 bug with same-origin absolute redirects ( #9913 ) Support OPTIONS requests in staticHandler.queryRoute ( #9914 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#121","text":"","title":"1.2.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_34","text":"Include submission info in shouldRevalidate on action redirects ( #9777 , #9782 ) Reset actionData on action redirect to current location ( #9772 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#120","text":"","title":"1.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_18","text":"Remove unstable_ prefix from createStaticHandler / createStaticRouter / StaticRouterProvider ( #9738 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_35","text":"Fix explicit replace on submissions and PUSH on submission to new paths ( #9734 ) Fix a few bugs where loader/action data wasn't properly cleared on errors ( #9735 ) Prevent useLoaderData usage in errorElement ( #9735 ) Skip initial scroll restoration for SSR apps with hydrationData ( #9664 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#110","text":"This release introduces support for Optional Route Segments . Now, adding a ? to the end of any path segment will make that entire segment optional. This works for both static segments and dynamic parameters. Optional Params Examples Path lang?/about will match: /:lang/about /about Path /multistep/:widget1?/widget2?/widget3? will match: /multistep /multistep/:widget1 /multistep/:widget1/:widget2 /multistep/:widget1/:widget2/:widget3 Optional Static Segment Example Path /home? will match: / /home Path /fr?/about will match: /about /fr/about","title":"1.1.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#minor-changes_19","text":"Allows optional routes and optional static segments ( #9650 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_36","text":"Stop incorrectly matching on partial named parameters, i.e. <Route path=\"prefix-:param\"> , to align with how splat parameters work. If you were previously relying on this behavior then it's recommended to extract the static portion of the path at the useParams call site: ( #9506 ) // Old behavior at URL /prefix-123 <Route path=\"prefix-:id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: '123' } let id = params.id; // \"123\" ... } // New behavior at URL /prefix-123 <Route path=\":id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: 'prefix-123' } let id = params.id.replace(/^prefix-/, ''); // \"123\" ... } Persist headers on loader request 's after SSR document action request ( #9721 ) Fix requests sent to revalidating loaders so they reflect a GET request ( #9660 ) Fix issue with deeply nested optional segments ( #9727 ) GET forms now expose a submission on the loading navigation ( #9695 ) Fix error boundary tracking for multiple errors bubbling to the same boundary ( #9702 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#105","text":"","title":"1.0.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_37","text":"Fix requests sent to revalidating loaders so they reflect a GET request ( #9680 ) Remove instanceof Response checks in favor of isResponse ( #9690 ) Fix URL creation in Cloudflare Pages or other non-browser-environments ( #9682 , #9689 ) Add requestContext support to static handler query / queryRoute ( #9696 ) Note that the unstable API of queryRoute(path, routeId) has been changed to queryRoute(path, { routeId, requestContext })","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#104","text":"","title":"1.0.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_38","text":"Throw an error if an action / loader function returns undefined as revalidations need to know whether the loader has previously been executed. undefined also causes issues during SSR stringification for hydration. You should always ensure you loader / action returns a value, and you may return null if you don't wish to return anything. ( #9511 ) Properly handle redirects to external domains ( #9590 , #9654 ) Preserve the HTTP method on 307/308 redirects ( #9597 ) Support basename in static data routers ( #9591 ) Enhanced ErrorResponse bodies to contain more descriptive text in internal 403/404/405 scenarios","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#103","text":"","title":"1.0.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_39","text":"Fix hrefs generated when using createHashRouter ( #9409 ) fix encoding/matching issues with special chars ( #9477 , #9496 ) Support basename and relative routing in loader / action redirects ( #9447 ) Ignore pathless layout routes when looking for proper submission action function ( #9455 ) properly support index routes with a path in useResolvedPath ( #9486 ) Add UMD build for @remix-run/router ( #9446 ) fix createURL in local file execution in Firefox ( #9464 ) Updates to unstable_createStaticHandler for incorporating into Remix ( #9482 , #9465 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#102","text":"","title":"1.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_40","text":"Reset actionData after a successful action redirect ( #9334 ) Update matchPath to avoid false positives on dash-separated segments ( #9300 ) If an index route has children, it will result in a runtime error. We have strengthened our RouteObject / RouteProps types to surface the error in TypeScript. ( #9366 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#101","text":"","title":"1.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#patch-changes_41","text":"Preserve state from initialEntries ( #9288 ) Preserve ?index for fetcher get submissions to index routes ( #9312 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/CHANGELOG/#100","text":"This is the first stable release of @remix-run/router , which provides all the underlying routing and data loading/mutation logic for react-router . You should not be using this package directly unless you are authoring a routing library similar to react-router . For an overview of the features provided by react-router , we recommend you go check out the docs , especially the feature overview and the tutorial . For an overview of the features provided by @remix-run/router , please check out the README .","title":"1.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40remix-run/router/LICENSE/","text":"MIT License Copyright (c) React Training LLC 2015-2019 Copyright (c) Remix Software Inc. 2020-2021 Copyright (c) Shopify Inc. 2022-2023 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40rollup/rollup-win32-x64-msvc/","text":"@rollup/rollup-win32-x64-msvc This is the x86_64-pc-windows-msvc binary for rollup","title":"@rollup/rollup-win32-x64-msvc"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40rollup/rollup-win32-x64-msvc/#rolluprollup-win32-x64-msvc","text":"This is the x86_64-pc-windows-msvc binary for rollup","title":"@rollup/rollup-win32-x64-msvc"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__core/","text":"Installation npm install --save @types/babel__core Summary This package contains type definitions for @babel/core (https://github.com/babel/babel/tree/master/packages/babel-core). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__core. Additional Details Last updated: Mon, 20 Nov 2023 23:36:23 GMT Dependencies: @babel/parser , @babel/types , @types/babel__generator , @types/babel__template , @types/babel__traverse Credits These definitions were written by Troy Gerwien , Marvin Hagemeister , Melvin Groenhoff , Jessica Franco , and Ifiok Jr. .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__core/#installation","text":"npm install --save @types/babel__core","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__core/#summary","text":"This package contains type definitions for @babel/core (https://github.com/babel/babel/tree/master/packages/babel-core).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__core/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__core.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__core/#additional-details","text":"Last updated: Mon, 20 Nov 2023 23:36:23 GMT Dependencies: @babel/parser , @babel/types , @types/babel__generator , @types/babel__template , @types/babel__traverse","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__core/#credits","text":"These definitions were written by Troy Gerwien , Marvin Hagemeister , Melvin Groenhoff , Jessica Franco , and Ifiok Jr. .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__generator/","text":"Installation npm install --save @types/babel__generator Summary This package contains type definitions for @babel/generator (https://github.com/babel/babel/tree/master/packages/babel-generator). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__generator. Additional Details Last updated: Sat, 16 Dec 2023 09:06:45 GMT Dependencies: @babel/types Credits These definitions were written by Troy Gerwien , Melvin Groenhoff , Cameron Yan , and Lyanbin .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__generator/#installation","text":"npm install --save @types/babel__generator","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__generator/#summary","text":"This package contains type definitions for @babel/generator (https://github.com/babel/babel/tree/master/packages/babel-generator).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__generator/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__generator.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__generator/#additional-details","text":"Last updated: Sat, 16 Dec 2023 09:06:45 GMT Dependencies: @babel/types","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__generator/#credits","text":"These definitions were written by Troy Gerwien , Melvin Groenhoff , Cameron Yan , and Lyanbin .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__template/","text":"Installation npm install --save @types/babel__template Summary This package contains type definitions for @babel/template (https://github.com/babel/babel/tree/master/packages/babel-template). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__template. Additional Details Last updated: Mon, 06 Nov 2023 22:41:04 GMT Dependencies: @babel/parser , @babel/types Credits These definitions were written by Troy Gerwien , Marvin Hagemeister , Melvin Groenhoff , and ExE Boss .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__template/#installation","text":"npm install --save @types/babel__template","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__template/#summary","text":"This package contains type definitions for @babel/template (https://github.com/babel/babel/tree/master/packages/babel-template).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__template/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__template.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__template/#additional-details","text":"Last updated: Mon, 06 Nov 2023 22:41:04 GMT Dependencies: @babel/parser , @babel/types","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__template/#credits","text":"These definitions were written by Troy Gerwien , Marvin Hagemeister , Melvin Groenhoff , and ExE Boss .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__traverse/","text":"Installation npm install --save @types/babel__traverse Summary This package contains type definitions for @babel/traverse (https://github.com/babel/babel/tree/main/packages/babel-traverse). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__traverse. Additional Details Last updated: Tue, 21 May 2024 21:07:11 GMT Dependencies: @babel/types Credits These definitions were written by Troy Gerwien , Marvin Hagemeister , Ryan Petrich , Melvin Groenhoff , Dean L. , Ifiok Jr. , ExE Boss , and Daniel Tschinder .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__traverse/#installation","text":"npm install --save @types/babel__traverse","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__traverse/#summary","text":"This package contains type definitions for @babel/traverse (https://github.com/babel/babel/tree/main/packages/babel-traverse).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__traverse/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/babel__traverse.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__traverse/#additional-details","text":"Last updated: Tue, 21 May 2024 21:07:11 GMT Dependencies: @babel/types","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/babel__traverse/#credits","text":"These definitions were written by Troy Gerwien , Marvin Hagemeister , Ryan Petrich , Melvin Groenhoff , Dean L. , Ifiok Jr. , ExE Boss , and Daniel Tschinder .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/estree/","text":"Installation npm install --save @types/estree Summary This package contains type definitions for estree (https://github.com/estree/estree). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/estree. Additional Details Last updated: Wed, 18 Sep 2024 09:37:00 GMT Dependencies: none Credits These definitions were written by RReverser .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/estree/#installation","text":"npm install --save @types/estree","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/estree/#summary","text":"This package contains type definitions for estree (https://github.com/estree/estree).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/estree/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/estree.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/estree/#additional-details","text":"Last updated: Wed, 18 Sep 2024 09:37:00 GMT Dependencies: none","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/estree/#credits","text":"These definitions were written by RReverser .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/json-schema/","text":"Installation npm install --save @types/json-schema Summary This package contains type definitions for json-schema (https://github.com/kriszyp/json-schema). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/json-schema. Additional Details Last updated: Tue, 07 Nov 2023 03:09:37 GMT Dependencies: none Credits These definitions were written by Boris Cherny , Lucian Buzzo , Roland Groza , and Jason Kwok .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/json-schema/#installation","text":"npm install --save @types/json-schema","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/json-schema/#summary","text":"This package contains type definitions for json-schema (https://github.com/kriszyp/json-schema).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/json-schema/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/json-schema.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/json-schema/#additional-details","text":"Last updated: Tue, 07 Nov 2023 03:09:37 GMT Dependencies: none","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/json-schema/#credits","text":"These definitions were written by Boris Cherny , Lucian Buzzo , Roland Groza , and Jason Kwok .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/prop-types/","text":"Installation npm install --save @types/prop-types Summary This package contains type definitions for prop-types (https://github.com/facebook/prop-types). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/prop-types. Additional Details Last updated: Mon, 16 Sep 2024 19:07:13 GMT Dependencies: none Credits These definitions were written by DovydasNavickas , Ferdy Budhidharma , and Sebastian Silbermann .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/prop-types/#installation","text":"npm install --save @types/prop-types","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/prop-types/#summary","text":"This package contains type definitions for prop-types (https://github.com/facebook/prop-types).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/prop-types/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/prop-types.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/prop-types/#additional-details","text":"Last updated: Mon, 16 Sep 2024 19:07:13 GMT Dependencies: none","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/prop-types/#credits","text":"These definitions were written by DovydasNavickas , Ferdy Budhidharma , and Sebastian Silbermann .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react/","text":"Installation npm install --save @types/react Summary This package contains type definitions for react (https://react.dev/). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react. Additional Details Last updated: Wed, 02 Oct 2024 15:37:33 GMT Dependencies: @types/prop-types , csstype Credits These definitions were written by Asana , AssureSign , Microsoft , John Reilly , Benoit Benezech , Patricio Zavolinsky , Eric Anderson , Dovydas Navickas , Josh Rutherford , Guilherme H\u00fcbner , Ferdy Budhidharma , Johann Rakotoharisoa , Olivier Pascal , Martin Hochel , Frank Li , Jessica Franco , Saransh Kataria , Kanitkorn Sujautra , Sebastian Silbermann , Kyle Scully , Cong Zhang , Dimitri Mitropoulos , JongChan Choi , Victor Magalh\u00e3es , Priyanshu Rav , Dmitry Semigradsky , and Matt Pocock .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react/#installation","text":"npm install --save @types/react","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react/#summary","text":"This package contains type definitions for react (https://react.dev/).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react/#additional-details","text":"Last updated: Wed, 02 Oct 2024 15:37:33 GMT Dependencies: @types/prop-types , csstype","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react/#credits","text":"These definitions were written by Asana , AssureSign , Microsoft , John Reilly , Benoit Benezech , Patricio Zavolinsky , Eric Anderson , Dovydas Navickas , Josh Rutherford , Guilherme H\u00fcbner , Ferdy Budhidharma , Johann Rakotoharisoa , Olivier Pascal , Martin Hochel , Frank Li , Jessica Franco , Saransh Kataria , Kanitkorn Sujautra , Sebastian Silbermann , Kyle Scully , Cong Zhang , Dimitri Mitropoulos , JongChan Choi , Victor Magalh\u00e3es , Priyanshu Rav , Dmitry Semigradsky , and Matt Pocock .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react-dom/","text":"Installation npm install --save @types/react-dom Summary This package contains type definitions for react-dom (https://reactjs.org). Details Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-dom. Additional Details Last updated: Thu, 25 Apr 2024 20:07:03 GMT Dependencies: @types/react Credits These definitions were written by Asana , AssureSign , Microsoft , MartynasZilinskas , Josh Rutherford , Jessica Franco , and Sebastian Silbermann .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react-dom/#installation","text":"npm install --save @types/react-dom","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react-dom/#summary","text":"This package contains type definitions for react-dom (https://reactjs.org).","title":"Summary"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react-dom/#details","text":"Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-dom.","title":"Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react-dom/#additional-details","text":"Last updated: Thu, 25 Apr 2024 20:07:03 GMT Dependencies: @types/react","title":"Additional Details"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40types/react-dom/#credits","text":"These definitions were written by Asana , AssureSign , Microsoft , MartynasZilinskas , Josh Rutherford , Jessica Franco , and Sebastian Silbermann .","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/","text":"@vitejs/plugin-react The default Vite plugin for React projects. enable Fast Refresh in development (requires react >= 16.9) use the automatic JSX runtime use custom Babel plugins/presets small installation size // vite.config.js import { defineConfig } from 'vite' import react from '@vitejs/plugin-react' export default defineConfig({ plugins: [react()], }) Options include/exclude Includes .js , .jsx , .ts & .tsx by default. This option can be used to add fast refresh to .mdx files: import { defineConfig } from 'vite' import react from '@vitejs/plugin-react' import mdx from '@mdx-js/rollup' export default defineConfig({ plugins: [ { enforce: 'pre', ...mdx() }, react({ include: /\\.(mdx|js|jsx|ts|tsx)$/ }), ], }) node_modules are never processed by this plugin (but esbuild will) jsxImportSource Control where the JSX factory is imported from. Default to 'react' react({ jsxImportSource: '@emotion/react' }) jsxRuntime By default, the plugin uses the automatic JSX runtime . However, if you encounter any issues, you may opt out using the jsxRuntime option. react({ jsxRuntime: 'classic' }) babel The babel option lets you add plugins, presets, and other configuration to the Babel transformation performed on each included file. react({ babel: { presets: [...], // Your plugins run before any built-in transform (eg: Fast Refresh) plugins: [...], // Use .babelrc files babelrc: true, // Use babel.config.js files configFile: true, } }) Note: When not using plugins, only esbuild is used for production builds, resulting in faster builds. Proposed syntax If you are using ES syntax that are still in proposal status (e.g. class properties), you can selectively enable them with the babel.parserOpts.plugins option: react({ babel: { parserOpts: { plugins: ['decorators-legacy'], }, }, }) This option does not enable code transformation . That is handled by esbuild. Note: TypeScript syntax is handled automatically. Here's the complete list of Babel parser plugins . Middleware mode In middleware mode , you should make sure your entry index.html file is transformed by Vite. Here's an example for an Express server: app.get('/', async (req, res, next) => { try { let html = fs.readFileSync(path.resolve(root, 'index.html'), 'utf-8') // Transform HTML using Vite plugins. html = await viteServer.transformIndexHtml(req.url, html) res.send(html) } catch (e) { return next(e) } }) Otherwise, you'll probably get this error: Uncaught Error: @vitejs/plugin-react can't detect preamble. Something is wrong. Consistent components exports For React refresh to work correctly, your file should only export React components. You can find a good explanation in the Gatsby docs . If an incompatible change in exports is found, the module will be invalidated and HMR will propagate. To make it easier to export simple constants alongside your component, the module is only invalidated when their value changes. You can catch mistakes and get more detailed warning with this eslint rule .","title":"@vitejs/plugin-react npm"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#vitejsplugin-react","text":"The default Vite plugin for React projects. enable Fast Refresh in development (requires react >= 16.9) use the automatic JSX runtime use custom Babel plugins/presets small installation size // vite.config.js import { defineConfig } from 'vite' import react from '@vitejs/plugin-react' export default defineConfig({ plugins: [react()], })","title":"@vitejs/plugin-react"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#options","text":"","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#includeexclude","text":"Includes .js , .jsx , .ts & .tsx by default. This option can be used to add fast refresh to .mdx files: import { defineConfig } from 'vite' import react from '@vitejs/plugin-react' import mdx from '@mdx-js/rollup' export default defineConfig({ plugins: [ { enforce: 'pre', ...mdx() }, react({ include: /\\.(mdx|js|jsx|ts|tsx)$/ }), ], }) node_modules are never processed by this plugin (but esbuild will)","title":"include/exclude"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#jsximportsource","text":"Control where the JSX factory is imported from. Default to 'react' react({ jsxImportSource: '@emotion/react' })","title":"jsxImportSource"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#jsxruntime","text":"By default, the plugin uses the automatic JSX runtime . However, if you encounter any issues, you may opt out using the jsxRuntime option. react({ jsxRuntime: 'classic' })","title":"jsxRuntime"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#babel","text":"The babel option lets you add plugins, presets, and other configuration to the Babel transformation performed on each included file. react({ babel: { presets: [...], // Your plugins run before any built-in transform (eg: Fast Refresh) plugins: [...], // Use .babelrc files babelrc: true, // Use babel.config.js files configFile: true, } }) Note: When not using plugins, only esbuild is used for production builds, resulting in faster builds.","title":"babel"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#proposed-syntax","text":"If you are using ES syntax that are still in proposal status (e.g. class properties), you can selectively enable them with the babel.parserOpts.plugins option: react({ babel: { parserOpts: { plugins: ['decorators-legacy'], }, }, }) This option does not enable code transformation . That is handled by esbuild. Note: TypeScript syntax is handled automatically. Here's the complete list of Babel parser plugins .","title":"Proposed syntax"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#middleware-mode","text":"In middleware mode , you should make sure your entry index.html file is transformed by Vite. Here's an example for an Express server: app.get('/', async (req, res, next) => { try { let html = fs.readFileSync(path.resolve(root, 'index.html'), 'utf-8') // Transform HTML using Vite plugins. html = await viteServer.transformIndexHtml(req.url, html) res.send(html) } catch (e) { return next(e) } }) Otherwise, you'll probably get this error: Uncaught Error: @vitejs/plugin-react can't detect preamble. Something is wrong.","title":"Middleware mode"},{"location":"_Disciplina/Code/my-react-app/node_modules/%40vitejs/plugin-react/#consistent-components-exports","text":"For React refresh to work correctly, your file should only export React components. You can find a good explanation in the Gatsby docs . If an incompatible change in exports is found, the module will be invalidated and HMR will propagate. To make it easier to export simple constants alongside your component, the module is only invalidated when their value changes. You can catch mistakes and get more detailed warning with this eslint rule .","title":"Consistent components exports"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/","text":"Acorn A tiny, fast JavaScript parser written in JavaScript. Community Acorn is open source software released under an MIT license . You are welcome to report bugs or create pull requests on github . Installation The easiest way to install acorn is from npm : npm install acorn Alternately, you can download the source and build acorn yourself: git clone https://github.com/acornjs/acorn.git cd acorn npm install Interface parse (input, options) is the main interface to the library. The input parameter is a string, options must be an object setting some of the options listed below. The return value will be an abstract syntax tree object as specified by the ESTree spec . let acorn = require(\"acorn\"); console.log(acorn.parse(\"1 + 1\", {ecmaVersion: 2020})); When encountering a syntax error, the parser will raise a SyntaxError object with a meaningful message. The error object will have a pos property that indicates the string offset at which the error occurred, and a loc object that contains a {line, column} object referring to that same position. Options are provided by in a second argument, which should be an object containing any of these fields (only ecmaVersion is required): ecmaVersion : Indicates the ECMAScript version to parse. Can be a number, either in year ( 2022 ) or plain version number ( 6 ) form, or \"latest\" (the latest the library supports). This influences support for strict mode, the set of reserved words, and support for new syntax features. NOTE : Only 'stage 4' (finalized) ECMAScript features are being implemented by Acorn. Other proposed new features must be implemented through plugins. sourceType : Indicate the mode the code should be parsed in. Can be either \"script\" or \"module\" . This influences global strict mode and parsing of import and export declarations. NOTE : If set to \"module\" , then static import / export syntax will be valid, even if ecmaVersion is less than 6. onInsertedSemicolon : If given a callback, that callback will be called whenever a missing semicolon is inserted by the parser. The callback will be given the character offset of the point where the semicolon is inserted as argument, and if locations is on, also a {line, column} object representing this position. onTrailingComma : Like onInsertedSemicolon , but for trailing commas. allowReserved : If false , using a reserved word will generate an error. Defaults to true for ecmaVersion 3, false for higher versions. When given the value \"never\" , reserved words and keywords can also not be used as property names (as in Internet Explorer's old parser). allowReturnOutsideFunction : By default, a return statement at the top level raises an error. Set this to true to accept such code. allowImportExportEverywhere : By default, import and export declarations can only appear at a program's top level. Setting this option to true allows them anywhere where a statement is allowed, and also allows import.meta expressions to appear in scripts (when sourceType is not \"module\" ). allowAwaitOutsideFunction : If false , await expressions can only appear inside async functions. Defaults to true in modules for ecmaVersion 2022 and later, false for lower versions. Setting this option to true allows to have top-level await expressions. They are still not allowed in non- async functions, though. allowSuperOutsideMethod : By default, super outside a method raises an error. Set this to true to accept such code. allowHashBang : When this is enabled, if the code starts with the characters #! (as in a shellscript), the first line will be treated as a comment. Defaults to true when ecmaVersion >= 2023. checkPrivateFields : By default, the parser will verify that private properties are only used in places where they are valid and have been declared. Set this to false to turn such checks off. locations : When true , each node has a loc object attached with start and end subobjects, each of which contains the one-based line and zero-based column numbers in {line, column} form. Default is false . onToken : If a function is passed for this option, each found token will be passed in same format as tokens returned from tokenizer().getToken() . If array is passed, each found token is pushed to it. Note that you are not allowed to call the parser from the callback\u2014that will corrupt its internal state. onComment : If a function is passed for this option, whenever a comment is encountered the function will be called with the following parameters: block : true if the comment is a block comment, false if it is a line comment. text : The content of the comment. start : Character offset of the start of the comment. end : Character offset of the end of the comment. When the locations options is on, the {line, column} locations of the comment\u2019s start and end are passed as two additional parameters. If array is passed for this option, each found comment is pushed to it as object in Esprima format: javascript { \"type\": \"Line\" | \"Block\", \"value\": \"comment text\", \"start\": Number, \"end\": Number, // If `locations` option is on: \"loc\": { \"start\": {line: Number, column: Number} \"end\": {line: Number, column: Number} }, // If `ranges` option is on: \"range\": [Number, Number] } Note that you are not allowed to call the parser from the callback\u2014that will corrupt its internal state. ranges : Nodes have their start and end characters offsets recorded in start and end properties (directly on the node, rather than the loc object, which holds line/column data. To also add a semi-standardized range property holding a [start, end] array with the same numbers, set the ranges option to true . program : It is possible to parse multiple files into a single AST by passing the tree produced by parsing the first file as the program option in subsequent parses. This will add the toplevel forms of the parsed file to the \"Program\" (top) node of an existing parse tree. sourceFile : When the locations option is true , you can pass this option to add a source attribute in every node\u2019s loc object. Note that the contents of this option are not examined or processed in any way; you are free to use whatever format you choose. directSourceFile : Like sourceFile , but a sourceFile property will be added (regardless of the location option) directly to the nodes, rather than the loc object. preserveParens : If this option is true , parenthesized expressions are represented by (non-standard) ParenthesizedExpression nodes that have a single expression property containing the expression inside parentheses. parseExpressionAt (input, offset, options) will parse a single expression in a string, and return its AST. It will not complain if there is more of the string left after the expression. tokenizer (input, options) returns an object with a getToken method that can be called repeatedly to get the next token, a {start, end, type, value} object (with added loc property when the locations option is enabled and range property when the ranges option is enabled). When the token's type is tokTypes.eof , you should stop calling the method, since it will keep returning that same token forever. Note that tokenizing JavaScript without parsing it is, in modern versions of the language, not really possible due to the way syntax is overloaded in ways that can only be disambiguated by the parse context. This package applies a bunch of heuristics to try and do a reasonable job, but you are advised to use parse with the onToken option instead of this. In ES6 environment, returned result can be used as any other protocol-compliant iterable: for (let token of acorn.tokenizer(str)) { // iterate over the tokens } // transform code to array of tokens: var tokens = [...acorn.tokenizer(str)]; tokTypes holds an object mapping names to the token type objects that end up in the type properties of tokens. getLineInfo (input, offset) can be used to get a {line, column} object for a given program string and offset. The Parser class Instances of the Parser class contain all the state and logic that drives a parse. It has static methods parse , parseExpressionAt , and tokenizer that match the top-level functions by the same name. When extending the parser with plugins, you need to call these methods on the extended version of the class. To extend a parser with plugins, you can use its static extend method. var acorn = require(\"acorn\"); var jsx = require(\"acorn-jsx\"); var JSXParser = acorn.Parser.extend(jsx()); JSXParser.parse(\"foo(<bar/>)\", {ecmaVersion: 2020}); The extend method takes any number of plugin values, and returns a new Parser class that includes the extra parser logic provided by the plugins. Command line interface The bin/acorn utility can be used to parse a file from the command line. It accepts as arguments its input file and the following options: --ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|--ecma10 : Sets the ECMAScript version to parse. Default is version 9. --module : Sets the parsing mode to \"module\" . Is set to \"script\" otherwise. --locations : Attaches a \"loc\" object to each node with \"start\" and \"end\" subobjects, each of which contains the one-based line and zero-based column numbers in {line, column} form. --allow-hash-bang : If the code starts with the characters #! (as in a shellscript), the first line will be treated as a comment. --allow-await-outside-function : Allows top-level await expressions. See the allowAwaitOutsideFunction option for more information. --compact : No whitespace is used in the AST output. --silent : Do not output the AST, just return the exit status. --help : Print the usage information and quit. The utility spits out the syntax tree as JSON data. Existing plugins acorn-jsx : Parse Facebook JSX syntax extensions","title":"Acorn"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#acorn","text":"A tiny, fast JavaScript parser written in JavaScript.","title":"Acorn"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#community","text":"Acorn is open source software released under an MIT license . You are welcome to report bugs or create pull requests on github .","title":"Community"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#installation","text":"The easiest way to install acorn is from npm : npm install acorn Alternately, you can download the source and build acorn yourself: git clone https://github.com/acornjs/acorn.git cd acorn npm install","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#interface","text":"parse (input, options) is the main interface to the library. The input parameter is a string, options must be an object setting some of the options listed below. The return value will be an abstract syntax tree object as specified by the ESTree spec . let acorn = require(\"acorn\"); console.log(acorn.parse(\"1 + 1\", {ecmaVersion: 2020})); When encountering a syntax error, the parser will raise a SyntaxError object with a meaningful message. The error object will have a pos property that indicates the string offset at which the error occurred, and a loc object that contains a {line, column} object referring to that same position. Options are provided by in a second argument, which should be an object containing any of these fields (only ecmaVersion is required): ecmaVersion : Indicates the ECMAScript version to parse. Can be a number, either in year ( 2022 ) or plain version number ( 6 ) form, or \"latest\" (the latest the library supports). This influences support for strict mode, the set of reserved words, and support for new syntax features. NOTE : Only 'stage 4' (finalized) ECMAScript features are being implemented by Acorn. Other proposed new features must be implemented through plugins. sourceType : Indicate the mode the code should be parsed in. Can be either \"script\" or \"module\" . This influences global strict mode and parsing of import and export declarations. NOTE : If set to \"module\" , then static import / export syntax will be valid, even if ecmaVersion is less than 6. onInsertedSemicolon : If given a callback, that callback will be called whenever a missing semicolon is inserted by the parser. The callback will be given the character offset of the point where the semicolon is inserted as argument, and if locations is on, also a {line, column} object representing this position. onTrailingComma : Like onInsertedSemicolon , but for trailing commas. allowReserved : If false , using a reserved word will generate an error. Defaults to true for ecmaVersion 3, false for higher versions. When given the value \"never\" , reserved words and keywords can also not be used as property names (as in Internet Explorer's old parser). allowReturnOutsideFunction : By default, a return statement at the top level raises an error. Set this to true to accept such code. allowImportExportEverywhere : By default, import and export declarations can only appear at a program's top level. Setting this option to true allows them anywhere where a statement is allowed, and also allows import.meta expressions to appear in scripts (when sourceType is not \"module\" ). allowAwaitOutsideFunction : If false , await expressions can only appear inside async functions. Defaults to true in modules for ecmaVersion 2022 and later, false for lower versions. Setting this option to true allows to have top-level await expressions. They are still not allowed in non- async functions, though. allowSuperOutsideMethod : By default, super outside a method raises an error. Set this to true to accept such code. allowHashBang : When this is enabled, if the code starts with the characters #! (as in a shellscript), the first line will be treated as a comment. Defaults to true when ecmaVersion >= 2023. checkPrivateFields : By default, the parser will verify that private properties are only used in places where they are valid and have been declared. Set this to false to turn such checks off. locations : When true , each node has a loc object attached with start and end subobjects, each of which contains the one-based line and zero-based column numbers in {line, column} form. Default is false . onToken : If a function is passed for this option, each found token will be passed in same format as tokens returned from tokenizer().getToken() . If array is passed, each found token is pushed to it. Note that you are not allowed to call the parser from the callback\u2014that will corrupt its internal state. onComment : If a function is passed for this option, whenever a comment is encountered the function will be called with the following parameters: block : true if the comment is a block comment, false if it is a line comment. text : The content of the comment. start : Character offset of the start of the comment. end : Character offset of the end of the comment. When the locations options is on, the {line, column} locations of the comment\u2019s start and end are passed as two additional parameters. If array is passed for this option, each found comment is pushed to it as object in Esprima format: javascript { \"type\": \"Line\" | \"Block\", \"value\": \"comment text\", \"start\": Number, \"end\": Number, // If `locations` option is on: \"loc\": { \"start\": {line: Number, column: Number} \"end\": {line: Number, column: Number} }, // If `ranges` option is on: \"range\": [Number, Number] } Note that you are not allowed to call the parser from the callback\u2014that will corrupt its internal state. ranges : Nodes have their start and end characters offsets recorded in start and end properties (directly on the node, rather than the loc object, which holds line/column data. To also add a semi-standardized range property holding a [start, end] array with the same numbers, set the ranges option to true . program : It is possible to parse multiple files into a single AST by passing the tree produced by parsing the first file as the program option in subsequent parses. This will add the toplevel forms of the parsed file to the \"Program\" (top) node of an existing parse tree. sourceFile : When the locations option is true , you can pass this option to add a source attribute in every node\u2019s loc object. Note that the contents of this option are not examined or processed in any way; you are free to use whatever format you choose. directSourceFile : Like sourceFile , but a sourceFile property will be added (regardless of the location option) directly to the nodes, rather than the loc object. preserveParens : If this option is true , parenthesized expressions are represented by (non-standard) ParenthesizedExpression nodes that have a single expression property containing the expression inside parentheses. parseExpressionAt (input, offset, options) will parse a single expression in a string, and return its AST. It will not complain if there is more of the string left after the expression. tokenizer (input, options) returns an object with a getToken method that can be called repeatedly to get the next token, a {start, end, type, value} object (with added loc property when the locations option is enabled and range property when the ranges option is enabled). When the token's type is tokTypes.eof , you should stop calling the method, since it will keep returning that same token forever. Note that tokenizing JavaScript without parsing it is, in modern versions of the language, not really possible due to the way syntax is overloaded in ways that can only be disambiguated by the parse context. This package applies a bunch of heuristics to try and do a reasonable job, but you are advised to use parse with the onToken option instead of this. In ES6 environment, returned result can be used as any other protocol-compliant iterable: for (let token of acorn.tokenizer(str)) { // iterate over the tokens } // transform code to array of tokens: var tokens = [...acorn.tokenizer(str)]; tokTypes holds an object mapping names to the token type objects that end up in the type properties of tokens. getLineInfo (input, offset) can be used to get a {line, column} object for a given program string and offset.","title":"Interface"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#the-parser-class","text":"Instances of the Parser class contain all the state and logic that drives a parse. It has static methods parse , parseExpressionAt , and tokenizer that match the top-level functions by the same name. When extending the parser with plugins, you need to call these methods on the extended version of the class. To extend a parser with plugins, you can use its static extend method. var acorn = require(\"acorn\"); var jsx = require(\"acorn-jsx\"); var JSXParser = acorn.Parser.extend(jsx()); JSXParser.parse(\"foo(<bar/>)\", {ecmaVersion: 2020}); The extend method takes any number of plugin values, and returns a new Parser class that includes the extra parser logic provided by the plugins.","title":"The Parser class"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#command-line-interface","text":"The bin/acorn utility can be used to parse a file from the command line. It accepts as arguments its input file and the following options: --ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|--ecma10 : Sets the ECMAScript version to parse. Default is version 9. --module : Sets the parsing mode to \"module\" . Is set to \"script\" otherwise. --locations : Attaches a \"loc\" object to each node with \"start\" and \"end\" subobjects, each of which contains the one-based line and zero-based column numbers in {line, column} form. --allow-hash-bang : If the code starts with the characters #! (as in a shellscript), the first line will be treated as a comment. --allow-await-outside-function : Allows top-level await expressions. See the allowAwaitOutsideFunction option for more information. --compact : No whitespace is used in the AST output. --silent : Do not output the AST, just return the exit status. --help : Print the usage information and quit. The utility spits out the syntax tree as JSON data.","title":"Command line interface"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/#existing-plugins","text":"acorn-jsx : Parse Facebook JSX syntax extensions","title":"Existing plugins"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/","text":"8.12.1 (2024-07-03) Bug fixes Fix a regression that caused Acorn to no longer run on Node versions <8.10. 8.12.0 (2024-06-14) New features Support ES2025 duplicate capture group names in regular expressions. Bug fixes Include VariableDeclarator in the AnyNode type so that walker objects can refer to it without getting a type error. Properly raise a parse error for invalid for / of statements using async as binding name. Properly recognize \\\"use strict\\\" when preceded by a string with an escaped newline. Mark the Parser constructor as protected, not private, so plugins can extend it without type errors. Fix a bug where some invalid delete expressions were let through when the operand was parenthesized and preserveParens was enabled. Properly normalize line endings in raw strings of invalid template tokens. Properly track line numbers for escaped newlines in strings. Fix a bug that broke line number accounting after a template literal with invalid escape sequences. 8.11.3 (2023-12-29) Bug fixes Add Function and Class to the AggregateType type, so that they can be used in walkers without raising a type error. Make sure onToken get an import keyword token when parsing import.meta . Fix a bug where .loc.start could be undefined for new.target meta nodes. 8.11.2 (2023-10-27) Bug fixes Fix a bug that caused regular expressions after colon tokens to not be properly tokenized in some circumstances. 8.11.1 (2023-10-26) Bug fixes Fix a regression where onToken would receive 'name' tokens for 'new' keyword tokens. 8.11.0 (2023-10-26) Bug fixes Fix an issue where tokenizing (without parsing) an object literal with a property named class or function could, in some circumstance, put the tokenizer into an invalid state. Fix an issue where a slash after a call to a propery named the same as some keywords would be tokenized as a regular expression. New features Upgrade to Unicode 15.1. Use a set of new, much more precise, TypeScript types. 8.10.0 (2023-07-05) New features Add a checkPrivateFields option that disables strict checking of private property use. 8.9.0 (2023-06-16) Bug fixes Forbid dynamic import after new , even when part of a member expression. New features Add Unicode properties for ES2023. Add support for the v flag to regular expressions. 8.8.2 (2023-01-23) Bug fixes Fix a bug that caused allowHashBang to be set to false when not provided, even with ecmaVersion >= 14 . Fix an exception when passing no option object to parse or new Parser . Fix incorrect parse error on if (0) let\\n[astral identifier char] . 8.8.1 (2022-10-24) Bug fixes Make type for Comment compatible with estree types. 8.8.0 (2022-07-21) Bug fixes Allow parentheses around spread args in destructuring object assignment. Fix an issue where the tree contained directive properties in when parsing with a language version that doesn't support them. New features Support hashbang comments by default in ECMAScript 2023 and later. 8.7.1 (2021-04-26) Bug fixes Stop handling \"use strict\" directives in ECMAScript versions before 5. Fix an issue where duplicate quoted export names in export * syntax were incorrectly checked. Add missing type for tokTypes . 8.7.0 (2021-12-27) New features Support quoted export names. Upgrade to Unicode 14. Add support for Unicode 13 properties in regular expressions. Bug fixes Use a loop to find line breaks, because the existing regexp search would overrun the end of the searched range and waste a lot of time in minified code. 8.6.0 (2021-11-18) Bug fixes Fix a bug where an object literal with multiple __proto__ properties would incorrectly be accepted if a later property value held an assigment. New features Support class private fields with the in operator. 8.5.0 (2021-09-06) Bug fixes Improve context-dependent tokenization in a number of corner cases. Fix location tracking after a 0x2028 or 0x2029 character in a string literal (which before did not increase the line number). Fix an issue where arrow function bodies in for loop context would inappropriately consume in operators. Fix wrong end locations stored on SequenceExpression nodes. Implement restriction that for / of loop LHS can't start with let . New features Add support for ES2022 class static blocks. Allow multiple input files to be passed to the CLI tool. 8.4.1 (2021-06-24) Bug fixes Fix a bug where allowAwaitOutsideFunction would allow await in class field initializers, and setting ecmaVersion to 13 or higher would allow top-level await in non-module sources. 8.4.0 (2021-06-11) New features A new option, allowSuperOutsideMethod , can be used to suppress the error when super is used in the wrong context. 8.3.0 (2021-05-31) New features Default allowAwaitOutsideFunction to true for ECMAScript 2022 an higher. Add support for the d ( indices ) regexp flag. 8.2.4 (2021-05-04) Bug fixes Fix spec conformity in corner case 'for await (async of ...)'. 8.2.3 (2021-05-04) Bug fixes Fix an issue where the library couldn't parse 'for (async of ...)'. Fix a bug in UTF-16 decoding that would read characters incorrectly in some circumstances. 8.2.2 (2021-04-29) Bug fixes Fix a bug where a class field initialized to an async arrow function wouldn't allow await inside it. Same issue existed for generator arrow functions with yield. 8.2.1 (2021-04-24) Bug fixes Fix a regression introduced in 8.2.0 where static or async class methods with keyword names fail to parse. 8.2.0 (2021-04-24) New features Add support for ES2022 class fields and private methods. 8.1.1 (2021-04-12) Various Stop shipping source maps in the NPM package. 8.1.0 (2021-03-09) Bug fixes Fix a spurious error in nested destructuring arrays. New features Expose allowAwaitOutsideFunction in CLI interface. Make allowImportExportAnywhere also apply to import.meta . 8.0.5 (2021-01-25) Bug fixes Adjust package.json to work with Node 12.16.0 and 13.0-13.6. 8.0.4 (2020-10-05) Bug fixes Make await x ** y an error, following the spec. Fix potentially exponential regular expression. 8.0.3 (2020-10-02) Bug fixes Fix a wasteful loop during Parser creation when setting ecmaVersion to \"latest\" . 8.0.2 (2020-09-30) Bug fixes Make the TypeScript types reflect the current allowed values for ecmaVersion . Fix another regexp/division tokenizer issue. 8.0.1 (2020-08-12) Bug fixes Provide the correct value in the version export. 8.0.0 (2020-08-12) Bug fixes Disallow expressions like (a = b) = c . Make non-octal escape sequences a syntax error in strict mode. New features The package can now be loaded directly as an ECMAScript module in node 13+. Update to the set of Unicode properties from ES2021. Breaking changes The ecmaVersion option is now required. For the moment, omitting it will still work with a warning, but that will change in a future release. Some changes to method signatures that may be used by plugins. 7.4.0 (2020-08-03) New features Add support for logical assignment operators. Add support for numeric separators. 7.3.1 (2020-06-11) Bug fixes Make the string in the version export match the actual library version. 7.3.0 (2020-06-11) Bug fixes Fix a bug that caused parsing of object patterns with a property named set that had a default value to fail. New features Add support for optional chaining ( ?. ). 7.2.0 (2020-05-09) Bug fixes Fix precedence issue in parsing of async arrow functions. New features Add support for nullish coalescing. Add support for import.meta . Support export * as ... syntax. Upgrade to Unicode 13. 6.4.1 (2020-03-09) Bug fixes More carefully check for valid UTF16 surrogate pairs in regexp validator. 7.1.1 (2020-03-01) Bug fixes Treat \\8 and \\9 as invalid escapes in template strings. Allow unicode escapes in property names that are keywords. Don't error on an exponential operator expression as argument to await . More carefully check for valid UTF16 surrogate pairs in regexp validator. 7.1.0 (2019-09-24) Bug fixes Disallow trailing object literal commas when ecmaVersion is less than 5. New features Add a static acorn property to the Parser class that contains the entire module interface, to allow plugins to access the instance of the library that they are acting on. 7.0.0 (2019-08-13) Breaking changes Changes the node format for dynamic imports to use the ImportExpression node type, as defined in ESTree . Makes 10 (ES2019) the default value for the ecmaVersion option. 6.3.0 (2019-08-12) New features sourceType: \"module\" can now be used even when ecmaVersion is less than 6, to parse module-style code that otherwise conforms to an older standard. 6.2.1 (2019-07-21) Bug fixes Fix bug causing Acorn to treat some characters as identifier characters that shouldn't be treated as such. Fix issue where setting the allowReserved option to \"never\" allowed reserved words in some circumstances. 6.2.0 (2019-07-04) Bug fixes Improve valid assignment checking in for / in and for / of loops. Disallow binding let in patterns. New features Support bigint syntax with ecmaVersion >= 11. Support dynamic import syntax with ecmaVersion >= 11. Upgrade to Unicode version 12. 6.1.1 (2019-02-27) Bug fixes Fix bug that caused parsing default exports of with names to fail. 6.1.0 (2019-02-08) Bug fixes Fix scope checking when redefining a var as a lexical binding. New features Split up parseSubscripts to use an internal parseSubscript method to make it easier to extend with plugins. 6.0.7 (2019-02-04) Bug fixes Check that exported bindings are defined. Don't treat \\u180e as a whitespace character. Check for duplicate parameter names in methods. Don't allow shorthand properties when they are generators or async methods. Forbid binding await in async arrow function's parameter list. 6.0.6 (2019-01-30) Bug fixes The content of class declarations and expressions is now always parsed in strict mode. Don't allow let or const to bind the variable name let . Treat class declarations as lexical. Don't allow a generator function declaration as the sole body of an if or else . Ignore \"use strict\" when after an empty statement. Allow string line continuations with special line terminator characters. Treat for bodies as part of the for scope when checking for conflicting bindings. Fix bug with parsing yield in a for loop initializer. Implement special cases around scope checking for functions. 6.0.5 (2019-01-02) Bug fixes Fix TypeScript type for Parser.extend and add allowAwaitOutsideFunction to options type. Don't treat let as a keyword when the next token is { on the next line. Fix bug that broke checking for parentheses around an object pattern in a destructuring assignment when preserveParens was on. 6.0.4 (2018-11-05) Bug fixes Further improvements to tokenizing regular expressions in corner cases. 6.0.3 (2018-11-04) Bug fixes Fix bug in tokenizing an expression-less return followed by a function followed by a regular expression. Remove stray symlink in the package tarball. 6.0.2 (2018-09-26) Bug fixes Fix bug where default expressions could fail to parse inside an object destructuring assignment expression. 6.0.1 (2018-09-14) Bug fixes Fix wrong value in version export. 6.0.0 (2018-09-14) Bug fixes Better handle variable-redefinition checks for catch bindings and functions directly under if statements. Forbid new.target in top-level arrow functions. Fix issue with parsing a regexp after yield in some contexts. New features The package now comes with TypeScript definitions. Breaking changes The default value of the ecmaVersion option is now 9 (2018). Plugins work differently, and will have to be rewritten to work with this version. The loose parser and walker have been moved into separate packages ( acorn-loose and acorn-walk ). 5.7.3 (2018-09-10) Bug fixes Fix failure to tokenize regexps after expressions like x.of . Better error message for unterminated template literals. 5.7.2 (2018-08-24) Bug fixes Properly handle allowAwaitOutsideFunction in for statements. Treat function declarations at the top level of modules like let bindings. Don't allow async function declarations as the only statement under a label. 5.7.0 (2018-06-15) New features Upgraded to Unicode 11. 5.6.0 (2018-05-31) New features Allow U+2028 and U+2029 in string when ECMAVersion >= 10. Allow binding-less catch statements when ECMAVersion >= 10. Add allowAwaitOutsideFunction option for parsing top-level await . 5.5.3 (2018-03-08) Bug fixes A second republish of the code in 5.5.1, this time with yarn, to hopefully get valid timestamps. 5.5.2 (2018-03-08) Bug fixes A republish of the code in 5.5.1 in an attempt to solve an issue with the file timestamps in the npm package being 0. 5.5.1 (2018-03-06) Bug fixes Fix misleading error message for octal escapes in template strings. 5.5.0 (2018-02-27) New features The identifier character categorization is now based on Unicode version 10. Acorn will now validate the content of regular expressions, including new ES9 features. 5.4.0 (2018-02-01) Bug fixes Disallow duplicate or escaped flags on regular expressions. Disallow octal escapes in strings in strict mode. New features Add support for async iteration. Add support for object spread and rest. 5.3.0 (2017-12-28) Bug fixes Fix parsing of floating point literals with leading zeroes in loose mode. Allow duplicate property names in object patterns. Don't allow static class methods named prototype . Disallow async functions directly under if or else . Parse right-hand-side of for / of as an assignment expression. Stricter parsing of for / in . Don't allow unicode escapes in contextual keywords. New features Parsing class members was factored into smaller methods to allow plugins to hook into it. 5.2.1 (2017-10-30) Bug fixes Fix a token context corruption bug. 5.2.0 (2017-10-30) Bug fixes Fix token context tracking for class and function in property-name position. Make sure %* isn't parsed as a valid operator. Allow shorthand properties get and set to be followed by default values. Disallow super when not in callee or object position. New features Support directive property on directive expression statements. 5.1.2 (2017-09-04) Bug fixes Disable parsing of legacy HTML-style comments in modules. Fix parsing of async methods whose names are keywords. 5.1.1 (2017-07-06) Bug fixes Fix problem with disambiguating regexp and division after a class. 5.1.0 (2017-07-05) Bug fixes Fix tokenizing of regexps in an object-desctructuring for / of loop and after yield . Parse zero-prefixed numbers with non-octal digits as decimal. Allow object/array patterns in rest parameters. Don't error when yield is used as a property name. Allow async as a shorthand object property. New features Implement the template literal revision proposal for ES9. 5.0.3 (2017-04-01) Bug fixes Fix spurious duplicate variable definition errors for named functions. 5.0.2 (2017-03-30) Bug fixes A binary operator after a parenthesized arrow expression is no longer incorrectly treated as an error. 5.0.0 (2017-03-28) Bug fixes Raise an error for duplicated lexical bindings. Fix spurious error when an assignement expression occurred after a spread expression. Accept regular expressions after of (in for / of ), yield (in a generator), and braced arrow functions. Allow labels in front or var declarations, even in strict mode. Breaking changes Parse declarations following export default as declaration nodes, not expressions. This means that class and function declarations nodes can now have null as their id . 4.0.11 (2017-02-07) Bug fixes Allow all forms of member expressions to be parenthesized as lvalue. 4.0.10 (2017-02-07) Bug fixes Don't expect semicolons after default-exported functions or classes, even when they are expressions. Check for use of 'use strict' directives in non-simple parameter functions, even when already in strict mode. 4.0.9 (2017-02-06) Bug fixes Fix incorrect error raised for parenthesized simple assignment targets, so that (x) = 1 parses again. 4.0.8 (2017-02-03) Bug fixes Solve spurious parenthesized pattern errors by temporarily erring on the side of accepting programs that our delayed errors don't handle correctly yet. 4.0.7 (2017-02-02) Bug fixes Accept invalidly rejected code like (x).y = 2 again. Don't raise an error when a function inside strict code has a non-simple parameter list. 4.0.6 (2017-02-02) Bug fixes Fix exponential behavior (manifesting itself as a complete hang for even relatively small source files) introduced by the new 'use strict' check. 4.0.5 (2017-02-02) Bug fixes Disallow parenthesized pattern expressions. Allow keywords as export names. Don't allow the async keyword to be parenthesized. Properly raise an error when a keyword contains a character escape. Allow \"use strict\" to appear after other string literal expressions. Disallow labeled declarations. 4.0.4 (2016-12-19) Bug fixes Fix crash when export was followed by a keyword that can't be exported. 4.0.3 (2016-08-16) Bug fixes Allow regular function declarations inside single-statement if branches in loose mode. Forbid them entirely in strict mode. Properly parse properties named async in ES2017 mode. Fix bug where reserved words were broken in ES2017 mode. 4.0.2 (2016-08-11) Bug fixes Don't ignore period or 'e' characters after octal numbers. Fix broken parsing for call expressions in default parameter values of arrow functions. 4.0.1 (2016-08-08) Bug fixes Fix false positives in duplicated export name errors. 4.0.0 (2016-08-07) Breaking changes The default ecmaVersion option value is now 7. A number of internal method signatures changed, so plugins might need to be updated. Bug fixes The parser now raises errors on duplicated export names. arguments and eval can now be used in shorthand properties. Duplicate parameter names in non-simple argument lists now always produce an error. New features The ecmaVersion option now also accepts year-style version numbers (2015, etc). Support for async / await syntax when ecmaVersion is >= 8. Support for trailing commas in call expressions when ecmaVersion is >= 8. 3.3.0 (2016-07-25) Bug fixes Fix bug in tokenizing of regexp operator after a function declaration. Fix parser crash when parsing an array pattern with a hole. New features Implement check against complex argument lists in functions that enable strict mode in ES7. 3.2.0 (2016-06-07) Bug fixes Improve handling of lack of unicode regexp support in host environment. Properly reject shorthand properties whose name is a keyword. New features Visitors created with visit.make now have their base as prototype , rather than copying properties into a fresh object. 3.1.0 (2016-04-18) Bug fixes Properly tokenize the division operator directly after a function expression. Allow trailing comma in destructuring arrays. 3.0.4 (2016-02-25) Fixes Allow update expressions as left-hand-side of the ES7 exponential operator. 3.0.2 (2016-02-10) Fixes Fix bug that accidentally made undefined a reserved word when parsing ES7. 3.0.0 (2016-02-10) Breaking changes The default value of the ecmaVersion option is now 6 (used to be 5). Support for comprehension syntax (which was dropped from the draft spec) has been removed. Fixes let and yield are now \u201ccontextual keywords\u201d, meaning you can mostly use them as identifiers in ES5 non-strict code. A parenthesized class or function expression after export default is now parsed correctly. New features When ecmaVersion is set to 7, Acorn will parse the exponentiation operator ( ** ). The identifier character ranges are now based on Unicode 8.0.0. Plugins can now override the raiseRecoverable method to override the way non-critical errors are handled. 2.7.0 (2016-01-04) Fixes Stop allowing rest parameters in setters. Disallow y rexexp flag in ES5. Disallow \\00 and \\000 escapes in strict mode. Raise an error when an import name is a reserved word. 2.6.2 (2015-11-10) Fixes Don't crash when no options object is passed. 2.6.0 (2015-11-09) Fixes Add await as a reserved word in module sources. Disallow yield in a parameter default value for a generator. Forbid using a comma after a rest pattern in an array destructuring. New features Support parsing stdin in command-line tool. 2.5.0 (2015-10-27) Fixes Fix tokenizer support in the command-line tool. Stop allowing new.target outside of functions. Remove legacy guard and guardedHandler properties from try nodes. Stop allowing multiple __proto__ properties on an object literal in strict mode. Don't allow rest parameters to be non-identifier patterns. Check for duplicate paramter names in arrow functions.","title":"CHANGELOG"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8121-2024-07-03","text":"","title":"8.12.1 (2024-07-03)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes","text":"Fix a regression that caused Acorn to no longer run on Node versions <8.10.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8120-2024-06-14","text":"","title":"8.12.0 (2024-06-14)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features","text":"Support ES2025 duplicate capture group names in regular expressions.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_1","text":"Include VariableDeclarator in the AnyNode type so that walker objects can refer to it without getting a type error. Properly raise a parse error for invalid for / of statements using async as binding name. Properly recognize \\\"use strict\\\" when preceded by a string with an escaped newline. Mark the Parser constructor as protected, not private, so plugins can extend it without type errors. Fix a bug where some invalid delete expressions were let through when the operand was parenthesized and preserveParens was enabled. Properly normalize line endings in raw strings of invalid template tokens. Properly track line numbers for escaped newlines in strings. Fix a bug that broke line number accounting after a template literal with invalid escape sequences.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8113-2023-12-29","text":"","title":"8.11.3 (2023-12-29)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_2","text":"Add Function and Class to the AggregateType type, so that they can be used in walkers without raising a type error. Make sure onToken get an import keyword token when parsing import.meta . Fix a bug where .loc.start could be undefined for new.target meta nodes.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8112-2023-10-27","text":"","title":"8.11.2 (2023-10-27)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_3","text":"Fix a bug that caused regular expressions after colon tokens to not be properly tokenized in some circumstances.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8111-2023-10-26","text":"","title":"8.11.1 (2023-10-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_4","text":"Fix a regression where onToken would receive 'name' tokens for 'new' keyword tokens.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8110-2023-10-26","text":"","title":"8.11.0 (2023-10-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_5","text":"Fix an issue where tokenizing (without parsing) an object literal with a property named class or function could, in some circumstance, put the tokenizer into an invalid state. Fix an issue where a slash after a call to a propery named the same as some keywords would be tokenized as a regular expression.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_1","text":"Upgrade to Unicode 15.1. Use a set of new, much more precise, TypeScript types.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#8100-2023-07-05","text":"","title":"8.10.0 (2023-07-05)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_2","text":"Add a checkPrivateFields option that disables strict checking of private property use.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#890-2023-06-16","text":"","title":"8.9.0 (2023-06-16)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_6","text":"Forbid dynamic import after new , even when part of a member expression.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_3","text":"Add Unicode properties for ES2023. Add support for the v flag to regular expressions.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#882-2023-01-23","text":"","title":"8.8.2 (2023-01-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_7","text":"Fix a bug that caused allowHashBang to be set to false when not provided, even with ecmaVersion >= 14 . Fix an exception when passing no option object to parse or new Parser . Fix incorrect parse error on if (0) let\\n[astral identifier char] .","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#881-2022-10-24","text":"","title":"8.8.1 (2022-10-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_8","text":"Make type for Comment compatible with estree types.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#880-2022-07-21","text":"","title":"8.8.0 (2022-07-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_9","text":"Allow parentheses around spread args in destructuring object assignment. Fix an issue where the tree contained directive properties in when parsing with a language version that doesn't support them.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_4","text":"Support hashbang comments by default in ECMAScript 2023 and later.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#871-2021-04-26","text":"","title":"8.7.1 (2021-04-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_10","text":"Stop handling \"use strict\" directives in ECMAScript versions before 5. Fix an issue where duplicate quoted export names in export * syntax were incorrectly checked. Add missing type for tokTypes .","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#870-2021-12-27","text":"","title":"8.7.0 (2021-12-27)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_5","text":"Support quoted export names. Upgrade to Unicode 14. Add support for Unicode 13 properties in regular expressions.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_11","text":"Use a loop to find line breaks, because the existing regexp search would overrun the end of the searched range and waste a lot of time in minified code.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#860-2021-11-18","text":"","title":"8.6.0 (2021-11-18)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_12","text":"Fix a bug where an object literal with multiple __proto__ properties would incorrectly be accepted if a later property value held an assigment.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_6","text":"Support class private fields with the in operator.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#850-2021-09-06","text":"","title":"8.5.0 (2021-09-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_13","text":"Improve context-dependent tokenization in a number of corner cases. Fix location tracking after a 0x2028 or 0x2029 character in a string literal (which before did not increase the line number). Fix an issue where arrow function bodies in for loop context would inappropriately consume in operators. Fix wrong end locations stored on SequenceExpression nodes. Implement restriction that for / of loop LHS can't start with let .","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_7","text":"Add support for ES2022 class static blocks. Allow multiple input files to be passed to the CLI tool.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#841-2021-06-24","text":"","title":"8.4.1 (2021-06-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_14","text":"Fix a bug where allowAwaitOutsideFunction would allow await in class field initializers, and setting ecmaVersion to 13 or higher would allow top-level await in non-module sources.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#840-2021-06-11","text":"","title":"8.4.0 (2021-06-11)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_8","text":"A new option, allowSuperOutsideMethod , can be used to suppress the error when super is used in the wrong context.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#830-2021-05-31","text":"","title":"8.3.0 (2021-05-31)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_9","text":"Default allowAwaitOutsideFunction to true for ECMAScript 2022 an higher. Add support for the d ( indices ) regexp flag.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#824-2021-05-04","text":"","title":"8.2.4 (2021-05-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_15","text":"Fix spec conformity in corner case 'for await (async of ...)'.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#823-2021-05-04","text":"","title":"8.2.3 (2021-05-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_16","text":"Fix an issue where the library couldn't parse 'for (async of ...)'. Fix a bug in UTF-16 decoding that would read characters incorrectly in some circumstances.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#822-2021-04-29","text":"","title":"8.2.2 (2021-04-29)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_17","text":"Fix a bug where a class field initialized to an async arrow function wouldn't allow await inside it. Same issue existed for generator arrow functions with yield.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#821-2021-04-24","text":"","title":"8.2.1 (2021-04-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_18","text":"Fix a regression introduced in 8.2.0 where static or async class methods with keyword names fail to parse.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#820-2021-04-24","text":"","title":"8.2.0 (2021-04-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_10","text":"Add support for ES2022 class fields and private methods.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#811-2021-04-12","text":"","title":"8.1.1 (2021-04-12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#various","text":"Stop shipping source maps in the NPM package.","title":"Various"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#810-2021-03-09","text":"","title":"8.1.0 (2021-03-09)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_19","text":"Fix a spurious error in nested destructuring arrays.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_11","text":"Expose allowAwaitOutsideFunction in CLI interface. Make allowImportExportAnywhere also apply to import.meta .","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#805-2021-01-25","text":"","title":"8.0.5 (2021-01-25)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_20","text":"Adjust package.json to work with Node 12.16.0 and 13.0-13.6.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#804-2020-10-05","text":"","title":"8.0.4 (2020-10-05)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_21","text":"Make await x ** y an error, following the spec. Fix potentially exponential regular expression.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#803-2020-10-02","text":"","title":"8.0.3 (2020-10-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_22","text":"Fix a wasteful loop during Parser creation when setting ecmaVersion to \"latest\" .","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#802-2020-09-30","text":"","title":"8.0.2 (2020-09-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_23","text":"Make the TypeScript types reflect the current allowed values for ecmaVersion . Fix another regexp/division tokenizer issue.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#801-2020-08-12","text":"","title":"8.0.1 (2020-08-12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_24","text":"Provide the correct value in the version export.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#800-2020-08-12","text":"","title":"8.0.0 (2020-08-12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_25","text":"Disallow expressions like (a = b) = c . Make non-octal escape sequences a syntax error in strict mode.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_12","text":"The package can now be loaded directly as an ECMAScript module in node 13+. Update to the set of Unicode properties from ES2021.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#breaking-changes","text":"The ecmaVersion option is now required. For the moment, omitting it will still work with a warning, but that will change in a future release. Some changes to method signatures that may be used by plugins.","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#740-2020-08-03","text":"","title":"7.4.0 (2020-08-03)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_13","text":"Add support for logical assignment operators. Add support for numeric separators.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#731-2020-06-11","text":"","title":"7.3.1 (2020-06-11)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_26","text":"Make the string in the version export match the actual library version.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#730-2020-06-11","text":"","title":"7.3.0 (2020-06-11)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_27","text":"Fix a bug that caused parsing of object patterns with a property named set that had a default value to fail.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_14","text":"Add support for optional chaining ( ?. ).","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#720-2020-05-09","text":"","title":"7.2.0 (2020-05-09)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_28","text":"Fix precedence issue in parsing of async arrow functions.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_15","text":"Add support for nullish coalescing. Add support for import.meta . Support export * as ... syntax. Upgrade to Unicode 13.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#641-2020-03-09","text":"","title":"6.4.1 (2020-03-09)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_29","text":"More carefully check for valid UTF16 surrogate pairs in regexp validator.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#711-2020-03-01","text":"","title":"7.1.1 (2020-03-01)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_30","text":"Treat \\8 and \\9 as invalid escapes in template strings. Allow unicode escapes in property names that are keywords. Don't error on an exponential operator expression as argument to await . More carefully check for valid UTF16 surrogate pairs in regexp validator.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#710-2019-09-24","text":"","title":"7.1.0 (2019-09-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_31","text":"Disallow trailing object literal commas when ecmaVersion is less than 5.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_16","text":"Add a static acorn property to the Parser class that contains the entire module interface, to allow plugins to access the instance of the library that they are acting on.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#700-2019-08-13","text":"","title":"7.0.0 (2019-08-13)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#breaking-changes_1","text":"Changes the node format for dynamic imports to use the ImportExpression node type, as defined in ESTree . Makes 10 (ES2019) the default value for the ecmaVersion option.","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#630-2019-08-12","text":"","title":"6.3.0 (2019-08-12)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_17","text":"sourceType: \"module\" can now be used even when ecmaVersion is less than 6, to parse module-style code that otherwise conforms to an older standard.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#621-2019-07-21","text":"","title":"6.2.1 (2019-07-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_32","text":"Fix bug causing Acorn to treat some characters as identifier characters that shouldn't be treated as such. Fix issue where setting the allowReserved option to \"never\" allowed reserved words in some circumstances.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#620-2019-07-04","text":"","title":"6.2.0 (2019-07-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_33","text":"Improve valid assignment checking in for / in and for / of loops. Disallow binding let in patterns.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_18","text":"Support bigint syntax with ecmaVersion >= 11. Support dynamic import syntax with ecmaVersion >= 11. Upgrade to Unicode version 12.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#611-2019-02-27","text":"","title":"6.1.1 (2019-02-27)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_34","text":"Fix bug that caused parsing default exports of with names to fail.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#610-2019-02-08","text":"","title":"6.1.0 (2019-02-08)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_35","text":"Fix scope checking when redefining a var as a lexical binding.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_19","text":"Split up parseSubscripts to use an internal parseSubscript method to make it easier to extend with plugins.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#607-2019-02-04","text":"","title":"6.0.7 (2019-02-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_36","text":"Check that exported bindings are defined. Don't treat \\u180e as a whitespace character. Check for duplicate parameter names in methods. Don't allow shorthand properties when they are generators or async methods. Forbid binding await in async arrow function's parameter list.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#606-2019-01-30","text":"","title":"6.0.6 (2019-01-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_37","text":"The content of class declarations and expressions is now always parsed in strict mode. Don't allow let or const to bind the variable name let . Treat class declarations as lexical. Don't allow a generator function declaration as the sole body of an if or else . Ignore \"use strict\" when after an empty statement. Allow string line continuations with special line terminator characters. Treat for bodies as part of the for scope when checking for conflicting bindings. Fix bug with parsing yield in a for loop initializer. Implement special cases around scope checking for functions.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#605-2019-01-02","text":"","title":"6.0.5 (2019-01-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_38","text":"Fix TypeScript type for Parser.extend and add allowAwaitOutsideFunction to options type. Don't treat let as a keyword when the next token is { on the next line. Fix bug that broke checking for parentheses around an object pattern in a destructuring assignment when preserveParens was on.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#604-2018-11-05","text":"","title":"6.0.4 (2018-11-05)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_39","text":"Further improvements to tokenizing regular expressions in corner cases.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#603-2018-11-04","text":"","title":"6.0.3 (2018-11-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_40","text":"Fix bug in tokenizing an expression-less return followed by a function followed by a regular expression. Remove stray symlink in the package tarball.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#602-2018-09-26","text":"","title":"6.0.2 (2018-09-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_41","text":"Fix bug where default expressions could fail to parse inside an object destructuring assignment expression.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#601-2018-09-14","text":"","title":"6.0.1 (2018-09-14)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_42","text":"Fix wrong value in version export.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#600-2018-09-14","text":"","title":"6.0.0 (2018-09-14)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_43","text":"Better handle variable-redefinition checks for catch bindings and functions directly under if statements. Forbid new.target in top-level arrow functions. Fix issue with parsing a regexp after yield in some contexts.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_20","text":"The package now comes with TypeScript definitions.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#breaking-changes_2","text":"The default value of the ecmaVersion option is now 9 (2018). Plugins work differently, and will have to be rewritten to work with this version. The loose parser and walker have been moved into separate packages ( acorn-loose and acorn-walk ).","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#573-2018-09-10","text":"","title":"5.7.3 (2018-09-10)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_44","text":"Fix failure to tokenize regexps after expressions like x.of . Better error message for unterminated template literals.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#572-2018-08-24","text":"","title":"5.7.2 (2018-08-24)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_45","text":"Properly handle allowAwaitOutsideFunction in for statements. Treat function declarations at the top level of modules like let bindings. Don't allow async function declarations as the only statement under a label.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#570-2018-06-15","text":"","title":"5.7.0 (2018-06-15)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_21","text":"Upgraded to Unicode 11.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#560-2018-05-31","text":"","title":"5.6.0 (2018-05-31)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_22","text":"Allow U+2028 and U+2029 in string when ECMAVersion >= 10. Allow binding-less catch statements when ECMAVersion >= 10. Add allowAwaitOutsideFunction option for parsing top-level await .","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#553-2018-03-08","text":"","title":"5.5.3 (2018-03-08)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_46","text":"A second republish of the code in 5.5.1, this time with yarn, to hopefully get valid timestamps.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#552-2018-03-08","text":"","title":"5.5.2 (2018-03-08)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_47","text":"A republish of the code in 5.5.1 in an attempt to solve an issue with the file timestamps in the npm package being 0.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#551-2018-03-06","text":"","title":"5.5.1 (2018-03-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_48","text":"Fix misleading error message for octal escapes in template strings.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#550-2018-02-27","text":"","title":"5.5.0 (2018-02-27)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_23","text":"The identifier character categorization is now based on Unicode version 10. Acorn will now validate the content of regular expressions, including new ES9 features.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#540-2018-02-01","text":"","title":"5.4.0 (2018-02-01)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_49","text":"Disallow duplicate or escaped flags on regular expressions. Disallow octal escapes in strings in strict mode.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_24","text":"Add support for async iteration. Add support for object spread and rest.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#530-2017-12-28","text":"","title":"5.3.0 (2017-12-28)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_50","text":"Fix parsing of floating point literals with leading zeroes in loose mode. Allow duplicate property names in object patterns. Don't allow static class methods named prototype . Disallow async functions directly under if or else . Parse right-hand-side of for / of as an assignment expression. Stricter parsing of for / in . Don't allow unicode escapes in contextual keywords.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_25","text":"Parsing class members was factored into smaller methods to allow plugins to hook into it.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#521-2017-10-30","text":"","title":"5.2.1 (2017-10-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_51","text":"Fix a token context corruption bug.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#520-2017-10-30","text":"","title":"5.2.0 (2017-10-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_52","text":"Fix token context tracking for class and function in property-name position. Make sure %* isn't parsed as a valid operator. Allow shorthand properties get and set to be followed by default values. Disallow super when not in callee or object position.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_26","text":"Support directive property on directive expression statements.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#512-2017-09-04","text":"","title":"5.1.2 (2017-09-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_53","text":"Disable parsing of legacy HTML-style comments in modules. Fix parsing of async methods whose names are keywords.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#511-2017-07-06","text":"","title":"5.1.1 (2017-07-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_54","text":"Fix problem with disambiguating regexp and division after a class.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#510-2017-07-05","text":"","title":"5.1.0 (2017-07-05)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_55","text":"Fix tokenizing of regexps in an object-desctructuring for / of loop and after yield . Parse zero-prefixed numbers with non-octal digits as decimal. Allow object/array patterns in rest parameters. Don't error when yield is used as a property name. Allow async as a shorthand object property.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_27","text":"Implement the template literal revision proposal for ES9.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#503-2017-04-01","text":"","title":"5.0.3 (2017-04-01)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_56","text":"Fix spurious duplicate variable definition errors for named functions.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#502-2017-03-30","text":"","title":"5.0.2 (2017-03-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_57","text":"A binary operator after a parenthesized arrow expression is no longer incorrectly treated as an error.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#500-2017-03-28","text":"","title":"5.0.0 (2017-03-28)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_58","text":"Raise an error for duplicated lexical bindings. Fix spurious error when an assignement expression occurred after a spread expression. Accept regular expressions after of (in for / of ), yield (in a generator), and braced arrow functions. Allow labels in front or var declarations, even in strict mode.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#breaking-changes_3","text":"Parse declarations following export default as declaration nodes, not expressions. This means that class and function declarations nodes can now have null as their id .","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#4011-2017-02-07","text":"","title":"4.0.11 (2017-02-07)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_59","text":"Allow all forms of member expressions to be parenthesized as lvalue.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#4010-2017-02-07","text":"","title":"4.0.10 (2017-02-07)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_60","text":"Don't expect semicolons after default-exported functions or classes, even when they are expressions. Check for use of 'use strict' directives in non-simple parameter functions, even when already in strict mode.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#409-2017-02-06","text":"","title":"4.0.9 (2017-02-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_61","text":"Fix incorrect error raised for parenthesized simple assignment targets, so that (x) = 1 parses again.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#408-2017-02-03","text":"","title":"4.0.8 (2017-02-03)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_62","text":"Solve spurious parenthesized pattern errors by temporarily erring on the side of accepting programs that our delayed errors don't handle correctly yet.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#407-2017-02-02","text":"","title":"4.0.7 (2017-02-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_63","text":"Accept invalidly rejected code like (x).y = 2 again. Don't raise an error when a function inside strict code has a non-simple parameter list.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#406-2017-02-02","text":"","title":"4.0.6 (2017-02-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_64","text":"Fix exponential behavior (manifesting itself as a complete hang for even relatively small source files) introduced by the new 'use strict' check.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#405-2017-02-02","text":"","title":"4.0.5 (2017-02-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_65","text":"Disallow parenthesized pattern expressions. Allow keywords as export names. Don't allow the async keyword to be parenthesized. Properly raise an error when a keyword contains a character escape. Allow \"use strict\" to appear after other string literal expressions. Disallow labeled declarations.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#404-2016-12-19","text":"","title":"4.0.4 (2016-12-19)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_66","text":"Fix crash when export was followed by a keyword that can't be exported.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#403-2016-08-16","text":"","title":"4.0.3 (2016-08-16)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_67","text":"Allow regular function declarations inside single-statement if branches in loose mode. Forbid them entirely in strict mode. Properly parse properties named async in ES2017 mode. Fix bug where reserved words were broken in ES2017 mode.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#402-2016-08-11","text":"","title":"4.0.2 (2016-08-11)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_68","text":"Don't ignore period or 'e' characters after octal numbers. Fix broken parsing for call expressions in default parameter values of arrow functions.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#401-2016-08-08","text":"","title":"4.0.1 (2016-08-08)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_69","text":"Fix false positives in duplicated export name errors.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#400-2016-08-07","text":"","title":"4.0.0 (2016-08-07)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#breaking-changes_4","text":"The default ecmaVersion option value is now 7. A number of internal method signatures changed, so plugins might need to be updated.","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_70","text":"The parser now raises errors on duplicated export names. arguments and eval can now be used in shorthand properties. Duplicate parameter names in non-simple argument lists now always produce an error.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_28","text":"The ecmaVersion option now also accepts year-style version numbers (2015, etc). Support for async / await syntax when ecmaVersion is >= 8. Support for trailing commas in call expressions when ecmaVersion is >= 8.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#330-2016-07-25","text":"","title":"3.3.0 (2016-07-25)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_71","text":"Fix bug in tokenizing of regexp operator after a function declaration. Fix parser crash when parsing an array pattern with a hole.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_29","text":"Implement check against complex argument lists in functions that enable strict mode in ES7.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#320-2016-06-07","text":"","title":"3.2.0 (2016-06-07)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_72","text":"Improve handling of lack of unicode regexp support in host environment. Properly reject shorthand properties whose name is a keyword.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_30","text":"Visitors created with visit.make now have their base as prototype , rather than copying properties into a fresh object.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#310-2016-04-18","text":"","title":"3.1.0 (2016-04-18)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#bug-fixes_73","text":"Properly tokenize the division operator directly after a function expression. Allow trailing comma in destructuring arrays.","title":"Bug fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#304-2016-02-25","text":"","title":"3.0.4 (2016-02-25)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes","text":"Allow update expressions as left-hand-side of the ES7 exponential operator.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#302-2016-02-10","text":"","title":"3.0.2 (2016-02-10)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes_1","text":"Fix bug that accidentally made undefined a reserved word when parsing ES7.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#300-2016-02-10","text":"","title":"3.0.0 (2016-02-10)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#breaking-changes_5","text":"The default value of the ecmaVersion option is now 6 (used to be 5). Support for comprehension syntax (which was dropped from the draft spec) has been removed.","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes_2","text":"let and yield are now \u201ccontextual keywords\u201d, meaning you can mostly use them as identifiers in ES5 non-strict code. A parenthesized class or function expression after export default is now parsed correctly.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_31","text":"When ecmaVersion is set to 7, Acorn will parse the exponentiation operator ( ** ). The identifier character ranges are now based on Unicode 8.0.0. Plugins can now override the raiseRecoverable method to override the way non-critical errors are handled.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#270-2016-01-04","text":"","title":"2.7.0 (2016-01-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes_3","text":"Stop allowing rest parameters in setters. Disallow y rexexp flag in ES5. Disallow \\00 and \\000 escapes in strict mode. Raise an error when an import name is a reserved word.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#262-2015-11-10","text":"","title":"2.6.2 (2015-11-10)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes_4","text":"Don't crash when no options object is passed.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#260-2015-11-09","text":"","title":"2.6.0 (2015-11-09)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes_5","text":"Add await as a reserved word in module sources. Disallow yield in a parameter default value for a generator. Forbid using a comma after a rest pattern in an array destructuring.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#new-features_32","text":"Support parsing stdin in command-line tool.","title":"New features"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#250-2015-10-27","text":"","title":"2.5.0 (2015-10-27)"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn/CHANGELOG/#fixes_6","text":"Fix tokenizer support in the command-line tool. Stop allowing new.target outside of functions. Remove legacy guard and guardedHandler properties from try nodes. Stop allowing multiple __proto__ properties on an object literal in strict mode. Don't allow rest parameters to be non-identifier patterns. Check for duplicate paramter names in arrow functions.","title":"Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn-jsx/","text":"Acorn-JSX This is plugin for Acorn - a tiny, fast JavaScript parser, written completely in JavaScript. It was created as an experimental alternative, faster React.js JSX parser. Later, it replaced the official parser and these days is used by many prominent development tools. Transpiler Please note that this tool only parses source code to JSX AST, which is useful for various language tools and services. If you want to transpile your code to regular ES5-compliant JavaScript with source map, check out Babel and Buble transpilers which use acorn-jsx under the hood. Usage Requiring this module provides you with an Acorn plugin that you can use like this: var acorn = require(\"acorn\"); var jsx = require(\"acorn-jsx\"); acorn.Parser.extend(jsx()).parse(\"my(<jsx/>, 'code');\"); Note that official spec doesn't support mix of XML namespaces and object-style access in tag names (#27) like in <namespace:Object.Property /> , so it was deprecated in acorn-jsx@3.0 . If you still want to opt-in to support of such constructions, you can pass the following option: acorn.Parser.extend(jsx({ allowNamespacedObjects: true })) Also, since most apps use pure React transformer, a new option was introduced that allows to prohibit namespaces completely: acorn.Parser.extend(jsx({ allowNamespaces: false })) Note that by default allowNamespaces is enabled for spec compliancy. License This plugin is issued under the MIT license .","title":"Acorn-JSX"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn-jsx/#acorn-jsx","text":"This is plugin for Acorn - a tiny, fast JavaScript parser, written completely in JavaScript. It was created as an experimental alternative, faster React.js JSX parser. Later, it replaced the official parser and these days is used by many prominent development tools.","title":"Acorn-JSX"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn-jsx/#transpiler","text":"Please note that this tool only parses source code to JSX AST, which is useful for various language tools and services. If you want to transpile your code to regular ES5-compliant JavaScript with source map, check out Babel and Buble transpilers which use acorn-jsx under the hood.","title":"Transpiler"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn-jsx/#usage","text":"Requiring this module provides you with an Acorn plugin that you can use like this: var acorn = require(\"acorn\"); var jsx = require(\"acorn-jsx\"); acorn.Parser.extend(jsx()).parse(\"my(<jsx/>, 'code');\"); Note that official spec doesn't support mix of XML namespaces and object-style access in tag names (#27) like in <namespace:Object.Property /> , so it was deprecated in acorn-jsx@3.0 . If you still want to opt-in to support of such constructions, you can pass the following option: acorn.Parser.extend(jsx({ allowNamespacedObjects: true })) Also, since most apps use pure React transformer, a new option was introduced that allows to prohibit namespaces completely: acorn.Parser.extend(jsx({ allowNamespaces: false })) Note that by default allowNamespaces is enabled for spec compliancy.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/acorn-jsx/#license","text":"This plugin is issued under the MIT license .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/","text":"Ajv: Another JSON Schema Validator The fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07. Ajv v7 beta is released Ajv version 7.0.0-beta.0 is released with these changes: to reduce the mistakes in JSON schemas and unexpected validation results, strict mode is added - it prohibits ignored or ambiguous JSON Schema elements. to make code injection from untrusted schemas impossible, code generation is fully re-written to be safe. to simplify Ajv extensions, the new keyword API that is used by pre-defined keywords is available to user-defined keywords - it is much easier to define any keywords now, especially with subschemas. schemas are compiled to ES6 code (ES5 code generation is supported with an option). to improve reliability and maintainability the code is migrated to TypeScript. Please note : the support for JSON-Schema draft-04 is removed - if you have schemas using \"id\" attributes you have to replace them with \"\\$id\" (or continue using version 6 that will be supported until 02/28/2021). all formats are separated to ajv-formats package - they have to be explicitely added if you use them. See release notes for the details. To install the new version: npm install ajv@beta See Getting started with v7 for code example. Mozilla MOSS grant and OpenJS Foundation Ajv has been awarded a grant from Mozilla\u2019s Open Source Support (MOSS) program in the \u201cFoundational Technology\u201d track! It will sponsor the development of Ajv support of JSON Schema version 2019-09 and of JSON Type Definition . Ajv also joined OpenJS Foundation \u2013 having this support will help ensure the longevity and stability of Ajv for all its users. This blog post has more details. I am looking for the long term maintainers of Ajv \u2013 working with ReadySet , also sponsored by Mozilla, to establish clear guidelines for the role of a \"maintainer\" and the contribution standards, and to encourage a wider, more inclusive, contribution from the community. Please sponsor Ajv development Since I asked to support Ajv development 40 people and 6 organizations contributed via GitHub and OpenCollective - this support helped receiving the MOSS grant! Your continuing support is very important - the funds will be used to develop and maintain Ajv once the next major version is released. Please sponsor Ajv via: - GitHub sponsors page (GitHub will match it) - Ajv Open Collective\ufe0f Thank you. Open Collective sponsors Using version 6 JSON Schema draft-07 is published. Ajv version 6.0.0 that supports draft-07 is released. It may require either migrating your schemas or updating your code (to continue using draft-04 and v5 schemas, draft-06 schemas will be supported without changes). Please note : To use Ajv with draft-06 schemas you need to explicitly add the meta-schema to the validator instance: ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json')); To use Ajv with draft-04 schemas in addition to explicitly adding meta-schema you also need to use option schemaId: var ajv = new Ajv({schemaId: 'id'}); // If you want to use both draft-04 and draft-06/07 schemas: // var ajv = new Ajv({schemaId: 'auto'}); ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-04.json')); Contents Performance Features Getting started Frequently Asked Questions Using in browser Ajv and Content Security Policies (CSP) Command line interface Validation Keywords Annotation keywords Formats Combining schemas with $ref $data reference NEW: $merge and $patch keywords Defining custom keywords Asynchronous schema compilation Asynchronous validation Security considerations Security contact Untrusted schemas Circular references in objects Trusted schemas ReDoS attack Modifying data during validation Filtering data Assigning defaults Coercing data types API Methods Options Validation errors Plugins Related packages Some packages using Ajv Tests, Contributing, Changes history Support, Code of conduct, License Performance Ajv generates code using doT templates to turn JSON Schemas into super-fast validation functions that are efficient for v8 optimization. Currently Ajv is the fastest and the most standard compliant validator according to these benchmarks: json-schema-benchmark - 50% faster than the second place jsck benchmark - 20-190% faster z-schema benchmark themis benchmark Performance of different validators by json-schema-benchmark : Features Ajv implements full JSON Schema draft-06/07 and draft-04 standards: all validation keywords (see JSON Schema validation keywords ) full support of remote refs (remote schemas have to be added with addSchema or compiled to be available) support of circular references between schemas correct string lengths for strings with unicode pairs (can be turned off) formats defined by JSON Schema draft-07 standard and custom formats (can be turned off) validates schemas against meta-schema supports browsers and Node.js 0.10-14.x asynchronous loading of referenced schemas during compilation \"All errors\" validation mode with option allErrors error messages with parameters describing error reasons to allow creating custom error messages i18n error messages support with ajv-i18n package filtering data from additional properties assigning defaults to missing properties and items coercing data to the types specified in type keywords custom keywords draft-06/07 keywords const , contains , propertyNames and if/then/else draft-06 boolean schemas ( true / false as a schema to always pass/fail). keywords switch , patternRequired , formatMaximum / formatMinimum and formatExclusiveMaximum / formatExclusiveMinimum from JSON Schema extension proposals with ajv-keywords package $data reference to use values from the validated data as values for the schema keywords asynchronous validation of custom formats and keywords Install npm install ajv Getting started Try it in the Node.js REPL: https://tonicdev.com/npm/ajv The fastest validation call: // Node.js require: var Ajv = require('ajv'); // or ESM/TypeScript import import Ajv from 'ajv'; var ajv = new Ajv(); // options can be passed, e.g. {allErrors: true} var validate = ajv.compile(schema); var valid = validate(data); if (!valid) console.log(validate.errors); or with less code // ... var valid = ajv.validate(schema, data); if (!valid) console.log(ajv.errors); // ... or // ... var valid = ajv.addSchema(schema, 'mySchema') .validate('mySchema', data); if (!valid) console.log(ajv.errorsText()); // ... See API and Options for more details. Ajv compiles schemas to functions and caches them in all cases (using schema serialized with fast-json-stable-stringify or a custom function as a key), so that the next time the same schema is used (not necessarily the same object instance) it won't be compiled again. The best performance is achieved when using compiled functions returned by compile or getSchema methods (there is no additional function call). Please note : every time a validation function or ajv.validate are called errors property is overwritten. You need to copy errors array reference to another variable if you want to use it later (e.g., in the callback). See Validation errors Note for TypeScript users : ajv provides its own TypeScript declarations out of the box, so you don't need to install the deprecated @types/ajv module. Using in browser You can require Ajv directly from the code you browserify - in this case Ajv will be a part of your bundle. If you need to use Ajv in several bundles you can create a separate UMD bundle using npm run bundle script (thanks to siddo420 ). Then you need to load Ajv in the browser: <script src=\"ajv.min.js\"></script> This bundle can be used with different module systems; it creates global Ajv if no module system is found. The browser bundle is available on cdnjs . Ajv is tested with these browsers: Please note : some frameworks, e.g. Dojo, may redefine global require in such way that is not compatible with CommonJS module format. In such case Ajv bundle has to be loaded before the framework and then you can use global Ajv (see issue #234 ). Ajv and Content Security Policies (CSP) If you're using Ajv to compile a schema (the typical use) in a browser document that is loaded with a Content Security Policy (CSP), that policy will require a script-src directive that includes the value 'unsafe-eval' . :warning: NOTE, however, that unsafe-eval is NOT recommended in a secure CSP [1] , as it has the potential to open the document to cross-site scripting (XSS) attacks. In order to make use of Ajv without easing your CSP, you can pre-compile a schema using the CLI . This will transpile the schema JSON into a JavaScript file that exports a validate function that works simlarly to a schema compiled at runtime. Note that pre-compilation of schemas is performed using ajv-pack and there are some limitations to the schema features it can compile . A successfully pre-compiled schema is equivalent to the same schema compiled at runtime. Command line interface CLI is available as a separate npm package ajv-cli . It supports: compiling JSON Schemas to test their validity BETA: generating standalone module exporting a validation function to be used without Ajv (using ajv-pack ) migrate schemas to draft-07 (using json-schema-migrate ) validating data file(s) against JSON Schema testing expected validity of data against JSON Schema referenced schemas custom meta-schemas files in JSON, JSON5, YAML, and JavaScript format all Ajv options reporting changes in data after validation in JSON-patch format Validation keywords Ajv supports all validation keywords from draft-07 of JSON Schema standard: type for numbers - maximum, minimum, exclusiveMaximum, exclusiveMinimum, multipleOf for strings - maxLength, minLength, pattern, format for arrays - maxItems, minItems, uniqueItems, items, additionalItems, contains for objects - maxProperties, minProperties, required, properties, patternProperties, additionalProperties, dependencies, propertyNames for all types - enum, const compound keywords - not, oneOf, anyOf, allOf, if/then/else With ajv-keywords package Ajv also supports validation keywords from JSON Schema extension proposals for JSON Schema standard: patternRequired - like required but with patterns that some property should match. formatMaximum, formatMinimum, formatExclusiveMaximum, formatExclusiveMinimum - setting limits for date, time, etc. See JSON Schema validation keywords for more details. Annotation keywords JSON Schema specification defines several annotation keywords that describe schema itself but do not perform any validation. title and description : information about the data represented by that schema $comment (NEW in draft-07): information for developers. With option $comment Ajv logs or passes the comment string to the user-supplied function. See Options . default : a default value of the data instance, see Assigning defaults . examples (NEW in draft-06): an array of data instances. Ajv does not check the validity of these instances against the schema. readOnly and writeOnly (NEW in draft-07): marks data-instance as read-only or write-only in relation to the source of the data (database, api, etc.). contentEncoding : RFC 2045 , e.g., \"base64\". contentMediaType : RFC 2046 , e.g., \"image/png\". Please note : Ajv does not implement validation of the keywords examples , contentEncoding and contentMediaType but it reserves them. If you want to create a plugin that implements some of them, it should remove these keywords from the instance. Formats Ajv implements formats defined by JSON Schema specification and several other formats. It is recommended NOT to use \"format\" keyword implementations with untrusted data, as they use potentially unsafe regular expressions - see ReDoS attack . Please note : if you need to use \"format\" keyword to validate untrusted data, you MUST assess their suitability and safety for your validation scenarios. The following formats are implemented for string validation with \"format\" keyword: date : full-date according to RFC3339 . time : time with optional time-zone. date-time : date-time from the same source (time-zone is mandatory). date , time and date-time validate ranges in full mode and only regexp in fast mode (see options ). uri : full URI. uri-reference : URI reference, including full and relative URIs. uri-template : URI template according to RFC6570 url (deprecated): URL record . email : email address. hostname : host name according to RFC1034 . ipv4 : IP address v4. ipv6 : IP address v6. regex : tests whether a string is a valid regular expression by passing it to RegExp constructor. uuid : Universally Unique IDentifier according to RFC4122 . json-pointer : JSON-pointer according to RFC6901 . relative-json-pointer : relative JSON-pointer according to this draft . Please note : JSON Schema draft-07 also defines formats iri , iri-reference , idn-hostname and idn-email for URLs, hostnames and emails with international characters. Ajv does not implement these formats. If you create Ajv plugin that implements them please make a PR to mention this plugin here. There are two modes of format validation: fast and full . This mode affects formats date , time , date-time , uri , uri-reference , and email . See Options for details. You can add additional formats and replace any of the formats above using addFormat method. The option unknownFormats allows changing the default behaviour when an unknown format is encountered. In this case Ajv can either fail schema compilation (default) or ignore it (default in versions before 5.0.0). You also can allow specific format(s) that will be ignored. See Options for details. You can find regular expressions used for format validation and the sources that were used in formats.js . Combining schemas with $ref You can structure your validation logic across multiple schema files and have schemas reference each other using $ref keyword. Example: var schema = { \"$id\": \"http://example.com/schemas/schema.json\", \"type\": \"object\", \"properties\": { \"foo\": { \"$ref\": \"defs.json#/definitions/int\" }, \"bar\": { \"$ref\": \"defs.json#/definitions/str\" } } }; var defsSchema = { \"$id\": \"http://example.com/schemas/defs.json\", \"definitions\": { \"int\": { \"type\": \"integer\" }, \"str\": { \"type\": \"string\" } } }; Now to compile your schema you can either pass all schemas to Ajv instance: var ajv = new Ajv({schemas: [schema, defsSchema]}); var validate = ajv.getSchema('http://example.com/schemas/schema.json'); or use addSchema method: var ajv = new Ajv; var validate = ajv.addSchema(defsSchema) .compile(schema); See Options and addSchema method. Please note : - $ref is resolved as the uri-reference using schema $id as the base URI (see the example). - References can be recursive (and mutually recursive) to implement the schemas for different data structures (such as linked lists, trees, graphs, etc.). - You don't have to host your schema files at the URIs that you use as schema $id. These URIs are only used to identify the schemas, and according to JSON Schema specification validators should not expect to be able to download the schemas from these URIs. - The actual location of the schema file in the file system is not used. - You can pass the identifier of the schema as the second parameter of addSchema method or as a property name in schemas option. This identifier can be used instead of (or in addition to) schema $id. - You cannot have the same $id (or the schema identifier) used for more than one schema - the exception will be thrown. - You can implement dynamic resolution of the referenced schemas using compileAsync method. In this way you can store schemas in any system (files, web, database, etc.) and reference them without explicitly adding to Ajv instance. See Asynchronous schema compilation . $data reference With $data option you can use values from the validated data as the values for the schema keywords. See proposal for more information about how it works. $data reference is supported in the keywords: const, enum, format, maximum/minimum, exclusiveMaximum / exclusiveMinimum, maxLength / minLength, maxItems / minItems, maxProperties / minProperties, formatMaximum / formatMinimum, formatExclusiveMaximum / formatExclusiveMinimum, multipleOf, pattern, required, uniqueItems. The value of \"$data\" should be a JSON-pointer to the data (the root is always the top level data object, even if the $data reference is inside a referenced subschema) or a relative JSON-pointer (it is relative to the current point in data; if the $data reference is inside a referenced subschema it cannot point to the data outside of the root level for this subschema). Examples. This schema requires that the value in property smaller is less or equal than the value in the property larger: var ajv = new Ajv({$data: true}); var schema = { \"properties\": { \"smaller\": { \"type\": \"number\", \"maximum\": { \"$data\": \"1/larger\" } }, \"larger\": { \"type\": \"number\" } } }; var validData = { smaller: 5, larger: 7 }; ajv.validate(schema, validData); // true This schema requires that the properties have the same format as their field names: var schema = { \"additionalProperties\": { \"type\": \"string\", \"format\": { \"$data\": \"0#\" } } }; var validData = { 'date-time': '1963-06-19T08:30:06.283185Z', email: 'joe.bloggs@example.com' } $data reference is resolved safely - it won't throw even if some property is undefined. If $data resolves to undefined the validation succeeds (with the exclusion of const keyword). If $data resolves to incorrect type (e.g. not \"number\" for maximum keyword) the validation fails. $merge and $patch keywords With the package ajv-merge-patch you can use the keywords $merge and $patch that allow extending JSON Schemas with patches using formats JSON Merge Patch (RFC 7396) and JSON Patch (RFC 6902) . To add keywords $merge and $patch to Ajv instance use this code: require('ajv-merge-patch')(ajv); Examples. Using $merge : { \"$merge\": { \"source\": { \"type\": \"object\", \"properties\": { \"p\": { \"type\": \"string\" } }, \"additionalProperties\": false }, \"with\": { \"properties\": { \"q\": { \"type\": \"number\" } } } } } Using $patch : { \"$patch\": { \"source\": { \"type\": \"object\", \"properties\": { \"p\": { \"type\": \"string\" } }, \"additionalProperties\": false }, \"with\": [ { \"op\": \"add\", \"path\": \"/properties/q\", \"value\": { \"type\": \"number\" } } ] } } The schemas above are equivalent to this schema: { \"type\": \"object\", \"properties\": { \"p\": { \"type\": \"string\" }, \"q\": { \"type\": \"number\" } }, \"additionalProperties\": false } The properties source and with in the keywords $merge and $patch can use absolute or relative $ref to point to other schemas previously added to the Ajv instance or to the fragments of the current schema. See the package ajv-merge-patch for more information. Defining custom keywords The advantages of using custom keywords are: allow creating validation scenarios that cannot be expressed using JSON Schema simplify your schemas help bringing a bigger part of the validation logic to your schemas make your schemas more expressive, less verbose and closer to your application domain implement custom data processors that modify your data ( modifying option MUST be used in keyword definition) and/or create side effects while the data is being validated If a keyword is used only for side-effects and its validation result is pre-defined, use option valid: true/false in keyword definition to simplify both generated code (no error handling in case of valid: true ) and your keyword functions (no need to return any validation result). The concerns you have to be aware of when extending JSON Schema standard with custom keywords are the portability and understanding of your schemas. You will have to support these custom keywords on other platforms and to properly document these keywords so that everybody can understand them in your schemas. You can define custom keywords with addKeyword method. Keywords are defined on the ajv instance level - new instances will not have previously defined keywords. Ajv allows defining keywords with: - validation function - compilation function - macro function - inline compilation function that should return code (as string) that will be inlined in the currently compiled schema. Example. range and exclusiveRange keywords using compiled schema: ajv.addKeyword('range', { type: 'number', compile: function (sch, parentSchema) { var min = sch[0]; var max = sch[1]; return parentSchema.exclusiveRange === true ? function (data) { return data > min && data < max; } : function (data) { return data >= min && data <= max; } } }); var schema = { \"range\": [2, 4], \"exclusiveRange\": true }; var validate = ajv.compile(schema); console.log(validate(2.01)); // true console.log(validate(3.99)); // true console.log(validate(2)); // false console.log(validate(4)); // false Several custom keywords (typeof, instanceof, range and propertyNames) are defined in ajv-keywords package - they can be used for your schemas and as a starting point for your own custom keywords. See Defining custom keywords for more details. Asynchronous schema compilation During asynchronous compilation remote references are loaded using supplied function. See compileAsync method and loadSchema option . Example: var ajv = new Ajv({ loadSchema: loadSchema }); ajv.compileAsync(schema).then(function (validate) { var valid = validate(data); // ... }); function loadSchema(uri) { return request.json(uri).then(function (res) { if (res.statusCode >= 400) throw new Error('Loading error: ' + res.statusCode); return res.body; }); } Please note : Option missingRefs should NOT be set to \"ignore\" or \"fail\" for asynchronous compilation to work. Asynchronous validation Example in Node.js REPL: https://tonicdev.com/esp/ajv-asynchronous-validation You can define custom formats and keywords that perform validation asynchronously by accessing database or some other service. You should add async: true in the keyword or format definition (see addFormat , addKeyword and Defining custom keywords ). If your schema uses asynchronous formats/keywords or refers to some schema that contains them it should have \"$async\": true keyword so that Ajv can compile it correctly. If asynchronous format/keyword or reference to asynchronous schema is used in the schema without $async keyword Ajv will throw an exception during schema compilation. Please note : all asynchronous subschemas that are referenced from the current or other schemas should have \"$async\": true keyword as well, otherwise the schema compilation will fail. Validation function for an asynchronous custom format/keyword should return a promise that resolves with true or false (or rejects with new Ajv.ValidationError(errors) if you want to return custom errors from the keyword function). Ajv compiles asynchronous schemas to es7 async functions that can optionally be transpiled with nodent . Async functions are supported in Node.js 7+ and all modern browsers. You can also supply any other transpiler as a function via processCode option. See Options . The compiled validation function has $async: true property (if the schema is asynchronous), so you can differentiate these functions if you are using both synchronous and asynchronous schemas. Validation result will be a promise that resolves with validated data or rejects with an exception Ajv.ValidationError that contains the array of validation errors in errors property. Example: var ajv = new Ajv; // require('ajv-async')(ajv); ajv.addKeyword('idExists', { async: true, type: 'number', validate: checkIdExists }); function checkIdExists(schema, data) { return knex(schema.table) .select('id') .where('id', data) .then(function (rows) { return !!rows.length; // true if record is found }); } var schema = { \"$async\": true, \"properties\": { \"userId\": { \"type\": \"integer\", \"idExists\": { \"table\": \"users\" } }, \"postId\": { \"type\": \"integer\", \"idExists\": { \"table\": \"posts\" } } } }; var validate = ajv.compile(schema); validate({ userId: 1, postId: 19 }) .then(function (data) { console.log('Data is valid', data); // { userId: 1, postId: 19 } }) .catch(function (err) { if (!(err instanceof Ajv.ValidationError)) throw err; // data is invalid console.log('Validation errors:', err.errors); }); Using transpilers with asynchronous validation functions. ajv-async uses nodent to transpile async functions. To use another transpiler you should separately install it (or load its bundle in the browser). Using nodent var ajv = new Ajv; require('ajv-async')(ajv); // in the browser if you want to load ajv-async bundle separately you can: // window.ajvAsync(ajv); var validate = ajv.compile(schema); // transpiled es7 async function validate(data).then(successFunc).catch(errorFunc); Using other transpilers var ajv = new Ajv({ processCode: transpileFunc }); var validate = ajv.compile(schema); // transpiled es7 async function validate(data).then(successFunc).catch(errorFunc); See Options . Security considerations JSON Schema, if properly used, can replace data sanitisation. It doesn't replace other API security considerations. It also introduces additional security aspects to consider. Security contact To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. Please do NOT report security vulnerabilities via GitHub issues. Untrusted schemas Ajv treats JSON schemas as trusted as your application code. This security model is based on the most common use case, when the schemas are static and bundled together with the application. If your schemas are received from untrusted sources (or generated from untrusted data) there are several scenarios you need to prevent: - compiling schemas can cause stack overflow (if they are too deep) - compiling schemas can be slow (e.g. #557 ) - validating certain data can be slow It is difficult to predict all the scenarios, but at the very least it may help to limit the size of untrusted schemas (e.g. limit JSON string length) and also the maximum schema object depth (that can be high for relatively small JSON strings). You also may want to mitigate slow regular expressions in pattern and patternProperties keywords. Regardless the measures you take, using untrusted schemas increases security risks. Circular references in JavaScript objects Ajv does not support schemas and validated data that have circular references in objects. See issue #802 . An attempt to compile such schemas or validate such data would cause stack overflow (or will not complete in case of asynchronous validation). Depending on the parser you use, untrusted data can lead to circular references. Security risks of trusted schemas Some keywords in JSON Schemas can lead to very slow validation for certain data. These keywords include (but may be not limited to): pattern and format for large strings - in some cases using maxLength can help mitigate it, but certain regular expressions can lead to exponential validation time even with relatively short strings (see ReDoS attack ). patternProperties for large property names - use propertyNames to mitigate, but some regular expressions can have exponential evaluation time as well. uniqueItems for large non-scalar arrays - use maxItems to mitigate Please note : The suggestions above to prevent slow validation would only work if you do NOT use allErrors: true in production code (using it would continue validation after validation errors). You can validate your JSON schemas against this meta-schema to check that these recommendations are followed: const isSchemaSecure = ajv.compile(require('ajv/lib/refs/json-schema-secure.json')); const schema1 = {format: 'email'}; isSchemaSecure(schema1); // false const schema2 = {format: 'email', maxLength: MAX_LENGTH}; isSchemaSecure(schema2); // true Please note : following all these recommendation is not a guarantee that validation of untrusted data is safe - it can still lead to some undesirable results. Content Security Policies (CSP) See Ajv and Content Security Policies (CSP) ReDoS attack Certain regular expressions can lead to the exponential evaluation time even with relatively short strings. Please assess the regular expressions you use in the schemas on their vulnerability to this attack - see safe-regex , for example. Please note : some formats that Ajv implements use regular expressions that can be vulnerable to ReDoS attack, so if you use Ajv to validate data from untrusted sources it is strongly recommended to consider the following: making assessment of \"format\" implementations in Ajv. using format: 'fast' option that simplifies some of the regular expressions (although it does not guarantee that they are safe). replacing format implementations provided by Ajv with your own implementations of \"format\" keyword that either uses different regular expressions or another approach to format validation. Please see addFormat method. disabling format validation by ignoring \"format\" keyword with option format: false Whatever mitigation you choose, please assume all formats provided by Ajv as potentially unsafe and make your own assessment of their suitability for your validation scenarios. Filtering data With option removeAdditional (added by andyscott ) you can filter data during the validation. This option modifies original data. Example: var ajv = new Ajv({ removeAdditional: true }); var schema = { \"additionalProperties\": false, \"properties\": { \"foo\": { \"type\": \"number\" }, \"bar\": { \"additionalProperties\": { \"type\": \"number\" }, \"properties\": { \"baz\": { \"type\": \"string\" } } } } } var data = { \"foo\": 0, \"additional1\": 1, // will be removed; `additionalProperties` == false \"bar\": { \"baz\": \"abc\", \"additional2\": 2 // will NOT be removed; `additionalProperties` != false }, } var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": 0, \"bar\": { \"baz\": \"abc\", \"additional2\": 2 } If removeAdditional option in the example above were \"all\" then both additional1 and additional2 properties would have been removed. If the option were \"failing\" then property additional1 would have been removed regardless of its value and property additional2 would have been removed only if its value were failing the schema in the inner additionalProperties (so in the example above it would have stayed because it passes the schema, but any non-number would have been removed). Please note : If you use removeAdditional option with additionalProperties keyword inside anyOf / oneOf keywords your validation can fail with this schema, for example: { \"type\": \"object\", \"oneOf\": [ { \"properties\": { \"foo\": { \"type\": \"string\" } }, \"required\": [ \"foo\" ], \"additionalProperties\": false }, { \"properties\": { \"bar\": { \"type\": \"integer\" } }, \"required\": [ \"bar\" ], \"additionalProperties\": false } ] } The intention of the schema above is to allow objects with either the string property \"foo\" or the integer property \"bar\", but not with both and not with any other properties. With the option removeAdditional: true the validation will pass for the object { \"foo\": \"abc\"} but will fail for the object {\"bar\": 1} . It happens because while the first subschema in oneOf is validated, the property bar is removed because it is an additional property according to the standard (because it is not included in properties keyword in the same schema). While this behaviour is unexpected (issues #129 , #134 ), it is correct. To have the expected behaviour (both objects are allowed and additional properties are removed) the schema has to be refactored in this way: { \"type\": \"object\", \"properties\": { \"foo\": { \"type\": \"string\" }, \"bar\": { \"type\": \"integer\" } }, \"additionalProperties\": false, \"oneOf\": [ { \"required\": [ \"foo\" ] }, { \"required\": [ \"bar\" ] } ] } The schema above is also more efficient - it will compile into a faster function. Assigning defaults With option useDefaults Ajv will assign values from default keyword in the schemas of properties and items (when it is the array of schemas) to the missing properties and items. With the option value \"empty\" properties and items equal to null or \"\" (empty string) will be considered missing and assigned defaults. This option modifies original data. Please note : the default value is inserted in the generated validation code as a literal, so the value inserted in the data will be the deep clone of the default in the schema. Example 1 ( default in properties ): var ajv = new Ajv({ useDefaults: true }); var schema = { \"type\": \"object\", \"properties\": { \"foo\": { \"type\": \"number\" }, \"bar\": { \"type\": \"string\", \"default\": \"baz\" } }, \"required\": [ \"foo\", \"bar\" ] }; var data = { \"foo\": 1 }; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": 1, \"bar\": \"baz\" } Example 2 ( default in items ): var schema = { \"type\": \"array\", \"items\": [ { \"type\": \"number\" }, { \"type\": \"string\", \"default\": \"foo\" } ] } var data = [ 1 ]; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // [ 1, \"foo\" ] default keywords in other cases are ignored: not in properties or items subschemas in schemas inside anyOf , oneOf and not (see #42 ) in if subschema of switch keyword in schemas generated by custom macro keywords The strictDefaults option customizes Ajv's behavior for the defaults that Ajv ignores ( true raises an error, and \"log\" outputs a warning). Coercing data types When you are validating user inputs all your data properties are usually strings. The option coerceTypes allows you to have your data types coerced to the types specified in your schema type keywords, both to pass the validation and to use the correctly typed data afterwards. This option modifies original data. Please note : if you pass a scalar value to the validating function its type will be coerced and it will pass the validation, but the value of the variable you pass won't be updated because scalars are passed by value. Example 1: var ajv = new Ajv({ coerceTypes: true }); var schema = { \"type\": \"object\", \"properties\": { \"foo\": { \"type\": \"number\" }, \"bar\": { \"type\": \"boolean\" } }, \"required\": [ \"foo\", \"bar\" ] }; var data = { \"foo\": \"1\", \"bar\": \"false\" }; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": 1, \"bar\": false } Example 2 (array coercions): var ajv = new Ajv({ coerceTypes: 'array' }); var schema = { \"properties\": { \"foo\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } }, \"bar\": { \"type\": \"boolean\" } } }; var data = { \"foo\": \"1\", \"bar\": [\"false\"] }; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": [1], \"bar\": false } The coercion rules, as you can see from the example, are different from JavaScript both to validate user input as expected and to have the coercion reversible (to correctly validate cases where different types are defined in subschemas of \"anyOf\" and other compound keywords). See Coercion rules for details. API new Ajv(Object options) -> Object Create Ajv instance. .compile(Object schema) -> Function<Object data> Generate validating function and cache the compiled schema for future use. Validating function returns a boolean value. This function has properties errors and schema . Errors encountered during the last validation are assigned to errors property (it is assigned null if there was no errors). schema property contains the reference to the original schema. The schema passed to this method will be validated against meta-schema unless validateSchema option is false. If schema is invalid, an error will be thrown. See options . .compileAsync(Object schema [, Boolean meta] [, Function callback]) -> Promise Asynchronous version of compile method that loads missing remote schemas using asynchronous function in options.loadSchema . This function returns a Promise that resolves to a validation function. An optional callback passed to compileAsync will be called with 2 parameters: error (or null) and validating function. The returned promise will reject (and the callback will be called with an error) when: missing schema can't be loaded ( loadSchema returns a Promise that rejects). a schema containing a missing reference is loaded, but the reference cannot be resolved. schema (or some loaded/referenced schema) is invalid. The function compiles schema and loads the first missing schema (or meta-schema) until all missing schemas are loaded. You can asynchronously compile meta-schema by passing true as the second parameter. See example in Asynchronous compilation . .validate(Object schema|String key|String ref, data) -> Boolean Validate data using passed schema (it will be compiled and cached). Instead of the schema you can use the key that was previously passed to addSchema , the schema id if it was present in the schema or any previously resolved reference. Validation errors will be available in the errors property of Ajv instance ( null if there were no errors). Please note : every time this method is called the errors are overwritten so you need to copy them to another variable if you want to use them later. If the schema is asynchronous (has $async keyword on the top level) this method returns a Promise. See Asynchronous validation . .addSchema(Array<Object>|Object schema [, String key]) -> Ajv Add schema(s) to validator instance. This method does not compile schemas (but it still validates them). Because of that dependencies can be added in any order and circular dependencies are supported. It also prevents unnecessary compilation of schemas that are containers for other schemas but not used as a whole. Array of schemas can be passed (schemas should have ids), the second parameter will be ignored. Key can be passed that can be used to reference the schema and will be used as the schema id if there is no id inside the schema. If the key is not passed, the schema id will be used as the key. Once the schema is added, it (and all the references inside it) can be referenced in other schemas and used to validate data. Although addSchema does not compile schemas, explicit compilation is not required - the schema will be compiled when it is used first time. By default the schema is validated against meta-schema before it is added, and if the schema does not pass validation the exception is thrown. This behaviour is controlled by validateSchema option. Please note : Ajv uses the method chaining syntax for all methods with the prefix add* and remove* . This allows you to do nice things like the following. var validate = new Ajv().addSchema(schema).addFormat(name, regex).getSchema(uri); .addMetaSchema(Array<Object>|Object schema [, String key]) -> Ajv Adds meta schema(s) that can be used to validate other schemas. That function should be used instead of addSchema because there may be instance options that would compile a meta schema incorrectly (at the moment it is removeAdditional option). There is no need to explicitly add draft-07 meta schema (http://json-schema.org/draft-07/schema) - it is added by default, unless option meta is set to false . You only need to use it if you have a changed meta-schema that you want to use to validate your schemas. See validateSchema . .validateSchema(Object schema) -> Boolean Validates schema. This method should be used to validate schemas rather than validate due to the inconsistency of uri format in JSON Schema standard. By default this method is called automatically when the schema is added, so you rarely need to use it directly. If schema doesn't have $schema property, it is validated against draft 6 meta-schema (option meta should not be false). If schema has $schema property, then the schema with this id (that should be previously added) is used to validate passed schema. Errors will be available at ajv.errors . .getSchema(String key) -> Function<Object data> Retrieve compiled schema previously added with addSchema by the key passed to addSchema or by its full reference (id). The returned validating function has schema property with the reference to the original schema. .removeSchema([Object schema|String key|String ref|RegExp pattern]) -> Ajv Remove added/cached schema. Even if schema is referenced by other schemas it can be safely removed as dependent schemas have local references. Schema can be removed using: - key passed to addSchema - it's full reference (id) - RegExp that should match schema id or key (meta-schemas won't be removed) - actual schema object that will be stable-stringified to remove schema from cache If no parameter is passed all schemas but meta-schemas will be removed and the cache will be cleared. .addFormat(String name, String|RegExp|Function|Object format) -> Ajv Add custom format to validate strings or numbers. It can also be used to replace pre-defined formats for Ajv instance. Strings are converted to RegExp. Function should return validation result as true or false . If object is passed it should have properties validate , compare and async : validate : a string, RegExp or a function as described above. compare : an optional comparison function that accepts two strings and compares them according to the format meaning. This function is used with keywords formatMaximum / formatMinimum (defined in ajv-keywords package). It should return 1 if the first value is bigger than the second value, -1 if it is smaller and 0 if it is equal. async : an optional true value if validate is an asynchronous function; in this case it should return a promise that resolves with a value true or false . type : an optional type of data that the format applies to. It can be \"string\" (default) or \"number\" (see https://github.com/ajv-validator/ajv/issues/291#issuecomment-259923858). If the type of data is different, the validation will pass. Custom formats can be also added via formats option. .addKeyword(String keyword, Object definition) -> Ajv Add custom validation keyword to Ajv instance. Keyword should be different from all standard JSON Schema keywords and different from previously defined keywords. There is no way to redefine keywords or to remove keyword definition from the instance. Keyword must start with a letter, _ or $ , and may continue with letters, numbers, _ , $ , or - . It is recommended to use an application-specific prefix for keywords to avoid current and future name collisions. Example Keywords: - \"xyz-example\" : valid, and uses prefix for the xyz project to avoid name collisions. - \"example\" : valid, but not recommended as it could collide with future versions of JSON Schema etc. - \"3-example\" : invalid as numbers are not allowed to be the first character in a keyword Keyword definition is an object with the following properties: type : optional string or array of strings with data type(s) that the keyword applies to. If not present, the keyword will apply to all types. validate : validating function compile : compiling function macro : macro function inline : compiling function that returns code (as string) schema : an optional false value used with \"validate\" keyword to not pass schema metaSchema : an optional meta-schema for keyword schema dependencies : an optional list of properties that must be present in the parent schema - it will be checked during schema compilation modifying : true MUST be passed if keyword modifies data statements : true can be passed in case inline keyword generates statements (as opposed to expression) valid : pass true / false to pre-define validation result, the result returned from validation function will be ignored. This option cannot be used with macro keywords. $data : an optional true value to support $data reference as the value of custom keyword. The reference will be resolved at validation time. If the keyword has meta-schema it would be extended to allow $data and it will be used to validate the resolved value. Supporting $data reference requires that keyword has validating function (as the only option or in addition to compile, macro or inline function). async : an optional true value if the validation function is asynchronous (whether it is compiled or passed in validate property); in this case it should return a promise that resolves with a value true or false . This option is ignored in case of \"macro\" and \"inline\" keywords. errors : an optional boolean or string \"full\" indicating whether keyword returns errors. If this property is not set Ajv will determine if the errors were set in case of failed validation. compile , macro and inline are mutually exclusive, only one should be used at a time. validate can be used separately or in addition to them to support $data reference. Please note : If the keyword is validating data type that is different from the type(s) in its definition, the validation function will not be called (and expanded macro will not be used), so there is no need to check for data type inside validation function or inside schema returned by macro function (unless you want to enforce a specific type and for some reason do not want to use a separate type keyword for that). In the same way as standard keywords work, if the keyword does not apply to the data type being validated, the validation of this keyword will succeed. See Defining custom keywords for more details. .getKeyword(String keyword) -> Object|Boolean Returns custom keyword definition, true for pre-defined keywords and false if the keyword is unknown. .removeKeyword(String keyword) -> Ajv Removes custom or pre-defined keyword so you can redefine them. While this method can be used to extend pre-defined keywords, it can also be used to completely change their meaning - it may lead to unexpected results. Please note : schemas compiled before the keyword is removed will continue to work without changes. To recompile schemas use removeSchema method and compile them again. .errorsText([Array<Object> errors [, Object options]]) -> String Returns the text with all errors in a String. Options can have properties separator (string used to separate errors, \", \" by default) and dataVar (the variable name that dataPaths are prefixed with, \"data\" by default). Options Defaults: { // validation and reporting options: $data: false, allErrors: false, verbose: false, $comment: false, // NEW in Ajv version 6.0 jsonPointers: false, uniqueItems: true, unicode: true, nullable: false, format: 'fast', formats: {}, unknownFormats: true, schemas: {}, logger: undefined, // referenced schema options: schemaId: '$id', missingRefs: true, extendRefs: 'ignore', // recommended 'fail' loadSchema: undefined, // function(uri: string): Promise {} // options to modify validated data: removeAdditional: false, useDefaults: false, coerceTypes: false, // strict mode options strictDefaults: false, strictKeywords: false, strictNumbers: false, // asynchronous validation options: transpile: undefined, // requires ajv-async package // advanced options: meta: true, validateSchema: true, addUsedSchema: true, inlineRefs: true, passContext: false, loopRequired: Infinity, ownProperties: false, multipleOfPrecision: false, errorDataPath: 'object', // deprecated messages: true, sourceCode: false, processCode: undefined, // function (str: string, schema: object): string {} cache: new Cache, serialize: undefined } Validation and reporting options $data : support $data references . Draft 6 meta-schema that is added by default will be extended to allow them. If you want to use another meta-schema you need to use $dataMetaSchema method to add support for $data reference. See API . allErrors : check all rules collecting all errors. Default is to return after the first error. verbose : include the reference to the part of the schema ( schema and parentSchema ) and validated data in errors (false by default). $comment (NEW in Ajv version 6.0): log or pass the value of $comment keyword to a function. Option values: false (default): ignore $comment keyword. true : log the keyword value to console. function: pass the keyword value, its schema path and root schema to the specified function jsonPointers : set dataPath property of errors using JSON Pointers instead of JavaScript property access notation. uniqueItems : validate uniqueItems keyword (true by default). unicode : calculate correct length of strings with unicode pairs (true by default). Pass false to use .length of strings that is faster, but gives \"incorrect\" lengths of strings with unicode pairs - each unicode pair is counted as two characters. nullable : support keyword \"nullable\" from Open API 3 specification . format : formats validation mode. Option values: \"fast\" (default) - simplified and fast validation (see Formats for details of which formats are available and affected by this option). \"full\" - more restrictive and slow validation. E.g., 25:00:00 and 2015/14/33 will be invalid time and date in 'full' mode but it will be valid in 'fast' mode. false - ignore all format keywords. formats : an object with custom formats. Keys and values will be passed to addFormat method. keywords : an object with custom keywords. Keys and values will be passed to addKeyword method. unknownFormats : handling of unknown formats. Option values: true (default) - if an unknown format is encountered the exception is thrown during schema compilation. If format keyword value is $data reference and it is unknown the validation will fail. [String] - an array of unknown format names that will be ignored. This option can be used to allow usage of third party schemas with format(s) for which you don't have definitions, but still fail if another unknown format is used. If format keyword value is $data reference and it is not in this array the validation will fail. \"ignore\" - to log warning during schema compilation and always pass validation (the default behaviour in versions before 5.0.0). This option is not recommended, as it allows to mistype format name and it won't be validated without any error message. This behaviour is required by JSON Schema specification. schemas : an array or object of schemas that will be added to the instance. In case you pass the array the schemas must have IDs in them. When the object is passed the method addSchema(value, key) will be called for each schema in this object. logger : sets the logging method. Default is the global console object that should have methods log , warn and error . See Error logging . Option values: custom logger - it should have methods log , warn and error . If any of these methods is missing an exception will be thrown. false - logging is disabled. Referenced schema options schemaId : this option defines which keywords are used as schema URI. Option value: \"$id\" (default) - only use $id keyword as schema URI (as specified in JSON Schema draft-06/07), ignore id keyword (if it is present a warning will be logged). \"id\" - only use id keyword as schema URI (as specified in JSON Schema draft-04), ignore $id keyword (if it is present a warning will be logged). \"auto\" - use both $id and id keywords as schema URI. If both are present (in the same schema object) and different the exception will be thrown during schema compilation. missingRefs : handling of missing referenced schemas. Option values: true (default) - if the reference cannot be resolved during compilation the exception is thrown. The thrown error has properties missingRef (with hash fragment) and missingSchema (without it). Both properties are resolved relative to the current base id (usually schema id, unless it was substituted). \"ignore\" - to log error during compilation and always pass validation. \"fail\" - to log error and successfully compile schema but fail validation if this rule is checked. extendRefs : validation of other keywords when $ref is present in the schema. Option values: \"ignore\" (default) - when $ref is used other keywords are ignored (as per JSON Reference standard). A warning will be logged during the schema compilation. \"fail\" (recommended) - if other validation keywords are used together with $ref the exception will be thrown when the schema is compiled. This option is recommended to make sure schema has no keywords that are ignored, which can be confusing. true - validate all keywords in the schemas with $ref (the default behaviour in versions before 5.0.0). loadSchema : asynchronous function that will be used to load remote schemas when compileAsync method is used and some reference is missing (option missingRefs should NOT be 'fail' or 'ignore'). This function should accept remote schema uri as a parameter and return a Promise that resolves to a schema. See example in Asynchronous compilation . Options to modify validated data removeAdditional : remove additional properties - see example in Filtering data . This option is not used if schema is added with addMetaSchema method. Option values: false (default) - not to remove additional properties \"all\" - all additional properties are removed, regardless of additionalProperties keyword in schema (and no validation is made for them). true - only additional properties with additionalProperties keyword equal to false are removed. \"failing\" - additional properties that fail schema validation will be removed (where additionalProperties keyword is false or schema). useDefaults : replace missing or undefined properties and items with the values from corresponding default keywords. Default behaviour is to ignore default keywords. This option is not used if schema is added with addMetaSchema method. See examples in Assigning defaults . Option values: false (default) - do not use defaults true - insert defaults by value (object literal is used). \"empty\" - in addition to missing or undefined, use defaults for properties and items that are equal to null or \"\" (an empty string). \"shared\" (deprecated) - insert defaults by reference. If the default is an object, it will be shared by all instances of validated data. If you modify the inserted default in the validated data, it will be modified in the schema as well. coerceTypes : change data type of data to match type keyword. See the example in Coercing data types and coercion rules . Option values: false (default) - no type coercion. true - coerce scalar data types. \"array\" - in addition to coercions between scalar types, coerce scalar data to an array with one element and vice versa (as required by the schema). Strict mode options strictDefaults : report ignored default keywords in schemas. Option values: false (default) - ignored defaults are not reported true - if an ignored default is present, throw an error \"log\" - if an ignored default is present, log warning strictKeywords : report unknown keywords in schemas. Option values: false (default) - unknown keywords are not reported true - if an unknown keyword is present, throw an error \"log\" - if an unknown keyword is present, log warning strictNumbers : validate numbers strictly, failing validation for NaN and Infinity. Option values: false (default) - NaN or Infinity will pass validation for numeric types true - NaN or Infinity will not pass validation for numeric types Asynchronous validation options transpile : Requires ajv-async package. It determines whether Ajv transpiles compiled asynchronous validation function. Option values: undefined (default) - transpile with nodent if async functions are not supported. true - always transpile with nodent. false - do not transpile; if async functions are not supported an exception will be thrown. Advanced options meta : add meta-schema so it can be used by other schemas (true by default). If an object is passed, it will be used as the default meta-schema for schemas that have no $schema keyword. This default meta-schema MUST have $schema keyword. validateSchema : validate added/compiled schemas against meta-schema (true by default). $schema property in the schema can be http://json-schema.org/draft-07/schema or absent (draft-07 meta-schema will be used) or can be a reference to the schema previously added with addMetaSchema method. Option values: true (default) - if the validation fails, throw the exception. \"log\" - if the validation fails, log error. false - skip schema validation. addUsedSchema : by default methods compile and validate add schemas to the instance if they have $id (or id ) property that doesn't start with \"#\". If $id is present and it is not unique the exception will be thrown. Set this option to false to skip adding schemas to the instance and the $id uniqueness check when these methods are used. This option does not affect addSchema method. inlineRefs : Affects compilation of referenced schemas. Option values: true (default) - the referenced schemas that don't have refs in them are inlined, regardless of their size - that substantially improves performance at the cost of the bigger size of compiled schema functions. false - to not inline referenced schemas (they will be compiled as separate functions). integer number - to limit the maximum number of keywords of the schema that will be inlined. passContext : pass validation context to custom keyword functions. If this option is true and you pass some context to the compiled validation function with validate.call(context, data) , the context will be available as this in your custom keywords. By default this is Ajv instance. loopRequired : by default required keyword is compiled into a single expression (or a sequence of statements in allErrors mode). In case of a very large number of properties in this keyword it may result in a very big validation function. Pass integer to set the number of properties above which required keyword will be validated in a loop - smaller validation function size but also worse performance. ownProperties : by default Ajv iterates over all enumerable object properties; when this option is true only own enumerable object properties (i.e. found directly on the object rather than on its prototype) are iterated. Contributed by @mbroadst. multipleOfPrecision : by default multipleOf keyword is validated by comparing the result of division with parseInt() of that result. It works for dividers that are bigger than 1. For small dividers such as 0.01 the result of the division is usually not integer (even when it should be integer, see issue #84 ). If you need to use fractional dividers set this option to some positive integer N to have multipleOf validated using this formula: Math.abs(Math.round(division) - division) < 1e-N (it is slower but allows for float arithmetics deviations). errorDataPath (deprecated): set dataPath to point to 'object' (default) or to 'property' when validating keywords required , additionalProperties and dependencies . messages : Include human-readable messages in errors. true by default. false can be passed when custom messages are used (e.g. with ajv-i18n ). sourceCode : add sourceCode property to validating function (for debugging; this code can be different from the result of toString call). processCode : an optional function to process generated code before it is passed to Function constructor. It can be used to either beautify (the validating function is generated without line-breaks) or to transpile code. Starting from version 5.0.0 this option replaced options: beautify that formatted the generated function using js-beautify . If you want to beautify the generated code pass a function calling require('js-beautify').js_beautify as processCode: code => js_beautify(code) . transpile that transpiled asynchronous validation function. You can still use transpile option with ajv-async package. See Asynchronous validation for more information. cache : an optional instance of cache to store compiled schemas using stable-stringified schema as a key. For example, set-associative cache sacjs can be used. If not passed then a simple hash is used which is good enough for the common use case (a limited number of statically defined schemas). Cache should have methods put(key, value) , get(key) , del(key) and clear() . serialize : an optional function to serialize schema to cache key. Pass false to use schema itself as a key (e.g., if WeakMap used as a cache). By default fast-json-stable-stringify is used. Validation errors In case of validation failure, Ajv assigns the array of errors to errors property of validation function (or to errors property of Ajv instance when validate or validateSchema methods were called). In case of asynchronous validation , the returned promise is rejected with exception Ajv.ValidationError that has errors property. Error objects Each error is an object with the following properties: keyword : validation keyword. dataPath : the path to the part of the data that was validated. By default dataPath uses JavaScript property access notation (e.g., \".prop[1].subProp\" ). When the option jsonPointers is true (see Options ) dataPath will be set using JSON pointer standard (e.g., \"/prop/1/subProp\" ). schemaPath : the path (JSON-pointer as a URI fragment) to the schema of the keyword that failed validation. params : the object with the additional information about error that can be used to create custom error messages (e.g., using ajv-i18n package). See below for parameters set by all keywords. message : the standard error message (can be excluded with option messages set to false). schema : the schema of the keyword (added with verbose option). parentSchema : the schema containing the keyword (added with verbose option) data : the data validated by the keyword (added with verbose option). Please note : propertyNames keyword schema validation errors have an additional property propertyName , dataPath points to the object. After schema validation for each property name, if it is invalid an additional error is added with the property keyword equal to \"propertyNames\" . Error parameters Properties of params object in errors depend on the keyword that failed validation. maxItems , minItems , maxLength , minLength , maxProperties , minProperties - property limit (number, the schema of the keyword). additionalItems - property limit (the maximum number of allowed items in case when items keyword is an array of schemas and additionalItems is false). additionalProperties - property additionalProperty (the property not used in properties and patternProperties keywords). dependencies - properties: property (dependent property), missingProperty (required missing dependency - only the first one is reported currently) deps (required dependencies, comma separated list as a string), depsCount (the number of required dependencies). format - property format (the schema of the keyword). maximum , minimum - properties: limit (number, the schema of the keyword), exclusive (boolean, the schema of exclusiveMaximum or exclusiveMinimum ), comparison (string, comparison operation to compare the data to the limit, with the data on the left and the limit on the right; can be \"<\", \"<=\", \">\", \">=\") multipleOf - property multipleOf (the schema of the keyword) pattern - property pattern (the schema of the keyword) required - property missingProperty (required property that is missing). propertyNames - property propertyName (an invalid property name). patternRequired (in ajv-keywords) - property missingPattern (required pattern that did not match any property). type - property type (required type(s), a string, can be a comma-separated list) uniqueItems - properties i and j (indices of duplicate items). const - property allowedValue pointing to the value (the schema of the keyword). enum - property allowedValues pointing to the array of values (the schema of the keyword). $ref - property ref with the referenced schema URI. oneOf - property passingSchemas (array of indices of passing schemas, null if no schema passes). custom keywords (in case keyword definition doesn't create errors) - property keyword (the keyword name). Error logging Using the logger option when initiallizing Ajv will allow you to define custom logging. Here you can build upon the exisiting logging. The use of other logging packages is supported as long as the package or its associated wrapper exposes the required methods. If any of the required methods are missing an exception will be thrown. - Required Methods : log , warn , error var otherLogger = new OtherLogger(); var ajv = new Ajv({ logger: { log: console.log.bind(console), warn: function warn() { otherLogger.logWarn.apply(otherLogger, arguments); }, error: function error() { otherLogger.logError.apply(otherLogger, arguments); console.error.apply(console, arguments); } } }); Plugins Ajv can be extended with plugins that add custom keywords, formats or functions to process generated code. When such plugin is published as npm package it is recommended that it follows these conventions: it exports a function this function accepts ajv instance as the first parameter and returns the same instance to allow chaining this function can accept an optional configuration as the second parameter If you have published a useful plugin please submit a PR to add it to the next section. Related packages ajv-async - plugin to configure async validation mode ajv-bsontype - plugin to validate mongodb's bsonType formats ajv-cli - command line interface ajv-errors - plugin for custom error messages ajv-i18n - internationalised error messages ajv-istanbul - plugin to instrument generated validation code to measure test coverage of your schemas ajv-keywords - plugin with custom validation keywords (select, typeof, etc.) ajv-merge-patch - plugin with keywords $merge and $patch ajv-pack - produces a compact module exporting validation functions ajv-formats-draft2019 - format validators for draft2019 that aren't already included in ajv (ie. idn-hostname , idn-email , iri , iri-reference and duration ). Some packages using Ajv webpack - a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser jsonscript-js - the interpreter for JSONScript - scripted processing of existing endpoints and services osprey-method-handler - Express middleware for validating requests and responses based on a RAML method object, used in osprey - validating API proxy generated from a RAML definition har-validator - HTTP Archive (HAR) validator jsoneditor - a web-based tool to view, edit, format, and validate JSON http://jsoneditoronline.org JSON Schema Lint - a web tool to validate JSON/YAML document against a single JSON Schema http://jsonschemalint.com objection - SQL-friendly ORM for Node.js table - formats data into a string table ripple-lib - a JavaScript API for interacting with Ripple in Node.js and the browser restbase - distributed storage with REST API & dispatcher for backend services built to provide a low-latency & high-throughput API for Wikipedia / Wikimedia content hippie-swagger - Hippie wrapper that provides end to end API testing with swagger validation react-form-controlled - React controlled form components with validation rabbitmq-schema - a schema definition module for RabbitMQ graphs and messages @query/schema - stream filtering with a URI-safe query syntax parsing to JSON Schema chai-ajv-json-schema - chai plugin to us JSON Schema with expect in mocha tests grunt-jsonschema-ajv - Grunt plugin for validating files against JSON Schema extract-text-webpack-plugin - extract text from bundle into a file electron-builder - a solution to package and build a ready for distribution Electron app addons-linter - Mozilla Add-ons Linter gh-pages-generator - multi-page site generator converting markdown files to GitHub pages ESLint - the pluggable linting utility for JavaScript and JSX Tests npm install git submodule update --init npm test Contributing All validation functions are generated using doT templates in dot folder. Templates are precompiled so doT is not a run-time dependency. npm run build - compiles templates to dotjs folder. npm run watch - automatically compiles templates when files in dot folder change Please see Contributing guidelines Changes history See https://github.com/ajv-validator/ajv/releases Please note : Changes in version 7.0.0-beta Version 6.0.0 . Code of conduct Please review and follow the Code of conduct . Please report any unacceptable behaviour to ajv.validator@gmail.com - it will be reviewed by the project team. Open-source software support Ajv is a part of Tidelift subscription - it provides a centralised support to open-source software users, in addition to the support provided by software maintainers. License MIT","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#ajv-another-json-schema-validator","text":"The fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07.","title":"Ajv: Another JSON Schema Validator"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#ajv-v7-beta-is-released","text":"Ajv version 7.0.0-beta.0 is released with these changes: to reduce the mistakes in JSON schemas and unexpected validation results, strict mode is added - it prohibits ignored or ambiguous JSON Schema elements. to make code injection from untrusted schemas impossible, code generation is fully re-written to be safe. to simplify Ajv extensions, the new keyword API that is used by pre-defined keywords is available to user-defined keywords - it is much easier to define any keywords now, especially with subschemas. schemas are compiled to ES6 code (ES5 code generation is supported with an option). to improve reliability and maintainability the code is migrated to TypeScript. Please note : the support for JSON-Schema draft-04 is removed - if you have schemas using \"id\" attributes you have to replace them with \"\\$id\" (or continue using version 6 that will be supported until 02/28/2021). all formats are separated to ajv-formats package - they have to be explicitely added if you use them. See release notes for the details. To install the new version: npm install ajv@beta See Getting started with v7 for code example.","title":"Ajv v7 beta is released"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#mozilla-moss-grant-and-openjs-foundation","text":"Ajv has been awarded a grant from Mozilla\u2019s Open Source Support (MOSS) program in the \u201cFoundational Technology\u201d track! It will sponsor the development of Ajv support of JSON Schema version 2019-09 and of JSON Type Definition . Ajv also joined OpenJS Foundation \u2013 having this support will help ensure the longevity and stability of Ajv for all its users. This blog post has more details. I am looking for the long term maintainers of Ajv \u2013 working with ReadySet , also sponsored by Mozilla, to establish clear guidelines for the role of a \"maintainer\" and the contribution standards, and to encourage a wider, more inclusive, contribution from the community.","title":"Mozilla MOSS grant and OpenJS Foundation"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#please-sponsor-ajv-development","text":"Since I asked to support Ajv development 40 people and 6 organizations contributed via GitHub and OpenCollective - this support helped receiving the MOSS grant! Your continuing support is very important - the funds will be used to develop and maintain Ajv once the next major version is released. Please sponsor Ajv via: - GitHub sponsors page (GitHub will match it) - Ajv Open Collective\ufe0f Thank you.","title":"Please sponsor Ajv development"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#open-collective-sponsors","text":"","title":"Open Collective sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#using-version-6","text":"JSON Schema draft-07 is published. Ajv version 6.0.0 that supports draft-07 is released. It may require either migrating your schemas or updating your code (to continue using draft-04 and v5 schemas, draft-06 schemas will be supported without changes). Please note : To use Ajv with draft-06 schemas you need to explicitly add the meta-schema to the validator instance: ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json')); To use Ajv with draft-04 schemas in addition to explicitly adding meta-schema you also need to use option schemaId: var ajv = new Ajv({schemaId: 'id'}); // If you want to use both draft-04 and draft-06/07 schemas: // var ajv = new Ajv({schemaId: 'auto'}); ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-04.json'));","title":"Using version 6"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#contents","text":"Performance Features Getting started Frequently Asked Questions Using in browser Ajv and Content Security Policies (CSP) Command line interface Validation Keywords Annotation keywords Formats Combining schemas with $ref $data reference NEW: $merge and $patch keywords Defining custom keywords Asynchronous schema compilation Asynchronous validation Security considerations Security contact Untrusted schemas Circular references in objects Trusted schemas ReDoS attack Modifying data during validation Filtering data Assigning defaults Coercing data types API Methods Options Validation errors Plugins Related packages Some packages using Ajv Tests, Contributing, Changes history Support, Code of conduct, License","title":"Contents"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#performance","text":"Ajv generates code using doT templates to turn JSON Schemas into super-fast validation functions that are efficient for v8 optimization. Currently Ajv is the fastest and the most standard compliant validator according to these benchmarks: json-schema-benchmark - 50% faster than the second place jsck benchmark - 20-190% faster z-schema benchmark themis benchmark Performance of different validators by json-schema-benchmark :","title":"Performance"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#features","text":"Ajv implements full JSON Schema draft-06/07 and draft-04 standards: all validation keywords (see JSON Schema validation keywords ) full support of remote refs (remote schemas have to be added with addSchema or compiled to be available) support of circular references between schemas correct string lengths for strings with unicode pairs (can be turned off) formats defined by JSON Schema draft-07 standard and custom formats (can be turned off) validates schemas against meta-schema supports browsers and Node.js 0.10-14.x asynchronous loading of referenced schemas during compilation \"All errors\" validation mode with option allErrors error messages with parameters describing error reasons to allow creating custom error messages i18n error messages support with ajv-i18n package filtering data from additional properties assigning defaults to missing properties and items coercing data to the types specified in type keywords custom keywords draft-06/07 keywords const , contains , propertyNames and if/then/else draft-06 boolean schemas ( true / false as a schema to always pass/fail). keywords switch , patternRequired , formatMaximum / formatMinimum and formatExclusiveMaximum / formatExclusiveMinimum from JSON Schema extension proposals with ajv-keywords package $data reference to use values from the validated data as values for the schema keywords asynchronous validation of custom formats and keywords","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#install","text":"npm install ajv","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#getting-started","text":"Try it in the Node.js REPL: https://tonicdev.com/npm/ajv The fastest validation call: // Node.js require: var Ajv = require('ajv'); // or ESM/TypeScript import import Ajv from 'ajv'; var ajv = new Ajv(); // options can be passed, e.g. {allErrors: true} var validate = ajv.compile(schema); var valid = validate(data); if (!valid) console.log(validate.errors); or with less code // ... var valid = ajv.validate(schema, data); if (!valid) console.log(ajv.errors); // ... or // ... var valid = ajv.addSchema(schema, 'mySchema') .validate('mySchema', data); if (!valid) console.log(ajv.errorsText()); // ... See API and Options for more details. Ajv compiles schemas to functions and caches them in all cases (using schema serialized with fast-json-stable-stringify or a custom function as a key), so that the next time the same schema is used (not necessarily the same object instance) it won't be compiled again. The best performance is achieved when using compiled functions returned by compile or getSchema methods (there is no additional function call). Please note : every time a validation function or ajv.validate are called errors property is overwritten. You need to copy errors array reference to another variable if you want to use it later (e.g., in the callback). See Validation errors Note for TypeScript users : ajv provides its own TypeScript declarations out of the box, so you don't need to install the deprecated @types/ajv module.","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#using-in-browser","text":"You can require Ajv directly from the code you browserify - in this case Ajv will be a part of your bundle. If you need to use Ajv in several bundles you can create a separate UMD bundle using npm run bundle script (thanks to siddo420 ). Then you need to load Ajv in the browser: <script src=\"ajv.min.js\"></script> This bundle can be used with different module systems; it creates global Ajv if no module system is found. The browser bundle is available on cdnjs . Ajv is tested with these browsers: Please note : some frameworks, e.g. Dojo, may redefine global require in such way that is not compatible with CommonJS module format. In such case Ajv bundle has to be loaded before the framework and then you can use global Ajv (see issue #234 ).","title":"Using in browser"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#ajv-and-content-security-policies-csp","text":"If you're using Ajv to compile a schema (the typical use) in a browser document that is loaded with a Content Security Policy (CSP), that policy will require a script-src directive that includes the value 'unsafe-eval' . :warning: NOTE, however, that unsafe-eval is NOT recommended in a secure CSP [1] , as it has the potential to open the document to cross-site scripting (XSS) attacks. In order to make use of Ajv without easing your CSP, you can pre-compile a schema using the CLI . This will transpile the schema JSON into a JavaScript file that exports a validate function that works simlarly to a schema compiled at runtime. Note that pre-compilation of schemas is performed using ajv-pack and there are some limitations to the schema features it can compile . A successfully pre-compiled schema is equivalent to the same schema compiled at runtime.","title":"Ajv and Content Security Policies (CSP)"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#command-line-interface","text":"CLI is available as a separate npm package ajv-cli . It supports: compiling JSON Schemas to test their validity BETA: generating standalone module exporting a validation function to be used without Ajv (using ajv-pack ) migrate schemas to draft-07 (using json-schema-migrate ) validating data file(s) against JSON Schema testing expected validity of data against JSON Schema referenced schemas custom meta-schemas files in JSON, JSON5, YAML, and JavaScript format all Ajv options reporting changes in data after validation in JSON-patch format","title":"Command line interface"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#validation-keywords","text":"Ajv supports all validation keywords from draft-07 of JSON Schema standard: type for numbers - maximum, minimum, exclusiveMaximum, exclusiveMinimum, multipleOf for strings - maxLength, minLength, pattern, format for arrays - maxItems, minItems, uniqueItems, items, additionalItems, contains for objects - maxProperties, minProperties, required, properties, patternProperties, additionalProperties, dependencies, propertyNames for all types - enum, const compound keywords - not, oneOf, anyOf, allOf, if/then/else With ajv-keywords package Ajv also supports validation keywords from JSON Schema extension proposals for JSON Schema standard: patternRequired - like required but with patterns that some property should match. formatMaximum, formatMinimum, formatExclusiveMaximum, formatExclusiveMinimum - setting limits for date, time, etc. See JSON Schema validation keywords for more details.","title":"Validation keywords"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#annotation-keywords","text":"JSON Schema specification defines several annotation keywords that describe schema itself but do not perform any validation. title and description : information about the data represented by that schema $comment (NEW in draft-07): information for developers. With option $comment Ajv logs or passes the comment string to the user-supplied function. See Options . default : a default value of the data instance, see Assigning defaults . examples (NEW in draft-06): an array of data instances. Ajv does not check the validity of these instances against the schema. readOnly and writeOnly (NEW in draft-07): marks data-instance as read-only or write-only in relation to the source of the data (database, api, etc.). contentEncoding : RFC 2045 , e.g., \"base64\". contentMediaType : RFC 2046 , e.g., \"image/png\". Please note : Ajv does not implement validation of the keywords examples , contentEncoding and contentMediaType but it reserves them. If you want to create a plugin that implements some of them, it should remove these keywords from the instance.","title":"Annotation keywords"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#formats","text":"Ajv implements formats defined by JSON Schema specification and several other formats. It is recommended NOT to use \"format\" keyword implementations with untrusted data, as they use potentially unsafe regular expressions - see ReDoS attack . Please note : if you need to use \"format\" keyword to validate untrusted data, you MUST assess their suitability and safety for your validation scenarios. The following formats are implemented for string validation with \"format\" keyword: date : full-date according to RFC3339 . time : time with optional time-zone. date-time : date-time from the same source (time-zone is mandatory). date , time and date-time validate ranges in full mode and only regexp in fast mode (see options ). uri : full URI. uri-reference : URI reference, including full and relative URIs. uri-template : URI template according to RFC6570 url (deprecated): URL record . email : email address. hostname : host name according to RFC1034 . ipv4 : IP address v4. ipv6 : IP address v6. regex : tests whether a string is a valid regular expression by passing it to RegExp constructor. uuid : Universally Unique IDentifier according to RFC4122 . json-pointer : JSON-pointer according to RFC6901 . relative-json-pointer : relative JSON-pointer according to this draft . Please note : JSON Schema draft-07 also defines formats iri , iri-reference , idn-hostname and idn-email for URLs, hostnames and emails with international characters. Ajv does not implement these formats. If you create Ajv plugin that implements them please make a PR to mention this plugin here. There are two modes of format validation: fast and full . This mode affects formats date , time , date-time , uri , uri-reference , and email . See Options for details. You can add additional formats and replace any of the formats above using addFormat method. The option unknownFormats allows changing the default behaviour when an unknown format is encountered. In this case Ajv can either fail schema compilation (default) or ignore it (default in versions before 5.0.0). You also can allow specific format(s) that will be ignored. See Options for details. You can find regular expressions used for format validation and the sources that were used in formats.js .","title":"Formats"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#combining-schemas-with-ref","text":"You can structure your validation logic across multiple schema files and have schemas reference each other using $ref keyword. Example: var schema = { \"$id\": \"http://example.com/schemas/schema.json\", \"type\": \"object\", \"properties\": { \"foo\": { \"$ref\": \"defs.json#/definitions/int\" }, \"bar\": { \"$ref\": \"defs.json#/definitions/str\" } } }; var defsSchema = { \"$id\": \"http://example.com/schemas/defs.json\", \"definitions\": { \"int\": { \"type\": \"integer\" }, \"str\": { \"type\": \"string\" } } }; Now to compile your schema you can either pass all schemas to Ajv instance: var ajv = new Ajv({schemas: [schema, defsSchema]}); var validate = ajv.getSchema('http://example.com/schemas/schema.json'); or use addSchema method: var ajv = new Ajv; var validate = ajv.addSchema(defsSchema) .compile(schema); See Options and addSchema method. Please note : - $ref is resolved as the uri-reference using schema $id as the base URI (see the example). - References can be recursive (and mutually recursive) to implement the schemas for different data structures (such as linked lists, trees, graphs, etc.). - You don't have to host your schema files at the URIs that you use as schema $id. These URIs are only used to identify the schemas, and according to JSON Schema specification validators should not expect to be able to download the schemas from these URIs. - The actual location of the schema file in the file system is not used. - You can pass the identifier of the schema as the second parameter of addSchema method or as a property name in schemas option. This identifier can be used instead of (or in addition to) schema $id. - You cannot have the same $id (or the schema identifier) used for more than one schema - the exception will be thrown. - You can implement dynamic resolution of the referenced schemas using compileAsync method. In this way you can store schemas in any system (files, web, database, etc.) and reference them without explicitly adding to Ajv instance. See Asynchronous schema compilation .","title":"Combining schemas with $ref"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#data-reference","text":"With $data option you can use values from the validated data as the values for the schema keywords. See proposal for more information about how it works. $data reference is supported in the keywords: const, enum, format, maximum/minimum, exclusiveMaximum / exclusiveMinimum, maxLength / minLength, maxItems / minItems, maxProperties / minProperties, formatMaximum / formatMinimum, formatExclusiveMaximum / formatExclusiveMinimum, multipleOf, pattern, required, uniqueItems. The value of \"$data\" should be a JSON-pointer to the data (the root is always the top level data object, even if the $data reference is inside a referenced subschema) or a relative JSON-pointer (it is relative to the current point in data; if the $data reference is inside a referenced subschema it cannot point to the data outside of the root level for this subschema). Examples. This schema requires that the value in property smaller is less or equal than the value in the property larger: var ajv = new Ajv({$data: true}); var schema = { \"properties\": { \"smaller\": { \"type\": \"number\", \"maximum\": { \"$data\": \"1/larger\" } }, \"larger\": { \"type\": \"number\" } } }; var validData = { smaller: 5, larger: 7 }; ajv.validate(schema, validData); // true This schema requires that the properties have the same format as their field names: var schema = { \"additionalProperties\": { \"type\": \"string\", \"format\": { \"$data\": \"0#\" } } }; var validData = { 'date-time': '1963-06-19T08:30:06.283185Z', email: 'joe.bloggs@example.com' } $data reference is resolved safely - it won't throw even if some property is undefined. If $data resolves to undefined the validation succeeds (with the exclusion of const keyword). If $data resolves to incorrect type (e.g. not \"number\" for maximum keyword) the validation fails.","title":"$data reference"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#merge-and-patch-keywords","text":"With the package ajv-merge-patch you can use the keywords $merge and $patch that allow extending JSON Schemas with patches using formats JSON Merge Patch (RFC 7396) and JSON Patch (RFC 6902) . To add keywords $merge and $patch to Ajv instance use this code: require('ajv-merge-patch')(ajv); Examples. Using $merge : { \"$merge\": { \"source\": { \"type\": \"object\", \"properties\": { \"p\": { \"type\": \"string\" } }, \"additionalProperties\": false }, \"with\": { \"properties\": { \"q\": { \"type\": \"number\" } } } } } Using $patch : { \"$patch\": { \"source\": { \"type\": \"object\", \"properties\": { \"p\": { \"type\": \"string\" } }, \"additionalProperties\": false }, \"with\": [ { \"op\": \"add\", \"path\": \"/properties/q\", \"value\": { \"type\": \"number\" } } ] } } The schemas above are equivalent to this schema: { \"type\": \"object\", \"properties\": { \"p\": { \"type\": \"string\" }, \"q\": { \"type\": \"number\" } }, \"additionalProperties\": false } The properties source and with in the keywords $merge and $patch can use absolute or relative $ref to point to other schemas previously added to the Ajv instance or to the fragments of the current schema. See the package ajv-merge-patch for more information.","title":"$merge and $patch keywords"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#defining-custom-keywords","text":"The advantages of using custom keywords are: allow creating validation scenarios that cannot be expressed using JSON Schema simplify your schemas help bringing a bigger part of the validation logic to your schemas make your schemas more expressive, less verbose and closer to your application domain implement custom data processors that modify your data ( modifying option MUST be used in keyword definition) and/or create side effects while the data is being validated If a keyword is used only for side-effects and its validation result is pre-defined, use option valid: true/false in keyword definition to simplify both generated code (no error handling in case of valid: true ) and your keyword functions (no need to return any validation result). The concerns you have to be aware of when extending JSON Schema standard with custom keywords are the portability and understanding of your schemas. You will have to support these custom keywords on other platforms and to properly document these keywords so that everybody can understand them in your schemas. You can define custom keywords with addKeyword method. Keywords are defined on the ajv instance level - new instances will not have previously defined keywords. Ajv allows defining keywords with: - validation function - compilation function - macro function - inline compilation function that should return code (as string) that will be inlined in the currently compiled schema. Example. range and exclusiveRange keywords using compiled schema: ajv.addKeyword('range', { type: 'number', compile: function (sch, parentSchema) { var min = sch[0]; var max = sch[1]; return parentSchema.exclusiveRange === true ? function (data) { return data > min && data < max; } : function (data) { return data >= min && data <= max; } } }); var schema = { \"range\": [2, 4], \"exclusiveRange\": true }; var validate = ajv.compile(schema); console.log(validate(2.01)); // true console.log(validate(3.99)); // true console.log(validate(2)); // false console.log(validate(4)); // false Several custom keywords (typeof, instanceof, range and propertyNames) are defined in ajv-keywords package - they can be used for your schemas and as a starting point for your own custom keywords. See Defining custom keywords for more details.","title":"Defining custom keywords"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#asynchronous-schema-compilation","text":"During asynchronous compilation remote references are loaded using supplied function. See compileAsync method and loadSchema option . Example: var ajv = new Ajv({ loadSchema: loadSchema }); ajv.compileAsync(schema).then(function (validate) { var valid = validate(data); // ... }); function loadSchema(uri) { return request.json(uri).then(function (res) { if (res.statusCode >= 400) throw new Error('Loading error: ' + res.statusCode); return res.body; }); } Please note : Option missingRefs should NOT be set to \"ignore\" or \"fail\" for asynchronous compilation to work.","title":"Asynchronous schema compilation"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#asynchronous-validation","text":"Example in Node.js REPL: https://tonicdev.com/esp/ajv-asynchronous-validation You can define custom formats and keywords that perform validation asynchronously by accessing database or some other service. You should add async: true in the keyword or format definition (see addFormat , addKeyword and Defining custom keywords ). If your schema uses asynchronous formats/keywords or refers to some schema that contains them it should have \"$async\": true keyword so that Ajv can compile it correctly. If asynchronous format/keyword or reference to asynchronous schema is used in the schema without $async keyword Ajv will throw an exception during schema compilation. Please note : all asynchronous subschemas that are referenced from the current or other schemas should have \"$async\": true keyword as well, otherwise the schema compilation will fail. Validation function for an asynchronous custom format/keyword should return a promise that resolves with true or false (or rejects with new Ajv.ValidationError(errors) if you want to return custom errors from the keyword function). Ajv compiles asynchronous schemas to es7 async functions that can optionally be transpiled with nodent . Async functions are supported in Node.js 7+ and all modern browsers. You can also supply any other transpiler as a function via processCode option. See Options . The compiled validation function has $async: true property (if the schema is asynchronous), so you can differentiate these functions if you are using both synchronous and asynchronous schemas. Validation result will be a promise that resolves with validated data or rejects with an exception Ajv.ValidationError that contains the array of validation errors in errors property. Example: var ajv = new Ajv; // require('ajv-async')(ajv); ajv.addKeyword('idExists', { async: true, type: 'number', validate: checkIdExists }); function checkIdExists(schema, data) { return knex(schema.table) .select('id') .where('id', data) .then(function (rows) { return !!rows.length; // true if record is found }); } var schema = { \"$async\": true, \"properties\": { \"userId\": { \"type\": \"integer\", \"idExists\": { \"table\": \"users\" } }, \"postId\": { \"type\": \"integer\", \"idExists\": { \"table\": \"posts\" } } } }; var validate = ajv.compile(schema); validate({ userId: 1, postId: 19 }) .then(function (data) { console.log('Data is valid', data); // { userId: 1, postId: 19 } }) .catch(function (err) { if (!(err instanceof Ajv.ValidationError)) throw err; // data is invalid console.log('Validation errors:', err.errors); });","title":"Asynchronous validation"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#using-transpilers-with-asynchronous-validation-functions","text":"ajv-async uses nodent to transpile async functions. To use another transpiler you should separately install it (or load its bundle in the browser).","title":"Using transpilers with asynchronous validation functions."},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#using-nodent","text":"var ajv = new Ajv; require('ajv-async')(ajv); // in the browser if you want to load ajv-async bundle separately you can: // window.ajvAsync(ajv); var validate = ajv.compile(schema); // transpiled es7 async function validate(data).then(successFunc).catch(errorFunc);","title":"Using nodent"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#using-other-transpilers","text":"var ajv = new Ajv({ processCode: transpileFunc }); var validate = ajv.compile(schema); // transpiled es7 async function validate(data).then(successFunc).catch(errorFunc); See Options .","title":"Using other transpilers"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#security-considerations","text":"JSON Schema, if properly used, can replace data sanitisation. It doesn't replace other API security considerations. It also introduces additional security aspects to consider.","title":"Security considerations"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#security-contact","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. Please do NOT report security vulnerabilities via GitHub issues.","title":"Security contact"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#untrusted-schemas","text":"Ajv treats JSON schemas as trusted as your application code. This security model is based on the most common use case, when the schemas are static and bundled together with the application. If your schemas are received from untrusted sources (or generated from untrusted data) there are several scenarios you need to prevent: - compiling schemas can cause stack overflow (if they are too deep) - compiling schemas can be slow (e.g. #557 ) - validating certain data can be slow It is difficult to predict all the scenarios, but at the very least it may help to limit the size of untrusted schemas (e.g. limit JSON string length) and also the maximum schema object depth (that can be high for relatively small JSON strings). You also may want to mitigate slow regular expressions in pattern and patternProperties keywords. Regardless the measures you take, using untrusted schemas increases security risks.","title":"Untrusted schemas"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#circular-references-in-javascript-objects","text":"Ajv does not support schemas and validated data that have circular references in objects. See issue #802 . An attempt to compile such schemas or validate such data would cause stack overflow (or will not complete in case of asynchronous validation). Depending on the parser you use, untrusted data can lead to circular references.","title":"Circular references in JavaScript objects"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#security-risks-of-trusted-schemas","text":"Some keywords in JSON Schemas can lead to very slow validation for certain data. These keywords include (but may be not limited to): pattern and format for large strings - in some cases using maxLength can help mitigate it, but certain regular expressions can lead to exponential validation time even with relatively short strings (see ReDoS attack ). patternProperties for large property names - use propertyNames to mitigate, but some regular expressions can have exponential evaluation time as well. uniqueItems for large non-scalar arrays - use maxItems to mitigate Please note : The suggestions above to prevent slow validation would only work if you do NOT use allErrors: true in production code (using it would continue validation after validation errors). You can validate your JSON schemas against this meta-schema to check that these recommendations are followed: const isSchemaSecure = ajv.compile(require('ajv/lib/refs/json-schema-secure.json')); const schema1 = {format: 'email'}; isSchemaSecure(schema1); // false const schema2 = {format: 'email', maxLength: MAX_LENGTH}; isSchemaSecure(schema2); // true Please note : following all these recommendation is not a guarantee that validation of untrusted data is safe - it can still lead to some undesirable results.","title":"Security risks of trusted schemas"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#content-security-policies-csp","text":"See Ajv and Content Security Policies (CSP)","title":"Content Security Policies (CSP)"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#redos-attack","text":"Certain regular expressions can lead to the exponential evaluation time even with relatively short strings. Please assess the regular expressions you use in the schemas on their vulnerability to this attack - see safe-regex , for example. Please note : some formats that Ajv implements use regular expressions that can be vulnerable to ReDoS attack, so if you use Ajv to validate data from untrusted sources it is strongly recommended to consider the following: making assessment of \"format\" implementations in Ajv. using format: 'fast' option that simplifies some of the regular expressions (although it does not guarantee that they are safe). replacing format implementations provided by Ajv with your own implementations of \"format\" keyword that either uses different regular expressions or another approach to format validation. Please see addFormat method. disabling format validation by ignoring \"format\" keyword with option format: false Whatever mitigation you choose, please assume all formats provided by Ajv as potentially unsafe and make your own assessment of their suitability for your validation scenarios.","title":"ReDoS attack"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#filtering-data","text":"With option removeAdditional (added by andyscott ) you can filter data during the validation. This option modifies original data. Example: var ajv = new Ajv({ removeAdditional: true }); var schema = { \"additionalProperties\": false, \"properties\": { \"foo\": { \"type\": \"number\" }, \"bar\": { \"additionalProperties\": { \"type\": \"number\" }, \"properties\": { \"baz\": { \"type\": \"string\" } } } } } var data = { \"foo\": 0, \"additional1\": 1, // will be removed; `additionalProperties` == false \"bar\": { \"baz\": \"abc\", \"additional2\": 2 // will NOT be removed; `additionalProperties` != false }, } var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": 0, \"bar\": { \"baz\": \"abc\", \"additional2\": 2 } If removeAdditional option in the example above were \"all\" then both additional1 and additional2 properties would have been removed. If the option were \"failing\" then property additional1 would have been removed regardless of its value and property additional2 would have been removed only if its value were failing the schema in the inner additionalProperties (so in the example above it would have stayed because it passes the schema, but any non-number would have been removed). Please note : If you use removeAdditional option with additionalProperties keyword inside anyOf / oneOf keywords your validation can fail with this schema, for example: { \"type\": \"object\", \"oneOf\": [ { \"properties\": { \"foo\": { \"type\": \"string\" } }, \"required\": [ \"foo\" ], \"additionalProperties\": false }, { \"properties\": { \"bar\": { \"type\": \"integer\" } }, \"required\": [ \"bar\" ], \"additionalProperties\": false } ] } The intention of the schema above is to allow objects with either the string property \"foo\" or the integer property \"bar\", but not with both and not with any other properties. With the option removeAdditional: true the validation will pass for the object { \"foo\": \"abc\"} but will fail for the object {\"bar\": 1} . It happens because while the first subschema in oneOf is validated, the property bar is removed because it is an additional property according to the standard (because it is not included in properties keyword in the same schema). While this behaviour is unexpected (issues #129 , #134 ), it is correct. To have the expected behaviour (both objects are allowed and additional properties are removed) the schema has to be refactored in this way: { \"type\": \"object\", \"properties\": { \"foo\": { \"type\": \"string\" }, \"bar\": { \"type\": \"integer\" } }, \"additionalProperties\": false, \"oneOf\": [ { \"required\": [ \"foo\" ] }, { \"required\": [ \"bar\" ] } ] } The schema above is also more efficient - it will compile into a faster function.","title":"Filtering data"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#assigning-defaults","text":"With option useDefaults Ajv will assign values from default keyword in the schemas of properties and items (when it is the array of schemas) to the missing properties and items. With the option value \"empty\" properties and items equal to null or \"\" (empty string) will be considered missing and assigned defaults. This option modifies original data. Please note : the default value is inserted in the generated validation code as a literal, so the value inserted in the data will be the deep clone of the default in the schema. Example 1 ( default in properties ): var ajv = new Ajv({ useDefaults: true }); var schema = { \"type\": \"object\", \"properties\": { \"foo\": { \"type\": \"number\" }, \"bar\": { \"type\": \"string\", \"default\": \"baz\" } }, \"required\": [ \"foo\", \"bar\" ] }; var data = { \"foo\": 1 }; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": 1, \"bar\": \"baz\" } Example 2 ( default in items ): var schema = { \"type\": \"array\", \"items\": [ { \"type\": \"number\" }, { \"type\": \"string\", \"default\": \"foo\" } ] } var data = [ 1 ]; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // [ 1, \"foo\" ] default keywords in other cases are ignored: not in properties or items subschemas in schemas inside anyOf , oneOf and not (see #42 ) in if subschema of switch keyword in schemas generated by custom macro keywords The strictDefaults option customizes Ajv's behavior for the defaults that Ajv ignores ( true raises an error, and \"log\" outputs a warning).","title":"Assigning defaults"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#coercing-data-types","text":"When you are validating user inputs all your data properties are usually strings. The option coerceTypes allows you to have your data types coerced to the types specified in your schema type keywords, both to pass the validation and to use the correctly typed data afterwards. This option modifies original data. Please note : if you pass a scalar value to the validating function its type will be coerced and it will pass the validation, but the value of the variable you pass won't be updated because scalars are passed by value. Example 1: var ajv = new Ajv({ coerceTypes: true }); var schema = { \"type\": \"object\", \"properties\": { \"foo\": { \"type\": \"number\" }, \"bar\": { \"type\": \"boolean\" } }, \"required\": [ \"foo\", \"bar\" ] }; var data = { \"foo\": \"1\", \"bar\": \"false\" }; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": 1, \"bar\": false } Example 2 (array coercions): var ajv = new Ajv({ coerceTypes: 'array' }); var schema = { \"properties\": { \"foo\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } }, \"bar\": { \"type\": \"boolean\" } } }; var data = { \"foo\": \"1\", \"bar\": [\"false\"] }; var validate = ajv.compile(schema); console.log(validate(data)); // true console.log(data); // { \"foo\": [1], \"bar\": false } The coercion rules, as you can see from the example, are different from JavaScript both to validate user input as expected and to have the coercion reversible (to correctly validate cases where different types are defined in subschemas of \"anyOf\" and other compound keywords). See Coercion rules for details.","title":"Coercing data types"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#new-ajvobject-options-object","text":"Create Ajv instance.","title":"new Ajv(Object options) -&gt; Object"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#compileobject-schema-functionobject-data","text":"Generate validating function and cache the compiled schema for future use. Validating function returns a boolean value. This function has properties errors and schema . Errors encountered during the last validation are assigned to errors property (it is assigned null if there was no errors). schema property contains the reference to the original schema. The schema passed to this method will be validated against meta-schema unless validateSchema option is false. If schema is invalid, an error will be thrown. See options .","title":".compile(Object schema) -&gt; Function&lt;Object data&gt;"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#compileasyncobject-schema-boolean-meta-function-callback-promise","text":"Asynchronous version of compile method that loads missing remote schemas using asynchronous function in options.loadSchema . This function returns a Promise that resolves to a validation function. An optional callback passed to compileAsync will be called with 2 parameters: error (or null) and validating function. The returned promise will reject (and the callback will be called with an error) when: missing schema can't be loaded ( loadSchema returns a Promise that rejects). a schema containing a missing reference is loaded, but the reference cannot be resolved. schema (or some loaded/referenced schema) is invalid. The function compiles schema and loads the first missing schema (or meta-schema) until all missing schemas are loaded. You can asynchronously compile meta-schema by passing true as the second parameter. See example in Asynchronous compilation .","title":".compileAsync(Object schema [, Boolean meta] [, Function callback]) -&gt; Promise"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#validateobject-schemastring-keystring-ref-data-boolean","text":"Validate data using passed schema (it will be compiled and cached). Instead of the schema you can use the key that was previously passed to addSchema , the schema id if it was present in the schema or any previously resolved reference. Validation errors will be available in the errors property of Ajv instance ( null if there were no errors). Please note : every time this method is called the errors are overwritten so you need to copy them to another variable if you want to use them later. If the schema is asynchronous (has $async keyword on the top level) this method returns a Promise. See Asynchronous validation .","title":".validate(Object schema|String key|String ref, data) -&gt; Boolean"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#addschemaarrayobjectobject-schema-string-key-ajv","text":"Add schema(s) to validator instance. This method does not compile schemas (but it still validates them). Because of that dependencies can be added in any order and circular dependencies are supported. It also prevents unnecessary compilation of schemas that are containers for other schemas but not used as a whole. Array of schemas can be passed (schemas should have ids), the second parameter will be ignored. Key can be passed that can be used to reference the schema and will be used as the schema id if there is no id inside the schema. If the key is not passed, the schema id will be used as the key. Once the schema is added, it (and all the references inside it) can be referenced in other schemas and used to validate data. Although addSchema does not compile schemas, explicit compilation is not required - the schema will be compiled when it is used first time. By default the schema is validated against meta-schema before it is added, and if the schema does not pass validation the exception is thrown. This behaviour is controlled by validateSchema option. Please note : Ajv uses the method chaining syntax for all methods with the prefix add* and remove* . This allows you to do nice things like the following. var validate = new Ajv().addSchema(schema).addFormat(name, regex).getSchema(uri);","title":".addSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#addmetaschemaarrayobjectobject-schema-string-key-ajv","text":"Adds meta schema(s) that can be used to validate other schemas. That function should be used instead of addSchema because there may be instance options that would compile a meta schema incorrectly (at the moment it is removeAdditional option). There is no need to explicitly add draft-07 meta schema (http://json-schema.org/draft-07/schema) - it is added by default, unless option meta is set to false . You only need to use it if you have a changed meta-schema that you want to use to validate your schemas. See validateSchema .","title":".addMetaSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#validateschemaobject-schema-boolean","text":"Validates schema. This method should be used to validate schemas rather than validate due to the inconsistency of uri format in JSON Schema standard. By default this method is called automatically when the schema is added, so you rarely need to use it directly. If schema doesn't have $schema property, it is validated against draft 6 meta-schema (option meta should not be false). If schema has $schema property, then the schema with this id (that should be previously added) is used to validate passed schema. Errors will be available at ajv.errors .","title":".validateSchema(Object schema) -&gt; Boolean"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#getschemastring-key-functionobject-data","text":"Retrieve compiled schema previously added with addSchema by the key passed to addSchema or by its full reference (id). The returned validating function has schema property with the reference to the original schema.","title":".getSchema(String key) -&gt; Function&lt;Object data&gt;"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#removeschemaobject-schemastring-keystring-refregexp-pattern-ajv","text":"Remove added/cached schema. Even if schema is referenced by other schemas it can be safely removed as dependent schemas have local references. Schema can be removed using: - key passed to addSchema - it's full reference (id) - RegExp that should match schema id or key (meta-schemas won't be removed) - actual schema object that will be stable-stringified to remove schema from cache If no parameter is passed all schemas but meta-schemas will be removed and the cache will be cleared.","title":".removeSchema([Object schema|String key|String ref|RegExp pattern]) -&gt; Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#addformatstring-name-stringregexpfunctionobject-format-ajv","text":"Add custom format to validate strings or numbers. It can also be used to replace pre-defined formats for Ajv instance. Strings are converted to RegExp. Function should return validation result as true or false . If object is passed it should have properties validate , compare and async : validate : a string, RegExp or a function as described above. compare : an optional comparison function that accepts two strings and compares them according to the format meaning. This function is used with keywords formatMaximum / formatMinimum (defined in ajv-keywords package). It should return 1 if the first value is bigger than the second value, -1 if it is smaller and 0 if it is equal. async : an optional true value if validate is an asynchronous function; in this case it should return a promise that resolves with a value true or false . type : an optional type of data that the format applies to. It can be \"string\" (default) or \"number\" (see https://github.com/ajv-validator/ajv/issues/291#issuecomment-259923858). If the type of data is different, the validation will pass. Custom formats can be also added via formats option.","title":".addFormat(String name, String|RegExp|Function|Object format) -&gt; Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#addkeywordstring-keyword-object-definition-ajv","text":"Add custom validation keyword to Ajv instance. Keyword should be different from all standard JSON Schema keywords and different from previously defined keywords. There is no way to redefine keywords or to remove keyword definition from the instance. Keyword must start with a letter, _ or $ , and may continue with letters, numbers, _ , $ , or - . It is recommended to use an application-specific prefix for keywords to avoid current and future name collisions. Example Keywords: - \"xyz-example\" : valid, and uses prefix for the xyz project to avoid name collisions. - \"example\" : valid, but not recommended as it could collide with future versions of JSON Schema etc. - \"3-example\" : invalid as numbers are not allowed to be the first character in a keyword Keyword definition is an object with the following properties: type : optional string or array of strings with data type(s) that the keyword applies to. If not present, the keyword will apply to all types. validate : validating function compile : compiling function macro : macro function inline : compiling function that returns code (as string) schema : an optional false value used with \"validate\" keyword to not pass schema metaSchema : an optional meta-schema for keyword schema dependencies : an optional list of properties that must be present in the parent schema - it will be checked during schema compilation modifying : true MUST be passed if keyword modifies data statements : true can be passed in case inline keyword generates statements (as opposed to expression) valid : pass true / false to pre-define validation result, the result returned from validation function will be ignored. This option cannot be used with macro keywords. $data : an optional true value to support $data reference as the value of custom keyword. The reference will be resolved at validation time. If the keyword has meta-schema it would be extended to allow $data and it will be used to validate the resolved value. Supporting $data reference requires that keyword has validating function (as the only option or in addition to compile, macro or inline function). async : an optional true value if the validation function is asynchronous (whether it is compiled or passed in validate property); in this case it should return a promise that resolves with a value true or false . This option is ignored in case of \"macro\" and \"inline\" keywords. errors : an optional boolean or string \"full\" indicating whether keyword returns errors. If this property is not set Ajv will determine if the errors were set in case of failed validation. compile , macro and inline are mutually exclusive, only one should be used at a time. validate can be used separately or in addition to them to support $data reference. Please note : If the keyword is validating data type that is different from the type(s) in its definition, the validation function will not be called (and expanded macro will not be used), so there is no need to check for data type inside validation function or inside schema returned by macro function (unless you want to enforce a specific type and for some reason do not want to use a separate type keyword for that). In the same way as standard keywords work, if the keyword does not apply to the data type being validated, the validation of this keyword will succeed. See Defining custom keywords for more details.","title":".addKeyword(String keyword, Object definition) -&gt; Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#getkeywordstring-keyword-objectboolean","text":"Returns custom keyword definition, true for pre-defined keywords and false if the keyword is unknown.","title":".getKeyword(String keyword) -&gt; Object|Boolean"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#removekeywordstring-keyword-ajv","text":"Removes custom or pre-defined keyword so you can redefine them. While this method can be used to extend pre-defined keywords, it can also be used to completely change their meaning - it may lead to unexpected results. Please note : schemas compiled before the keyword is removed will continue to work without changes. To recompile schemas use removeSchema method and compile them again.","title":".removeKeyword(String keyword) -&gt; Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#errorstextarrayobject-errors-object-options-string","text":"Returns the text with all errors in a String. Options can have properties separator (string used to separate errors, \", \" by default) and dataVar (the variable name that dataPaths are prefixed with, \"data\" by default).","title":".errorsText([Array&lt;Object&gt; errors [, Object options]]) -&gt; String"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#options","text":"Defaults: { // validation and reporting options: $data: false, allErrors: false, verbose: false, $comment: false, // NEW in Ajv version 6.0 jsonPointers: false, uniqueItems: true, unicode: true, nullable: false, format: 'fast', formats: {}, unknownFormats: true, schemas: {}, logger: undefined, // referenced schema options: schemaId: '$id', missingRefs: true, extendRefs: 'ignore', // recommended 'fail' loadSchema: undefined, // function(uri: string): Promise {} // options to modify validated data: removeAdditional: false, useDefaults: false, coerceTypes: false, // strict mode options strictDefaults: false, strictKeywords: false, strictNumbers: false, // asynchronous validation options: transpile: undefined, // requires ajv-async package // advanced options: meta: true, validateSchema: true, addUsedSchema: true, inlineRefs: true, passContext: false, loopRequired: Infinity, ownProperties: false, multipleOfPrecision: false, errorDataPath: 'object', // deprecated messages: true, sourceCode: false, processCode: undefined, // function (str: string, schema: object): string {} cache: new Cache, serialize: undefined }","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#validation-and-reporting-options","text":"$data : support $data references . Draft 6 meta-schema that is added by default will be extended to allow them. If you want to use another meta-schema you need to use $dataMetaSchema method to add support for $data reference. See API . allErrors : check all rules collecting all errors. Default is to return after the first error. verbose : include the reference to the part of the schema ( schema and parentSchema ) and validated data in errors (false by default). $comment (NEW in Ajv version 6.0): log or pass the value of $comment keyword to a function. Option values: false (default): ignore $comment keyword. true : log the keyword value to console. function: pass the keyword value, its schema path and root schema to the specified function jsonPointers : set dataPath property of errors using JSON Pointers instead of JavaScript property access notation. uniqueItems : validate uniqueItems keyword (true by default). unicode : calculate correct length of strings with unicode pairs (true by default). Pass false to use .length of strings that is faster, but gives \"incorrect\" lengths of strings with unicode pairs - each unicode pair is counted as two characters. nullable : support keyword \"nullable\" from Open API 3 specification . format : formats validation mode. Option values: \"fast\" (default) - simplified and fast validation (see Formats for details of which formats are available and affected by this option). \"full\" - more restrictive and slow validation. E.g., 25:00:00 and 2015/14/33 will be invalid time and date in 'full' mode but it will be valid in 'fast' mode. false - ignore all format keywords. formats : an object with custom formats. Keys and values will be passed to addFormat method. keywords : an object with custom keywords. Keys and values will be passed to addKeyword method. unknownFormats : handling of unknown formats. Option values: true (default) - if an unknown format is encountered the exception is thrown during schema compilation. If format keyword value is $data reference and it is unknown the validation will fail. [String] - an array of unknown format names that will be ignored. This option can be used to allow usage of third party schemas with format(s) for which you don't have definitions, but still fail if another unknown format is used. If format keyword value is $data reference and it is not in this array the validation will fail. \"ignore\" - to log warning during schema compilation and always pass validation (the default behaviour in versions before 5.0.0). This option is not recommended, as it allows to mistype format name and it won't be validated without any error message. This behaviour is required by JSON Schema specification. schemas : an array or object of schemas that will be added to the instance. In case you pass the array the schemas must have IDs in them. When the object is passed the method addSchema(value, key) will be called for each schema in this object. logger : sets the logging method. Default is the global console object that should have methods log , warn and error . See Error logging . Option values: custom logger - it should have methods log , warn and error . If any of these methods is missing an exception will be thrown. false - logging is disabled.","title":"Validation and reporting options"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#referenced-schema-options","text":"schemaId : this option defines which keywords are used as schema URI. Option value: \"$id\" (default) - only use $id keyword as schema URI (as specified in JSON Schema draft-06/07), ignore id keyword (if it is present a warning will be logged). \"id\" - only use id keyword as schema URI (as specified in JSON Schema draft-04), ignore $id keyword (if it is present a warning will be logged). \"auto\" - use both $id and id keywords as schema URI. If both are present (in the same schema object) and different the exception will be thrown during schema compilation. missingRefs : handling of missing referenced schemas. Option values: true (default) - if the reference cannot be resolved during compilation the exception is thrown. The thrown error has properties missingRef (with hash fragment) and missingSchema (without it). Both properties are resolved relative to the current base id (usually schema id, unless it was substituted). \"ignore\" - to log error during compilation and always pass validation. \"fail\" - to log error and successfully compile schema but fail validation if this rule is checked. extendRefs : validation of other keywords when $ref is present in the schema. Option values: \"ignore\" (default) - when $ref is used other keywords are ignored (as per JSON Reference standard). A warning will be logged during the schema compilation. \"fail\" (recommended) - if other validation keywords are used together with $ref the exception will be thrown when the schema is compiled. This option is recommended to make sure schema has no keywords that are ignored, which can be confusing. true - validate all keywords in the schemas with $ref (the default behaviour in versions before 5.0.0). loadSchema : asynchronous function that will be used to load remote schemas when compileAsync method is used and some reference is missing (option missingRefs should NOT be 'fail' or 'ignore'). This function should accept remote schema uri as a parameter and return a Promise that resolves to a schema. See example in Asynchronous compilation .","title":"Referenced schema options"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#options-to-modify-validated-data","text":"removeAdditional : remove additional properties - see example in Filtering data . This option is not used if schema is added with addMetaSchema method. Option values: false (default) - not to remove additional properties \"all\" - all additional properties are removed, regardless of additionalProperties keyword in schema (and no validation is made for them). true - only additional properties with additionalProperties keyword equal to false are removed. \"failing\" - additional properties that fail schema validation will be removed (where additionalProperties keyword is false or schema). useDefaults : replace missing or undefined properties and items with the values from corresponding default keywords. Default behaviour is to ignore default keywords. This option is not used if schema is added with addMetaSchema method. See examples in Assigning defaults . Option values: false (default) - do not use defaults true - insert defaults by value (object literal is used). \"empty\" - in addition to missing or undefined, use defaults for properties and items that are equal to null or \"\" (an empty string). \"shared\" (deprecated) - insert defaults by reference. If the default is an object, it will be shared by all instances of validated data. If you modify the inserted default in the validated data, it will be modified in the schema as well. coerceTypes : change data type of data to match type keyword. See the example in Coercing data types and coercion rules . Option values: false (default) - no type coercion. true - coerce scalar data types. \"array\" - in addition to coercions between scalar types, coerce scalar data to an array with one element and vice versa (as required by the schema).","title":"Options to modify validated data"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#strict-mode-options","text":"strictDefaults : report ignored default keywords in schemas. Option values: false (default) - ignored defaults are not reported true - if an ignored default is present, throw an error \"log\" - if an ignored default is present, log warning strictKeywords : report unknown keywords in schemas. Option values: false (default) - unknown keywords are not reported true - if an unknown keyword is present, throw an error \"log\" - if an unknown keyword is present, log warning strictNumbers : validate numbers strictly, failing validation for NaN and Infinity. Option values: false (default) - NaN or Infinity will pass validation for numeric types true - NaN or Infinity will not pass validation for numeric types","title":"Strict mode options"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#asynchronous-validation-options","text":"transpile : Requires ajv-async package. It determines whether Ajv transpiles compiled asynchronous validation function. Option values: undefined (default) - transpile with nodent if async functions are not supported. true - always transpile with nodent. false - do not transpile; if async functions are not supported an exception will be thrown.","title":"Asynchronous validation options"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#advanced-options","text":"meta : add meta-schema so it can be used by other schemas (true by default). If an object is passed, it will be used as the default meta-schema for schemas that have no $schema keyword. This default meta-schema MUST have $schema keyword. validateSchema : validate added/compiled schemas against meta-schema (true by default). $schema property in the schema can be http://json-schema.org/draft-07/schema or absent (draft-07 meta-schema will be used) or can be a reference to the schema previously added with addMetaSchema method. Option values: true (default) - if the validation fails, throw the exception. \"log\" - if the validation fails, log error. false - skip schema validation. addUsedSchema : by default methods compile and validate add schemas to the instance if they have $id (or id ) property that doesn't start with \"#\". If $id is present and it is not unique the exception will be thrown. Set this option to false to skip adding schemas to the instance and the $id uniqueness check when these methods are used. This option does not affect addSchema method. inlineRefs : Affects compilation of referenced schemas. Option values: true (default) - the referenced schemas that don't have refs in them are inlined, regardless of their size - that substantially improves performance at the cost of the bigger size of compiled schema functions. false - to not inline referenced schemas (they will be compiled as separate functions). integer number - to limit the maximum number of keywords of the schema that will be inlined. passContext : pass validation context to custom keyword functions. If this option is true and you pass some context to the compiled validation function with validate.call(context, data) , the context will be available as this in your custom keywords. By default this is Ajv instance. loopRequired : by default required keyword is compiled into a single expression (or a sequence of statements in allErrors mode). In case of a very large number of properties in this keyword it may result in a very big validation function. Pass integer to set the number of properties above which required keyword will be validated in a loop - smaller validation function size but also worse performance. ownProperties : by default Ajv iterates over all enumerable object properties; when this option is true only own enumerable object properties (i.e. found directly on the object rather than on its prototype) are iterated. Contributed by @mbroadst. multipleOfPrecision : by default multipleOf keyword is validated by comparing the result of division with parseInt() of that result. It works for dividers that are bigger than 1. For small dividers such as 0.01 the result of the division is usually not integer (even when it should be integer, see issue #84 ). If you need to use fractional dividers set this option to some positive integer N to have multipleOf validated using this formula: Math.abs(Math.round(division) - division) < 1e-N (it is slower but allows for float arithmetics deviations). errorDataPath (deprecated): set dataPath to point to 'object' (default) or to 'property' when validating keywords required , additionalProperties and dependencies . messages : Include human-readable messages in errors. true by default. false can be passed when custom messages are used (e.g. with ajv-i18n ). sourceCode : add sourceCode property to validating function (for debugging; this code can be different from the result of toString call). processCode : an optional function to process generated code before it is passed to Function constructor. It can be used to either beautify (the validating function is generated without line-breaks) or to transpile code. Starting from version 5.0.0 this option replaced options: beautify that formatted the generated function using js-beautify . If you want to beautify the generated code pass a function calling require('js-beautify').js_beautify as processCode: code => js_beautify(code) . transpile that transpiled asynchronous validation function. You can still use transpile option with ajv-async package. See Asynchronous validation for more information. cache : an optional instance of cache to store compiled schemas using stable-stringified schema as a key. For example, set-associative cache sacjs can be used. If not passed then a simple hash is used which is good enough for the common use case (a limited number of statically defined schemas). Cache should have methods put(key, value) , get(key) , del(key) and clear() . serialize : an optional function to serialize schema to cache key. Pass false to use schema itself as a key (e.g., if WeakMap used as a cache). By default fast-json-stable-stringify is used.","title":"Advanced options"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#validation-errors","text":"In case of validation failure, Ajv assigns the array of errors to errors property of validation function (or to errors property of Ajv instance when validate or validateSchema methods were called). In case of asynchronous validation , the returned promise is rejected with exception Ajv.ValidationError that has errors property.","title":"Validation errors"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#error-objects","text":"Each error is an object with the following properties: keyword : validation keyword. dataPath : the path to the part of the data that was validated. By default dataPath uses JavaScript property access notation (e.g., \".prop[1].subProp\" ). When the option jsonPointers is true (see Options ) dataPath will be set using JSON pointer standard (e.g., \"/prop/1/subProp\" ). schemaPath : the path (JSON-pointer as a URI fragment) to the schema of the keyword that failed validation. params : the object with the additional information about error that can be used to create custom error messages (e.g., using ajv-i18n package). See below for parameters set by all keywords. message : the standard error message (can be excluded with option messages set to false). schema : the schema of the keyword (added with verbose option). parentSchema : the schema containing the keyword (added with verbose option) data : the data validated by the keyword (added with verbose option). Please note : propertyNames keyword schema validation errors have an additional property propertyName , dataPath points to the object. After schema validation for each property name, if it is invalid an additional error is added with the property keyword equal to \"propertyNames\" .","title":"Error objects"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#error-parameters","text":"Properties of params object in errors depend on the keyword that failed validation. maxItems , minItems , maxLength , minLength , maxProperties , minProperties - property limit (number, the schema of the keyword). additionalItems - property limit (the maximum number of allowed items in case when items keyword is an array of schemas and additionalItems is false). additionalProperties - property additionalProperty (the property not used in properties and patternProperties keywords). dependencies - properties: property (dependent property), missingProperty (required missing dependency - only the first one is reported currently) deps (required dependencies, comma separated list as a string), depsCount (the number of required dependencies). format - property format (the schema of the keyword). maximum , minimum - properties: limit (number, the schema of the keyword), exclusive (boolean, the schema of exclusiveMaximum or exclusiveMinimum ), comparison (string, comparison operation to compare the data to the limit, with the data on the left and the limit on the right; can be \"<\", \"<=\", \">\", \">=\") multipleOf - property multipleOf (the schema of the keyword) pattern - property pattern (the schema of the keyword) required - property missingProperty (required property that is missing). propertyNames - property propertyName (an invalid property name). patternRequired (in ajv-keywords) - property missingPattern (required pattern that did not match any property). type - property type (required type(s), a string, can be a comma-separated list) uniqueItems - properties i and j (indices of duplicate items). const - property allowedValue pointing to the value (the schema of the keyword). enum - property allowedValues pointing to the array of values (the schema of the keyword). $ref - property ref with the referenced schema URI. oneOf - property passingSchemas (array of indices of passing schemas, null if no schema passes). custom keywords (in case keyword definition doesn't create errors) - property keyword (the keyword name).","title":"Error parameters"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#error-logging","text":"Using the logger option when initiallizing Ajv will allow you to define custom logging. Here you can build upon the exisiting logging. The use of other logging packages is supported as long as the package or its associated wrapper exposes the required methods. If any of the required methods are missing an exception will be thrown. - Required Methods : log , warn , error var otherLogger = new OtherLogger(); var ajv = new Ajv({ logger: { log: console.log.bind(console), warn: function warn() { otherLogger.logWarn.apply(otherLogger, arguments); }, error: function error() { otherLogger.logError.apply(otherLogger, arguments); console.error.apply(console, arguments); } } });","title":"Error logging"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#plugins","text":"Ajv can be extended with plugins that add custom keywords, formats or functions to process generated code. When such plugin is published as npm package it is recommended that it follows these conventions: it exports a function this function accepts ajv instance as the first parameter and returns the same instance to allow chaining this function can accept an optional configuration as the second parameter If you have published a useful plugin please submit a PR to add it to the next section.","title":"Plugins"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#related-packages","text":"ajv-async - plugin to configure async validation mode ajv-bsontype - plugin to validate mongodb's bsonType formats ajv-cli - command line interface ajv-errors - plugin for custom error messages ajv-i18n - internationalised error messages ajv-istanbul - plugin to instrument generated validation code to measure test coverage of your schemas ajv-keywords - plugin with custom validation keywords (select, typeof, etc.) ajv-merge-patch - plugin with keywords $merge and $patch ajv-pack - produces a compact module exporting validation functions ajv-formats-draft2019 - format validators for draft2019 that aren't already included in ajv (ie. idn-hostname , idn-email , iri , iri-reference and duration ).","title":"Related packages"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#some-packages-using-ajv","text":"webpack - a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser jsonscript-js - the interpreter for JSONScript - scripted processing of existing endpoints and services osprey-method-handler - Express middleware for validating requests and responses based on a RAML method object, used in osprey - validating API proxy generated from a RAML definition har-validator - HTTP Archive (HAR) validator jsoneditor - a web-based tool to view, edit, format, and validate JSON http://jsoneditoronline.org JSON Schema Lint - a web tool to validate JSON/YAML document against a single JSON Schema http://jsonschemalint.com objection - SQL-friendly ORM for Node.js table - formats data into a string table ripple-lib - a JavaScript API for interacting with Ripple in Node.js and the browser restbase - distributed storage with REST API & dispatcher for backend services built to provide a low-latency & high-throughput API for Wikipedia / Wikimedia content hippie-swagger - Hippie wrapper that provides end to end API testing with swagger validation react-form-controlled - React controlled form components with validation rabbitmq-schema - a schema definition module for RabbitMQ graphs and messages @query/schema - stream filtering with a URI-safe query syntax parsing to JSON Schema chai-ajv-json-schema - chai plugin to us JSON Schema with expect in mocha tests grunt-jsonschema-ajv - Grunt plugin for validating files against JSON Schema extract-text-webpack-plugin - extract text from bundle into a file electron-builder - a solution to package and build a ready for distribution Electron app addons-linter - Mozilla Add-ons Linter gh-pages-generator - multi-page site generator converting markdown files to GitHub pages ESLint - the pluggable linting utility for JavaScript and JSX","title":"Some packages using Ajv"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#tests","text":"npm install git submodule update --init npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#contributing","text":"All validation functions are generated using doT templates in dot folder. Templates are precompiled so doT is not a run-time dependency. npm run build - compiles templates to dotjs folder. npm run watch - automatically compiles templates when files in dot folder change Please see Contributing guidelines","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#changes-history","text":"See https://github.com/ajv-validator/ajv/releases Please note : Changes in version 7.0.0-beta Version 6.0.0 .","title":"Changes history"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#code-of-conduct","text":"Please review and follow the Code of conduct . Please report any unacceptable behaviour to ajv.validator@gmail.com - it will be reviewed by the project team.","title":"Code of conduct"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#open-source-software-support","text":"Ajv is a part of Tidelift subscription - it provides a centralised support to open-source software users, in addition to the support provided by software maintainers.","title":"Open-source software support"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/ajv/lib/dotjs/","text":"These files are compiled dot templates from dot folder. Do NOT edit them directly, edit the templates and run npm run build from main ajv folder.","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/","text":"ansi-styles ANSI escape codes for styling strings in the terminal You probably want the higher-level chalk module for styling your strings. Install $ npm install ansi-styles Usage const style = require('ansi-styles'); console.log(`${style.green.open}Hello world!${style.green.close}`); // Color conversion between 16/256/truecolor // NOTE: If conversion goes to 16 colors or 256 colors, the original color // may be degraded to fit that color palette. This means terminals // that do not support 16 million colors will best-match the // original color. console.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close); console.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close); console.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close); API Each style has an open and close property. Styles Modifiers reset bold dim italic (Not widely supported) underline inverse hidden strikethrough (Not widely supported) Colors black red green yellow blue magenta cyan white gray (\"bright black\") redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright Background colors bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright Advanced usage By default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module. style.modifier style.color style.bgColor Example console.log(style.color.green.open); Raw escape codes (i.e. without the CSI escape prefix \\u001B[ and render mode postfix m ) are available under style.codes , which returns a Map with the open codes as keys and close codes as values. Example console.log(style.codes.get(36)); //=> 39 256 / 16 million (TrueColor) support ansi-styles uses the color-convert package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors. To use these, call the associated conversion function with the intended output, for example: style.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code style.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code style.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code style.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code Related ansi-escapes - ANSI escape codes for manipulating the terminal Maintainers Sindre Sorhus Josh Junon License MIT","title":"ansi-styles Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#ansi-styles","text":"ANSI escape codes for styling strings in the terminal You probably want the higher-level chalk module for styling your strings.","title":"ansi-styles"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#install","text":"$ npm install ansi-styles","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#usage","text":"const style = require('ansi-styles'); console.log(`${style.green.open}Hello world!${style.green.close}`); // Color conversion between 16/256/truecolor // NOTE: If conversion goes to 16 colors or 256 colors, the original color // may be degraded to fit that color palette. This means terminals // that do not support 16 million colors will best-match the // original color. console.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close); console.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close); console.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#api","text":"Each style has an open and close property.","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#styles","text":"","title":"Styles"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#modifiers","text":"reset bold dim italic (Not widely supported) underline inverse hidden strikethrough (Not widely supported)","title":"Modifiers"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#colors","text":"black red green yellow blue magenta cyan white gray (\"bright black\") redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright","title":"Colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#background-colors","text":"bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright","title":"Background colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#advanced-usage","text":"By default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module. style.modifier style.color style.bgColor","title":"Advanced usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#example","text":"console.log(style.color.green.open); Raw escape codes (i.e. without the CSI escape prefix \\u001B[ and render mode postfix m ) are available under style.codes , which returns a Map with the open codes as keys and close codes as values.","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#example_1","text":"console.log(style.codes.get(36)); //=> 39","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#256-16-million-truecolor-support","text":"ansi-styles uses the color-convert package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors. To use these, call the associated conversion function with the intended output, for example: style.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code style.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code style.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code style.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code","title":"256 / 16 million (TrueColor) support"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#related","text":"ansi-escapes - ANSI escape codes for manipulating the terminal","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#maintainers","text":"Sindre Sorhus Josh Junon","title":"Maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/ansi-styles/readme/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/","text":"argparse CLI arguments parser for node.js, with sub-commands support. Port of python's argparse (version 3.9.0 ). Difference with original. JS has no keyword arguments support. Pass options instead: new ArgumentParser({ description: 'example', add_help: true }) . JS has no python's types int , float , ... Use string-typed names: .add_argument('-b', { type: 'int', help: 'help' }) . %r format specifier uses require('util').inspect() . More details in doc . Example test.js file: #!/usr/bin/env node 'use strict'; const { ArgumentParser } = require('argparse'); const { version } = require('./package.json'); const parser = new ArgumentParser({ description: 'Argparse example' }); parser.add_argument('-v', '--version', { action: 'version', version }); parser.add_argument('-f', '--foo', { help: 'foo bar' }); parser.add_argument('-b', '--bar', { help: 'bar foo' }); parser.add_argument('--baz', { help: 'baz bar' }); console.dir(parser.parse_args()); Display help: $ ./test.js -h usage: test.js [-h] [-v] [-f FOO] [-b BAR] [--baz BAZ] Argparse example optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit -f FOO, --foo FOO foo bar -b BAR, --bar BAR bar foo --baz BAZ baz bar Parse arguments: $ ./test.js -f=3 --bar=4 --baz 5 { foo: '3', bar: '4', baz: '5' } API docs Since this is a port with minimal divergence, there's no separate documentation. Use original one instead, with notes about difference. Original doc . Original tutorial . Difference with python . argparse for enterprise Available as part of the Tidelift Subscription The maintainers of argparse and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"argparse"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/#argparse","text":"CLI arguments parser for node.js, with sub-commands support. Port of python's argparse (version 3.9.0 ). Difference with original. JS has no keyword arguments support. Pass options instead: new ArgumentParser({ description: 'example', add_help: true }) . JS has no python's types int , float , ... Use string-typed names: .add_argument('-b', { type: 'int', help: 'help' }) . %r format specifier uses require('util').inspect() . More details in doc .","title":"argparse"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/#example","text":"test.js file: #!/usr/bin/env node 'use strict'; const { ArgumentParser } = require('argparse'); const { version } = require('./package.json'); const parser = new ArgumentParser({ description: 'Argparse example' }); parser.add_argument('-v', '--version', { action: 'version', version }); parser.add_argument('-f', '--foo', { help: 'foo bar' }); parser.add_argument('-b', '--bar', { help: 'bar foo' }); parser.add_argument('--baz', { help: 'baz bar' }); console.dir(parser.parse_args()); Display help: $ ./test.js -h usage: test.js [-h] [-v] [-f FOO] [-b BAR] [--baz BAZ] Argparse example optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit -f FOO, --foo FOO foo bar -b BAR, --bar BAR bar foo --baz BAZ baz bar Parse arguments: $ ./test.js -f=3 --bar=4 --baz 5 { foo: '3', bar: '4', baz: '5' }","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/#api-docs","text":"Since this is a port with minimal divergence, there's no separate documentation. Use original one instead, with notes about difference. Original doc . Original tutorial . Difference with python .","title":"API docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/#argparse-for-enterprise","text":"Available as part of the Tidelift Subscription The maintainers of argparse and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"argparse for enterprise"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 2.0.1 - 2020-08-29 Fixed Fix issue with process.argv when used with interpreters ( coffee , ts-node , etc.), #150. 2.0.0 - 2020-08-14 Changed Full rewrite. Now port from python 3.9.0 & more precise following. See doc for difference and migration info. node.js 10+ required Removed most of local docs in favour of original ones. 1.0.10 - 2018-02-15 Fixed Use .concat instead of + for arrays, #122. 1.0.9 - 2016-09-29 Changed Rerelease after 1.0.8 - deps cleanup. 1.0.8 - 2016-09-29 Changed Maintenance (deps bump, fix node 6.5+ tests, coverage report). 1.0.7 - 2016-03-17 Changed Teach addArgument to accept string arg names. #97, @tomxtobin. 1.0.6 - 2016-02-06 Changed Maintenance: moved to eslint & updated CS. 1.0.5 - 2016-02-05 Changed Removed lodash dependency to significantly reduce install size. Thanks to @mourner. 1.0.4 - 2016-01-17 Changed Maintenance: lodash update to 4.0.0. 1.0.3 - 2015-10-27 Fixed Fix parse = in args: --examplepath=\"C:\\myfolder\\env=x64\" . #84, @CatWithApple. 1.0.2 - 2015-03-22 Changed Relaxed lodash version dependency. 1.0.1 - 2015-02-20 Changed Changed dependencies to be compatible with ancient nodejs. 1.0.0 - 2015-02-19 Changed Maintenance release. Replaced underscore with lodash . Bumped version to 1.0.0 to better reflect semver meaning. HISTORY.md -> CHANGELOG.md 0.1.16 - 2013-12-01 Changed Maintenance release. Updated dependencies and docs. 0.1.15 - 2013-05-13 Fixed Fixed #55, @trebor89 0.1.14 - 2013-05-12 Fixed Fixed #62, @maxtaco 0.1.13 - 2013-04-08 Changed Added .npmignore to reduce package size 0.1.12 - 2013-02-10 Fixed Fixed conflictHandler (#46), @hpaulj 0.1.11 - 2013-02-07 Added Added 70+ tests (ported from python), @hpaulj Added conflictHandler, @applepicke Added fromfilePrefixChar, @hpaulj Fixed Multiple bugfixes, @hpaulj 0.1.10 - 2012-12-30 Added Added mutual exclusion support, thanks to @hpaulj Fixed Fixed options check for storeConst & appendConst actions, thanks to @hpaulj 0.1.9 - 2012-12-27 Fixed Fixed option dest interferens with other options (issue #23), thanks to @hpaulj Fixed default value behavior with * positionals, thanks to @hpaulj Improve getDefault() behavior, thanks to @hpaulj Improve negative argument parsing, thanks to @hpaulj 0.1.8 - 2012-12-01 Fixed Fixed parser parents (issue #19), thanks to @hpaulj Fixed negative argument parse (issue #20), thanks to @hpaulj 0.1.7 - 2012-10-14 Fixed Fixed 'choices' argument parse (issue #16) Fixed stderr output (issue #15) 0.1.6 - 2012-09-09 Fixed Fixed check for conflict of options (thanks to @tomxtobin) 0.1.5 - 2012-09-03 Fixed Fix parser #setDefaults method (thanks to @tomxtobin) 0.1.4 - 2012-07-30 Fixed Fixed pseudo-argument support (thanks to @CGamesPlay) Fixed addHelp default (should be true), if not set (thanks to @benblank) 0.1.3 - 2012-06-27 Fixed Fixed formatter api name: Formatter -> HelpFormatter 0.1.2 - 2012-05-29 Fixed Removed excess whitespace in help Fixed error reporting, when parcer with subcommands called with empty arguments Added Added basic tests 0.1.1 - 2012-05-23 Fixed Fixed line wrapping in help formatter Added better error reporting on invalid arguments 0.1.0 - 2012-05-16 Added First release.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#201-2020-08-29","text":"","title":"2.0.1 - 2020-08-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed","text":"Fix issue with process.argv when used with interpreters ( coffee , ts-node , etc.), #150.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#200-2020-08-14","text":"","title":"2.0.0 - 2020-08-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed","text":"Full rewrite. Now port from python 3.9.0 & more precise following. See doc for difference and migration info. node.js 10+ required Removed most of local docs in favour of original ones.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#1010-2018-02-15","text":"","title":"1.0.10 - 2018-02-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_1","text":"Use .concat instead of + for arrays, #122.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#109-2016-09-29","text":"","title":"1.0.9 - 2016-09-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_1","text":"Rerelease after 1.0.8 - deps cleanup.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#108-2016-09-29","text":"","title":"1.0.8 - 2016-09-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_2","text":"Maintenance (deps bump, fix node 6.5+ tests, coverage report).","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#107-2016-03-17","text":"","title":"1.0.7 - 2016-03-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_3","text":"Teach addArgument to accept string arg names. #97, @tomxtobin.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#106-2016-02-06","text":"","title":"1.0.6 - 2016-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_4","text":"Maintenance: moved to eslint & updated CS.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#105-2016-02-05","text":"","title":"1.0.5 - 2016-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_5","text":"Removed lodash dependency to significantly reduce install size. Thanks to @mourner.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#104-2016-01-17","text":"","title":"1.0.4 - 2016-01-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_6","text":"Maintenance: lodash update to 4.0.0.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#103-2015-10-27","text":"","title":"1.0.3 - 2015-10-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_2","text":"Fix parse = in args: --examplepath=\"C:\\myfolder\\env=x64\" . #84, @CatWithApple.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#102-2015-03-22","text":"","title":"1.0.2 - 2015-03-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_7","text":"Relaxed lodash version dependency.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#101-2015-02-20","text":"","title":"1.0.1 - 2015-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_8","text":"Changed dependencies to be compatible with ancient nodejs.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#100-2015-02-19","text":"","title":"1.0.0 - 2015-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_9","text":"Maintenance release. Replaced underscore with lodash . Bumped version to 1.0.0 to better reflect semver meaning. HISTORY.md -> CHANGELOG.md","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0116-2013-12-01","text":"","title":"0.1.16 - 2013-12-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_10","text":"Maintenance release. Updated dependencies and docs.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0115-2013-05-13","text":"","title":"0.1.15 - 2013-05-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_3","text":"Fixed #55, @trebor89","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0114-2013-05-12","text":"","title":"0.1.14 - 2013-05-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_4","text":"Fixed #62, @maxtaco","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0113-2013-04-08","text":"","title":"0.1.13 - 2013-04-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#changed_11","text":"Added .npmignore to reduce package size","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0112-2013-02-10","text":"","title":"0.1.12 - 2013-02-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_5","text":"Fixed conflictHandler (#46), @hpaulj","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0111-2013-02-07","text":"","title":"0.1.11 - 2013-02-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#added","text":"Added 70+ tests (ported from python), @hpaulj Added conflictHandler, @applepicke Added fromfilePrefixChar, @hpaulj","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_6","text":"Multiple bugfixes, @hpaulj","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#0110-2012-12-30","text":"","title":"0.1.10 - 2012-12-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#added_1","text":"Added mutual exclusion support, thanks to @hpaulj","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_7","text":"Fixed options check for storeConst & appendConst actions, thanks to @hpaulj","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#019-2012-12-27","text":"","title":"0.1.9 - 2012-12-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_8","text":"Fixed option dest interferens with other options (issue #23), thanks to @hpaulj Fixed default value behavior with * positionals, thanks to @hpaulj Improve getDefault() behavior, thanks to @hpaulj Improve negative argument parsing, thanks to @hpaulj","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#018-2012-12-01","text":"","title":"0.1.8 - 2012-12-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_9","text":"Fixed parser parents (issue #19), thanks to @hpaulj Fixed negative argument parse (issue #20), thanks to @hpaulj","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#017-2012-10-14","text":"","title":"0.1.7 - 2012-10-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_10","text":"Fixed 'choices' argument parse (issue #16) Fixed stderr output (issue #15)","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#016-2012-09-09","text":"","title":"0.1.6 - 2012-09-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_11","text":"Fixed check for conflict of options (thanks to @tomxtobin)","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#015-2012-09-03","text":"","title":"0.1.5 - 2012-09-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_12","text":"Fix parser #setDefaults method (thanks to @tomxtobin)","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#014-2012-07-30","text":"","title":"0.1.4 - 2012-07-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_13","text":"Fixed pseudo-argument support (thanks to @CGamesPlay) Fixed addHelp default (should be true), if not set (thanks to @benblank)","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#013-2012-06-27","text":"","title":"0.1.3 - 2012-06-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_14","text":"Fixed formatter api name: Formatter -> HelpFormatter","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#012-2012-05-29","text":"","title":"0.1.2 - 2012-05-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_15","text":"Removed excess whitespace in help Fixed error reporting, when parcer with subcommands called with empty arguments","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#added_2","text":"Added basic tests","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#011-2012-05-23","text":"","title":"0.1.1 - 2012-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#fixed_16","text":"Fixed line wrapping in help formatter Added better error reporting on invalid arguments","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#010-2012-05-16","text":"","title":"0.1.0 - 2012-05-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/argparse/CHANGELOG/#added_3","text":"First release.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/","text":"array-buffer-byte-length Get the byte length of an ArrayBuffer, even in engines without a .byteLength method. Example const assert = require('assert'); const byteLength = require('array-buffer-byte-length'); assert.equal(byteLength([]), NaN, 'an array is not an ArrayBuffer, yields NaN'); assert.equal(byteLength(new ArrayBuffer(0)), 0, 'ArrayBuffer of byteLength 0, yields 0'); Tests Simply clone the repo, npm install , and run npm test","title":"array-buffer-byte-length Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/#array-buffer-byte-length","text":"Get the byte length of an ArrayBuffer, even in engines without a .byteLength method.","title":"array-buffer-byte-length"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/#example","text":"const assert = require('assert'); const byteLength = require('array-buffer-byte-length'); assert.equal(byteLength([]), NaN, 'an array is not an ArrayBuffer, yields NaN'); assert.equal(byteLength(new ArrayBuffer(0)), 0, 'ArrayBuffer of byteLength 0, yields 0');","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-02-03 Commits [patch] add types 598d446 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape 2572345 [Tests] add coverage d27357d [Deps] update call-bind , is-array-buffer 2ea13ad [meta] add missing engines.node 380e96d [Deps] update is-array-buffer cfa7093 [meta] add sideEffects flag 7297ddd v1.0.0 - 2023-02-28 Commits Initial implementation, tests, readme 2db6cad Initial commit b2a0c9c npm init 376acdb Only apps should have lockfiles 70cf325","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/CHANGELOG/#v101-2024-02-03","text":"","title":"v1.0.1 - 2024-02-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/CHANGELOG/#commits","text":"[patch] add types 598d446 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape 2572345 [Tests] add coverage d27357d [Deps] update call-bind , is-array-buffer 2ea13ad [meta] add missing engines.node 380e96d [Deps] update is-array-buffer cfa7093 [meta] add sideEffects flag 7297ddd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/CHANGELOG/#v100-2023-02-28","text":"","title":"v1.0.0 - 2023-02-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-buffer-byte-length/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme 2db6cad Initial commit b2a0c9c npm init 376acdb Only apps should have lockfiles 70cf325","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/","text":"array-includes An ES7/ES2016 spec-compliant Array.prototype.includes shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.includes depends on a receiver (the this value), the main export takes the array to operate on as the first argument. Engines that need this package include: - IE (all versions) - Safari < 9 - Firefox < 43, and 99-101 - Chrome < 47 - Edge < 14 - node < 6 Getting started npm install --save array-includes Usage Basic usage: includes(array, value[, fromIndex=0]) var includes = require('array-includes'); var assert = require('assert'); var arr = [ 'one', 'two' ]; includes(arr, 'one'); // true includes(arr, 'three'); // false includes(arr, 'one', 1); // false Example var arr = [ 1, 'foo', NaN, -0 ]; assert.equal(arr.indexOf(0) > -1, true); assert.equal(arr.indexOf(-0) > -1, true); assert.equal(includes(arr, 0), true); assert.equal(includes(arr, -0), true); assert.equal(arr.indexOf(NaN) > -1, false); assert.equal(includes(arr, NaN), true); assert.equal(includes(arr, 'foo', 0), true); assert.equal(includes(arr, 'foo', 1), true); assert.equal(includes(arr, 'foo', 2), false); /* when Array#includes is not present */ delete Array.prototype.includes; var shimmedIncludes = includes.shim(); assert.equal(shimmedIncludes, includes.getPolyfill()); assert.equal(arr.includes('foo', 1), includes(arr, 'foo', 1)); /* when Array#includes is present */ var shimmedIncludes = includes.shim(); assert.equal(shimmedIncludes, Array.prototype.includes); assert.equal(arr.includes(1, 'foo'), includes(arr, 1, 'foo')); Tests Simply clone the repo, npm install , and run npm test","title":"array-includes Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/#array-includes","text":"An ES7/ES2016 spec-compliant Array.prototype.includes shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.includes depends on a receiver (the this value), the main export takes the array to operate on as the first argument. Engines that need this package include: - IE (all versions) - Safari < 9 - Firefox < 43, and 99-101 - Chrome < 47 - Edge < 14 - node < 6","title":"array-includes"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/#getting-started","text":"npm install --save array-includes","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/#usage","text":"Basic usage: includes(array, value[, fromIndex=0]) var includes = require('array-includes'); var assert = require('assert'); var arr = [ 'one', 'two' ]; includes(arr, 'one'); // true includes(arr, 'three'); // false includes(arr, 'one', 1); // false","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/#example","text":"var arr = [ 1, 'foo', NaN, -0 ]; assert.equal(arr.indexOf(0) > -1, true); assert.equal(arr.indexOf(-0) > -1, true); assert.equal(includes(arr, 0), true); assert.equal(includes(arr, -0), true); assert.equal(arr.indexOf(NaN) > -1, false); assert.equal(includes(arr, NaN), true); assert.equal(includes(arr, 'foo', 0), true); assert.equal(includes(arr, 'foo', 1), true); assert.equal(includes(arr, 'foo', 2), false); /* when Array#includes is not present */ delete Array.prototype.includes; var shimmedIncludes = includes.shim(); assert.equal(shimmedIncludes, includes.getPolyfill()); assert.equal(arr.includes('foo', 1), includes(arr, 'foo', 1)); /* when Array#includes is present */ var shimmedIncludes = includes.shim(); assert.equal(shimmedIncludes, Array.prototype.includes); assert.equal(arr.includes(1, 'foo'), includes(arr, 1, 'foo'));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v3.1.8 - 2024-03-20 Commits [Deps] update call-bind , define-properties , es-abstract , get-intrinsic b105f3a [actions] remove redundant finisher fa1111d [Dev Deps] update aud , npmignore , tape 499e7e9 [Refactor] use es-object-atoms where possible e4bd17f [Tests] use call-bind instead of function-bind 3dbe456 v3.1.7 - 2023-09-03 Commits [Deps] update define-properties , es-abstract , get-intrinsic e217b1e [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 93465c3 v3.1.6 - 2022-11-07 Commits [meta] add auto-changelog c5fbe72 [meta] use npmignore to autogenerate an npmignore file dbd6dc8 [Deps] update es-abstract , get-intrinsic b819e3b [actions] update rebase action to use reusable workflow 6e241d5 [Dev Deps] update aud , tape 9b2a931 [readme] note that FF 102+ no longer needs this package 0a0c758 3.1.5 / 2022-05-03 [Fix] install polyfill on FF 99+ [Deps] update define-properties , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , functions-have-names , safe-publish-latest , tape [actions] reuse common workflows [actions] update codecov uploader 3.1.4 / 2021-10-04 [Robustness] avoid a runtime Math.max call [readme] add github actions/codecov badges [readme] fix repo URLs; remove travis badge [Deps] update es-abstract , is-string [meta] use prepublishOnly script for npm 7+ [actions] update workflows [actions] use node/install instead of node/run ; use codecov action [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , tape 3.1.3 / 2021-02-20 [Deps] update call-bind , es-abstract , get-intrinsic [meta] do not publish github action workflow files [meta] gitignore coverage output [actions] update workflows [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape [Tests] increase coverage 3.1.2 / 2020-11-24 [Robustness] remove dependency on .apply [Deps] update es-abstract ; use call-bind and get-intrinsic where applicable [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , tape ; add aud , safe-publish-latest [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner 3.1.1 / 2019-12-21 [Fix] IE < 9 does not have index access on strings [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , tape [meta] remove unused Makefile and associated utilities [Tests] add string tests 3.1.0 / 2019-12-11 [New] add auto entry point [Refactor] use split-up es-abstract (68% bundle size decrease) [readme] fix repo URLs, remove testling, fix readme parsing [Deps] update es-abstract , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , evalmd , covert , functions-have-names , replace , semver , tape , @es-shims/api , function-bind [meta] add funding field, FUNDING.yml [meta] Only apps should have lockfiles [Tests] add more fromIndex tests [Tests] use shared travis-ci configs [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs [Tests] use functions-have-names [Tests] use npm audit instead of nsp [Tests] remove jscs [actions] add automatic rebasing / merge commit blocking 3.0.3 / 2017-04-18 [Fix] ensure that shim.js actually shims when the polyfill differs from native [Tests] up to node v7.9 , v6.10 , v4.8 ; comment out OS X builds; improve test matrix [Dev Deps] update nsp , eslint , @ljharb/eslint-config , tape , jscs , semver , function-bind , @es-shims/api [Deps] update es-abstract [Docs] update readme: add \u201cgetting started\u201d and \u201cusage\u201d (#19) 3.0.2 / 2015-06-06 Use the polyfill, not the implementation, as the default export [Deps] update es-abstract [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver [Tests] up to node v5.5 [Tests] keep tests passing in node v0.8 [Tests] Only run evalmd as part of the full test suite, since it's more like a linter [Tests] fix npm upgrades for older nodes 3.0.1 / 2015-05-23 [Fix] in \"shim\", assign the polyfill, not the implementation 3.0.0 / 2015-05-23 [Breaking] Implement the es-shim API [Deps] update define-properties , es-abstract [Dev Deps] update eslint , semver , nsp , semver , jscs [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Tests] use my personal shared eslint config [Tests] up to io.js v3.0 2.0.0 / 2015-05-23 Fix to not skip holes, per https://github.com/tc39/Array.prototype.includes/issues/15 1.1.1 / 2015-05-23 Test up to io.js v2.0 Update es-abstract , tape , eslint , semver , jscs , semver 1.1.0 / 2015-03-19 Update es-abstract , editorconfig-tools , nsp , eslint , semver 1.0.6 / 2015-02-17 All grade A-supported node / iojs versions now ship with an npm that understands ^ . Run travis-ci tests on iojs and node v0.12; allow 0.8 failures. Update tape , jscs , es-abstract , remove is . 1.0.5 / 2015-01-30 Update tape , jscs , nsp , eslint , es-abstract 1.0.4 / 2015-01-10 Use es-abstract for ECMAScript spec internal abstract operations 1.0.3 / 2015-01-06 Speed optimization: use Array#indexOf when available Fix ES3, IE 6-8, Opera 10.6, Opera 11.1 support Run testling on both sets of tests 1.0.2 / 2015-01-05 Ensure tests are includes in the module on npm 1.0.1 / 2015-01-04 Remove mistaken auto-shim. 1.0.0 / 2015-01-04 v1.0.0","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#v318-2024-03-20","text":"","title":"v3.1.8 - 2024-03-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#commits","text":"[Deps] update call-bind , define-properties , es-abstract , get-intrinsic b105f3a [actions] remove redundant finisher fa1111d [Dev Deps] update aud , npmignore , tape 499e7e9 [Refactor] use es-object-atoms where possible e4bd17f [Tests] use call-bind instead of function-bind 3dbe456","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#v317-2023-09-03","text":"","title":"v3.1.7 - 2023-09-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#commits_1","text":"[Deps] update define-properties , es-abstract , get-intrinsic e217b1e [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 93465c3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#v316-2022-11-07","text":"","title":"v3.1.6 - 2022-11-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#commits_2","text":"[meta] add auto-changelog c5fbe72 [meta] use npmignore to autogenerate an npmignore file dbd6dc8 [Deps] update es-abstract , get-intrinsic b819e3b [actions] update rebase action to use reusable workflow 6e241d5 [Dev Deps] update aud , tape 9b2a931 [readme] note that FF 102+ no longer needs this package 0a0c758","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#315-2022-05-03","text":"[Fix] install polyfill on FF 99+ [Deps] update define-properties , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , functions-have-names , safe-publish-latest , tape [actions] reuse common workflows [actions] update codecov uploader","title":"3.1.5 / 2022-05-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#314-2021-10-04","text":"[Robustness] avoid a runtime Math.max call [readme] add github actions/codecov badges [readme] fix repo URLs; remove travis badge [Deps] update es-abstract , is-string [meta] use prepublishOnly script for npm 7+ [actions] update workflows [actions] use node/install instead of node/run ; use codecov action [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , tape","title":"3.1.4 / 2021-10-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#313-2021-02-20","text":"[Deps] update call-bind , es-abstract , get-intrinsic [meta] do not publish github action workflow files [meta] gitignore coverage output [actions] update workflows [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape [Tests] increase coverage","title":"3.1.3 / 2021-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#312-2020-11-24","text":"[Robustness] remove dependency on .apply [Deps] update es-abstract ; use call-bind and get-intrinsic where applicable [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , tape ; add aud , safe-publish-latest [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner","title":"3.1.2 / 2020-11-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#311-2019-12-21","text":"[Fix] IE < 9 does not have index access on strings [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , tape [meta] remove unused Makefile and associated utilities [Tests] add string tests","title":"3.1.1 / 2019-12-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#310-2019-12-11","text":"[New] add auto entry point [Refactor] use split-up es-abstract (68% bundle size decrease) [readme] fix repo URLs, remove testling, fix readme parsing [Deps] update es-abstract , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , evalmd , covert , functions-have-names , replace , semver , tape , @es-shims/api , function-bind [meta] add funding field, FUNDING.yml [meta] Only apps should have lockfiles [Tests] add more fromIndex tests [Tests] use shared travis-ci configs [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs [Tests] use functions-have-names [Tests] use npm audit instead of nsp [Tests] remove jscs [actions] add automatic rebasing / merge commit blocking","title":"3.1.0 / 2019-12-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#303-2017-04-18","text":"[Fix] ensure that shim.js actually shims when the polyfill differs from native [Tests] up to node v7.9 , v6.10 , v4.8 ; comment out OS X builds; improve test matrix [Dev Deps] update nsp , eslint , @ljharb/eslint-config , tape , jscs , semver , function-bind , @es-shims/api [Deps] update es-abstract [Docs] update readme: add \u201cgetting started\u201d and \u201cusage\u201d (#19)","title":"3.0.3 / 2017-04-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#302-2015-06-06","text":"Use the polyfill, not the implementation, as the default export [Deps] update es-abstract [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver [Tests] up to node v5.5 [Tests] keep tests passing in node v0.8 [Tests] Only run evalmd as part of the full test suite, since it's more like a linter [Tests] fix npm upgrades for older nodes","title":"3.0.2 / 2015-06-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#301-2015-05-23","text":"[Fix] in \"shim\", assign the polyfill, not the implementation","title":"3.0.1 / 2015-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#300-2015-05-23","text":"[Breaking] Implement the es-shim API [Deps] update define-properties , es-abstract [Dev Deps] update eslint , semver , nsp , semver , jscs [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Tests] use my personal shared eslint config [Tests] up to io.js v3.0","title":"3.0.0 / 2015-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#200-2015-05-23","text":"Fix to not skip holes, per https://github.com/tc39/Array.prototype.includes/issues/15","title":"2.0.0 / 2015-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#111-2015-05-23","text":"Test up to io.js v2.0 Update es-abstract , tape , eslint , semver , jscs , semver","title":"1.1.1 / 2015-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#110-2015-03-19","text":"Update es-abstract , editorconfig-tools , nsp , eslint , semver","title":"1.1.0 / 2015-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#106-2015-02-17","text":"All grade A-supported node / iojs versions now ship with an npm that understands ^ . Run travis-ci tests on iojs and node v0.12; allow 0.8 failures. Update tape , jscs , es-abstract , remove is .","title":"1.0.6 / 2015-02-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#105-2015-01-30","text":"Update tape , jscs , nsp , eslint , es-abstract","title":"1.0.5 / 2015-01-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#104-2015-01-10","text":"Use es-abstract for ECMAScript spec internal abstract operations","title":"1.0.4 / 2015-01-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#103-2015-01-06","text":"Speed optimization: use Array#indexOf when available Fix ES3, IE 6-8, Opera 10.6, Opera 11.1 support Run testling on both sets of tests","title":"1.0.3 / 2015-01-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#102-2015-01-05","text":"Ensure tests are includes in the module on npm","title":"1.0.2 / 2015-01-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#101-2015-01-04","text":"Remove mistaken auto-shim.","title":"1.0.1 / 2015-01-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/array-includes/CHANGELOG/#100-2015-01-04","text":"v1.0.0","title":"1.0.0 / 2015-01-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/","text":"array.prototype.findlast An ESnext spec-compliant Array.prototype.findLast shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.findLast depends on a receiver (the this value), the main export takes the array to operate on as the first argument. Getting started npm install --save array.prototype.findlast Usage/Examples var findLast = require('array.prototype.findlast'); var assert = require('assert'); var arr = [1, [2], [], 3, [[4]]]; var isNumber = function (x) { return typeof x === 'number' }; assert.deepEqual(findLast(arr, isNumber), 3); var findLast = require('array.prototype.findlast'); var assert = require('assert'); /* when Array#findLast is not present */ delete Array.prototype.findLast; var shimmed = findLast.shim(); assert.equal(shimmed, findLast.getPolyfill()); assert.deepEqual(arr.findLast(isNumber), findLast(arr, isNumber)); var findLast = require('array.prototype.findlast'); var assert = require('assert'); /* when Array#findLast is present */ var shimmed = findLast.shim(); assert.equal(shimmed, Array.prototype.findLast); assert.deepEqual(arr.findLast(isNumber), findLast(arr, isNumber)); Tests Simply clone the repo, npm install , and run npm test","title":"array.prototype.findlast Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/#arrayprototypefindlast","text":"An ESnext spec-compliant Array.prototype.findLast shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.findLast depends on a receiver (the this value), the main export takes the array to operate on as the first argument.","title":"array.prototype.findlast"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/#getting-started","text":"npm install --save array.prototype.findlast","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/#usageexamples","text":"var findLast = require('array.prototype.findlast'); var assert = require('assert'); var arr = [1, [2], [], 3, [[4]]]; var isNumber = function (x) { return typeof x === 'number' }; assert.deepEqual(findLast(arr, isNumber), 3); var findLast = require('array.prototype.findlast'); var assert = require('assert'); /* when Array#findLast is not present */ delete Array.prototype.findLast; var shimmed = findLast.shim(); assert.equal(shimmed, findLast.getPolyfill()); assert.deepEqual(arr.findLast(isNumber), findLast(arr, isNumber)); var findLast = require('array.prototype.findlast'); var assert = require('assert'); /* when Array#findLast is present */ var shimmed = findLast.shim(); assert.equal(shimmed, Array.prototype.findLast); assert.deepEqual(arr.findLast(isNumber), findLast(arr, isNumber));","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.5 - 2024-03-19 Commits [meta] remove useless ESM 30b3843 [Deps] update call-bind , es-abstract f339e4d [actions] remove redundant finisher 3b66016 [Refactor] use es-object-atoms where possible c7146f1 [Dev Deps] update hasown , tape 16149a0 v1.2.4 - 2024-02-05 Commits [Deps] update call-bind , define-properties , es-abstract , es-shim-unscopables , get-intrinsic 6960289 [Refactor] use es-errors , so things that only need those do not need get-intrinsic 96e976a [Dev Deps] update aud , npmignore , tape e41c671 [Dev Deps] use hasown instead of has 3e81897 [Dev Deps] update object-inspect , tape 09387d9 v1.2.3 - 2023-08-29 Commits [Deps] update define-properties , es-abstract , get-intrinsic ed6e699 [Tests] add passing test262 test ba57e7f [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape fdf9269 [Tests] use globalthis d56fd28 v1.2.2 - 2022-11-02 Commits [meta] use npmignore to autogenerate an npmignore file c8bd8e9 [Deps] update es-abstract , get-intrinsic 7dd1e37 [actions] update rebase action to use reusable workflow 116bfa3 [Deps] update define-properties , es-abstract , get-intrinsic 8a6fcb5 [Dev Deps] update es-value-fixtures , object-inspect , tape 899e29a [Dev Deps] update aud , tape 2019883 [Tests] add indication of whether it was shimmed c940767 v1.2.1 - 2022-04-11 Commits [Refactor] use es-shim-unscopables e85dfc7 v1.2.0 - 2022-04-11 Commits [actions] reuse common workflows 47e3be7 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape da9ec92 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 2658604 [actions] update codecov uploader 9e4ac5e [New] shim / auto : add findLast to Symbol.unscopables a3703b0 [meta] use prepublishOnly script for npm 7+ 499fd61 [Deps] update es-abstract 9833a38 [Deps] update es-abstract 3055ac5 [Dev Deps] update @es-shims/api 4639a6b v1.1.1 - 2021-10-01 Commits [Refactor] remove ESM entry points 10118cc [Tests] add new tests from test262 11a6b0a [Deps] update es-abstract ad74212 [readme] fix URLs ea7f11e [Dev Deps] update @ljharb/eslint-config , @es-shims/api b834c11 v1.1.0 - 2021-08-07 Commits [New] add ESM entry points 4830a17 [Fix] ES3 engines: ensure nullish receiver throws 3483d48 [Fix] add missing entry points to exports db8fe56 [Dev Deps] update eslint , tape a59f069 [Deps] update es-abstract 4faa274 v1.0.0 - 2021-07-13 Commits Implementation & Tests 70cf3b1 Initial commit d94083f npm init e016a98 Only apps should have lockfiles cb11c67","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v125-2024-03-19","text":"","title":"v1.2.5 - 2024-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits","text":"[meta] remove useless ESM 30b3843 [Deps] update call-bind , es-abstract f339e4d [actions] remove redundant finisher 3b66016 [Refactor] use es-object-atoms where possible c7146f1 [Dev Deps] update hasown , tape 16149a0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v124-2024-02-05","text":"","title":"v1.2.4 - 2024-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_1","text":"[Deps] update call-bind , define-properties , es-abstract , es-shim-unscopables , get-intrinsic 6960289 [Refactor] use es-errors , so things that only need those do not need get-intrinsic 96e976a [Dev Deps] update aud , npmignore , tape e41c671 [Dev Deps] use hasown instead of has 3e81897 [Dev Deps] update object-inspect , tape 09387d9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v123-2023-08-29","text":"","title":"v1.2.3 - 2023-08-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_2","text":"[Deps] update define-properties , es-abstract , get-intrinsic ed6e699 [Tests] add passing test262 test ba57e7f [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape fdf9269 [Tests] use globalthis d56fd28","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v122-2022-11-02","text":"","title":"v1.2.2 - 2022-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_3","text":"[meta] use npmignore to autogenerate an npmignore file c8bd8e9 [Deps] update es-abstract , get-intrinsic 7dd1e37 [actions] update rebase action to use reusable workflow 116bfa3 [Deps] update define-properties , es-abstract , get-intrinsic 8a6fcb5 [Dev Deps] update es-value-fixtures , object-inspect , tape 899e29a [Dev Deps] update aud , tape 2019883 [Tests] add indication of whether it was shimmed c940767","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v121-2022-04-11","text":"","title":"v1.2.1 - 2022-04-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_4","text":"[Refactor] use es-shim-unscopables e85dfc7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v120-2022-04-11","text":"","title":"v1.2.0 - 2022-04-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_5","text":"[actions] reuse common workflows 47e3be7 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape da9ec92 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 2658604 [actions] update codecov uploader 9e4ac5e [New] shim / auto : add findLast to Symbol.unscopables a3703b0 [meta] use prepublishOnly script for npm 7+ 499fd61 [Deps] update es-abstract 9833a38 [Deps] update es-abstract 3055ac5 [Dev Deps] update @es-shims/api 4639a6b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v111-2021-10-01","text":"","title":"v1.1.1 - 2021-10-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_6","text":"[Refactor] remove ESM entry points 10118cc [Tests] add new tests from test262 11a6b0a [Deps] update es-abstract ad74212 [readme] fix URLs ea7f11e [Dev Deps] update @ljharb/eslint-config , @es-shims/api b834c11","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v110-2021-08-07","text":"","title":"v1.1.0 - 2021-08-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_7","text":"[New] add ESM entry points 4830a17 [Fix] ES3 engines: ensure nullish receiver throws 3483d48 [Fix] add missing entry points to exports db8fe56 [Dev Deps] update eslint , tape a59f069 [Deps] update es-abstract 4faa274","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#v100-2021-07-13","text":"","title":"v1.0.0 - 2021-07-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.findlast/CHANGELOG/#commits_8","text":"Implementation & Tests 70cf3b1 Initial commit d94083f npm init e016a98 Only apps should have lockfiles cb11c67","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/","text":"array.prototype.flat An ES2019 spec-compliant Array.prototype.flat shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.flat depends on a receiver (the this value), the main export takes the array to operate on as the first argument. Getting started npm install --save array.prototype.flat Usage/Examples var flat = require('array.prototype.flat'); var assert = require('assert'); var arr = [1, [2], [], 3, [[4]]]; assert.deepEqual(flat(arr, 1), [1, 2, 3, [4]]); var flat = require('array.prototype.flat'); var assert = require('assert'); /* when Array#flat is not present */ delete Array.prototype.flat; var shimmedFlat = flat.shim(); assert.equal(shimmedFlat, flat.getPolyfill()); assert.deepEqual(arr.flat(), flat(arr)); var flat = require('array.prototype.flat'); var assert = require('assert'); /* when Array#flat is present */ var shimmedIncludes = flat.shim(); var mapper = function (x) { return [x, 1]; }; assert.equal(shimmedIncludes, Array.prototype.flat); assert.deepEqual(arr.flat(mapper), flat(arr, mapper)); Tests Simply clone the repo, npm install , and run npm test","title":"array.prototype.flat Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/#arrayprototypeflat","text":"An ES2019 spec-compliant Array.prototype.flat shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.flat depends on a receiver (the this value), the main export takes the array to operate on as the first argument.","title":"array.prototype.flat"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/#getting-started","text":"npm install --save array.prototype.flat","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/#usageexamples","text":"var flat = require('array.prototype.flat'); var assert = require('assert'); var arr = [1, [2], [], 3, [[4]]]; assert.deepEqual(flat(arr, 1), [1, 2, 3, [4]]); var flat = require('array.prototype.flat'); var assert = require('assert'); /* when Array#flat is not present */ delete Array.prototype.flat; var shimmedFlat = flat.shim(); assert.equal(shimmedFlat, flat.getPolyfill()); assert.deepEqual(arr.flat(), flat(arr)); var flat = require('array.prototype.flat'); var assert = require('assert'); /* when Array#flat is present */ var shimmedIncludes = flat.shim(); var mapper = function (x) { return [x, 1]; }; assert.equal(shimmedIncludes, Array.prototype.flat); assert.deepEqual(arr.flat(mapper), flat(arr, mapper));","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.3.2 - 2023-09-05 Commits [Deps] update define-properties , es-abstract fb625eb [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape 1fde275 v1.3.1 - 2022-11-02 Commits [meta] use npmignore to autogenerate an npmignore file e339ed7 [meta] add auto-changelog bb5cbd6 [Deps] update define-properties , es-abstract 8067910 [actions] update rebase action to use reusable workflow d4d9b28 [Dev Deps] update aud , object-inspect , tape d9d7300 1.3.0 / 2022-04-11 [New] shim / auto : add flat to Symbol.unscopables [Deps] update es-abstract [actions] reuse common workflows [actions] update codecov uploader [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , object-inspect , safe-publish-latest , tape 1.2.5 / 2021-10-01 [readme] add github actions/codecov badges; remove travis badge [Deps] update call-bind , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , has-strict-mode , object-inspect , tape [meta] use prepublishOnly , for npm 7+ [actions] use node/install instead of node/run ; use codecov action [actions] update workflows [Tests] increase coverage [meta] fix changelog for v1.2.4 1.2.4 / 2020-11-18 [meta] do not publish Github Action workflows [Deps] update es-abstract ; add call-bind where applicable [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [Tests] migrate tests to Github Actions [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event 1.2.3 / 2019-12-12 [Refactor] use split-up es-abstract (65% bundle size decrease) [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , object-inspect [meta] ESnext -> ES2019 [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking 1.2.2 / 2019-10-10 [Deps] update es-abstract , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , covert , evalmd , object-inspect , safe-publish-latest , tape [meta] create FUNDING.yml [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] up to node v12.11 , v11.15 , v10.16 , v9.11 , v8.16 , v6.17 , v4.9 ; use nvm install-latest-npm 1.2.1 / 2018-02-23 [Fix] Temporarily hack main entry, so it's compatible with other resolvers (#3) [Dev Deps] update eslint , nsp , tape [Tests] up to node v9.6 , v6.13 1.2.0 / 2018-01-18 [New] add \"auto\" entry point [Fix] Move the receiver length check higher [Fix] spec adjustments [Refactor] adjust shouldFlatten logic [Dev Deps] update eslint [Tests] up to node v9.4 1.1.1 / 2017-11-29 [Fix] avoid an extra hole in the array (https://github.com/es-shims/Array.prototype.flatMap/issues/1) [Deps] update es-abstract [Dev Deps] update eslint , nsp [Tests] up to node v9.2 , v8.9 , v6.12 ; pin included builds to LTS. 1.1.0 / 2017-10-03 [New] add explicit setting of \u201clength\u201d on target array [Fix] FlattenIntoArray : add assertion that thisArg and mapperFunction are both passed together [Tests] make coverage required 1.0.1 / 2017-10-02 Add readme 1.0.0 / 2017-10-01 Initial release","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#v132-2023-09-05","text":"","title":"v1.3.2 - 2023-09-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#commits","text":"[Deps] update define-properties , es-abstract fb625eb [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape 1fde275","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#v131-2022-11-02","text":"","title":"v1.3.1 - 2022-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#commits_1","text":"[meta] use npmignore to autogenerate an npmignore file e339ed7 [meta] add auto-changelog bb5cbd6 [Deps] update define-properties , es-abstract 8067910 [actions] update rebase action to use reusable workflow d4d9b28 [Dev Deps] update aud , object-inspect , tape d9d7300","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#130-2022-04-11","text":"[New] shim / auto : add flat to Symbol.unscopables [Deps] update es-abstract [actions] reuse common workflows [actions] update codecov uploader [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , object-inspect , safe-publish-latest , tape","title":"1.3.0 / 2022-04-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#125-2021-10-01","text":"[readme] add github actions/codecov badges; remove travis badge [Deps] update call-bind , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , has-strict-mode , object-inspect , tape [meta] use prepublishOnly , for npm 7+ [actions] use node/install instead of node/run ; use codecov action [actions] update workflows [Tests] increase coverage [meta] fix changelog for v1.2.4","title":"1.2.5 / 2021-10-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#124-2020-11-18","text":"[meta] do not publish Github Action workflows [Deps] update es-abstract ; add call-bind where applicable [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [Tests] migrate tests to Github Actions [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event","title":"1.2.4 / 2020-11-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#123-2019-12-12","text":"[Refactor] use split-up es-abstract (65% bundle size decrease) [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , object-inspect [meta] ESnext -> ES2019 [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking","title":"1.2.3 / 2019-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#122-2019-10-10","text":"[Deps] update es-abstract , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , covert , evalmd , object-inspect , safe-publish-latest , tape [meta] create FUNDING.yml [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] up to node v12.11 , v11.15 , v10.16 , v9.11 , v8.16 , v6.17 , v4.9 ; use nvm install-latest-npm","title":"1.2.2 / 2019-10-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#121-2018-02-23","text":"[Fix] Temporarily hack main entry, so it's compatible with other resolvers (#3) [Dev Deps] update eslint , nsp , tape [Tests] up to node v9.6 , v6.13","title":"1.2.1 / 2018-02-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#120-2018-01-18","text":"[New] add \"auto\" entry point [Fix] Move the receiver length check higher [Fix] spec adjustments [Refactor] adjust shouldFlatten logic [Dev Deps] update eslint [Tests] up to node v9.4","title":"1.2.0 / 2018-01-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#111-2017-11-29","text":"[Fix] avoid an extra hole in the array (https://github.com/es-shims/Array.prototype.flatMap/issues/1) [Deps] update es-abstract [Dev Deps] update eslint , nsp [Tests] up to node v9.2 , v8.9 , v6.12 ; pin included builds to LTS.","title":"1.1.1 / 2017-11-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#110-2017-10-03","text":"[New] add explicit setting of \u201clength\u201d on target array [Fix] FlattenIntoArray : add assertion that thisArg and mapperFunction are both passed together [Tests] make coverage required","title":"1.1.0 / 2017-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#101-2017-10-02","text":"Add readme","title":"1.0.1 / 2017-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flat/CHANGELOG/#100-2017-10-01","text":"Initial release","title":"1.0.0 / 2017-10-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/","text":"array.prototype.flatmap An ES2019 spec-compliant Array.prototype.flatMap shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Because Array.prototype.flatMap depends on a receiver (the this value), the main export takes the array to operate on as the first argument. Getting started npm install --save array.prototype.flatmap Usage/Examples var flatMap = require('array.prototype.flatmap'); var assert = require('assert'); var arr = [1, [2], [], 3]; var results = flatMap(arr, function (x, i) { assert.equal(x, arr[i]); return x; }); assert.deepEqual(results, [1, 2, 3]); var flatMap = require('array.prototype.flatmap'); var assert = require('assert'); /* when Array#flatMap is not present */ delete Array.prototype.flatMap; var shimmedFlatMap = flatMap.shim(); var mapper = function (x) { return [x, 1]; }; assert.equal(shimmedFlatMap, flatMap.getPolyfill()); assert.deepEqual(arr.flatMap(mapper), flatMap(arr, mapper)); var flatMap = require('array.prototype.flatmap'); var assert = require('assert'); /* when Array#flatMap is present */ var shimmedIncludes = flatMap.shim(); var mapper = function (x) { return [x, 1]; }; assert.equal(shimmedIncludes, Array.prototype.flatMap); assert.deepEqual(arr.flatMap(mapper), flatMap(arr, mapper)); Tests Simply clone the repo, npm install , and run npm test","title":"array.prototype.flatmap Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/#arrayprototypeflatmap","text":"An ES2019 spec-compliant Array.prototype.flatMap shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Because Array.prototype.flatMap depends on a receiver (the this value), the main export takes the array to operate on as the first argument.","title":"array.prototype.flatmap"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/#getting-started","text":"npm install --save array.prototype.flatmap","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/#usageexamples","text":"var flatMap = require('array.prototype.flatmap'); var assert = require('assert'); var arr = [1, [2], [], 3]; var results = flatMap(arr, function (x, i) { assert.equal(x, arr[i]); return x; }); assert.deepEqual(results, [1, 2, 3]); var flatMap = require('array.prototype.flatmap'); var assert = require('assert'); /* when Array#flatMap is not present */ delete Array.prototype.flatMap; var shimmedFlatMap = flatMap.shim(); var mapper = function (x) { return [x, 1]; }; assert.equal(shimmedFlatMap, flatMap.getPolyfill()); assert.deepEqual(arr.flatMap(mapper), flatMap(arr, mapper)); var flatMap = require('array.prototype.flatmap'); var assert = require('assert'); /* when Array#flatMap is present */ var shimmedIncludes = flatMap.shim(); var mapper = function (x) { return [x, 1]; }; assert.equal(shimmedIncludes, Array.prototype.flatMap); assert.deepEqual(arr.flatMap(mapper), flatMap(arr, mapper));","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.3.2 - 2023-09-06 Commits [Deps] update define-properties , es-abstract 1737863 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape 2337759 v1.3.1 - 2022-11-02 Commits [meta] use npmignore to autogenerate an npmignore file 3587a34 [meta] add auto-changelog d66bdea [Deps] update define-properties , es-abstract d64c486 [actions] update rebase action to use reusable workflow 8d657d0 [Dev Deps] update aud , object-inspect , tape aa22741 [Tests] use for-each instead of foreach 748a78d 1.3.0 / 2022-04-11 [New] shim / auto : add flatMap to Symbol.unscopables [Deps] update call-bind , es-abstract [actions] reuse common workflows [actions] update codecov uploader [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , object-inspect , safe-publish-latest , tape 1.2.5 / 2021-10-01 [readme] add github actions/codecov badges; update description; remove travis badge [Deps] update call-bind , es-abstract ; remove unused function-bind [meta] use prepublishOnly , for npm 7+ [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , has-strict-mode , object-inspect , tape [actions] update workflows [actions] use node/install instead of node/run ; use codecov action [Tests] increase coverage 1.2.4 / 2020-11-18 [Deps] update es-abstract ; use call-bind where applicable [meta] do not publish github action workflows [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , tape ; add aud [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event 1.2.3 / 2019-12-12 [Refactor] use split-up es-abstract (65% bundle size decrease) [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , object-inspect [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking 1.2.2 / 2019-10-10 [Refactor] rename callback argument to mapperFunction , to match spec [Deps] update es-abstract , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , covert , evalmd , object-inspect , safe-publish-latest , tape [meta] create FUNDING.yml [Tests] up to node v12.11 , v11.15 , v10.16 , v9.11 , v8.16 , v6.17 , v4.9 ; use nvm install-latest-npm [Tests] use npx aud instead of nsp or npm audit with hoops 1.2.1 / 2018-02-23 [Fix] Temporarily hack main entry, so it's compatible with other resolvers [Dev Deps] update eslint , nsp , tape [Tests] up to node v9.6 , v6.13 1.2.0 / 2018-01-18 [New] add \"auto\" entry point [Fix] Move the receiver length check higher [Fix] spec adjustments [Refactor] adjust shouldFlatten logic [Dev Deps] update eslint , object-inspect [Tests] up to node v9.4 1.1.1 / 2017-11-29 [Fix] avoid an extra hole in the array (#1) [Deps] update es-abstract [Dev Deps] update eslint , nsp , object-inspect [Tests] up to node v9.2 , v8.9 , v6.12 ; pin included builds to LTS 1.1.0 / 2017-10-03 [New] add explicit setting of \u201clength\u201d on target array [Fix] FlattenIntoArray : add assertion that thisArg and mapperFunction are both passed together [Tests] make coverage required 1.0.1 / 2017-10-02 Add readme 1.0.0 / 2017-10-01 Initial release","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#v132-2023-09-06","text":"","title":"v1.3.2 - 2023-09-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#commits","text":"[Deps] update define-properties , es-abstract 1737863 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape 2337759","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#v131-2022-11-02","text":"","title":"v1.3.1 - 2022-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#commits_1","text":"[meta] use npmignore to autogenerate an npmignore file 3587a34 [meta] add auto-changelog d66bdea [Deps] update define-properties , es-abstract d64c486 [actions] update rebase action to use reusable workflow 8d657d0 [Dev Deps] update aud , object-inspect , tape aa22741 [Tests] use for-each instead of foreach 748a78d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#130-2022-04-11","text":"[New] shim / auto : add flatMap to Symbol.unscopables [Deps] update call-bind , es-abstract [actions] reuse common workflows [actions] update codecov uploader [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , object-inspect , safe-publish-latest , tape","title":"1.3.0 / 2022-04-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#125-2021-10-01","text":"[readme] add github actions/codecov badges; update description; remove travis badge [Deps] update call-bind , es-abstract ; remove unused function-bind [meta] use prepublishOnly , for npm 7+ [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , has-strict-mode , object-inspect , tape [actions] update workflows [actions] use node/install instead of node/run ; use codecov action [Tests] increase coverage","title":"1.2.5 / 2021-10-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#124-2020-11-18","text":"[Deps] update es-abstract ; use call-bind where applicable [meta] do not publish github action workflows [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , tape ; add aud [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event","title":"1.2.4 / 2020-11-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#123-2019-12-12","text":"[Refactor] use split-up es-abstract (65% bundle size decrease) [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , object-inspect [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking","title":"1.2.3 / 2019-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#122-2019-10-10","text":"[Refactor] rename callback argument to mapperFunction , to match spec [Deps] update es-abstract , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , covert , evalmd , object-inspect , safe-publish-latest , tape [meta] create FUNDING.yml [Tests] up to node v12.11 , v11.15 , v10.16 , v9.11 , v8.16 , v6.17 , v4.9 ; use nvm install-latest-npm [Tests] use npx aud instead of nsp or npm audit with hoops","title":"1.2.2 / 2019-10-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#121-2018-02-23","text":"[Fix] Temporarily hack main entry, so it's compatible with other resolvers [Dev Deps] update eslint , nsp , tape [Tests] up to node v9.6 , v6.13","title":"1.2.1 / 2018-02-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#120-2018-01-18","text":"[New] add \"auto\" entry point [Fix] Move the receiver length check higher [Fix] spec adjustments [Refactor] adjust shouldFlatten logic [Dev Deps] update eslint , object-inspect [Tests] up to node v9.4","title":"1.2.0 / 2018-01-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#111-2017-11-29","text":"[Fix] avoid an extra hole in the array (#1) [Deps] update es-abstract [Dev Deps] update eslint , nsp , object-inspect [Tests] up to node v9.2 , v8.9 , v6.12 ; pin included builds to LTS","title":"1.1.1 / 2017-11-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#110-2017-10-03","text":"[New] add explicit setting of \u201clength\u201d on target array [Fix] FlattenIntoArray : add assertion that thisArg and mapperFunction are both passed together [Tests] make coverage required","title":"1.1.0 / 2017-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#101-2017-10-02","text":"Add readme","title":"1.0.1 / 2017-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.flatmap/CHANGELOG/#100-2017-10-01","text":"Initial release","title":"1.0.0 / 2017-10-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/","text":"array.prototype.tosorted An ESnext spec-compliant Array.prototype.toSorted shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.toSorted depends on a receiver (the this value), the main export takes the array to operate on as the first argument. Getting started npm install --save array.prototype.tosorted Usage/Examples var toSorted = require('array.prototype.tosorted'); var assert = require('assert'); var input = [5, 4, 3, 2, 1, 0]; var output = toSorted(input); assert.deepEqual(output, [0, 1, 2, 3, 4, 5]); assert.notEqual(output, input); assert.deepEqual(input, [5, 4, 3, 2, 1, 0]); var toSorted = require('array.prototype.tosorted'); var assert = require('assert'); /* when Array#toSorted is not present */ delete Array.prototype.toSorted; var shimmed = toSorted.shim(); assert.equal(shimmed, toSorted.getPolyfill()); assert.deepEqual(input.toSorted(), toSorted(input)); var toSorted = require('array.prototype.tosorted'); var assert = require('assert'); /* when Array#toSorted is present */ var shimmed = toSorted.shim(); assert.equal(shimmed, Array.prototype.toSorted); assert.deepEqual(input.toSorted(), toSorted(input)); Tests Simply clone the repo, npm install , and run npm test","title":"array.prototype.tosorted Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/#arrayprototypetosorted","text":"An ESnext spec-compliant Array.prototype.toSorted shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Because Array.prototype.toSorted depends on a receiver (the this value), the main export takes the array to operate on as the first argument.","title":"array.prototype.tosorted"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/#getting-started","text":"npm install --save array.prototype.tosorted","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/#usageexamples","text":"var toSorted = require('array.prototype.tosorted'); var assert = require('assert'); var input = [5, 4, 3, 2, 1, 0]; var output = toSorted(input); assert.deepEqual(output, [0, 1, 2, 3, 4, 5]); assert.notEqual(output, input); assert.deepEqual(input, [5, 4, 3, 2, 1, 0]); var toSorted = require('array.prototype.tosorted'); var assert = require('assert'); /* when Array#toSorted is not present */ delete Array.prototype.toSorted; var shimmed = toSorted.shim(); assert.equal(shimmed, toSorted.getPolyfill()); assert.deepEqual(input.toSorted(), toSorted(input)); var toSorted = require('array.prototype.tosorted'); var assert = require('assert'); /* when Array#toSorted is present */ var shimmed = toSorted.shim(); assert.equal(shimmed, Array.prototype.toSorted); assert.deepEqual(input.toSorted(), toSorted(input));","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.4 - 2024-06-02 Fixed [Refactor] update implementation to match latest spec #3 Commits [Dev Deps] update @es-shims/api , @ljharb/eslint-config , hasown , tape 159d118 [Deps] update call-bind , es-abstract , es-errors 7d32e67 [meta] add missing engines.node b49466b v1.1.3 - 2024-02-04 Commits [Refactor] use es-errors where possible, so things that only need those do not need get-intrinsic 6c089a5 [Deps] update call-bind , define-properties , es-abstract , es-shim-unscopables , get-intrinsic d096b56 [Dev Deps] update aud , npmignore , tape 43cea6d [Dev Deps] use hasown instead of has cefe5dc [Dev Deps] update tape ad8446e v1.1.2 - 2023-09-07 Commits [actions] use reusable workflows b3d4f1d [Deps] update define-properties , es-abstract , get-intrinsic 35ce967 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 1a17c6a v1.1.1 - 2022-11-03 Commits [Deps] update es-abstract , get-intrinsic b10a2a3 [actions] update rebase action to use reusable workflow 8f49d78 [Dev Deps] update aud , tape 2d2741b v1.1.0 - 2022-08-14 Commits [Tests] add coverage from https://github.com/tc39/test262/pull/3464 2172830 [meta] use npmignore to autogenerate an npmignore file 972f761 [New] shim / auto : add toSorted to Symbol.unscopables 2ad9bad [Deps] update define-properties , es-abstract , get-intrinsic e7b229d [Dev Deps] update @ljharb/eslint-config , functions-have-names , tape 2bccb92 [readme] fix link to spec 0d024e6 v1.0.0 - 2022-03-31 Commits initial implementation, tests, readme a2882bf Initial commit f9d05c4 [meta] do not publish workflow files ceed80a [Tests] temporarily use actions instead of composable workflows 496789b npm init 9405760 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 474180c [meta] add version script 49a3b80 Only apps should have lockfiles 0db3a5a [Deps] update es-abstract 35de1c5","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#v114-2024-06-02","text":"","title":"v1.1.4 - 2024-06-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#fixed","text":"[Refactor] update implementation to match latest spec #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#commits","text":"[Dev Deps] update @es-shims/api , @ljharb/eslint-config , hasown , tape 159d118 [Deps] update call-bind , es-abstract , es-errors 7d32e67 [meta] add missing engines.node b49466b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#v113-2024-02-04","text":"","title":"v1.1.3 - 2024-02-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#commits_1","text":"[Refactor] use es-errors where possible, so things that only need those do not need get-intrinsic 6c089a5 [Deps] update call-bind , define-properties , es-abstract , es-shim-unscopables , get-intrinsic d096b56 [Dev Deps] update aud , npmignore , tape 43cea6d [Dev Deps] use hasown instead of has cefe5dc [Dev Deps] update tape ad8446e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#v112-2023-09-07","text":"","title":"v1.1.2 - 2023-09-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#commits_2","text":"[actions] use reusable workflows b3d4f1d [Deps] update define-properties , es-abstract , get-intrinsic 35ce967 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 1a17c6a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#v111-2022-11-03","text":"","title":"v1.1.1 - 2022-11-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#commits_3","text":"[Deps] update es-abstract , get-intrinsic b10a2a3 [actions] update rebase action to use reusable workflow 8f49d78 [Dev Deps] update aud , tape 2d2741b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#v110-2022-08-14","text":"","title":"v1.1.0 - 2022-08-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#commits_4","text":"[Tests] add coverage from https://github.com/tc39/test262/pull/3464 2172830 [meta] use npmignore to autogenerate an npmignore file 972f761 [New] shim / auto : add toSorted to Symbol.unscopables 2ad9bad [Deps] update define-properties , es-abstract , get-intrinsic e7b229d [Dev Deps] update @ljharb/eslint-config , functions-have-names , tape 2bccb92 [readme] fix link to spec 0d024e6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#v100-2022-03-31","text":"","title":"v1.0.0 - 2022-03-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/array.prototype.tosorted/CHANGELOG/#commits_5","text":"initial implementation, tests, readme a2882bf Initial commit f9d05c4 [meta] do not publish workflow files ceed80a [Tests] temporarily use actions instead of composable workflows 496789b npm init 9405760 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 474180c [meta] add version script 49a3b80 Only apps should have lockfiles 0db3a5a [Deps] update es-abstract 35de1c5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/","text":"ArrayBuffer.prototype.slice An ES spec-compliant ArrayBuffer.prototype.slice shim. Invoke its \"shim\" method to shim ArrayBuffer.prototype.slice if it is unavailable. This package implements the es-shim API interface. It works in an ES5-supported environment and complies with the spec . Most common usage: var assert = require('assert'); var slice = require('arraybuffer.prototype.slice'); var ab = new ArrayBuffer(1); var arr = new Uint8Array(ab); arr[0] = 123; var ab2 = slice(ab); var arr2 = new Uint8Array(ab2); arr2[0] = 234; assert.deepEqual(arr, new Uint8Array([123])); assert.deepEqual(arr2, new Uint8Array([234])); if (!ArrayBuffer.prototype.transfer) { slice.shim(); } var ab2 = ab.slice(); var arr2 = new Uint8Array(ab2); arr2[0] = 234; assert.deepEqual(arr, new Uint8Array([123])); assert.deepEqual(arr2, new Uint8Array([234])); Tests Simply clone the repo, npm install , and run npm test","title":"ArrayBuffer.prototype.slice Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/#arraybufferprototypeslice","text":"An ES spec-compliant ArrayBuffer.prototype.slice shim. Invoke its \"shim\" method to shim ArrayBuffer.prototype.slice if it is unavailable. This package implements the es-shim API interface. It works in an ES5-supported environment and complies with the spec . Most common usage: var assert = require('assert'); var slice = require('arraybuffer.prototype.slice'); var ab = new ArrayBuffer(1); var arr = new Uint8Array(ab); arr[0] = 123; var ab2 = slice(ab); var arr2 = new Uint8Array(ab2); arr2[0] = 234; assert.deepEqual(arr, new Uint8Array([123])); assert.deepEqual(arr2, new Uint8Array([234])); if (!ArrayBuffer.prototype.transfer) { slice.shim(); } var ab2 = ab.slice(); var arr2 = new Uint8Array(ab2); arr2[0] = 234; assert.deepEqual(arr, new Uint8Array([123])); assert.deepEqual(arr2, new Uint8Array([234]));","title":"ArrayBuffer.prototype.slice"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.3 - 2024-02-04 Commits [Deps] update array-buffer-byte-length , call-bind , define-properties , es-abstract , get-intrinsic , is-array-buffer d9b6859 [Dev Deps] update aud , npmignore , object-inspect , tape 38cb58d [Refactor] use es-errors where possible, so things that only need those do not need get-intrinsic 5c07bef v1.0.2 - 2023-09-05 Commits [Deps] update es-abstract a9ab0d2 [Dev Deps] update tape 6b24af5 [Fix] move es-abstract to runtime deps 63a8397 v1.0.1 - 2023-07-11 Commits [Fix] node < 0.11 has an own nonconfigurable slice property; use it 554823c [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , es-abstract , tape 53b0421 [Deps] update define-properties , get-intrinsic 4966b02 v1.0.0 - 2023-07-09 Commits Initial implementation, tests, readme 36b4b5e Initial commit 51499df npm init 8ec604e Only apps should have lockfiles ac54435","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#v103-2024-02-04","text":"","title":"v1.0.3 - 2024-02-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#commits","text":"[Deps] update array-buffer-byte-length , call-bind , define-properties , es-abstract , get-intrinsic , is-array-buffer d9b6859 [Dev Deps] update aud , npmignore , object-inspect , tape 38cb58d [Refactor] use es-errors where possible, so things that only need those do not need get-intrinsic 5c07bef","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#v102-2023-09-05","text":"","title":"v1.0.2 - 2023-09-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#commits_1","text":"[Deps] update es-abstract a9ab0d2 [Dev Deps] update tape 6b24af5 [Fix] move es-abstract to runtime deps 63a8397","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#v101-2023-07-11","text":"","title":"v1.0.1 - 2023-07-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#commits_2","text":"[Fix] node < 0.11 has an own nonconfigurable slice property; use it 554823c [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , es-abstract , tape 53b0421 [Deps] update define-properties , get-intrinsic 4966b02","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#v100-2023-07-09","text":"","title":"v1.0.0 - 2023-07-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/arraybuffer.prototype.slice/CHANGELOG/#commits_3","text":"Initial implementation, tests, readme 36b4b5e Initial commit 51499df npm init 8ec604e Only apps should have lockfiles ac54435","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/","text":"available-typed-arrays Returns an array of Typed Array names that are available in the current environment. Example var availableTypedArrays = require('available-typed-arrays'); var assert = require('assert'); assert.deepStrictEqual( availableTypedArrays().sort(), [ 'Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array', 'Float32Array', 'Float64Array', 'BigInt64Array', 'BigUint64Array' ].sort() ); Tests Simply clone the repo, npm install , and run npm test","title":"available-typed-arrays Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/#available-typed-arrays","text":"Returns an array of Typed Array names that are available in the current environment.","title":"available-typed-arrays"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/#example","text":"var availableTypedArrays = require('available-typed-arrays'); var assert = require('assert'); assert.deepStrictEqual( availableTypedArrays().sort(), [ 'Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array', 'Float32Array', 'Float64Array', 'BigInt64Array', 'BigUint64Array' ].sort() );","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.7 - 2024-02-19 Commits [Refactor] use possible-typed-array-names ac86abf v1.0.6 - 2024-01-31 Commits [actions] reuse common workflows 1850353 [meta] use npmignore to autogenerate an npmignore file 5c7de12 [patch] add types fcfb0ea [actions] update codecov uploader d844945 [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.every , safe-publish-latest , tape a2be6f4 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape b283a3e [actions] update rebase action to use reusable workflow 0ad1f2d [Dev Deps] update @ljharb/eslint-config , array.prototype.every , aud , tape cd36e81 [meta] simplify \"exports\" f696e5f [Dev Deps] update aud , npmignore , tape bf20080 v1.0.5 - 2021-08-30 Fixed [Refactor] use globalThis if available #12 Commits [Dev Deps] update eslint , @ljharb/eslint-config , tape 1199790 v1.0.4 - 2021-05-25 Commits [Refactor] Remove array.prototype.filter dependency f39c90e [Dev Deps] update eslint , auto-changelog b2e3a03 [meta] create FUNDING.yml 8c0e758 [Tests] fix harmony test matrix ef96549 [meta] add sideEffects flag 288cca0 v1.0.3 - 2021-05-19 Commits [Tests] migrate tests to Github Actions 3ef082c [meta] do not publish github action workflow files fd95ffd [actions] use node/install instead of node/run ; use codecov action eb6bd65 [Tests] run nyc on all tests 636c946 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 70a3b61 [actions] add \"Allow Edits\" workflow bd09c45 [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.every , aud , tape 8f97523 [readme] fix URLs 75418e2 [readme] add actions and codecov badges 4a8bc30 [Dev Deps] update eslint , @ljharb/eslint-config , aud 65198ac [actions] update workflows 7f816eb [Refactor] use array.prototype.filter instead of array-filter 2dd1038 [actions] switch Automatic Rease workflow to pull_request_target event 9b45e91 [Dev Deps] update auto-changelog , tape 0003a5b [meta] use prepublishOnly script for npm 7+ d884dd1 [readme] remove travis badge 9da2b3c [Dev Deps] update auto-changelog ; add aud 41b1336 [Tests] only audit prod deps 2571826 v1.0.2 - 2020-01-26 Commits [actions] add automatic rebasing / merge commit blocking 3229a74 [Dev Deps] update @ljharb/eslint-config 9579abe [Fix] remove require condition to avoid experimental warning 2cade6b v1.0.1 - 2020-01-24 Commits [meta] add \"exports\" 5942917 v1.0.0 - 2020-01-24 Commits Initial commit 2bc5144 readme 31e4796 npm init 9194266 Tests b539830 Implementation 6577df2 [meta] add auto-changelog 7b43310 [Tests] add npm run lint dedfbc1 [Tests] use shared travis-ci configs c459d78 Only apps should have lockfiles d294668 [meta] add funding field 6e70bc1 [meta] add safe-publish-latest dd89ca2","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v107-2024-02-19","text":"","title":"v1.0.7 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits","text":"[Refactor] use possible-typed-array-names ac86abf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v106-2024-01-31","text":"","title":"v1.0.6 - 2024-01-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_1","text":"[actions] reuse common workflows 1850353 [meta] use npmignore to autogenerate an npmignore file 5c7de12 [patch] add types fcfb0ea [actions] update codecov uploader d844945 [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.every , safe-publish-latest , tape a2be6f4 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape b283a3e [actions] update rebase action to use reusable workflow 0ad1f2d [Dev Deps] update @ljharb/eslint-config , array.prototype.every , aud , tape cd36e81 [meta] simplify \"exports\" f696e5f [Dev Deps] update aud , npmignore , tape bf20080","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v105-2021-08-30","text":"","title":"v1.0.5 - 2021-08-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#fixed","text":"[Refactor] use globalThis if available #12","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_2","text":"[Dev Deps] update eslint , @ljharb/eslint-config , tape 1199790","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v104-2021-05-25","text":"","title":"v1.0.4 - 2021-05-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_3","text":"[Refactor] Remove array.prototype.filter dependency f39c90e [Dev Deps] update eslint , auto-changelog b2e3a03 [meta] create FUNDING.yml 8c0e758 [Tests] fix harmony test matrix ef96549 [meta] add sideEffects flag 288cca0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v103-2021-05-19","text":"","title":"v1.0.3 - 2021-05-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_4","text":"[Tests] migrate tests to Github Actions 3ef082c [meta] do not publish github action workflow files fd95ffd [actions] use node/install instead of node/run ; use codecov action eb6bd65 [Tests] run nyc on all tests 636c946 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 70a3b61 [actions] add \"Allow Edits\" workflow bd09c45 [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.every , aud , tape 8f97523 [readme] fix URLs 75418e2 [readme] add actions and codecov badges 4a8bc30 [Dev Deps] update eslint , @ljharb/eslint-config , aud 65198ac [actions] update workflows 7f816eb [Refactor] use array.prototype.filter instead of array-filter 2dd1038 [actions] switch Automatic Rease workflow to pull_request_target event 9b45e91 [Dev Deps] update auto-changelog , tape 0003a5b [meta] use prepublishOnly script for npm 7+ d884dd1 [readme] remove travis badge 9da2b3c [Dev Deps] update auto-changelog ; add aud 41b1336 [Tests] only audit prod deps 2571826","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v102-2020-01-26","text":"","title":"v1.0.2 - 2020-01-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_5","text":"[actions] add automatic rebasing / merge commit blocking 3229a74 [Dev Deps] update @ljharb/eslint-config 9579abe [Fix] remove require condition to avoid experimental warning 2cade6b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v101-2020-01-24","text":"","title":"v1.0.1 - 2020-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_6","text":"[meta] add \"exports\" 5942917","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#v100-2020-01-24","text":"","title":"v1.0.0 - 2020-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/available-typed-arrays/CHANGELOG/#commits_7","text":"Initial commit 2bc5144 readme 31e4796 npm init 9194266 Tests b539830 Implementation 6577df2 [meta] add auto-changelog 7b43310 [Tests] add npm run lint dedfbc1 [Tests] use shared travis-ci configs c459d78 Only apps should have lockfiles d294668 [meta] add funding field 6e70bc1 [meta] add safe-publish-latest dd89ca2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/","text":"balanced-match Match balanced string pairs, like { and } or <b> and </b> . Supports regular expressions as well! Example Get the first matching pair of braces: var balanced = require('balanced-match'); console.log(balanced('{', '}', 'pre{in{nested}}post')); console.log(balanced('{', '}', 'pre{first}between{second}post')); console.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre { in{nest} } post')); The matches are: $ node example.js { start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' } { start: 3, end: 9, pre: 'pre', body: 'first', post: 'between{second}post' } { start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' } API var m = balanced(a, b, str) For the first non-nested matching pair of a and b in str , return an object with those keys: start the index of the first match of a end the index of the matching b pre the preamble, a and b not included body the match, a and b not included post the postscript, a and b not included If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match ['{', 'a', ''] and {a}} will match ['', 'a', '}'] . var r = balanced.range(a, b, str) For the first non-nested matching pair of a and b in str , return an array with indexes: [ <a index>, <b index> ] . If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match [ 1, 3 ] and {a}} will match [0, 2] . Installation With npm do: npm install balanced-match Security contact information To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. License (MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"balanced-match"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#balanced-match","text":"Match balanced string pairs, like { and } or <b> and </b> . Supports regular expressions as well!","title":"balanced-match"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#example","text":"Get the first matching pair of braces: var balanced = require('balanced-match'); console.log(balanced('{', '}', 'pre{in{nested}}post')); console.log(balanced('{', '}', 'pre{first}between{second}post')); console.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre { in{nest} } post')); The matches are: $ node example.js { start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' } { start: 3, end: 9, pre: 'pre', body: 'first', post: 'between{second}post' } { start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' }","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#var-m-balanceda-b-str","text":"For the first non-nested matching pair of a and b in str , return an object with those keys: start the index of the first match of a end the index of the matching b pre the preamble, a and b not included body the match, a and b not included post the postscript, a and b not included If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match ['{', 'a', ''] and {a}} will match ['', 'a', '}'] .","title":"var m = balanced(a, b, str)"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#var-r-balancedrangea-b-str","text":"For the first non-nested matching pair of a and b in str , return an array with indexes: [ <a index>, <b index> ] . If there's no match, undefined will be returned. If the str contains more a than b / there are unmatched pairs, the first match that was closed will be used. For example, {{a} will match [ 1, 3 ] and {a}} will match [0, 2] .","title":"var r = balanced.range(a, b, str)"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#installation","text":"With npm do: npm install balanced-match","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#security-contact-information","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure.","title":"Security contact information"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/#license","text":"(MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/balanced-match/LICENSE/","text":"(MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/","text":"brace-expansion Brace expansion , as known from sh/bash, in JavaScript. Example var expand = require('brace-expansion'); expand('file-{a,b,c}.jpg') // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand('-v{,,}') // => ['-v', '-v', '-v'] expand('file{0..2}.jpg') // => ['file0.jpg', 'file1.jpg', 'file2.jpg'] expand('file-{a..c}.jpg') // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand('file{2..0}.jpg') // => ['file2.jpg', 'file1.jpg', 'file0.jpg'] expand('file{0..4..2}.jpg') // => ['file0.jpg', 'file2.jpg', 'file4.jpg'] expand('file-{a..e..2}.jpg') // => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg'] expand('file{00..10..5}.jpg') // => ['file00.jpg', 'file05.jpg', 'file10.jpg'] expand('{{A..C},{a..c}}') // => ['A', 'B', 'C', 'a', 'b', 'c'] expand('ppp{,config,oe{,conf}}') // => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf'] API var expand = require('brace-expansion'); var expanded = expand(str) Return an array of all possible and valid expansions of str . If none are found, [str] is returned. Valid expansions are: /^(.*,)+(.+)?$/ // {a,b,...} A comma separated list of options, like {a,b} or {a,{b,c}} or {,a,} . /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} A numeric sequence from x to y inclusive, with optional increment. If x or y start with a leading 0 , all the numbers will be padded to have equal length. Negative numbers and backwards iteration work too. /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} An alphabetic sequence from x to y inclusive, with optional increment. x and y must be exactly one character, and if given, incr must be a number. For compatibility reasons, the string ${ is not eligible for brace expansion. Installation With npm do: npm install brace-expansion Contributors Julian Gruber Isaac Z. Schlueter Sponsors This module is proudly supported by my Sponsors ! Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon . Not sure how much of my modules you're using? Try feross/thanks ! License (MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"brace-expansion"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#brace-expansion","text":"Brace expansion , as known from sh/bash, in JavaScript.","title":"brace-expansion"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#example","text":"var expand = require('brace-expansion'); expand('file-{a,b,c}.jpg') // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand('-v{,,}') // => ['-v', '-v', '-v'] expand('file{0..2}.jpg') // => ['file0.jpg', 'file1.jpg', 'file2.jpg'] expand('file-{a..c}.jpg') // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg'] expand('file{2..0}.jpg') // => ['file2.jpg', 'file1.jpg', 'file0.jpg'] expand('file{0..4..2}.jpg') // => ['file0.jpg', 'file2.jpg', 'file4.jpg'] expand('file-{a..e..2}.jpg') // => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg'] expand('file{00..10..5}.jpg') // => ['file00.jpg', 'file05.jpg', 'file10.jpg'] expand('{{A..C},{a..c}}') // => ['A', 'B', 'C', 'a', 'b', 'c'] expand('ppp{,config,oe{,conf}}') // => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#api","text":"var expand = require('brace-expansion');","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#var-expanded-expandstr","text":"Return an array of all possible and valid expansions of str . If none are found, [str] is returned. Valid expansions are: /^(.*,)+(.+)?$/ // {a,b,...} A comma separated list of options, like {a,b} or {a,{b,c}} or {,a,} . /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} A numeric sequence from x to y inclusive, with optional increment. If x or y start with a leading 0 , all the numbers will be padded to have equal length. Negative numbers and backwards iteration work too. /^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/ // {x..y[..incr]} An alphabetic sequence from x to y inclusive, with optional increment. x and y must be exactly one character, and if given, incr must be a number. For compatibility reasons, the string ${ is not eligible for brace expansion.","title":"var expanded = expand(str)"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#installation","text":"With npm do: npm install brace-expansion","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#contributors","text":"Julian Gruber Isaac Z. Schlueter","title":"Contributors"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#sponsors","text":"This module is proudly supported by my Sponsors ! Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon . Not sure how much of my modules you're using? Try feross/thanks !","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/brace-expansion/#license","text":"(MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/browserslist/","text":"Browserslist The config to share target browsers and Node.js versions between different front-end tools. It is used in: Autoprefixer Babel postcss-preset-env eslint-plugin-compat stylelint-no-unsupported-browser-features postcss-normalize obsolete-webpack-plugin All tools will find target browsers automatically, when you add the following to package.json : \"browserslist\": [ \"defaults and fully supports es6-module\", \"maintained node versions\" ] Or in .browserslistrc config: # Browsers that we support defaults and fully supports es6-module maintained node versions Developers set their version lists using queries like last 2 versions to be free from updating versions manually. Browserslist will use [ caniuse-lite ] with Can I Use data for this queries. You can check how config works at our playground: browsersl.ist Docs Read full docs here .","title":"Browserslist Cult Of Martians"},{"location":"_Disciplina/Code/my-react-app/node_modules/browserslist/#browserslist","text":"The config to share target browsers and Node.js versions between different front-end tools. It is used in: Autoprefixer Babel postcss-preset-env eslint-plugin-compat stylelint-no-unsupported-browser-features postcss-normalize obsolete-webpack-plugin All tools will find target browsers automatically, when you add the following to package.json : \"browserslist\": [ \"defaults and fully supports es6-module\", \"maintained node versions\" ] Or in .browserslistrc config: # Browsers that we support defaults and fully supports es6-module maintained node versions Developers set their version lists using queries like last 2 versions to be free from updating versions manually. Browserslist will use [ caniuse-lite ] with Can I Use data for this queries. You can check how config works at our playground: browsersl.ist","title":"Browserslist"},{"location":"_Disciplina/Code/my-react-app/node_modules/browserslist/#docs","text":"Read full docs here .","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/","text":"call-bind Robustly .call.bind() a function. Getting started npm install --save call-bind Usage/Examples const assert = require('assert'); const callBind = require('call-bind'); const callBound = require('call-bind/callBound'); function f(a, b) { assert.equal(this, 1); assert.equal(a, 2); assert.equal(b, 3); assert.equal(arguments.length, 2); } const fBound = callBind(f); const slice = callBound('Array.prototype.slice'); delete Function.prototype.call; delete Function.prototype.bind; fBound(1, 2, 3); assert.deepEqual(slice([1, 2, 3, 4], 1, -1), [2, 3]); Tests Clone the repo, npm install , and run npm test","title":"call-bind Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/#call-bind","text":"Robustly .call.bind() a function.","title":"call-bind"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/#getting-started","text":"npm install --save call-bind","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/#usageexamples","text":"const assert = require('assert'); const callBind = require('call-bind'); const callBound = require('call-bind/callBound'); function f(a, b) { assert.equal(this, 1); assert.equal(a, 2); assert.equal(b, 3); assert.equal(arguments.length, 2); } const fBound = callBind(f); const slice = callBound('Array.prototype.slice'); delete Function.prototype.call; delete Function.prototype.bind; fBound(1, 2, 3); assert.deepEqual(slice([1, 2, 3, 4], 1, -1), [2, 3]);","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.7 - 2024-02-12 Commits [Refactor] use es-define-property 09b76a0 [Deps] update get-intrinsic , set-function-length ad5136d v1.0.6 - 2024-02-05 Commits [Dev Deps] update aud , npmignore , tape d564d5c [Deps] update get-intrinsic , set-function-length cfc2bdc [Refactor] use es-errors , so things that only need those do not need get-intrinsic 64cd289 [meta] add missing engines.node 32a4038 v1.0.5 - 2023-10-19 Commits [Fix] throw an error on non-functions as early as possible f262408 [Deps] update set-function-length 3fff271 v1.0.4 - 2023-10-19 v1.0.3 - 2023-10-19 Commits [actions] reuse common workflows a994df6 [meta] use npmignore to autogenerate an npmignore file eef3ef2 [readme] flesh out content 1845ccf [actions] use node/install instead of node/run ; use codecov action 5b47d53 [Refactor] use set-function-length a0e165c [Dev Deps] update @ljharb/eslint-config , aud , tape 9c50103 [meta] simplify \"exports\" 019c6d0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape 23bd718 [actions] update codecov uploader 62552d7 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ec81665 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 35d67fc [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 0266d8d [Dev Deps] update @ljharb/eslint-config , aud , tape 43a5b28 [Deps] update define-data-property , function-bind , get-intrinsic 780eb36 [Dev Deps] update aud , tape 90d50ad [meta] use prepublishOnly script for npm 7+ 44c5433 [Deps] update get-intrinsic 86bfbfc [Deps] update get-intrinsic 5c53354 [actions] update checkout action 4c393a8 [Deps] update get-intrinsic 4e70bde [Deps] update get-intrinsic 55ae803 v1.0.2 - 2021-01-11 Commits [Fix] properly include the receiver in the bound length dbae7bc v1.0.1 - 2021-01-08 Commits [Tests] migrate tests to Github Actions b6db284 [meta] do not publish github action workflow files ec7fe46 [Fix] preserve original function\u2019s length when possible adbceaa [Tests] gather coverage data on every job d69e23c [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 2fd3586 [Deps] update get-intrinsic f23e931 [Deps] update get-intrinsic 72d9f44 [meta] fix FUNDING.yml e723573 [eslint] ignore coverage output 15e76d2 [meta] add Automatic Rebase and Require Allow Edits workflows 8fa4dab v1.0.0 - 2020-10-30 Commits Initial commit 306cf98 Tests e10d0bb Implementation 43852ed npm init 408f860 [meta] add Automatic Rebase and Require Allow Edits workflows fb349b2 [meta] add auto-changelog c4001fc [meta] add \"funding\"; create FUNDING.yml d4d6d29 [Tests] add npm run lint dedfb98 Only apps should have lockfiles 54ac776 [meta] add safe-publish-latest 9ea8e43","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v107-2024-02-12","text":"","title":"v1.0.7 - 2024-02-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits","text":"[Refactor] use es-define-property 09b76a0 [Deps] update get-intrinsic , set-function-length ad5136d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v106-2024-02-05","text":"","title":"v1.0.6 - 2024-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits_1","text":"[Dev Deps] update aud , npmignore , tape d564d5c [Deps] update get-intrinsic , set-function-length cfc2bdc [Refactor] use es-errors , so things that only need those do not need get-intrinsic 64cd289 [meta] add missing engines.node 32a4038","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v105-2023-10-19","text":"","title":"v1.0.5 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits_2","text":"[Fix] throw an error on non-functions as early as possible f262408 [Deps] update set-function-length 3fff271","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v104-2023-10-19","text":"","title":"v1.0.4 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v103-2023-10-19","text":"","title":"v1.0.3 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits_3","text":"[actions] reuse common workflows a994df6 [meta] use npmignore to autogenerate an npmignore file eef3ef2 [readme] flesh out content 1845ccf [actions] use node/install instead of node/run ; use codecov action 5b47d53 [Refactor] use set-function-length a0e165c [Dev Deps] update @ljharb/eslint-config , aud , tape 9c50103 [meta] simplify \"exports\" 019c6d0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape 23bd718 [actions] update codecov uploader 62552d7 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ec81665 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 35d67fc [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 0266d8d [Dev Deps] update @ljharb/eslint-config , aud , tape 43a5b28 [Deps] update define-data-property , function-bind , get-intrinsic 780eb36 [Dev Deps] update aud , tape 90d50ad [meta] use prepublishOnly script for npm 7+ 44c5433 [Deps] update get-intrinsic 86bfbfc [Deps] update get-intrinsic 5c53354 [actions] update checkout action 4c393a8 [Deps] update get-intrinsic 4e70bde [Deps] update get-intrinsic 55ae803","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v102-2021-01-11","text":"","title":"v1.0.2 - 2021-01-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits_4","text":"[Fix] properly include the receiver in the bound length dbae7bc","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v101-2021-01-08","text":"","title":"v1.0.1 - 2021-01-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits_5","text":"[Tests] migrate tests to Github Actions b6db284 [meta] do not publish github action workflow files ec7fe46 [Fix] preserve original function\u2019s length when possible adbceaa [Tests] gather coverage data on every job d69e23c [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 2fd3586 [Deps] update get-intrinsic f23e931 [Deps] update get-intrinsic 72d9f44 [meta] fix FUNDING.yml e723573 [eslint] ignore coverage output 15e76d2 [meta] add Automatic Rebase and Require Allow Edits workflows 8fa4dab","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#v100-2020-10-30","text":"","title":"v1.0.0 - 2020-10-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/call-bind/CHANGELOG/#commits_6","text":"Initial commit 306cf98 Tests e10d0bb Implementation 43852ed npm init 408f860 [meta] add Automatic Rebase and Require Allow Edits workflows fb349b2 [meta] add auto-changelog c4001fc [meta] add \"funding\"; create FUNDING.yml d4d6d29 [Tests] add npm run lint dedfb98 Only apps should have lockfiles 54ac776 [meta] add safe-publish-latest 9ea8e43","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/callsites/readme/","text":"callsites Get callsites from the V8 stack trace API Install $ npm install callsites Usage const callsites = require('callsites'); function unicorn() { console.log(callsites()[0].getFileName()); //=> '/Users/sindresorhus/dev/callsites/test.js' } unicorn(); API Returns an array of callsite objects with the following methods: getThis : returns the value of this . getTypeName : returns the type of this as a string. This is the name of the function stored in the constructor field of this , if available, otherwise the object's [[Class]] internal property. getFunction : returns the current function. getFunctionName : returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context. getMethodName : returns the name of the property of this or one of its prototypes that holds the current function. getFileName : if this function was defined in a script returns the name of the script. getLineNumber : if this function was defined in a script returns the current line number. getColumnNumber : if this function was defined in a script returns the current column number getEvalOrigin : if this function was created using a call to eval returns a string representing the location where eval was called. isToplevel : is this a top-level invocation, that is, is this the global object? isEval : does this call take place in code defined by a call to eval ? isNative : is this call in native V8 code? isConstructor : is this a constructor call? License MIT \u00a9 Sindre Sorhus","title":"callsites Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/callsites/readme/#callsites","text":"Get callsites from the V8 stack trace API","title":"callsites"},{"location":"_Disciplina/Code/my-react-app/node_modules/callsites/readme/#install","text":"$ npm install callsites","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/callsites/readme/#usage","text":"const callsites = require('callsites'); function unicorn() { console.log(callsites()[0].getFileName()); //=> '/Users/sindresorhus/dev/callsites/test.js' } unicorn();","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/callsites/readme/#api","text":"Returns an array of callsite objects with the following methods: getThis : returns the value of this . getTypeName : returns the type of this as a string. This is the name of the function stored in the constructor field of this , if available, otherwise the object's [[Class]] internal property. getFunction : returns the current function. getFunctionName : returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context. getMethodName : returns the name of the property of this or one of its prototypes that holds the current function. getFileName : if this function was defined in a script returns the name of the script. getLineNumber : if this function was defined in a script returns the current line number. getColumnNumber : if this function was defined in a script returns the current column number getEvalOrigin : if this function was created using a call to eval returns a string representing the location where eval was called. isToplevel : is this a top-level invocation, that is, is this the global object? isEval : does this call take place in code defined by a call to eval ? isNative : is this call in native V8 code? isConstructor : is this a constructor call?","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/callsites/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/caniuse-lite/","text":"caniuse-lite A smaller version of caniuse-db, with only the essentials! Docs Read full docs here .","title":"caniuse-lite"},{"location":"_Disciplina/Code/my-react-app/node_modules/caniuse-lite/#caniuse-lite","text":"A smaller version of caniuse-db, with only the essentials!","title":"caniuse-lite"},{"location":"_Disciplina/Code/my-react-app/node_modules/caniuse-lite/#docs","text":"Read full docs here .","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/","text":"Terminal string styling done right See what's new in Chalk 2 Highlights Expressive API Highly performant Ability to nest styles 256/Truecolor color support Auto-detects color support Doesn't extend String.prototype Clean and focused Actively maintained Used by ~23,000 packages as of December 31, 2017 Install $ npm install chalk Usage const chalk = require('chalk'); console.log(chalk.blue('Hello world!')); Chalk comes with an easy to use composable API where you just chain and nest the styles you want. const chalk = require('chalk'); const log = console.log; // Combine styled and normal strings log(chalk.blue('Hello') + ' World' + chalk.red('!')); // Compose multiple styles using the chainable API log(chalk.blue.bgRed.bold('Hello world!')); // Pass in multiple arguments log(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz')); // Nest styles log(chalk.red('Hello', chalk.underline.bgBlue('world') + '!')); // Nest styles of the same type even (color, underline, background) log(chalk.green( 'I am a green line ' + chalk.blue.underline.bold('with a blue substring') + ' that becomes green again!' )); // ES2015 template literal log(` CPU: ${chalk.red('90%')} RAM: ${chalk.green('40%')} DISK: ${chalk.yellow('70%')} `); // ES2015 tagged template literal log(chalk` CPU: {red ${cpu.totalPercent}%} RAM: {green ${ram.used / ram.total * 100}%} DISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%} `); // Use RGB colors in terminal emulators that support it. log(chalk.keyword('orange')('Yay for orange colored text!')); log(chalk.rgb(123, 45, 67).underline('Underlined reddish color')); log(chalk.hex('#DEADED').bold('Bold gray!')); Easily define your own themes: const chalk = require('chalk'); const error = chalk.bold.red; const warning = chalk.keyword('orange'); console.log(error('Error!')); console.log(warning('Warning!')); Take advantage of console.log string substitution : const name = 'Sindre'; console.log(chalk.green('Hello %s'), name); //=> 'Hello Sindre' API chalk. <style>[.<style>...](string, [string...]) Example: chalk.red.bold.underline('Hello', 'world'); Chain styles and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green . Multiple arguments will be separated by space. chalk.enabled Color support is automatically detected, as is the level (see chalk.level ). However, if you'd like to simply enable/disable Chalk, you can do so via the .enabled property. Chalk is enabled by default unless explicitly disabled via the constructor or chalk.level is 0 . If you need to change this in a reusable module, create a new instance: const ctx = new chalk.constructor({enabled: false}); chalk.level Color support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers. If you need to change this in a reusable module, create a new instance: const ctx = new chalk.constructor({level: 0}); Levels are as follows: All colors disabled Basic color support (16 colors) 256 color support Truecolor support (16 million colors) chalk.supportsColor Detect whether the terminal supports color . Used internally and handled for you, but exposed for convenience. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively. Styles Modifiers reset bold dim italic (Not widely supported) underline inverse hidden strikethrough (Not widely supported) visible (Text is emitted only if enabled) Colors black red green yellow blue (On Windows the bright version is used since normal blue is illegible) magenta cyan white gray (\"bright black\") redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright Background colors bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright Tagged template literal Chalk can be used as a tagged template literal . const chalk = require('chalk'); const miles = 18; const calculateFeet = miles => miles * 5280; console.log(chalk` There are {bold 5280 feet} in a mile. In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}. `); Blocks are delimited by an opening curly brace ( { ), a style, some content, and a closing curly brace ( } ). Template styles are chained exactly like normal Chalk styles. The following two statements are equivalent: console.log(chalk.bold.rgb(10, 100, 200)('Hello!')); console.log(chalk`{bold.rgb(10,100,200) Hello!}`); Note that function styles ( rgb() , hsl() , keyword() , etc.) may not contain spaces between parameters. All interpolated values ( chalk`${foo}` ) are converted to strings via the .toString() method. All curly braces ( { and } ) in interpolated value strings are escaped. 256 and Truecolor color support Chalk supports 256 colors and Truecolor (16 million colors) on supported terminal apps. Colors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying {level: n} as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red). Examples: chalk.hex('#DEADED').underline('Hello, world!') chalk.keyword('orange')('Some orange text') chalk.rgb(15, 100, 204).inverse('Hello!') Background versions of these models are prefixed with bg and the first level of the module capitalized (e.g. keyword for foreground colors and bgKeyword for background colors). chalk.bgHex('#DEADED').underline('Hello, world!') chalk.bgKeyword('orange')('Some orange text') chalk.bgRgb(15, 100, 204).inverse('Hello!') The following color models can be used: rgb - Example: chalk.rgb(255, 136, 0).bold('Orange!') hex - Example: chalk.hex('#FF8800').bold('Orange!') keyword (CSS keywords) - Example: chalk.keyword('orange').bold('Orange!') hsl - Example: chalk.hsl(32, 100, 50).bold('Orange!') hsv - Example: chalk.hsv(32, 100, 100).bold('Orange!') hwb - Example: chalk.hwb(32, 0, 50).bold('Orange!') ansi16 ansi256 Windows If you're on Windows, do yourself a favor and use cmder instead of cmd.exe . Origin story colors.js used to be the most popular string styling module, but it has serious deficiencies like extending String.prototype which causes all kinds of problems and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative. Related chalk-cli - CLI for this module ansi-styles - ANSI escape codes for styling strings in the terminal supports-color - Detect whether a terminal supports color strip-ansi - Strip ANSI escape codes strip-ansi-stream - Strip ANSI escape codes from a stream has-ansi - Check if a string has ANSI escape codes ansi-regex - Regular expression for matching ANSI escape codes wrap-ansi - Wordwrap a string with ANSI escape codes slice-ansi - Slice a string with ANSI escape codes color-convert - Converts colors between different models chalk-animation - Animate strings in the terminal gradient-string - Apply color gradients to strings chalk-pipe - Create chalk style schemes with simpler style strings terminal-link - Create clickable links in the terminal Maintainers Sindre Sorhus Josh Junon License MIT","title":"Readme"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#see-whats-new-in-chalk-2","text":"","title":"See what's new in Chalk 2"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#highlights","text":"Expressive API Highly performant Ability to nest styles 256/Truecolor color support Auto-detects color support Doesn't extend String.prototype Clean and focused Actively maintained Used by ~23,000 packages as of December 31, 2017","title":"Highlights"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#install","text":"$ npm install chalk","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#usage","text":"const chalk = require('chalk'); console.log(chalk.blue('Hello world!')); Chalk comes with an easy to use composable API where you just chain and nest the styles you want. const chalk = require('chalk'); const log = console.log; // Combine styled and normal strings log(chalk.blue('Hello') + ' World' + chalk.red('!')); // Compose multiple styles using the chainable API log(chalk.blue.bgRed.bold('Hello world!')); // Pass in multiple arguments log(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz')); // Nest styles log(chalk.red('Hello', chalk.underline.bgBlue('world') + '!')); // Nest styles of the same type even (color, underline, background) log(chalk.green( 'I am a green line ' + chalk.blue.underline.bold('with a blue substring') + ' that becomes green again!' )); // ES2015 template literal log(` CPU: ${chalk.red('90%')} RAM: ${chalk.green('40%')} DISK: ${chalk.yellow('70%')} `); // ES2015 tagged template literal log(chalk` CPU: {red ${cpu.totalPercent}%} RAM: {green ${ram.used / ram.total * 100}%} DISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%} `); // Use RGB colors in terminal emulators that support it. log(chalk.keyword('orange')('Yay for orange colored text!')); log(chalk.rgb(123, 45, 67).underline('Underlined reddish color')); log(chalk.hex('#DEADED').bold('Bold gray!')); Easily define your own themes: const chalk = require('chalk'); const error = chalk.bold.red; const warning = chalk.keyword('orange'); console.log(error('Error!')); console.log(warning('Warning!')); Take advantage of console.log string substitution : const name = 'Sindre'; console.log(chalk.green('Hello %s'), name); //=> 'Hello Sindre'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#chalkstylestylestring-string","text":"Example: chalk.red.bold.underline('Hello', 'world'); Chain styles and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green . Multiple arguments will be separated by space.","title":"chalk.&lt;style&gt;[.&lt;style&gt;...](string, [string...])"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#chalkenabled","text":"Color support is automatically detected, as is the level (see chalk.level ). However, if you'd like to simply enable/disable Chalk, you can do so via the .enabled property. Chalk is enabled by default unless explicitly disabled via the constructor or chalk.level is 0 . If you need to change this in a reusable module, create a new instance: const ctx = new chalk.constructor({enabled: false});","title":"chalk.enabled"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#chalklevel","text":"Color support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers. If you need to change this in a reusable module, create a new instance: const ctx = new chalk.constructor({level: 0}); Levels are as follows: All colors disabled Basic color support (16 colors) 256 color support Truecolor support (16 million colors)","title":"chalk.level"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#chalksupportscolor","text":"Detect whether the terminal supports color . Used internally and handled for you, but exposed for convenience. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively.","title":"chalk.supportsColor"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#styles","text":"","title":"Styles"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#modifiers","text":"reset bold dim italic (Not widely supported) underline inverse hidden strikethrough (Not widely supported) visible (Text is emitted only if enabled)","title":"Modifiers"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#colors","text":"black red green yellow blue (On Windows the bright version is used since normal blue is illegible) magenta cyan white gray (\"bright black\") redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright","title":"Colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#background-colors","text":"bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright","title":"Background colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#tagged-template-literal","text":"Chalk can be used as a tagged template literal . const chalk = require('chalk'); const miles = 18; const calculateFeet = miles => miles * 5280; console.log(chalk` There are {bold 5280 feet} in a mile. In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}. `); Blocks are delimited by an opening curly brace ( { ), a style, some content, and a closing curly brace ( } ). Template styles are chained exactly like normal Chalk styles. The following two statements are equivalent: console.log(chalk.bold.rgb(10, 100, 200)('Hello!')); console.log(chalk`{bold.rgb(10,100,200) Hello!}`); Note that function styles ( rgb() , hsl() , keyword() , etc.) may not contain spaces between parameters. All interpolated values ( chalk`${foo}` ) are converted to strings via the .toString() method. All curly braces ( { and } ) in interpolated value strings are escaped.","title":"Tagged template literal"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#256-and-truecolor-color-support","text":"Chalk supports 256 colors and Truecolor (16 million colors) on supported terminal apps. Colors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying {level: n} as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red). Examples: chalk.hex('#DEADED').underline('Hello, world!') chalk.keyword('orange')('Some orange text') chalk.rgb(15, 100, 204).inverse('Hello!') Background versions of these models are prefixed with bg and the first level of the module capitalized (e.g. keyword for foreground colors and bgKeyword for background colors). chalk.bgHex('#DEADED').underline('Hello, world!') chalk.bgKeyword('orange')('Some orange text') chalk.bgRgb(15, 100, 204).inverse('Hello!') The following color models can be used: rgb - Example: chalk.rgb(255, 136, 0).bold('Orange!') hex - Example: chalk.hex('#FF8800').bold('Orange!') keyword (CSS keywords) - Example: chalk.keyword('orange').bold('Orange!') hsl - Example: chalk.hsl(32, 100, 50).bold('Orange!') hsv - Example: chalk.hsv(32, 100, 100).bold('Orange!') hwb - Example: chalk.hwb(32, 0, 50).bold('Orange!') ansi16 ansi256","title":"256 and Truecolor color support"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#windows","text":"If you're on Windows, do yourself a favor and use cmder instead of cmd.exe .","title":"Windows"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#origin-story","text":"colors.js used to be the most popular string styling module, but it has serious deficiencies like extending String.prototype which causes all kinds of problems and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.","title":"Origin story"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#related","text":"chalk-cli - CLI for this module ansi-styles - ANSI escape codes for styling strings in the terminal supports-color - Detect whether a terminal supports color strip-ansi - Strip ANSI escape codes strip-ansi-stream - Strip ANSI escape codes from a stream has-ansi - Check if a string has ANSI escape codes ansi-regex - Regular expression for matching ANSI escape codes wrap-ansi - Wordwrap a string with ANSI escape codes slice-ansi - Slice a string with ANSI escape codes color-convert - Converts colors between different models chalk-animation - Animate strings in the terminal gradient-string - Apply color gradients to strings chalk-pipe - Create chalk style schemes with simpler style strings terminal-link - Create clickable links in the terminal","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#maintainers","text":"Sindre Sorhus Josh Junon","title":"Maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/chalk/readme/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/","text":"color-convert Color-convert is a color conversion library for JavaScript and node. It converts all ways between rgb , hsl , hsv , hwb , cmyk , ansi , ansi16 , hex strings, and CSS keyword s (will round to closest): var convert = require('color-convert'); convert.rgb.hsl(140, 200, 100); // [96, 48, 59] convert.keyword.rgb('blue'); // [0, 0, 255] var rgbChannels = convert.rgb.channels; // 3 var cmykChannels = convert.cmyk.channels; // 4 var ansiChannels = convert.ansi16.channels; // 1 Install $ npm install color-convert API Simply get the property of the from and to conversion that you're looking for. All functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on .raw to the function. All 'from' functions have a hidden property called .channels that indicates the number of channels the function expects (not including alpha). var convert = require('color-convert'); // Hex to LAB convert.hex.lab('DEADBF'); // [ 76, 21, -2 ] convert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ] // RGB to CMYK convert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ] convert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ] Arrays All functions that accept multiple arguments also support passing an array. Note that this does not apply to functions that convert from a color that only requires one value (e.g. keyword , ansi256 , hex , etc.) var convert = require('color-convert'); convert.rgb.hex(123, 45, 67); // '7B2D43' convert.rgb.hex([123, 45, 67]); // '7B2D43' Routing Conversions that don't have an explicitly defined conversion (in conversions.js ), but can be converted by means of sub-conversions (e.g. XYZ -> RGB -> CMYK), are automatically routed together. This allows just about any color model supported by color-convert to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> LAB -> XYZ -> RGB -> Hex). Keep in mind that extensive conversions may result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see conversions.js . Contribute If there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request. License Copyright \u00a9 2011-2016, Heather Arthur and Josh Junon. Licensed under the MIT License .","title":"color-convert"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#color-convert","text":"Color-convert is a color conversion library for JavaScript and node. It converts all ways between rgb , hsl , hsv , hwb , cmyk , ansi , ansi16 , hex strings, and CSS keyword s (will round to closest): var convert = require('color-convert'); convert.rgb.hsl(140, 200, 100); // [96, 48, 59] convert.keyword.rgb('blue'); // [0, 0, 255] var rgbChannels = convert.rgb.channels; // 3 var cmykChannels = convert.cmyk.channels; // 4 var ansiChannels = convert.ansi16.channels; // 1","title":"color-convert"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#install","text":"$ npm install color-convert","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#api","text":"Simply get the property of the from and to conversion that you're looking for. All functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on .raw to the function. All 'from' functions have a hidden property called .channels that indicates the number of channels the function expects (not including alpha). var convert = require('color-convert'); // Hex to LAB convert.hex.lab('DEADBF'); // [ 76, 21, -2 ] convert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ] // RGB to CMYK convert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ] convert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#arrays","text":"All functions that accept multiple arguments also support passing an array. Note that this does not apply to functions that convert from a color that only requires one value (e.g. keyword , ansi256 , hex , etc.) var convert = require('color-convert'); convert.rgb.hex(123, 45, 67); // '7B2D43' convert.rgb.hex([123, 45, 67]); // '7B2D43'","title":"Arrays"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#routing","text":"Conversions that don't have an explicitly defined conversion (in conversions.js ), but can be converted by means of sub-conversions (e.g. XYZ -> RGB -> CMYK), are automatically routed together. This allows just about any color model supported by color-convert to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> LAB -> XYZ -> RGB -> Hex). Keep in mind that extensive conversions may result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see conversions.js .","title":"Routing"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#contribute","text":"If there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.","title":"Contribute"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/#license","text":"Copyright \u00a9 2011-2016, Heather Arthur and Josh Junon. Licensed under the MIT License .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/CHANGELOG/","text":"1.0.0 - 2016-01-07 Removed: unused speed test Added: Automatic routing between previously unsupported conversions ( #27 ) Removed: xxx2xxx() and xxx2xxxRaw() functions ( #27 ) Removed: convert() class ( #27 ) Changed: all functions to lookup dictionary ( #27 ) Changed: ansi to ansi256 ( #27 ) Fixed: argument grouping for functions requiring only one argument ( #27 ) 0.6.0 - 2015-07-23 Added: methods to handle ANSI 16/256 colors: rgb2ansi16 rgb2ansi hsl2ansi16 hsl2ansi hsv2ansi16 hsv2ansi hwb2ansi16 hwb2ansi cmyk2ansi16 cmyk2ansi keyword2ansi16 keyword2ansi ansi162rgb ansi162hsl ansi162hsv ansi162hwb ansi162cmyk ansi162keyword ansi2rgb ansi2hsl ansi2hsv ansi2hwb ansi2cmyk ansi2keyword ( #18 ) 0.5.3 - 2015-06-02 Fixed: hsl2hsv does not return NaN anymore when using [0,0,0] ( #15 ) Check out commit logs for older releases","title":"1.0.0 - 2016-01-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/CHANGELOG/#100-2016-01-07","text":"Removed: unused speed test Added: Automatic routing between previously unsupported conversions ( #27 ) Removed: xxx2xxx() and xxx2xxxRaw() functions ( #27 ) Removed: convert() class ( #27 ) Changed: all functions to lookup dictionary ( #27 ) Changed: ansi to ansi256 ( #27 ) Fixed: argument grouping for functions requiring only one argument ( #27 )","title":"1.0.0 - 2016-01-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/CHANGELOG/#060-2015-07-23","text":"Added: methods to handle ANSI 16/256 colors: rgb2ansi16 rgb2ansi hsl2ansi16 hsl2ansi hsv2ansi16 hsv2ansi hwb2ansi16 hwb2ansi cmyk2ansi16 cmyk2ansi keyword2ansi16 keyword2ansi ansi162rgb ansi162hsl ansi162hsv ansi162hwb ansi162cmyk ansi162keyword ansi2rgb ansi2hsl ansi2hsv ansi2hwb ansi2cmyk ansi2keyword ( #18 )","title":"0.6.0 - 2015-07-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-convert/CHANGELOG/#053-2015-06-02","text":"Fixed: hsl2hsv does not return NaN anymore when using [0,0,0] ( #15 ) Check out commit logs for older releases","title":"0.5.3 - 2015-06-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/color-name/","text":"A JSON with color names and its values. Based on http://dev.w3.org/csswg/css-color/#named-colors. var colors = require('color-name'); colors.red //[255,0,0]","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/","text":"concat-map Concatenative mapdashery. example var concatMap = require('concat-map'); var xs = [ 1, 2, 3, 4, 5, 6 ]; var ys = concatMap(xs, function (x) { return x % 2 ? [ x - 0.1, x, x + 0.1 ] : []; }); console.dir(ys); [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ] methods var concatMap = require('concat-map') concatMap(xs, fn) Return an array of concatenated elements by calling fn(x, i) for each element x and each index i in the array xs . When fn(x, i) returns an array, its result will be concatenated with the result array. If fn(x, i) returns anything else, that value will be pushed onto the end of the result array. install With npm do: npm install concat-map license MIT notes This module was written while sitting high above the ground in a tree.","title":"concat-map"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#concat-map","text":"Concatenative mapdashery.","title":"concat-map"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#example","text":"var concatMap = require('concat-map'); var xs = [ 1, 2, 3, 4, 5, 6 ]; var ys = concatMap(xs, function (x) { return x % 2 ? [ x - 0.1, x, x + 0.1 ] : []; }); console.dir(ys); [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#methods","text":"var concatMap = require('concat-map')","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#concatmapxs-fn","text":"Return an array of concatenated elements by calling fn(x, i) for each element x and each index i in the array xs . When fn(x, i) returns an array, its result will be concatenated with the result array. If fn(x, i) returns anything else, that value will be pushed onto the end of the result array.","title":"concatMap(xs, fn)"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#install","text":"With npm do: npm install concat-map","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#license","text":"MIT","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/concat-map/#notes","text":"This module was written while sitting high above the ground in a tree.","title":"notes"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/","text":"convert-source-map Converts a source-map from/to different formats and allows adding/changing properties. var convert = require('convert-source-map'); var json = convert .fromComment('//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=') .toJSON(); var modified = convert .fromComment('//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=') .setProperty('sources', [ 'SRC/FOO.JS' ]) .toJSON(); console.log(json); console.log(modified); {\"version\":3,\"file\":\"build/foo.min.js\",\"sources\":[\"src/foo.js\"],\"names\":[],\"mappings\":\"AAAA\",\"sourceRoot\":\"/\"} {\"version\":3,\"file\":\"build/foo.min.js\",\"sources\":[\"SRC/FOO.JS\"],\"names\":[],\"mappings\":\"AAAA\",\"sourceRoot\":\"/\"} Upgrading Prior to v2.0.0, the fromMapFileComment and fromMapFileSource functions took a String directory path and used that to resolve & read the source map file from the filesystem. However, this made the library limited to nodejs environments and broke on sources with querystrings. In v2.0.0, you now need to pass a function that does the file reading. It will receive the source filename as a String that you can resolve to a filesystem path, URL, or anything else. If you are using convert-source-map in nodejs and want the previous behavior, you'll use a function like such: + var fs = require('fs'); // Import the fs module to read a file + var path = require('path'); // Import the path module to resolve a path against your directory - var conv = convert.fromMapFileSource(css, '../my-dir'); + var conv = convert.fromMapFileSource(css, function (filename) { + return fs.readFileSync(path.resolve('../my-dir', filename), 'utf-8'); + }); API fromObject(obj) Returns source map converter from given object. fromJSON(json) Returns source map converter from given json string. fromURI(uri) Returns source map converter from given uri encoded json string. fromBase64(base64) Returns source map converter from given base64 encoded json string. fromComment(comment) Returns source map converter from given base64 or uri encoded json string prefixed with //# sourceMappingURL=... . fromMapFileComment(comment, readMap) Returns source map converter from given filename by parsing //# sourceMappingURL=filename . readMap must be a function which receives the source map filename and returns either a String or Buffer of the source map (if read synchronously), or a Promise containing a String or Buffer of the source map (if read asynchronously). If readMap doesn't return a Promise , fromMapFileComment will return a source map converter synchronously. If readMap returns a Promise , fromMapFileComment will also return Promise . The Promise will be either resolved with the source map converter or rejected with an error. Examples Synchronous read in Node.js: var convert = require('convert-source-map'); var fs = require('fs'); function readMap(filename) { return fs.readFileSync(filename, 'utf8'); } var json = convert .fromMapFileComment('//# sourceMappingURL=map-file-comment.css.map', readMap) .toJSON(); console.log(json); Asynchronous read in Node.js: var convert = require('convert-source-map'); var { promises: fs } = require('fs'); // Notice the `promises` import function readMap(filename) { return fs.readFile(filename, 'utf8'); } var converter = await convert.fromMapFileComment('//# sourceMappingURL=map-file-comment.css.map', readMap) var json = converter.toJSON(); console.log(json); Asynchronous read in the browser: var convert = require('convert-source-map'); async function readMap(url) { const res = await fetch(url); return res.text(); } const converter = await convert.fromMapFileComment('//# sourceMappingURL=map-file-comment.css.map', readMap) var json = converter.toJSON(); console.log(json); fromSource(source) Finds last sourcemap comment in file and returns source map converter or returns null if no source map comment was found. fromMapFileSource(source, readMap) Finds last sourcemap comment in file and returns source map converter or returns null if no source map comment was found. readMap must be a function which receives the source map filename and returns either a String or Buffer of the source map (if read synchronously), or a Promise containing a String or Buffer of the source map (if read asynchronously). If readMap doesn't return a Promise , fromMapFileSource will return a source map converter synchronously. If readMap returns a Promise , fromMapFileSource will also return Promise . The Promise will be either resolved with the source map converter or rejected with an error. toObject() Returns a copy of the underlying source map. toJSON([space]) Converts source map to json string. If space is given (optional), this will be passed to JSON.stringify when the JSON string is generated. toURI() Converts source map to uri encoded json string. toBase64() Converts source map to base64 encoded json string. toComment([options]) Converts source map to an inline comment that can be appended to the source-file. By default, the comment is formatted like: //# sourceMappingURL=... , which you would normally see in a JS source file. When options.encoding == 'uri' , the data will be uri encoded, otherwise they will be base64 encoded. When options.multiline == true , the comment is formatted like: /*# sourceMappingURL=... */ , which you would find in a CSS source file. addProperty(key, value) Adds given property to the source map. Throws an error if property already exists. setProperty(key, value) Sets given property to the source map. If property doesn't exist it is added, otherwise its value is updated. getProperty(key) Gets given property of the source map. removeComments(src) Returns src with all source map comments removed removeMapFileComments(src) Returns src with all source map comments pointing to map files removed. commentRegex Provides a fresh RegExp each time it is accessed. Can be used to find source map comments. Breaks down a source map comment into groups: Groups: 1: media type, 2: MIME type, 3: charset, 4: encoding, 5: data. mapFileCommentRegex Provides a fresh RegExp each time it is accessed. Can be used to find source map comments pointing to map files. generateMapFileComment(file, [options]) Returns a comment that links to an external source map via file . By default, the comment is formatted like: //# sourceMappingURL=... , which you would normally see in a JS source file. When options.multiline == true , the comment is formatted like: /*# sourceMappingURL=... */ , which you would find in a CSS source file.","title":"convert-source-map Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#convert-source-map","text":"Converts a source-map from/to different formats and allows adding/changing properties. var convert = require('convert-source-map'); var json = convert .fromComment('//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=') .toJSON(); var modified = convert .fromComment('//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=') .setProperty('sources', [ 'SRC/FOO.JS' ]) .toJSON(); console.log(json); console.log(modified); {\"version\":3,\"file\":\"build/foo.min.js\",\"sources\":[\"src/foo.js\"],\"names\":[],\"mappings\":\"AAAA\",\"sourceRoot\":\"/\"} {\"version\":3,\"file\":\"build/foo.min.js\",\"sources\":[\"SRC/FOO.JS\"],\"names\":[],\"mappings\":\"AAAA\",\"sourceRoot\":\"/\"}","title":"convert-source-map"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#upgrading","text":"Prior to v2.0.0, the fromMapFileComment and fromMapFileSource functions took a String directory path and used that to resolve & read the source map file from the filesystem. However, this made the library limited to nodejs environments and broke on sources with querystrings. In v2.0.0, you now need to pass a function that does the file reading. It will receive the source filename as a String that you can resolve to a filesystem path, URL, or anything else. If you are using convert-source-map in nodejs and want the previous behavior, you'll use a function like such: + var fs = require('fs'); // Import the fs module to read a file + var path = require('path'); // Import the path module to resolve a path against your directory - var conv = convert.fromMapFileSource(css, '../my-dir'); + var conv = convert.fromMapFileSource(css, function (filename) { + return fs.readFileSync(path.resolve('../my-dir', filename), 'utf-8'); + });","title":"Upgrading"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#fromobjectobj","text":"Returns source map converter from given object.","title":"fromObject(obj)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#fromjsonjson","text":"Returns source map converter from given json string.","title":"fromJSON(json)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#fromuriuri","text":"Returns source map converter from given uri encoded json string.","title":"fromURI(uri)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#frombase64base64","text":"Returns source map converter from given base64 encoded json string.","title":"fromBase64(base64)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#fromcommentcomment","text":"Returns source map converter from given base64 or uri encoded json string prefixed with //# sourceMappingURL=... .","title":"fromComment(comment)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#frommapfilecommentcomment-readmap","text":"Returns source map converter from given filename by parsing //# sourceMappingURL=filename . readMap must be a function which receives the source map filename and returns either a String or Buffer of the source map (if read synchronously), or a Promise containing a String or Buffer of the source map (if read asynchronously). If readMap doesn't return a Promise , fromMapFileComment will return a source map converter synchronously. If readMap returns a Promise , fromMapFileComment will also return Promise . The Promise will be either resolved with the source map converter or rejected with an error.","title":"fromMapFileComment(comment, readMap)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#examples","text":"Synchronous read in Node.js: var convert = require('convert-source-map'); var fs = require('fs'); function readMap(filename) { return fs.readFileSync(filename, 'utf8'); } var json = convert .fromMapFileComment('//# sourceMappingURL=map-file-comment.css.map', readMap) .toJSON(); console.log(json); Asynchronous read in Node.js: var convert = require('convert-source-map'); var { promises: fs } = require('fs'); // Notice the `promises` import function readMap(filename) { return fs.readFile(filename, 'utf8'); } var converter = await convert.fromMapFileComment('//# sourceMappingURL=map-file-comment.css.map', readMap) var json = converter.toJSON(); console.log(json); Asynchronous read in the browser: var convert = require('convert-source-map'); async function readMap(url) { const res = await fetch(url); return res.text(); } const converter = await convert.fromMapFileComment('//# sourceMappingURL=map-file-comment.css.map', readMap) var json = converter.toJSON(); console.log(json);","title":"Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#fromsourcesource","text":"Finds last sourcemap comment in file and returns source map converter or returns null if no source map comment was found.","title":"fromSource(source)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#frommapfilesourcesource-readmap","text":"Finds last sourcemap comment in file and returns source map converter or returns null if no source map comment was found. readMap must be a function which receives the source map filename and returns either a String or Buffer of the source map (if read synchronously), or a Promise containing a String or Buffer of the source map (if read asynchronously). If readMap doesn't return a Promise , fromMapFileSource will return a source map converter synchronously. If readMap returns a Promise , fromMapFileSource will also return Promise . The Promise will be either resolved with the source map converter or rejected with an error.","title":"fromMapFileSource(source, readMap)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#toobject","text":"Returns a copy of the underlying source map.","title":"toObject()"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#tojsonspace","text":"Converts source map to json string. If space is given (optional), this will be passed to JSON.stringify when the JSON string is generated.","title":"toJSON([space])"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#touri","text":"Converts source map to uri encoded json string.","title":"toURI()"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#tobase64","text":"Converts source map to base64 encoded json string.","title":"toBase64()"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#tocommentoptions","text":"Converts source map to an inline comment that can be appended to the source-file. By default, the comment is formatted like: //# sourceMappingURL=... , which you would normally see in a JS source file. When options.encoding == 'uri' , the data will be uri encoded, otherwise they will be base64 encoded. When options.multiline == true , the comment is formatted like: /*# sourceMappingURL=... */ , which you would find in a CSS source file.","title":"toComment([options])"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#addpropertykey-value","text":"Adds given property to the source map. Throws an error if property already exists.","title":"addProperty(key, value)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#setpropertykey-value","text":"Sets given property to the source map. If property doesn't exist it is added, otherwise its value is updated.","title":"setProperty(key, value)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#getpropertykey","text":"Gets given property of the source map.","title":"getProperty(key)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#removecommentssrc","text":"Returns src with all source map comments removed","title":"removeComments(src)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#removemapfilecommentssrc","text":"Returns src with all source map comments pointing to map files removed.","title":"removeMapFileComments(src)"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#commentregex","text":"Provides a fresh RegExp each time it is accessed. Can be used to find source map comments. Breaks down a source map comment into groups: Groups: 1: media type, 2: MIME type, 3: charset, 4: encoding, 5: data.","title":"commentRegex"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#mapfilecommentregex","text":"Provides a fresh RegExp each time it is accessed. Can be used to find source map comments pointing to map files.","title":"mapFileCommentRegex"},{"location":"_Disciplina/Code/my-react-app/node_modules/convert-source-map/#generatemapfilecommentfile-options","text":"Returns a comment that links to an external source map via file . By default, the comment is formatted like: //# sourceMappingURL=... , which you would normally see in a JS source file. When options.multiline == true , the comment is formatted like: /*# sourceMappingURL=... */ , which you would find in a CSS source file.","title":"generateMapFileComment(file, [options])"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/","text":"cross-spawn A cross platform solution to node's spawn and spawnSync. Installation Node.js version 8 and up: $ npm install cross-spawn Node.js version 7 and under: $ npm install cross-spawn@6 Why Node has issues when using spawn on Windows: It ignores PATHEXT It does not support shebangs Has problems running commands with spaces Has problems running commands with posix relative paths (e.g.: ./my-folder/my-executable ) Has an issue with command shims (files in node_modules/.bin/ ), where arguments with quotes and parenthesis would result in invalid syntax error No options.shell support on node <v4.8 All these issues are handled correctly by cross-spawn . There are some known modules, such as win-spawn , that try to solve this but they are either broken or provide faulty escaping of shell arguments. Usage Exactly the same way as node's spawn or spawnSync , so it's a drop in replacement. const spawn = require('cross-spawn'); // Spawn NPM asynchronously const child = spawn('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' }); // Spawn NPM synchronously const result = spawn.sync('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' }); Caveats Using options.shell as an alternative to cross-spawn Starting from node v4.8 , spawn has a shell option that allows you run commands from within a shell. This new option solves the PATHEXT issue but: It's not supported in node <v4.8 You must manually escape the command and arguments which is very error prone, specially when passing user input There are a lot of other unresolved issues from the Why section that you must take into account If you are using the shell option to spawn a command in a cross platform way, consider using cross-spawn instead. You have been warned. options.shell support While cross-spawn adds support for options.shell in node <v4.8 , all of its enhancements are disabled. This mimics the Node.js behavior. More specifically, the command and its arguments will not be automatically escaped nor shebang support will be offered. This is by design because if you are using options.shell you are probably targeting a specific platform anyway and you don't want things to get into your way. Shebangs support While cross-spawn handles shebangs on Windows, its support is limited. More specifically, it just supports #!/usr/bin/env <program> where <program> must not contain any arguments. If you would like to have the shebang support improved, feel free to contribute via a pull-request. Remember to always test your code on Windows! Tests $ npm test $ npm test -- --watch during development License Released under the MIT License .","title":"cross-spawn"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#cross-spawn","text":"A cross platform solution to node's spawn and spawnSync.","title":"cross-spawn"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#installation","text":"Node.js version 8 and up: $ npm install cross-spawn Node.js version 7 and under: $ npm install cross-spawn@6","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#why","text":"Node has issues when using spawn on Windows: It ignores PATHEXT It does not support shebangs Has problems running commands with spaces Has problems running commands with posix relative paths (e.g.: ./my-folder/my-executable ) Has an issue with command shims (files in node_modules/.bin/ ), where arguments with quotes and parenthesis would result in invalid syntax error No options.shell support on node <v4.8 All these issues are handled correctly by cross-spawn . There are some known modules, such as win-spawn , that try to solve this but they are either broken or provide faulty escaping of shell arguments.","title":"Why"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#usage","text":"Exactly the same way as node's spawn or spawnSync , so it's a drop in replacement. const spawn = require('cross-spawn'); // Spawn NPM asynchronously const child = spawn('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' }); // Spawn NPM synchronously const result = spawn.sync('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' });","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#caveats","text":"","title":"Caveats"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#using-optionsshell-as-an-alternative-to-cross-spawn","text":"Starting from node v4.8 , spawn has a shell option that allows you run commands from within a shell. This new option solves the PATHEXT issue but: It's not supported in node <v4.8 You must manually escape the command and arguments which is very error prone, specially when passing user input There are a lot of other unresolved issues from the Why section that you must take into account If you are using the shell option to spawn a command in a cross platform way, consider using cross-spawn instead. You have been warned.","title":"Using options.shell as an alternative to cross-spawn"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#optionsshell-support","text":"While cross-spawn adds support for options.shell in node <v4.8 , all of its enhancements are disabled. This mimics the Node.js behavior. More specifically, the command and its arguments will not be automatically escaped nor shebang support will be offered. This is by design because if you are using options.shell you are probably targeting a specific platform anyway and you don't want things to get into your way.","title":"options.shell support"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#shebangs-support","text":"While cross-spawn handles shebangs on Windows, its support is limited. More specifically, it just supports #!/usr/bin/env <program> where <program> must not contain any arguments. If you would like to have the shebang support improved, feel free to contribute via a pull-request. Remember to always test your code on Windows!","title":"Shebangs support"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#tests","text":"$ npm test $ npm test -- --watch during development","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/#license","text":"Released under the MIT License .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. See standard-version for commit guidelines. 7.0.3 (2020-05-25) Bug Fixes detect path key based on correct environment ( #133 ) ( 159e7e9 ) 7.0.2 (2020-04-04) Bug Fixes fix worker threads in Node >=11.10.0 ( #132 ) ( 6c5b4f0 ) 7.0.1 (2019-10-07) Bug Fixes core: support worker threads ( #127 ) ( cfd49c9 ) 7.0.0 (2019-09-03) \u26a0 BREAKING CHANGES drop support for Node.js < 8 drop support for versions below Node.js 8 ( #125 ) ( 16feb53 ) 6.0.5 (2018-03-02) Bug Fixes avoid using deprecated Buffer constructor ( #94 ) ( d5770df ), closes /nodejs.org/api/deprecations.html#deprecations_dep0005 6.0.4 (2018-01-31) Bug Fixes fix paths being incorrectly normalized on unix ( 06ee3c6 ), closes #90 6.0.3 (2018-01-23) 6.0.2 (2018-01-23) 6.0.1 (2018-01-23) 6.0.0 (2018-01-23) Bug Fixes fix certain arguments not being correctly escaped or causing batch syntax error ( 900cf10 ), closes #82 #51 fix commands as posix relatixe paths not working correctly, e.g.: ./my-command ( 900cf10 ) fix options argument being mutated ( 900cf10 ) fix commands resolution when PATH was actually Path ( 900cf10 ) Features improve compliance with node's ENOENT errors ( 900cf10 ) improve detection of node's shell option support ( 900cf10 ) Chores upgrade tooling upgrate project to es6 (node v4) BREAKING CHANGES remove support for older nodejs versions, only node >= 4 is supported 5.1.0 (2017-02-26) Bug Fixes fix options.shell support for NodeJS v4.8 5.0.1 (2016-11-04) Bug Fixes fix options.shell support for NodeJS v7 5.0.0 (2016-10-30) Features add support for options.shell improve parsing of shebangs by using shebang-command module Chores refactor some code to make it more clear update README caveats","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. See standard-version for commit guidelines.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#703-2020-05-25","text":"","title":"7.0.3 (2020-05-25)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes","text":"detect path key based on correct environment ( #133 ) ( 159e7e9 )","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#702-2020-04-04","text":"","title":"7.0.2 (2020-04-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_1","text":"fix worker threads in Node >=11.10.0 ( #132 ) ( 6c5b4f0 )","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#701-2019-10-07","text":"","title":"7.0.1 (2019-10-07)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_2","text":"core: support worker threads ( #127 ) ( cfd49c9 )","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#700-2019-09-03","text":"","title":"7.0.0 (2019-09-03)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#breaking-changes","text":"drop support for Node.js < 8 drop support for versions below Node.js 8 ( #125 ) ( 16feb53 )","title":"\u26a0 BREAKING CHANGES"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#605-2018-03-02","text":"","title":"6.0.5 (2018-03-02)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_3","text":"avoid using deprecated Buffer constructor ( #94 ) ( d5770df ), closes /nodejs.org/api/deprecations.html#deprecations_dep0005","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#604-2018-01-31","text":"","title":"6.0.4 (2018-01-31)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_4","text":"fix paths being incorrectly normalized on unix ( 06ee3c6 ), closes #90","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#603-2018-01-23","text":"","title":"6.0.3 (2018-01-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#602-2018-01-23","text":"","title":"6.0.2 (2018-01-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#601-2018-01-23","text":"","title":"6.0.1 (2018-01-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#600-2018-01-23","text":"","title":"6.0.0 (2018-01-23)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_5","text":"fix certain arguments not being correctly escaped or causing batch syntax error ( 900cf10 ), closes #82 #51 fix commands as posix relatixe paths not working correctly, e.g.: ./my-command ( 900cf10 ) fix options argument being mutated ( 900cf10 ) fix commands resolution when PATH was actually Path ( 900cf10 )","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#features","text":"improve compliance with node's ENOENT errors ( 900cf10 ) improve detection of node's shell option support ( 900cf10 )","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#chores","text":"upgrade tooling upgrate project to es6 (node v4)","title":"Chores"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#breaking-changes_1","text":"remove support for older nodejs versions, only node >= 4 is supported","title":"BREAKING CHANGES"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#510-2017-02-26","text":"","title":"5.1.0 (2017-02-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_6","text":"fix options.shell support for NodeJS v4.8","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#501-2016-11-04","text":"","title":"5.0.1 (2016-11-04)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#bug-fixes_7","text":"fix options.shell support for NodeJS v7","title":"Bug Fixes"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#500-2016-10-30","text":"","title":"5.0.0 (2016-10-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#features_1","text":"add support for options.shell improve parsing of shebangs by using shebang-command module","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/cross-spawn/CHANGELOG/#chores_1","text":"refactor some code to make it more clear update README caveats","title":"Chores"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/","text":"CSSType TypeScript and Flow definitions for CSS, generated by data from MDN . It provides autocompletion and type checking for CSS properties and values. TypeScript import type * as CSS from 'csstype'; const style: CSS.Properties = { colour: 'white', // Type error on property textAlign: 'middle', // Type error on value }; Flow // @flow strict import * as CSS from 'csstype'; const style: CSS.Properties<> = { colour: 'white', // Type error on property textAlign: 'middle', // Type error on value }; Further examples below will be in TypeScript! Getting started $ npm install csstype Table of content Style types At-rule types Pseudo types Generics Usage What should I do when I get type errors? Version 3.0 Contributing Style types Properties are categorized in different uses and in several technical variations to provide typings that suits as many as possible. Default Hyphen Fallback HyphenFallback All Properties PropertiesHyphen PropertiesFallback PropertiesHyphenFallback Standard StandardProperties StandardPropertiesHyphen StandardPropertiesFallback StandardPropertiesHyphenFallback Vendor VendorProperties VendorPropertiesHyphen VendorPropertiesFallback VendorPropertiesHyphenFallback Obsolete ObsoleteProperties ObsoletePropertiesHyphen ObsoletePropertiesFallback ObsoletePropertiesHyphenFallback Svg SvgProperties SvgPropertiesHyphen SvgPropertiesFallback SvgPropertiesHyphenFallback Categories: All - Includes Standard , Vendor , Obsolete and Svg Standard - Current properties and extends subcategories StandardLonghand and StandardShorthand (e.g. StandardShorthandProperties ) Vendor - Vendor prefixed properties and extends subcategories VendorLonghand and VendorShorthand (e.g. VendorShorthandProperties ) Obsolete - Removed or deprecated properties Svg - SVG-specific properties Variations: Default - JavaScript (camel) cased property names Hyphen - CSS (kebab) cased property names Fallback - Also accepts array of values e.g. string | string[] At-rule types At-rule interfaces with descriptors. TypeScript : These will be found in the AtRule namespace, e.g. AtRule.Viewport . Flow : These will be prefixed with AtRule$ , e.g. AtRule$Viewport . Default Hyphen Fallback HyphenFallback @counter-style CounterStyle CounterStyleHyphen CounterStyleFallback CounterStyleHyphenFallback @font-face FontFace FontFaceHyphen FontFaceFallback FontFaceHyphenFallback @viewport Viewport ViewportHyphen ViewportFallback ViewportHyphenFallback Pseudo types String literals of pseudo classes and pseudo elements Pseudos Extends: AdvancedPseudos Function-like pseudos e.g. :not(:first-child) . The string literal contains the value excluding the parenthesis: :not . These are separated because they require an argument that results in infinite number of variations. SimplePseudos Plain pseudos e.g. :hover that can only be one variation. Generics All interfaces has two optional generic argument to define length and time: CSS.Properties<TLength = string | 0, TTime = string> Length is the first generic parameter and defaults to string | 0 because 0 is the only length where the unit identifier is optional . You can specify this, e.g. string | number , for platforms and libraries that accepts any numeric value as length with a specific unit. tsx const style: CSS.Properties<string | number> = { width: 100, }; Time is the second generic argument and defaults to string . You can specify this, e.g. string | number , for platforms and libraries that accepts any numeric value as length with a specific unit. tsx const style: CSS.Properties<string | number, number> = { transitionDuration: 1000, }; Usage import type * as CSS from 'csstype'; const style: CSS.Properties = { width: '10px', margin: '1em', }; In some cases, like for CSS-in-JS libraries, an array of values is a way to provide fallback values in CSS. Using CSS.PropertiesFallback instead of CSS.Properties will add the possibility to use any property value as an array of values. import type * as CSS from 'csstype'; const style: CSS.PropertiesFallback = { display: ['-webkit-flex', 'flex'], color: 'white', }; There's even string literals for pseudo selectors and elements. import type * as CSS from 'csstype'; const pseudos: { [P in CSS.SimplePseudos]?: CSS.Properties } = { ':hover': { display: 'flex', }, }; Hyphen cased (kebab cased) properties are provided in CSS.PropertiesHyphen and CSS.PropertiesHyphenFallback . It's not not added by default in CSS.Properties . To allow both of them, you can simply extend with CSS.PropertiesHyphen or/and CSS.PropertiesHyphenFallback . import type * as CSS from 'csstype'; interface Style extends CSS.Properties, CSS.PropertiesHyphen {} const style: Style = { 'flex-grow': 1, 'flex-shrink': 0, 'font-weight': 'normal', backgroundColor: 'white', }; Adding type checked CSS properties to a HTMLElement . import type * as CSS from 'csstype'; const style: CSS.Properties = { color: 'red', margin: '1em', }; let button = document.createElement('button'); Object.assign(button.style, style); What should I do when I get type errors? The goal is to have as perfect types as possible and we're trying to do our best. But with CSS Custom Properties, the CSS specification changing frequently and vendors implementing their own specifications with new releases sometimes causes type errors even if it should work. Here's some steps you could take to get it fixed: If you're using CSS Custom Properties you can step directly to step 3. First of all, make sure you're doing it right. A type error could also indicate that you're not :wink: Some CSS specs that some vendors has implemented could have been officially rejected or haven't yet received any official acceptance and are therefor not included If you're using TypeScript, type widening could be the reason you get Type 'string' is not assignable to... errors Have a look in issues to see if an issue already has been filed. If not, create a new one. To help us out, please refer to any information you have found. Fix the issue locally with TypeScript (Flow further down): The recommended way is to use module augmentation . Here's a few examples: ```ts // My css.d.ts file import type * as CSS from 'csstype'; declare module 'csstype' { interface Properties { // Add a missing property WebkitRocketLauncher?: string; // Add a CSS Custom Property '--theme-color'?: 'black' | 'white'; // Allow namespaced CSS Custom Properties [index: `--theme-${string}`]: any; // Allow any CSS Custom Properties [index: `--${string}`]: any; // ...or allow any other property [index: string]: any; } } ``` The alternative way is to use type assertion . Here's a few examples: ```ts const style: CSS.Properties = { // Add a missing property ['WebkitRocketLauncher' as any]: 'launching', // Add a CSS Custom Property ['--theme-color' as any]: 'black', }; ``` Fix the issue locally with Flow : Use type assertion . Here's a few examples: ```js const style: $Exact<CSS.Properties<*>> = { // Add a missing property [('WebkitRocketLauncher': any)]: 'launching', // Add a CSS Custom Property [('--theme-color': any)]: 'black', }; ``` Version 3.0 All property types are exposed with namespace TypeScript: Property.AlignContent (was AlignContentProperty before) Flow: Property$AlignContent All at-rules are exposed with namespace TypeScript: AtRule.FontFace (was FontFace before) Flow: AtRule$FontFace Data types are NOT exposed E.g. Color and Box . Because the generation of data types may suddenly be removed or renamed. TypeScript hack for autocompletion Uses (string & {}) for literal string unions and (number & {}) for literal number unions ( related issue ). Utilize PropertyValue<T> to unpack types from e.g. (string & {}) to string . New generic for time Read more on the \"Generics\" section. Flow types improvements Flow Strict enabled and exact types are used. Contributing Never modify index.d.ts and index.js.flow directly. They are generated automatically and committed so that we can easily follow any change it results in. Therefor it's important that you run $ git config merge.ours.driver true after you've forked and cloned. That setting prevents merge conflicts when doing rebase. Commands npm run build Generates typings and type checks them npm run watch Runs build on each save npm run test Runs the tests npm run lazy Type checks, lints and formats everything","title":"CSSType"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#csstype","text":"TypeScript and Flow definitions for CSS, generated by data from MDN . It provides autocompletion and type checking for CSS properties and values. TypeScript import type * as CSS from 'csstype'; const style: CSS.Properties = { colour: 'white', // Type error on property textAlign: 'middle', // Type error on value }; Flow // @flow strict import * as CSS from 'csstype'; const style: CSS.Properties<> = { colour: 'white', // Type error on property textAlign: 'middle', // Type error on value }; Further examples below will be in TypeScript!","title":"CSSType"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#getting-started","text":"$ npm install csstype","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#table-of-content","text":"Style types At-rule types Pseudo types Generics Usage What should I do when I get type errors? Version 3.0 Contributing","title":"Table of content"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#style-types","text":"Properties are categorized in different uses and in several technical variations to provide typings that suits as many as possible. Default Hyphen Fallback HyphenFallback All Properties PropertiesHyphen PropertiesFallback PropertiesHyphenFallback Standard StandardProperties StandardPropertiesHyphen StandardPropertiesFallback StandardPropertiesHyphenFallback Vendor VendorProperties VendorPropertiesHyphen VendorPropertiesFallback VendorPropertiesHyphenFallback Obsolete ObsoleteProperties ObsoletePropertiesHyphen ObsoletePropertiesFallback ObsoletePropertiesHyphenFallback Svg SvgProperties SvgPropertiesHyphen SvgPropertiesFallback SvgPropertiesHyphenFallback Categories: All - Includes Standard , Vendor , Obsolete and Svg Standard - Current properties and extends subcategories StandardLonghand and StandardShorthand (e.g. StandardShorthandProperties ) Vendor - Vendor prefixed properties and extends subcategories VendorLonghand and VendorShorthand (e.g. VendorShorthandProperties ) Obsolete - Removed or deprecated properties Svg - SVG-specific properties Variations: Default - JavaScript (camel) cased property names Hyphen - CSS (kebab) cased property names Fallback - Also accepts array of values e.g. string | string[]","title":"Style types"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#at-rule-types","text":"At-rule interfaces with descriptors. TypeScript : These will be found in the AtRule namespace, e.g. AtRule.Viewport . Flow : These will be prefixed with AtRule$ , e.g. AtRule$Viewport . Default Hyphen Fallback HyphenFallback @counter-style CounterStyle CounterStyleHyphen CounterStyleFallback CounterStyleHyphenFallback @font-face FontFace FontFaceHyphen FontFaceFallback FontFaceHyphenFallback @viewport Viewport ViewportHyphen ViewportFallback ViewportHyphenFallback","title":"At-rule types"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#pseudo-types","text":"String literals of pseudo classes and pseudo elements Pseudos Extends: AdvancedPseudos Function-like pseudos e.g. :not(:first-child) . The string literal contains the value excluding the parenthesis: :not . These are separated because they require an argument that results in infinite number of variations. SimplePseudos Plain pseudos e.g. :hover that can only be one variation.","title":"Pseudo types"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#generics","text":"All interfaces has two optional generic argument to define length and time: CSS.Properties<TLength = string | 0, TTime = string> Length is the first generic parameter and defaults to string | 0 because 0 is the only length where the unit identifier is optional . You can specify this, e.g. string | number , for platforms and libraries that accepts any numeric value as length with a specific unit. tsx const style: CSS.Properties<string | number> = { width: 100, }; Time is the second generic argument and defaults to string . You can specify this, e.g. string | number , for platforms and libraries that accepts any numeric value as length with a specific unit. tsx const style: CSS.Properties<string | number, number> = { transitionDuration: 1000, };","title":"Generics"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#usage","text":"import type * as CSS from 'csstype'; const style: CSS.Properties = { width: '10px', margin: '1em', }; In some cases, like for CSS-in-JS libraries, an array of values is a way to provide fallback values in CSS. Using CSS.PropertiesFallback instead of CSS.Properties will add the possibility to use any property value as an array of values. import type * as CSS from 'csstype'; const style: CSS.PropertiesFallback = { display: ['-webkit-flex', 'flex'], color: 'white', }; There's even string literals for pseudo selectors and elements. import type * as CSS from 'csstype'; const pseudos: { [P in CSS.SimplePseudos]?: CSS.Properties } = { ':hover': { display: 'flex', }, }; Hyphen cased (kebab cased) properties are provided in CSS.PropertiesHyphen and CSS.PropertiesHyphenFallback . It's not not added by default in CSS.Properties . To allow both of them, you can simply extend with CSS.PropertiesHyphen or/and CSS.PropertiesHyphenFallback . import type * as CSS from 'csstype'; interface Style extends CSS.Properties, CSS.PropertiesHyphen {} const style: Style = { 'flex-grow': 1, 'flex-shrink': 0, 'font-weight': 'normal', backgroundColor: 'white', }; Adding type checked CSS properties to a HTMLElement . import type * as CSS from 'csstype'; const style: CSS.Properties = { color: 'red', margin: '1em', }; let button = document.createElement('button'); Object.assign(button.style, style);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#what-should-i-do-when-i-get-type-errors","text":"The goal is to have as perfect types as possible and we're trying to do our best. But with CSS Custom Properties, the CSS specification changing frequently and vendors implementing their own specifications with new releases sometimes causes type errors even if it should work. Here's some steps you could take to get it fixed: If you're using CSS Custom Properties you can step directly to step 3. First of all, make sure you're doing it right. A type error could also indicate that you're not :wink: Some CSS specs that some vendors has implemented could have been officially rejected or haven't yet received any official acceptance and are therefor not included If you're using TypeScript, type widening could be the reason you get Type 'string' is not assignable to... errors Have a look in issues to see if an issue already has been filed. If not, create a new one. To help us out, please refer to any information you have found. Fix the issue locally with TypeScript (Flow further down): The recommended way is to use module augmentation . Here's a few examples: ```ts // My css.d.ts file import type * as CSS from 'csstype'; declare module 'csstype' { interface Properties { // Add a missing property WebkitRocketLauncher?: string; // Add a CSS Custom Property '--theme-color'?: 'black' | 'white'; // Allow namespaced CSS Custom Properties [index: `--theme-${string}`]: any; // Allow any CSS Custom Properties [index: `--${string}`]: any; // ...or allow any other property [index: string]: any; } } ``` The alternative way is to use type assertion . Here's a few examples: ```ts const style: CSS.Properties = { // Add a missing property ['WebkitRocketLauncher' as any]: 'launching', // Add a CSS Custom Property ['--theme-color' as any]: 'black', }; ``` Fix the issue locally with Flow : Use type assertion . Here's a few examples: ```js const style: $Exact<CSS.Properties<*>> = { // Add a missing property [('WebkitRocketLauncher': any)]: 'launching', // Add a CSS Custom Property [('--theme-color': any)]: 'black', }; ```","title":"What should I do when I get type errors?"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#version-30","text":"All property types are exposed with namespace TypeScript: Property.AlignContent (was AlignContentProperty before) Flow: Property$AlignContent All at-rules are exposed with namespace TypeScript: AtRule.FontFace (was FontFace before) Flow: AtRule$FontFace Data types are NOT exposed E.g. Color and Box . Because the generation of data types may suddenly be removed or renamed. TypeScript hack for autocompletion Uses (string & {}) for literal string unions and (number & {}) for literal number unions ( related issue ). Utilize PropertyValue<T> to unpack types from e.g. (string & {}) to string . New generic for time Read more on the \"Generics\" section. Flow types improvements Flow Strict enabled and exact types are used.","title":"Version 3.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#contributing","text":"Never modify index.d.ts and index.js.flow directly. They are generated automatically and committed so that we can easily follow any change it results in. Therefor it's important that you run $ git config merge.ours.driver true after you've forked and cloned. That setting prevents merge conflicts when doing rebase.","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/csstype/#commands","text":"npm run build Generates typings and type checks them npm run watch Runs build on each save npm run test Runs the tests npm run lazy Type checks, lints and formats everything","title":"Commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/","text":"data-view-buffer Get the ArrayBuffer out of a DataView, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where DataView.prototype.buffer has been deleted after this module has loaded. Example const dataViewBuffer = require('data-view-buffer'); const assert = require('assert'); const ab = new ArrayBuffer(0); const dv = new DataView(ab); assert.equal(dataViewBuffer(dv), ab); Tests Simply clone the repo, npm install , and run npm test","title":"data-view-buffer Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/#data-view-buffer","text":"Get the ArrayBuffer out of a DataView, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where DataView.prototype.buffer has been deleted after this module has loaded.","title":"data-view-buffer"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/#example","text":"const dataViewBuffer = require('data-view-buffer'); const assert = require('assert'); const ab = new ArrayBuffer(0); const dv = new DataView(ab); assert.equal(dataViewBuffer(dv), ab);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-02-06 Commits [Refactor] use es-errors , so things that only need those do not need get-intrinsic 675f588 [Deps] update call-bind , get-intrinsic e6eb209 v1.0.0 - 2024-02-02 Commits Initial implementation, tests, readme, types 2e1382b Initial commit 1eb7dc4 npm init d9e3d47 Only apps should have lockfiles 116b60b","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/CHANGELOG/#v101-2024-02-06","text":"","title":"v1.0.1 - 2024-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/CHANGELOG/#commits","text":"[Refactor] use es-errors , so things that only need those do not need get-intrinsic 675f588 [Deps] update call-bind , get-intrinsic e6eb209","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/CHANGELOG/#v100-2024-02-02","text":"","title":"v1.0.0 - 2024-02-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-buffer/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types 2e1382b Initial commit 1eb7dc4 npm init d9e3d47 Only apps should have lockfiles 116b60b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/","text":"data-view-byte-length Get the byteLength out of a DataView, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where DataView.prototype.byteLength has been deleted after this module has loaded. Example const dataViewByteLength = require('data-view-byte-length'); const assert = require('assert'); const ab = new ArrayBuffer(42); const dv = new DataView(ab); assert.equal(dataViewByteLength(dv), 42); Tests Simply clone the repo, npm install , and run npm test","title":"data-view-byte-length Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/#data-view-byte-length","text":"Get the byteLength out of a DataView, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where DataView.prototype.byteLength has been deleted after this module has loaded.","title":"data-view-byte-length"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/#example","text":"const dataViewByteLength = require('data-view-byte-length'); const assert = require('assert'); const ab = new ArrayBuffer(42); const dv = new DataView(ab); assert.equal(dataViewByteLength(dv), 42);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-03-08 Commits [types] use shared tsconfig 0d5873c [Dev Deps] update @arethetypeswrong/cli , tape 13c1eaf [patch] fix function name a061e7b [Deps] update call-bind 6603851 v1.0.0 - 2024-03-04 Commits Initial implementation, tests, readme, types 79ad058 Initial commit 1a11313 npm init aac0108 Only apps should have lockfiles cdf1a15","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/CHANGELOG/#v101-2024-03-08","text":"","title":"v1.0.1 - 2024-03-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/CHANGELOG/#commits","text":"[types] use shared tsconfig 0d5873c [Dev Deps] update @arethetypeswrong/cli , tape 13c1eaf [patch] fix function name a061e7b [Deps] update call-bind 6603851","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/CHANGELOG/#v100-2024-03-04","text":"","title":"v1.0.0 - 2024-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-length/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme, types 79ad058 Initial commit 1a11313 npm init aac0108 Only apps should have lockfiles cdf1a15","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/","text":"data-view-byte-offset Get the byteOffset out of a DataView, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where DataView.prototype.byteOffset has been deleted after this module has loaded. Example const dataViewByteOffset = require('data-view-byte-offset'); const assert = require('assert'); const ab = new ArrayBuffer(42); const dv = new DataView(ab, 2); assert.equal(dataViewByteOffset(dv), 2); Tests Simply clone the repo, npm install , and run npm test","title":"data-view-byte-offset Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/#data-view-byte-offset","text":"Get the byteOffset out of a DataView, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where DataView.prototype.byteOffset has been deleted after this module has loaded.","title":"data-view-byte-offset"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/#example","text":"const dataViewByteOffset = require('data-view-byte-offset'); const assert = require('assert'); const ab = new ArrayBuffer(42); const dv = new DataView(ab, 2); assert.equal(dataViewByteOffset(dv), 2);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.0 - 2024-03-04 Commits Initial implementation, tests, readme, types 8b94518 Initial commit aee2acc npm init 10a21a4 Only apps should have lockfiles f6cfa3e","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/CHANGELOG/#v100-2024-03-04","text":"","title":"v1.0.0 - 2024-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/data-view-byte-offset/CHANGELOG/#commits","text":"Initial implementation, tests, readme, types 8b94518 Initial commit aee2acc npm init 10a21a4 Only apps should have lockfiles f6cfa3e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/","text":"debug A tiny JavaScript debugging utility modelled after Node.js core's debugging technique. Works in Node.js and web browsers. Installation $ npm install debug Usage debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole. Example app.js : var debug = require('debug')('http') , http = require('http') , name = 'My App'; // fake app debug('booting %o', name); http.createServer(function(req, res){ debug(req.method + ' ' + req.url); res.end('hello\\n'); }).listen(3000, function(){ debug('listening'); }); // fake worker of some kind require('./worker'); Example worker.js : var a = require('debug')('worker:a') , b = require('debug')('worker:b'); function work() { a('doing lots of uninteresting work'); setTimeout(work, Math.random() * 1000); } work(); function workb() { b('doing some work'); setTimeout(workb, Math.random() * 2000); } workb(); The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples: Windows command prompt notes CMD On Windows the environment variable is set using the set command. set DEBUG=*,-not_this Example: set DEBUG=* & node app.js PowerShell (VS Code default) PowerShell uses different syntax to set environment variables. $env:DEBUG = \"*,-not_this\" Example: $env:DEBUG='app';node app.js Then, run the program to be debugged as usual. npm script example: \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\", Namespace Colors Every debug instance has a color generated for it based on its namespace name. This helps when visually parsing the debug output to identify which debug instance a debug line belongs to. Node.js In Node.js, colors are enabled when stderr is a TTY. You also should install the supports-color module alongside debug, otherwise debug will only use a small handful of basic colors. Web Browser Colors are also enabled on \"Web Inspectors\" that understand the %c formatting option. These are WebKit web inspectors, Firefox ( since version 31 ) and the Firebug plugin for Firefox (any version). Millisecond diff When actively developing an application it can be useful to see when the time spent between one debug() call and the next. Suppose for example you invoke debug() before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls. When stdout is not a TTY, Date#toISOString() is used, making it more useful for logging the debug information as shown below: Conventions If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable. You can then use it for normal output as well as debug output. Wildcards The * character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with DEBUG=connect:bodyParser,connect:compress,connect:session , you may simply do DEBUG=connect:* , or to run everything using this module simply use DEBUG=* . You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, DEBUG=*,-connect:* would include all debuggers except those starting with \"connect:\". Environment Variables When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging: Name Purpose DEBUG Enables/disables specific debugging namespaces. DEBUG_HIDE_DATE Hide date from debug output (non-TTY). DEBUG_COLORS Whether or not to use colors in the debug output. DEBUG_DEPTH Object inspection depth. DEBUG_SHOW_HIDDEN Shows hidden properties on inspected objects. Note: The environment variables beginning with DEBUG_ end up being converted into an Options object that gets used with %o / %O formatters. See the Node.js documentation for util.inspect() for the complete list. Formatters Debug uses printf-style formatting. Below are the officially supported formatters: Formatter Representation %O Pretty-print an Object on multiple lines. %o Pretty-print an Object all on a single line. %s String. %d Number (both integer and float). %j JSON. Replaced with the string '[Circular]' if the argument contains circular references. %% Single percent sign ('%'). This does not consume an argument. Custom formatters You can add custom formatters by extending the debug.formatters object. For example, if you wanted to add support for rendering a Buffer as hex with %h , you could do something like: const createDebug = require('debug') createDebug.formatters.h = (v) => { return v.toString('hex') } // \u2026elsewhere const debug = createDebug('foo') debug('this is hex: %h', new Buffer('hello world')) // foo this is hex: 68656c6c6f20776f726c6421 +0ms Browser Support You can build a browser-ready script using browserify , or just use the browserify-as-a-service build , if you don't want to build it yourself. Debug's enable state is currently persisted by localStorage . Consider the situation shown below where you have worker:a and worker:b , and wish to debug both. You can enable this using localStorage.debug : localStorage.debug = 'worker:*' And then refresh the page. a = debug('worker:a'); b = debug('worker:b'); setInterval(function(){ a('doing some work'); }, 1000); setInterval(function(){ b('doing some work'); }, 1200); In Chromium-based web browsers (e.g. Brave, Chrome, and Electron), the JavaScript console will\u2014by default\u2014only show messages logged by debug if the \"Verbose\" log level is enabled . Output streams By default debug will log to stderr, however this can be configured per-namespace by overriding the log method: Example stdout.js : var debug = require('debug'); var error = debug('app:error'); // by default stderr is used error('goes to stderr!'); var log = debug('app:log'); // set this namespace to log via console.log log.log = console.log.bind(console); // don't forget to bind to console! log('goes to stdout'); error('still goes to stderr!'); // set all output to go via console.info // overrides all per-namespace log settings debug.log = console.info.bind(console); error('now goes to stdout via console.info'); log('still goes to stdout, but via console.info now'); Extend You can simply extend debugger const log = require('debug')('auth'); //creates new debug instance with extended namespace const logSign = log.extend('sign'); const logLogin = log.extend('login'); log('hello'); // auth hello logSign('hello'); //auth:sign hello logLogin('hello'); //auth:login hello Set dynamically You can also enable debug dynamically by calling the enable() method : let debug = require('debug'); console.log(1, debug.enabled('test')); debug.enable('test'); console.log(2, debug.enabled('test')); debug.disable(); console.log(3, debug.enabled('test')); print : 1 false 2 true 3 false Usage : enable(namespaces) namespaces can include modes separated by a colon and wildcards. Note that calling enable() completely overrides previously set DEBUG variable : $ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))' => false disable() Will disable all namespaces. The functions returns the namespaces currently enabled (and skipped). This can be useful if you want to disable debugging temporarily without knowing what was enabled to begin with. For example: let debug = require('debug'); debug.enable('foo:*,-foo:bar'); let namespaces = debug.disable(); debug.enable(namespaces); Note: There is no guarantee that the string will be identical to the initial enable string, but semantically they will be identical. Checking whether a debug target is enabled After you've created a debug instance, you can determine whether or not it is enabled by checking the enabled property: const debug = require('debug')('http'); if (debug.enabled) { // do stuff... } You can also manually toggle this property to force the debug instance to be enabled or disabled. Usage in child processes Due to the way debug detects if the output is a TTY or not, colors are not shown in child processes when stderr is piped. A solution is to pass the DEBUG_COLORS=1 environment variable to the child process. For example: worker = fork(WORKER_WRAP_PATH, [workerPath], { stdio: [ /* stdin: */ 0, /* stdout: */ 'pipe', /* stderr: */ 'pipe', 'ipc', ], env: Object.assign({}, process.env, { DEBUG_COLORS: 1 // without this settings, colors won't be shown }), }); worker.stderr.pipe(process.stderr, { end: false }); Authors TJ Holowaychuk Nathan Rajlich Andrew Rhyne Josh Junon Backers Support us with a monthly donation and help us continue our activities. [ Become a backer ] Sponsors Become a sponsor and get your logo on our README on Github with a link to your site. [ Become a sponsor ] License (The MIT License) Copyright (c) 2014-2017 TJ Holowaychuk <tj@vision-media.ca> Copyright (c) 2018-2021 Josh Junon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"debug"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#debug","text":"A tiny JavaScript debugging utility modelled after Node.js core's debugging technique. Works in Node.js and web browsers.","title":"debug"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#installation","text":"$ npm install debug","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#usage","text":"debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole. Example app.js : var debug = require('debug')('http') , http = require('http') , name = 'My App'; // fake app debug('booting %o', name); http.createServer(function(req, res){ debug(req.method + ' ' + req.url); res.end('hello\\n'); }).listen(3000, function(){ debug('listening'); }); // fake worker of some kind require('./worker'); Example worker.js : var a = require('debug')('worker:a') , b = require('debug')('worker:b'); function work() { a('doing lots of uninteresting work'); setTimeout(work, Math.random() * 1000); } work(); function workb() { b('doing some work'); setTimeout(workb, Math.random() * 2000); } workb(); The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#windows-command-prompt-notes","text":"","title":"Windows command prompt notes"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#cmd","text":"On Windows the environment variable is set using the set command. set DEBUG=*,-not_this Example: set DEBUG=* & node app.js","title":"CMD"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#powershell-vs-code-default","text":"PowerShell uses different syntax to set environment variables. $env:DEBUG = \"*,-not_this\" Example: $env:DEBUG='app';node app.js Then, run the program to be debugged as usual. npm script example: \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",","title":"PowerShell (VS Code default)"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#namespace-colors","text":"Every debug instance has a color generated for it based on its namespace name. This helps when visually parsing the debug output to identify which debug instance a debug line belongs to.","title":"Namespace Colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#nodejs","text":"In Node.js, colors are enabled when stderr is a TTY. You also should install the supports-color module alongside debug, otherwise debug will only use a small handful of basic colors.","title":"Node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#web-browser","text":"Colors are also enabled on \"Web Inspectors\" that understand the %c formatting option. These are WebKit web inspectors, Firefox ( since version 31 ) and the Firebug plugin for Firefox (any version).","title":"Web Browser"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#millisecond-diff","text":"When actively developing an application it can be useful to see when the time spent between one debug() call and the next. Suppose for example you invoke debug() before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls. When stdout is not a TTY, Date#toISOString() is used, making it more useful for logging the debug information as shown below:","title":"Millisecond diff"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#conventions","text":"If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable. You can then use it for normal output as well as debug output.","title":"Conventions"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#wildcards","text":"The * character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with DEBUG=connect:bodyParser,connect:compress,connect:session , you may simply do DEBUG=connect:* , or to run everything using this module simply use DEBUG=* . You can also exclude specific debuggers by prefixing them with a \"-\" character. For example, DEBUG=*,-connect:* would include all debuggers except those starting with \"connect:\".","title":"Wildcards"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#environment-variables","text":"When running through Node.js, you can set a few environment variables that will change the behavior of the debug logging: Name Purpose DEBUG Enables/disables specific debugging namespaces. DEBUG_HIDE_DATE Hide date from debug output (non-TTY). DEBUG_COLORS Whether or not to use colors in the debug output. DEBUG_DEPTH Object inspection depth. DEBUG_SHOW_HIDDEN Shows hidden properties on inspected objects. Note: The environment variables beginning with DEBUG_ end up being converted into an Options object that gets used with %o / %O formatters. See the Node.js documentation for util.inspect() for the complete list.","title":"Environment Variables"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#formatters","text":"Debug uses printf-style formatting. Below are the officially supported formatters: Formatter Representation %O Pretty-print an Object on multiple lines. %o Pretty-print an Object all on a single line. %s String. %d Number (both integer and float). %j JSON. Replaced with the string '[Circular]' if the argument contains circular references. %% Single percent sign ('%'). This does not consume an argument.","title":"Formatters"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#custom-formatters","text":"You can add custom formatters by extending the debug.formatters object. For example, if you wanted to add support for rendering a Buffer as hex with %h , you could do something like: const createDebug = require('debug') createDebug.formatters.h = (v) => { return v.toString('hex') } // \u2026elsewhere const debug = createDebug('foo') debug('this is hex: %h', new Buffer('hello world')) // foo this is hex: 68656c6c6f20776f726c6421 +0ms","title":"Custom formatters"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#browser-support","text":"You can build a browser-ready script using browserify , or just use the browserify-as-a-service build , if you don't want to build it yourself. Debug's enable state is currently persisted by localStorage . Consider the situation shown below where you have worker:a and worker:b , and wish to debug both. You can enable this using localStorage.debug : localStorage.debug = 'worker:*' And then refresh the page. a = debug('worker:a'); b = debug('worker:b'); setInterval(function(){ a('doing some work'); }, 1000); setInterval(function(){ b('doing some work'); }, 1200); In Chromium-based web browsers (e.g. Brave, Chrome, and Electron), the JavaScript console will\u2014by default\u2014only show messages logged by debug if the \"Verbose\" log level is enabled .","title":"Browser Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#output-streams","text":"By default debug will log to stderr, however this can be configured per-namespace by overriding the log method: Example stdout.js : var debug = require('debug'); var error = debug('app:error'); // by default stderr is used error('goes to stderr!'); var log = debug('app:log'); // set this namespace to log via console.log log.log = console.log.bind(console); // don't forget to bind to console! log('goes to stdout'); error('still goes to stderr!'); // set all output to go via console.info // overrides all per-namespace log settings debug.log = console.info.bind(console); error('now goes to stdout via console.info'); log('still goes to stdout, but via console.info now');","title":"Output streams"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#extend","text":"You can simply extend debugger const log = require('debug')('auth'); //creates new debug instance with extended namespace const logSign = log.extend('sign'); const logLogin = log.extend('login'); log('hello'); // auth hello logSign('hello'); //auth:sign hello logLogin('hello'); //auth:login hello","title":"Extend"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#set-dynamically","text":"You can also enable debug dynamically by calling the enable() method : let debug = require('debug'); console.log(1, debug.enabled('test')); debug.enable('test'); console.log(2, debug.enabled('test')); debug.disable(); console.log(3, debug.enabled('test')); print : 1 false 2 true 3 false Usage : enable(namespaces) namespaces can include modes separated by a colon and wildcards. Note that calling enable() completely overrides previously set DEBUG variable : $ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))' => false disable() Will disable all namespaces. The functions returns the namespaces currently enabled (and skipped). This can be useful if you want to disable debugging temporarily without knowing what was enabled to begin with. For example: let debug = require('debug'); debug.enable('foo:*,-foo:bar'); let namespaces = debug.disable(); debug.enable(namespaces); Note: There is no guarantee that the string will be identical to the initial enable string, but semantically they will be identical.","title":"Set dynamically"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#checking-whether-a-debug-target-is-enabled","text":"After you've created a debug instance, you can determine whether or not it is enabled by checking the enabled property: const debug = require('debug')('http'); if (debug.enabled) { // do stuff... } You can also manually toggle this property to force the debug instance to be enabled or disabled.","title":"Checking whether a debug target is enabled"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#usage-in-child-processes","text":"Due to the way debug detects if the output is a TTY or not, colors are not shown in child processes when stderr is piped. A solution is to pass the DEBUG_COLORS=1 environment variable to the child process. For example: worker = fork(WORKER_WRAP_PATH, [workerPath], { stdio: [ /* stdin: */ 0, /* stdout: */ 'pipe', /* stderr: */ 'pipe', 'ipc', ], env: Object.assign({}, process.env, { DEBUG_COLORS: 1 // without this settings, colors won't be shown }), }); worker.stderr.pipe(process.stderr, { end: false });","title":"Usage in child processes"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#authors","text":"TJ Holowaychuk Nathan Rajlich Andrew Rhyne Josh Junon","title":"Authors"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#backers","text":"Support us with a monthly donation and help us continue our activities. [ Become a backer ]","title":"Backers"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#sponsors","text":"Become a sponsor and get your logo on our README on Github with a link to your site. [ Become a sponsor ]","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/debug/#license","text":"(The MIT License) Copyright (c) 2014-2017 TJ Holowaychuk <tj@vision-media.ca> Copyright (c) 2018-2021 Josh Junon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/","text":"deep-is Node's assert.deepEqual() algorithm as a standalone module. Exactly like deep-equal except for the fact that deepEqual(NaN, NaN) === true . This module is around 5 times faster than wrapping assert.deepEqual() in a try/catch . example var equal = require('deep-is'); console.dir([ equal( { a : [ 2, 3 ], b : [ 4 ] }, { a : [ 2, 3 ], b : [ 4 ] } ), equal( { x : 5, y : [6] }, { x : 5, y : 6 } ) ]); methods var deepIs = require('deep-is') deepIs(a, b) Compare objects a and b , returning whether they are equal according to a recursive equality algorithm. install With npm do: npm install deep-is test With npm do: npm test license Copyright (c) 2012, 2013 Thorsten Lorenz thlorenz@gmx.de Copyright (c) 2012 James Halliday mail@substack.net Derived largely from node's assert module, which has the copyright statement: Copyright (c) 2009 Thomas Robinson <280north.com> Released under the MIT license, see LICENSE for details.","title":"deep-is"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#deep-is","text":"Node's assert.deepEqual() algorithm as a standalone module. Exactly like deep-equal except for the fact that deepEqual(NaN, NaN) === true . This module is around 5 times faster than wrapping assert.deepEqual() in a try/catch .","title":"deep-is"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#example","text":"var equal = require('deep-is'); console.dir([ equal( { a : [ 2, 3 ], b : [ 4 ] }, { a : [ 2, 3 ], b : [ 4 ] } ), equal( { x : 5, y : [6] }, { x : 5, y : 6 } ) ]);","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#methods","text":"var deepIs = require('deep-is')","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#deepisa-b","text":"Compare objects a and b , returning whether they are equal according to a recursive equality algorithm.","title":"deepIs(a, b)"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#install","text":"With npm do: npm install deep-is","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#test","text":"With npm do: npm test","title":"test"},{"location":"_Disciplina/Code/my-react-app/node_modules/deep-is/#license","text":"Copyright (c) 2012, 2013 Thorsten Lorenz thlorenz@gmx.de Copyright (c) 2012 James Halliday mail@substack.net Derived largely from node's assert module, which has the copyright statement: Copyright (c) 2009 Thomas Robinson <280north.com> Released under the MIT license, see LICENSE for details.","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/","text":"define-data-property Define a data property on an object. Will fall back to assignment in an engine without descriptors. The three non* argument can also be passed null , which will use the existing state if available. The loose argument will mean that if you attempt to set a non-normal data property, in an environment without descriptor support, it will fall back to normal assignment. Usage var defineDataProperty = require('define-data-property'); var assert = require('assert'); var obj = {}; defineDataProperty(obj, 'key', 'value'); defineDataProperty( obj, 'key2', 'value', true, // nonEnumerable, optional false, // nonWritable, optional true, // nonConfigurable, optional false // loose, optional ); assert.deepEqual( Object.getOwnPropertyDescriptors(obj), { key: { configurable: true, enumerable: true, value: 'value', writable: true, }, key2: { configurable: false, enumerable: false, value: 'value', writable: true, }, } );","title":"define-data-property Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/#define-data-property","text":"Define a data property on an object. Will fall back to assignment in an engine without descriptors. The three non* argument can also be passed null , which will use the existing state if available. The loose argument will mean that if you attempt to set a non-normal data property, in an environment without descriptor support, it will fall back to normal assignment.","title":"define-data-property"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/#usage","text":"var defineDataProperty = require('define-data-property'); var assert = require('assert'); var obj = {}; defineDataProperty(obj, 'key', 'value'); defineDataProperty( obj, 'key2', 'value', true, // nonEnumerable, optional false, // nonWritable, optional true, // nonConfigurable, optional false // loose, optional ); assert.deepEqual( Object.getOwnPropertyDescriptors(obj), { key: { configurable: true, enumerable: true, value: 'value', writable: true, }, key2: { configurable: false, enumerable: false, value: 'value', writable: true, }, } );","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.4 - 2024-02-13 Commits [Refactor] use es-define-property 90f2f4c [Dev Deps] update @types/object.getownpropertydescriptors cd929d9 v1.1.3 - 2024-02-12 Commits [types] hand-write d.ts instead of emitting it 0cbc988 [meta] simplify exports 690781e [Dev Deps] update hasown ; clean up DT packages 6cdfd1c [actions] cleanup 3142bc6 [meta] add funding 8474423 [Deps] update get-intrinsic 3e9be00 v1.1.2 - 2024-02-05 Commits [Dev Deps] update @types packages, object-inspect , tape , typescript df41bf8 [Dev Deps] update DT packages, aud , npmignore , tape , typescript [ fab0e4e`](https://github.com/ljharb/define-data-property/commit/fab0e4ec709ee02b79f42d6db3ee5f26e0a34b8a) [Dev Deps] use hasown instead of has aa51ef9 [Refactor] use es-errors , so things that only need those do not need get-intrinsic d89be50 [Deps] update has-property-descriptors 7af887c [Deps] update get-intrinsic bb8728e v1.1.1 - 2023-10-12 Commits [Tests] fix tests in ES3 engines 5c6920e [Dev Deps] update @types/es-value-fixtures , @types/for-each , @types/gopd , @types/has-property-descriptors , tape , typescript 7d82dfc [Fix] IE 8 has a broken Object.defineProperty 0672e1a [meta] emit types on prepack 73acb1f [Dev Deps] update tape , typescript 9489a77 v1.1.0 - 2023-09-13 Commits [New] add loose arg 155235a [New] allow null to be passed for the non* args 7d2fa5f v1.0.1 - 2023-09-12 Commits [meta] add TS types 43d763c [Dev Deps] update @types/tape , typescript f444985 [meta] add safe-publish-latest , 172bb10 v1.0.0 - 2023-09-12 Commits Initial implementation, tests, readme 5b43d6b Initial commit 35e577a npm init 82a0a04 Only apps should have lockfiles 96df244 [meta] use npmignore to autogenerate an npmignore file a87ff18","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v114-2024-02-13","text":"","title":"v1.1.4 - 2024-02-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits","text":"[Refactor] use es-define-property 90f2f4c [Dev Deps] update @types/object.getownpropertydescriptors cd929d9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v113-2024-02-12","text":"","title":"v1.1.3 - 2024-02-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits_1","text":"[types] hand-write d.ts instead of emitting it 0cbc988 [meta] simplify exports 690781e [Dev Deps] update hasown ; clean up DT packages 6cdfd1c [actions] cleanup 3142bc6 [meta] add funding 8474423 [Deps] update get-intrinsic 3e9be00","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v112-2024-02-05","text":"","title":"v1.1.2 - 2024-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits_2","text":"[Dev Deps] update @types packages, object-inspect , tape , typescript df41bf8 [Dev Deps] update DT packages, aud , npmignore , tape , typescript [ fab0e4e`](https://github.com/ljharb/define-data-property/commit/fab0e4ec709ee02b79f42d6db3ee5f26e0a34b8a) [Dev Deps] use hasown instead of has aa51ef9 [Refactor] use es-errors , so things that only need those do not need get-intrinsic d89be50 [Deps] update has-property-descriptors 7af887c [Deps] update get-intrinsic bb8728e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v111-2023-10-12","text":"","title":"v1.1.1 - 2023-10-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits_3","text":"[Tests] fix tests in ES3 engines 5c6920e [Dev Deps] update @types/es-value-fixtures , @types/for-each , @types/gopd , @types/has-property-descriptors , tape , typescript 7d82dfc [Fix] IE 8 has a broken Object.defineProperty 0672e1a [meta] emit types on prepack 73acb1f [Dev Deps] update tape , typescript 9489a77","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v110-2023-09-13","text":"","title":"v1.1.0 - 2023-09-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits_4","text":"[New] add loose arg 155235a [New] allow null to be passed for the non* args 7d2fa5f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v101-2023-09-12","text":"","title":"v1.0.1 - 2023-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits_5","text":"[meta] add TS types 43d763c [Dev Deps] update @types/tape , typescript f444985 [meta] add safe-publish-latest , 172bb10","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#v100-2023-09-12","text":"","title":"v1.0.0 - 2023-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-data-property/CHANGELOG/#commits_6","text":"Initial implementation, tests, readme 5b43d6b Initial commit 35e577a npm init 82a0a04 Only apps should have lockfiles 96df244 [meta] use npmignore to autogenerate an npmignore file a87ff18","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/","text":"define-properties Define multiple non-enumerable properties at once. Uses Object.defineProperty when available; falls back to standard assignment in older engines. Existing properties are not overridden. Accepts a map of property names to a predicate that, when true, force-overrides. Example var define = require('define-properties'); var assert = require('assert'); var obj = define({ a: 1, b: 2 }, { a: 10, b: 20, c: 30 }); assert(obj.a === 1); assert(obj.b === 2); assert(obj.c === 30); if (define.supportsDescriptors) { assert.deepEqual(Object.keys(obj), ['a', 'b']); assert.deepEqual(Object.getOwnPropertyDescriptor(obj, 'c'), { configurable: true, enumerable: false, value: 30, writable: false }); } Then, with predicates: var define = require('define-properties'); var assert = require('assert'); var obj = define({ a: 1, b: 2, c: 3 }, { a: 10, b: 20, c: 30 }, { a: function () { return false; }, b: function () { return true; } }); assert(obj.a === 1); assert(obj.b === 20); assert(obj.c === 3); if (define.supportsDescriptors) { assert.deepEqual(Object.keys(obj), ['a', 'c']); assert.deepEqual(Object.getOwnPropertyDescriptor(obj, 'b'), { configurable: true, enumerable: false, value: 20, writable: false }); } Tests Simply clone the repo, npm install , and run npm test","title":"define-properties Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/#define-properties","text":"Define multiple non-enumerable properties at once. Uses Object.defineProperty when available; falls back to standard assignment in older engines. Existing properties are not overridden. Accepts a map of property names to a predicate that, when true, force-overrides.","title":"define-properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/#example","text":"var define = require('define-properties'); var assert = require('assert'); var obj = define({ a: 1, b: 2 }, { a: 10, b: 20, c: 30 }); assert(obj.a === 1); assert(obj.b === 2); assert(obj.c === 30); if (define.supportsDescriptors) { assert.deepEqual(Object.keys(obj), ['a', 'b']); assert.deepEqual(Object.getOwnPropertyDescriptor(obj, 'c'), { configurable: true, enumerable: false, value: 30, writable: false }); } Then, with predicates: var define = require('define-properties'); var assert = require('assert'); var obj = define({ a: 1, b: 2, c: 3 }, { a: 10, b: 20, c: 30 }, { a: function () { return false; }, b: function () { return true; } }); assert(obj.a === 1); assert(obj.b === 20); assert(obj.c === 3); if (define.supportsDescriptors) { assert.deepEqual(Object.keys(obj), ['a', 'c']); assert.deepEqual(Object.getOwnPropertyDescriptor(obj, 'b'), { configurable: true, enumerable: false, value: 20, writable: false }); }","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.1 - 2023-09-12 Commits [Refactor] use define-data-property e7782a7 [actions] use reusable rebase action cd249c3 [Dev Deps] update @ljharb/eslint-config , aud , tape 8205f97 v1.2.0 - 2023-02-10 Commits [New] if the predicate is boolean true , it compares the existing value with === as the predicate d8dd6fc [meta] add auto-changelog 7ebe2b0 [meta] use npmignore to autogenerate an npmignore file 647478a [Dev Deps] update @ljharb/eslint-config , aud , tape e620d70 [Dev Deps] update aud , tape f1e5072 [actions] update checkout action 628b3af 1.1.4 / 2022-04-14 [Refactor] use has-property-descriptors [readme] add github actions/codecov badges [Docs] fix header parsing; remove testling [Deps] update object-keys [meta] use prepublishOnly script for npm 7+ [meta] add funding field; create FUNDING.yml [actions] add \"Allow Edits\" workflow; automatic rebasing / merge commit blocking [actions] reuse common workflows [actions] update codecov uploader [actions] use node/install instead of node/run ; use codecov action [Tests] migrate tests to Github Actions [Tests] run nyc on all tests; use tape runner [Tests] use shared travis-ci config [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape ; add aud , safe-publish-latest 1.1.3 / 2018-08-14 [Refactor] use a for loop instead of foreach to make for smaller bundle sizes [Robustness] cache Array.prototype.concat and Object.defineProperty [Deps] update object-keys [Dev Deps] update eslint , @ljharb/eslint-config , nsp , tape , jscs ; remove unused eccheck script + dep [Tests] use pretest/posttest for linting/security [Tests] fix npm upgrades on older nodes 1.1.2 / 2015-10-14 [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Deps] Update object-keys [Dev Deps] update jscs , tape , eslint , @ljharb/eslint-config , nsp [Tests] up to io.js v3.3 , node v4.2 1.1.1 / 2015-07-21 [Deps] Update object-keys [Dev Deps] Update tape , eslint [Tests] Test on io.js v2.4 1.1.0 / 2015-07-01 [New] Add support for symbol-valued properties. [Dev Deps] Update nsp , eslint [Tests] Test up to io.js v2.3 1.0.3 / 2015-05-30 Using a more reliable check for supported property descriptors. 1.0.2 / 2015-05-23 Test up to io.js v2.0 Update tape , jscs , nsp , eslint , object-keys , editorconfig-tools , covert 1.0.1 / 2015-01-06 Update object-keys to fix ES3 support 1.0.0 / 2015-01-04 v1.0.0","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#v121-2023-09-12","text":"","title":"v1.2.1 - 2023-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#commits","text":"[Refactor] use define-data-property e7782a7 [actions] use reusable rebase action cd249c3 [Dev Deps] update @ljharb/eslint-config , aud , tape 8205f97","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#v120-2023-02-10","text":"","title":"v1.2.0 - 2023-02-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#commits_1","text":"[New] if the predicate is boolean true , it compares the existing value with === as the predicate d8dd6fc [meta] add auto-changelog 7ebe2b0 [meta] use npmignore to autogenerate an npmignore file 647478a [Dev Deps] update @ljharb/eslint-config , aud , tape e620d70 [Dev Deps] update aud , tape f1e5072 [actions] update checkout action 628b3af","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#114-2022-04-14","text":"[Refactor] use has-property-descriptors [readme] add github actions/codecov badges [Docs] fix header parsing; remove testling [Deps] update object-keys [meta] use prepublishOnly script for npm 7+ [meta] add funding field; create FUNDING.yml [actions] add \"Allow Edits\" workflow; automatic rebasing / merge commit blocking [actions] reuse common workflows [actions] update codecov uploader [actions] use node/install instead of node/run ; use codecov action [Tests] migrate tests to Github Actions [Tests] run nyc on all tests; use tape runner [Tests] use shared travis-ci config [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape ; add aud , safe-publish-latest","title":"1.1.4 / 2022-04-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#113-2018-08-14","text":"[Refactor] use a for loop instead of foreach to make for smaller bundle sizes [Robustness] cache Array.prototype.concat and Object.defineProperty [Deps] update object-keys [Dev Deps] update eslint , @ljharb/eslint-config , nsp , tape , jscs ; remove unused eccheck script + dep [Tests] use pretest/posttest for linting/security [Tests] fix npm upgrades on older nodes","title":"1.1.3 / 2018-08-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#112-2015-10-14","text":"[Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Deps] Update object-keys [Dev Deps] update jscs , tape , eslint , @ljharb/eslint-config , nsp [Tests] up to io.js v3.3 , node v4.2","title":"1.1.2 / 2015-10-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#111-2015-07-21","text":"[Deps] Update object-keys [Dev Deps] Update tape , eslint [Tests] Test on io.js v2.4","title":"1.1.1 / 2015-07-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#110-2015-07-01","text":"[New] Add support for symbol-valued properties. [Dev Deps] Update nsp , eslint [Tests] Test up to io.js v2.3","title":"1.1.0 / 2015-07-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#103-2015-05-30","text":"Using a more reliable check for supported property descriptors.","title":"1.0.3 / 2015-05-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#102-2015-05-23","text":"Test up to io.js v2.0 Update tape , jscs , nsp , eslint , object-keys , editorconfig-tools , covert","title":"1.0.2 / 2015-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#101-2015-01-06","text":"Update object-keys to fix ES3 support","title":"1.0.1 / 2015-01-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/define-properties/CHANGELOG/#100-2015-01-04","text":"v1.0.0","title":"1.0.0 / 2015-01-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/","text":"Doctrine Doctrine is a JSDoc parser that parses documentation comments from JavaScript (you need to pass in the comment, not a whole JavaScript file). Installation You can install Doctrine using npm : $ npm install doctrine --save-dev Doctrine can also be used in web browsers using Browserify . Usage Require doctrine inside of your JavaScript: var doctrine = require(\"doctrine\"); parse() The primary method is parse() , which accepts two arguments: the JSDoc comment to parse and an optional options object. The available options are: unwrap - set to true to delete the leading /** , any * that begins a line, and the trailing */ from the source text. Default: false . tags - an array of tags to return. When specified, Doctrine returns only tags in this array. For example, if tags is [\"param\"] , then only @param tags will be returned. Default: null . recoverable - set to true to keep parsing even when syntax errors occur. Default: false . sloppy - set to true to allow optional parameters to be specified in brackets ( @param {string} [foo] ). Default: false . lineNumbers - set to true to add lineNumber to each node, specifying the line on which the node is found in the source. Default: false . range - set to true to add range to each node, specifying the start and end index of the node in the original comment. Default: false . Here's a simple example: var ast = doctrine.parse( [ \"/**\", \" * This function comment is parsed by doctrine\", \" * @param {{ok:String}} userName\", \"*/\" ].join('\\n'), { unwrap: true }); This example returns the following AST: { \"description\": \"This function comment is parsed by doctrine\", \"tags\": [ { \"title\": \"param\", \"description\": null, \"type\": { \"type\": \"RecordType\", \"fields\": [ { \"type\": \"FieldType\", \"key\": \"ok\", \"value\": { \"type\": \"NameExpression\", \"name\": \"String\" } } ] }, \"name\": \"userName\" } ] } See the demo page more detail. Team These folks keep the project moving and are resources for help: Nicholas C. Zakas ( @nzakas ) - project lead Yusuke Suzuki ( @constellation ) - reviewer Contributing Issues and pull requests will be triaged and responded to as quickly as possible. We operate under the ESLint Contributor Guidelines , so please be sure to read them before contributing. If you're not sure where to dig in, check out the issues . Frequently Asked Questions Can I pass a whole JavaScript file to Doctrine? No. Doctrine can only parse JSDoc comments, so you'll need to pass just the JSDoc comment to Doctrine in order to work. License doctrine Copyright JS Foundation and other contributors, https://js.foundation Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. esprima some of functions is derived from esprima Copyright (C) 2012, 2011 Ariya Hidayat (twitter: @ariyahidayat ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. closure-compiler some of extensions is derived from closure-compiler Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ Where to ask for help? Join our Chatroom","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#doctrine","text":"Doctrine is a JSDoc parser that parses documentation comments from JavaScript (you need to pass in the comment, not a whole JavaScript file).","title":"Doctrine"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#installation","text":"You can install Doctrine using npm : $ npm install doctrine --save-dev Doctrine can also be used in web browsers using Browserify .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#usage","text":"Require doctrine inside of your JavaScript: var doctrine = require(\"doctrine\");","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#parse","text":"The primary method is parse() , which accepts two arguments: the JSDoc comment to parse and an optional options object. The available options are: unwrap - set to true to delete the leading /** , any * that begins a line, and the trailing */ from the source text. Default: false . tags - an array of tags to return. When specified, Doctrine returns only tags in this array. For example, if tags is [\"param\"] , then only @param tags will be returned. Default: null . recoverable - set to true to keep parsing even when syntax errors occur. Default: false . sloppy - set to true to allow optional parameters to be specified in brackets ( @param {string} [foo] ). Default: false . lineNumbers - set to true to add lineNumber to each node, specifying the line on which the node is found in the source. Default: false . range - set to true to add range to each node, specifying the start and end index of the node in the original comment. Default: false . Here's a simple example: var ast = doctrine.parse( [ \"/**\", \" * This function comment is parsed by doctrine\", \" * @param {{ok:String}} userName\", \"*/\" ].join('\\n'), { unwrap: true }); This example returns the following AST: { \"description\": \"This function comment is parsed by doctrine\", \"tags\": [ { \"title\": \"param\", \"description\": null, \"type\": { \"type\": \"RecordType\", \"fields\": [ { \"type\": \"FieldType\", \"key\": \"ok\", \"value\": { \"type\": \"NameExpression\", \"name\": \"String\" } } ] }, \"name\": \"userName\" } ] } See the demo page more detail.","title":"parse()"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#team","text":"These folks keep the project moving and are resources for help: Nicholas C. Zakas ( @nzakas ) - project lead Yusuke Suzuki ( @constellation ) - reviewer","title":"Team"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#contributing","text":"Issues and pull requests will be triaged and responded to as quickly as possible. We operate under the ESLint Contributor Guidelines , so please be sure to read them before contributing. If you're not sure where to dig in, check out the issues .","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#can-i-pass-a-whole-javascript-file-to-doctrine","text":"No. Doctrine can only parse JSDoc comments, so you'll need to pass just the JSDoc comment to Doctrine in order to work.","title":"Can I pass a whole JavaScript file to Doctrine?"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#license","text":"","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#doctrine_1","text":"Copyright JS Foundation and other contributors, https://js.foundation Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"doctrine"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#esprima","text":"some of functions is derived from esprima Copyright (C) 2012, 2011 Ariya Hidayat (twitter: @ariyahidayat ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"esprima"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#closure-compiler","text":"some of extensions is derived from closure-compiler Apache License Version 2.0, January 2004 http://www.apache.org/licenses/","title":"closure-compiler"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/#where-to-ask-for-help","text":"Join our Chatroom","title":"Where to ask for help?"},{"location":"_Disciplina/Code/my-react-app/node_modules/doctrine/CHANGELOG/","text":"v2.1.0 - January 6, 2018 827f314 Update: support node ranges (fixes #89) (#190) (Teddy Katz) v2.0.2 - November 25, 2017 5049ee3 Fix: Remove redundant LICENSE/README names from files (#203) (Kevin Partington) v2.0.1 - November 10, 2017 009f33d Fix: Making sure union type stringification respects compact flag (#199) (Mitermayer Reis) 19da935 Use native String.prototype.trim instead of a custom implementation. (#201) (Rouven We\u00dfling) e3a011b chore: add mocha.opts to restore custom mocha config (Jason Kurian) d888200 chore: adds nyc and a newer version of mocha to accurately report coverage (Jason Kurian) 6b210a8 fix: support type expression for @this tag (fixes #181) (#182) (Fr\u00e9d\u00e9ric Junod) 1c4a4c7 fix: Allow array indexes in names (#193) (Tom MacWright) 9aed54d Fix incorrect behavior when arrow functions are used as default values (#189) (Gaurab Paul) 9efb6ca Upgrade: Use Array.isArray instead of isarray package (#195) (medanat) v2.0.0 - November 15, 2016 7d7c5f1 Breaking: Re-license to Apache 2 (fixes #176) (#178) (Nicholas C. Zakas) 5496132 Docs: Update license copyright (Nicholas C. Zakas) v1.5.0 - October 13, 2016 e33c6bb Update: Add support for BooleanLiteralType (#173) (Erik Arvidsson) v1.4.0 - September 13, 2016 d7426e5 Update: add ability to parse optional properties in typedefs (refs #5) (#174) (ikokostya) v1.3.0 - August 22, 2016 12c7ad9 Update: Add support for numeric and string literal types (fixes #156) (#172) (Andrew Walter) v1.2.3 - August 16, 2016 b96a884 Build: Add CI release script (Nicholas C. Zakas) 8d9b3c7 Upgrade: Upgrade esutils to v2.0.2 (fixes #170) (#171) (Emeegeemee) v1.2.2 - May 19, 2016 ebe0b08 Fix: Support case insensitive tags (fixes #163) (#164) (alberto) 8e6d81e Chore: Remove copyright and license from headers (Nicholas C. Zakas) 79035c6 Chore: Include jQuery Foundation copyright (Nicholas C. Zakas) 06910a7 Fix: Preserve whitespace in default param string values (fixes #157) (Kai Cataldo) v1.2.1 - March 29, 2016 1f54014 Fix: allow hyphens in names (fixes #116) (Kai Cataldo) bbee469 Docs: Add issue template (Nicholas C. Zakas) v1.2.0 - February 19, 2016 18136c5 Build: Cleanup build system (Nicholas C. Zakas) b082f85 Update: Add support for slash in namepaths (fixes #100) (Ryan Duffy) def53a2 Docs: Fix typo in option lineNumbers (Daniel Tschinder) e2cbbc5 Update: Bump isarray to v1.0.0 (Shinnosuke Watanabe) ae07aa8 Fix: Allow whitespace in optional param with default value (fixes #141) (chris) v1.1.0 - January 6, 2016 Build: Switch to Makefile.js (Nicholas C. Zakas) New: support name expression for @this tag (fixes #143) (Tim Schaub) Build: Update ESLint settings (Nicholas C. Zakas) v1.0.0 - December 21, 2015 New: parse caption tags in examples into separate property. (fixes #131) (Tom MacWright) v0.7.2 - November 27, 2015 Fix: Line numbers for some tags (fixes #138) Fixing issue where input was not consumed via advance() but was skipped when parsing tags resulting in sometimes incorrect reported lineNumber. (TEHEK) Build: Add missing linefix package (Nicholas C. Zakas) v0.7.1 - November 13, 2015 Update: Begin switch to Makefile.js (Nicholas C. Zakas) Fix: permit return tag without type (fixes #136) (Tom MacWright) Fix: package.json homepage field (Bogdan Chadkin) Fix: Parse array default syntax. Fixes #133 (Tom MacWright) Fix: Last tag always has \\n in the description (fixes #87) (Burak Yigit Kaya) Docs: Add changelog (Nicholas C. Zakas) v0.7.0 - September 21, 2015 Docs: Update README with new info (fixes #127) (Nicholas C. Zakas) Fix: Parsing fix for param with arrays and properties (fixes #111) (Gyandeep Singh) Build: Add travis build (fixes #123) (Gyandeep Singh) Fix: Parsing of parameter name without a type (fixes #120) (Gyandeep Singh) New: added preserveWhitespace option (Aleks Totic) New: Add \"files\" entry to only deploy select files (Rob Loach) New: Add support and tests for typedefs. Refs #5 (Tom MacWright)","title":"CHANGELOG"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/","text":"Made by @kilianvalkhof Other projects: \ud83d\udcbb Polypane - Develop responsive websites and apps twice as fast on multiple screens at once \ud83d\udd8c\ufe0f Superposition - Kickstart your design system by extracting design tokens from your website \ud83d\uddd2\ufe0f FromScratch - A smart but simple autosaving scratchpad Electron-to-Chromium This repository provides a mapping of Electron versions to the Chromium version that it uses. This package is used in Browserslist , so you can use e.g. electron >= 1.4 in Autoprefixer , Stylelint , babel-preset-env and eslint-plugin-compat . Supported by: Install Install using npm install electron-to-chromium . Usage To include Electron-to-Chromium, require it: var e2c = require('electron-to-chromium'); Properties The Electron-to-Chromium object has 4 properties to use: versions An object of key-value pairs with a major Electron version as the key, and the corresponding major Chromium version as the value. var versions = e2c.versions; console.log(versions['1.4']); // returns \"53\" fullVersions An object of key-value pairs with a Electron version as the key, and the corresponding full Chromium version as the value. var versions = e2c.fullVersions; console.log(versions['1.4.11']); // returns \"53.0.2785.143\" chromiumVersions An object of key-value pairs with a major Chromium version as the key, and the corresponding major Electron version as the value. var versions = e2c.chromiumVersions; console.log(versions['54']); // returns \"1.4\" fullChromiumVersions An object of key-value pairs with a Chromium version as the key, and an array of the corresponding major Electron versions as the value. var versions = e2c.fullChromiumVersions; console.log(versions['54.0.2840.101']); // returns [\"1.5.1\", \"1.5.0\"] Functions electronToChromium(query) Arguments: * Query: string or number, required. A major or full Electron version. A function that returns the corresponding Chromium version for a given Electron function. Returns a string. If you provide it with a major Electron version, it will return a major Chromium version: var chromeVersion = e2c.electronToChromium('1.4'); // chromeVersion is \"53\" If you provide it with a full Electron version, it will return the full Chromium version. var chromeVersion = e2c.electronToChromium('1.4.11'); // chromeVersion is \"53.0.2785.143\" If a query does not match a Chromium version, it will return undefined . var chromeVersion = e2c.electronToChromium('9000'); // chromeVersion is undefined chromiumToElectron(query) Arguments: * Query: string or number, required. A major or full Chromium version. Returns a string with the corresponding Electron version for a given Chromium query. If you provide it with a major Chromium version, it will return a major Electron version: var electronVersion = e2c.chromiumToElectron('54'); // electronVersion is \"1.4\" If you provide it with a full Chrome version, it will return an array of full Electron versions. var electronVersions = e2c.chromiumToElectron('56.0.2924.87'); // electronVersions is [\"1.6.3\", \"1.6.2\", \"1.6.1\", \"1.6.0\"] If a query does not match an Electron version, it will return undefined . var electronVersion = e2c.chromiumToElectron('10'); // electronVersion is undefined electronToBrowserList(query) DEPRECATED Arguments: * Query: string or number, required. A major Electron version. Deprecated : Browserlist already includes electron-to-chromium. A function that returns a Browserslist query that matches the given major Electron version. Returns a string. If you provide it with a major Electron version, it will return a Browserlist query string that matches the Chromium capabilities: var query = e2c.electronToBrowserList('1.4'); // query is \"Chrome >= 53\" If a query does not match a Chromium version, it will return undefined . var query = e2c.electronToBrowserList('9000'); // query is undefined Importing just versions, fullVersions, chromiumVersions and fullChromiumVersions All lists can be imported on their own, if file size is a concern. versions var versions = require('electron-to-chromium/versions'); fullVersions var fullVersions = require('electron-to-chromium/full-versions'); chromiumVersions var chromiumVersions = require('electron-to-chromium/chromium-versions'); fullChromiumVersions var fullChromiumVersions = require('electron-to-chromium/full-chromium-versions'); Updating This package will be updated with each new Electron release. To update the list, run npm run build.js . Requires internet access as it downloads from the canonical list of Electron versions. To verify correct behaviour, run npm test . License","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#made-by-kilianvalkhof","text":"","title":"Made by @kilianvalkhof"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#other-projects","text":"\ud83d\udcbb Polypane - Develop responsive websites and apps twice as fast on multiple screens at once \ud83d\udd8c\ufe0f Superposition - Kickstart your design system by extracting design tokens from your website \ud83d\uddd2\ufe0f FromScratch - A smart but simple autosaving scratchpad","title":"Other projects:"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#electron-to-chromium","text":"This repository provides a mapping of Electron versions to the Chromium version that it uses. This package is used in Browserslist , so you can use e.g. electron >= 1.4 in Autoprefixer , Stylelint , babel-preset-env and eslint-plugin-compat . Supported by:","title":"Electron-to-Chromium"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#install","text":"Install using npm install electron-to-chromium .","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#usage","text":"To include Electron-to-Chromium, require it: var e2c = require('electron-to-chromium');","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#properties","text":"The Electron-to-Chromium object has 4 properties to use:","title":"Properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#versions","text":"An object of key-value pairs with a major Electron version as the key, and the corresponding major Chromium version as the value. var versions = e2c.versions; console.log(versions['1.4']); // returns \"53\"","title":"versions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#fullversions","text":"An object of key-value pairs with a Electron version as the key, and the corresponding full Chromium version as the value. var versions = e2c.fullVersions; console.log(versions['1.4.11']); // returns \"53.0.2785.143\"","title":"fullVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#chromiumversions","text":"An object of key-value pairs with a major Chromium version as the key, and the corresponding major Electron version as the value. var versions = e2c.chromiumVersions; console.log(versions['54']); // returns \"1.4\"","title":"chromiumVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#fullchromiumversions","text":"An object of key-value pairs with a Chromium version as the key, and an array of the corresponding major Electron versions as the value. var versions = e2c.fullChromiumVersions; console.log(versions['54.0.2840.101']); // returns [\"1.5.1\", \"1.5.0\"]","title":"fullChromiumVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#functions","text":"","title":"Functions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#electrontochromiumquery","text":"Arguments: * Query: string or number, required. A major or full Electron version. A function that returns the corresponding Chromium version for a given Electron function. Returns a string. If you provide it with a major Electron version, it will return a major Chromium version: var chromeVersion = e2c.electronToChromium('1.4'); // chromeVersion is \"53\" If you provide it with a full Electron version, it will return the full Chromium version. var chromeVersion = e2c.electronToChromium('1.4.11'); // chromeVersion is \"53.0.2785.143\" If a query does not match a Chromium version, it will return undefined . var chromeVersion = e2c.electronToChromium('9000'); // chromeVersion is undefined","title":"electronToChromium(query)"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#chromiumtoelectronquery","text":"Arguments: * Query: string or number, required. A major or full Chromium version. Returns a string with the corresponding Electron version for a given Chromium query. If you provide it with a major Chromium version, it will return a major Electron version: var electronVersion = e2c.chromiumToElectron('54'); // electronVersion is \"1.4\" If you provide it with a full Chrome version, it will return an array of full Electron versions. var electronVersions = e2c.chromiumToElectron('56.0.2924.87'); // electronVersions is [\"1.6.3\", \"1.6.2\", \"1.6.1\", \"1.6.0\"] If a query does not match an Electron version, it will return undefined . var electronVersion = e2c.chromiumToElectron('10'); // electronVersion is undefined","title":"chromiumToElectron(query)"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#electrontobrowserlistquery-deprecated","text":"Arguments: * Query: string or number, required. A major Electron version. Deprecated : Browserlist already includes electron-to-chromium. A function that returns a Browserslist query that matches the given major Electron version. Returns a string. If you provide it with a major Electron version, it will return a Browserlist query string that matches the Chromium capabilities: var query = e2c.electronToBrowserList('1.4'); // query is \"Chrome >= 53\" If a query does not match a Chromium version, it will return undefined . var query = e2c.electronToBrowserList('9000'); // query is undefined","title":"electronToBrowserList(query) DEPRECATED"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#importing-just-versions-fullversions-chromiumversions-and-fullchromiumversions","text":"All lists can be imported on their own, if file size is a concern.","title":"Importing just versions, fullVersions, chromiumVersions and fullChromiumVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#versions_1","text":"var versions = require('electron-to-chromium/versions');","title":"versions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#fullversions_1","text":"var fullVersions = require('electron-to-chromium/full-versions');","title":"fullVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#chromiumversions_1","text":"var chromiumVersions = require('electron-to-chromium/chromium-versions');","title":"chromiumVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#fullchromiumversions_1","text":"var fullChromiumVersions = require('electron-to-chromium/full-chromium-versions');","title":"fullChromiumVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#updating","text":"This package will be updated with each new Electron release. To update the list, run npm run build.js . Requires internet access as it downloads from the canonical list of Electron versions. To verify correct behaviour, run npm test .","title":"Updating"},{"location":"_Disciplina/Code/my-react-app/node_modules/electron-to-chromium/#license","text":"","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/","text":"es-abstract ECMAScript spec abstract operations. Every operation is available by edition/year and by name - for example, es-abstract/2020/Call gives you the Call operation from ES2020, es-abstract/5/Type gives you the Type operation from ES5. All abstract operations are also available under an es5 / es2015 / es2016 / es2017 / es2018 / es2019 / es2020 / es2021 entry point, and as a property on the main export, but using deep imports is highly encouraged for bundle size and performance reasons. Non-deep entry points will be removed in the next semver-major release. Example var ES = require('es-abstract'); var assert = require('assert'); assert(ES.isCallable(function () {})); assert(!ES.isCallable(/a/g)); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-abstract Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/#es-abstract","text":"ECMAScript spec abstract operations. Every operation is available by edition/year and by name - for example, es-abstract/2020/Call gives you the Call operation from ES2020, es-abstract/5/Type gives you the Type operation from ES5. All abstract operations are also available under an es5 / es2015 / es2016 / es2017 / es2018 / es2019 / es2020 / es2021 entry point, and as a property on the main export, but using deep imports is highly encouraged for bundle size and performance reasons. Non-deep entry points will be removed in the next semver-major release.","title":"es-abstract"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/#example","text":"var ES = require('es-abstract'); var assert = require('assert'); assert(ES.isCallable(function () {})); assert(!ES.isCallable(/a/g));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/","text":"1.23.3 / 2024-03-29 [Fix] ES2024 : StringPad , StringPaddingBuiltinsImpl : prefer uppercase spec enums [Fix] helpers/bytesAsInteger : avoid a crash in node 10.4 - 10.8 [Fix] ES5 : CheckObjectCoercible : restore optMessage optional arg [Refactor] ES2022 +: update TimeString to use ToZeroPaddedDecimalString [Robustness] use cached copies of builtins [Deps] update string.prototype.trimstart , typed-array-length [Dev Deps] update array.from , array.prototype.filter , array.prototype.indexof , object.fromentries , safe-bigint 1.23.2 / 2024-03-17 [Fix] records/regexp-record : add optional [[UnicodeSets]] boolean field [Fix] ES2024 +: AddValueToKeyedGroup : avoid adding matched values twice [Fix] ES5 : CheckObjectCoercible : use the right function name [Fix] ES2024 +: AddEntriesFromIterable , GetIterator , GroupBy : properly capitalize spec enums [Deps] update string.prototype.trim , string.prototype.trimend [Tests] increase coverage 1.23.1 / 2024-03-16 [Refactor] use es-object-atoms [Deps] update hasown , which-typed-array , data-view-byte-length , safe-array-concat [Dev Deps] update diff 1.23.0 / 2024-03-04 [New] add ES2024 [New] ES2015 +: add InternalizeJSONProperty [New] ES2015 +: add IntegerIndexedElement{Get,Set} [New] ES2018 +: add TimeZoneString [New] ES2022 +: add DefineMethodProperty [New] ES2023 : add DefaultTimeZone [Fix] ES2023 +: SetTypedArrayFrom{TypedArray,ArrayLike} : match engine reality [Fix] ES2024 +: GetViewByteLength , IsViewOutOfBounds : support engines with only own DV properties [Tests] use safe-bigint 1.22.5 / 2024-02-28 [Fix] ES2015 +: DetachArrayBuffer : node v21.0.0+ structuredClone throws with an already-detached ArrayBuffer [Fix] helpers/assertRecord : partial revert of 87c340d2; unintentional breaking change [patch] records: fix indentation, improve object checks [Refactor] extract TA tables to separate files [meta] extract \"list spackled files\" to separate run-script [Deps] update available-typed-arrays , es-set-tostringtag , has-proto , is-negative-zero , is-shared-array-buffer , typed-array-buffer , typed-array-byte-length , typed-array-byte-offset , typed-array-length [Dev Deps] update available-regexp-flags , tape [Dev Deps] pin jackspeak and glob , since v2.1.2+ and v10.3.8+ respectively depend on npm aliases, which kill the install process in npm < 6 [Tests] use define-{accessor,data}-property [Tests] fix some test cases [Tests] use safeBigInt for Z() pattern to handle node 10.4 - 10.8 1.22.4 / 2024-02-13 [Fix] ES2017 +: IsDetachedBuffer : properly allow SABs [Fix] ES2022 +: ToBigInt : properly throw on an unparseable string [Fix] ES2015 +: ValidateTypedArray : proper detachment check and return value [Fix] ES2022 +: GetSubstitution : match updated semantics [Refactor] prefer typeof over Type() , except for Object, where possible [Refactor] use es-errors instead of get-intrinsic where possible [Refactor] use es-define-property [Refactor] records: extract predicates to individual files [Refactor] ES2015 +: Canonicalize , WordCharacters : use explicit .json extension for imports [Deps] update array-buffer-byte-length , arraybuffer.prototype.slice , available-typed-arrays , call-bind , es-set-tostringtag , get-intrinsic , get-symbol-description , has-proper ty-descriptors , has-property-descriptors , hasown , internal-slot , is-array-buffer , is-typed-array , object.assign , regexp.prototype.flags , safe-array-concat , safe-regex-test , typed-array-buffer , which-typed-array [eslint] remove unused overrides [Tests] increase/fix coverage [Dev Deps] update aud , npmignore , mock-property , tape 1.22.3 / 2023-10-20 [Fix] ES2015 +: GetSubstitution : accept undefined instead of a hole [Refactor] use hasown instead of has [Deps] update call-bind , get-intrinsic , object-inspect , which-typed-array [Dev Deps] update function-bind , is-core-module , mock-property , tape 1.22.2 / 2023-09-14 [Fix] ES2015 +: NewPromiseCapability : use AOs from the current year, not 2022 [Refactor] ES2021 +: SetTypedArrayFromArrayLike : use IsBigIntElementType [Refactor] properly name helpers/typedArrayConstructors [Refactor] simplify helpers [Deps] update arraybuffer.prototype.slice , function.prototype.name , is-typed-array , regexp.prototype.flags , safe-array-concat , string.prototype.trim , string.prototype.trimend , string.prototype.trimstart , which-typed-array [actions] update actions [Tests] run SES tests on more node versions [Dev Deps] update @unicode/unicode-15.0.0 , array.from , array.prototype.filter , array.prototype.flatmap , array.prototype.indexof , is-core-module , object.fromentries , ses , tape 1.22.1 / 2023-07-15 [Deps] add missing safe-array-concat dep 1.22.0 / 2023-07-15 [New] add ES2023 [New] ES2021+ : add SetTypedArrayFromArrayLike , SetTypedArrayFromTypedArray [New] ES2021 +: add CloneArrayBuffer [New] ES2020 +: add IsValidIntegerIndex [New] ES2015 +: add GetValueFromBuffer , SetValueInBuffer [New] ES2016 +: add TypedArrayCreate , TypedArraySpeciesCreate [New] ES2015 +: add IsWordChar [New] ES2017 + add WordCharacters [New] ES2015 +: add Canonicalize [New] ES2015 +: add NewPromiseCapability [Fix] ES2017+ : NumberToRawBytes , NumericToRawBytes : reimplement Float64, fix integer scenarios [Refactor] add helpers/isLineTerminator [Refactor] add isInteger helper, and use it [Refactor] extract isStringOrHole to a helper [Refactor] ES2017 +: RawBytesToNumber , RawBytesToNumeric : extract common code to helpers [Refactor] make a MAX_VALUE helper [Tests] fix RawBytesToNumeric tests in node v10.4-10.8 [Tests] fix buffer test cases in node v10.4-v10.8 1.21.3 / 2023-07-12 [Fix] ES2017+ : RawBytesToNumber , RawBytesToNumeric : properly handle some scenarios [Fix] ES2015 +: GetV : the receiver is V , not O [Fix] ES2017 +: RawBytesToNumber , RawBytesToNumeric : fix exponent calculation for Float64, improve tests [Fix] ES2017 +: RawBytesToNumber , RawBytesToNumeric : fix logic, improve tests [Fix] ES2019 +: thisTimeValue : fix spackling [Robustness] ES2017 +: NumberToRawBytes , NumericToRawBytes : use SameValue instead of Object.is [Refactor] ES2021 +: ValidateAtomicAccess : use typed-array-byte-offset [Refactor] ES2019 +: AddEntriesFromIterable : use ThrowCompletion [patch] ES2015 +: ObjectDefineProperties : satisfy TODO [patch] ES2015 +: GetV : improve error message [patch] fix spec URLs [Deps] update get-intrinsic , regexp.prototype.flags , which-typed-array [actions] fix permissions [Tests] add buffer test case fixtures + tests [Tests] skip test that modifies the env in SES [Tests] fix regex flags tests for node 20 [Dev Deps] update @ljharb/eslint-config , aud , available-regexp-flags , is-core-module , tape 1.21.2 / 2023-03-12 [Fix] ES2015 +: CreateDataProperty : use OrdinaryDefineOwnProperty [Fix] ES2015 +: CreateDataProperty : use OrdinaryDefineOwnProperty [Fix] ES2015 +: GetPrototypeFromConstructor : add missing assertion that intrinsicDefaultProto is an object [Fix] ES2015 +: IsDetachedBuffer : ensure a nullish error does not crash [Fix] ES2015 +: ToDateString : properly handle time values that aren\u2019t \"now\" [Fix] ES2015 +: ToUint8Clamp : avoid an extra observable ToNumber [Fix] ES2015 + : GetMethod : when func is not callable and P` is a symbol, avoid the wrong TypeError [Fix] ES2020 +: ToBigInt : properly throw on anything besides string, bigint, boolean [Fix] ES2021 +: SplitMatch : instead of false , return 'not-matched' [Fix] helpers/assertRecord : handle nullish input [Fix] helpers/isFullyPopulatedPropertyDescriptor : handle primitive inputs [Robustness] ES5 : ToNumber : avoid relying on runtime .test and .replace [Refactor] ES2015 : mark IsDataDescriptor and IsAccessorDescriptor as spackled [Refactor] ES2015 +: IsDetachedBuffer : use array-buffer-byte-length package [Refactor] ES2015 +: OrdinaryHasInstance : rely on falsiness [Refactor] ES2016 +: CreateListFromArrayLike : hoist default element types to module level [Refactor] ES2022 +: StringToNumber , ToNumber : use string.prototype.trim [patch] ES2022 +: IsLessThan : fix a comment [patch] ES2022 +: TypedArrayElementSize , TypedArrayElementType : throw a SyntaxError with an unknown TA type [patch] ES2022 +: IsLessThan : fix a comment [patch] ES2020 +: thisBigIntValue : throw a SyntaxError, not TypeError, for unsupported features [patch] helpers/getIteratorMethod : String is always available [patch] fix commented spec URLs [patch] omit % for callBound [meta] fix spec URLs [meta] fix spackle metadata, comments [Deps] update get-intrinsic , internal-slot , is-array-buffer , object-inspect [Deps] move function-bind to dev deps [Tests] String.fromCharCode takes numbers, not strings [Tests] use makeIteratorRecord helper [Tests] increase coverage [Tests] fix tests that throw a sentinel [Dev Deps] update array.from , available-regexp-flags , tape 1.21.1 / 2023-01-10 [Fix] move available-typed-arrays to runtime deps [Fix] ES2021 +: NumberToBigInt : throw the proper error on an env without BigInts [Fix] ES2018 +: CreateAsyncFromSyncIterator : properly check next method args length [Fix] ES2020 - ES2021 : Abstract Relational Comparison: handle BigInts properly [Fix] ES2022 +: StringToBigInt : invalid BigInts should be undefined , not NaN as in previous years [Fix] helpers/isFinite : properly handle BigInt values [Fix] ES2020 +: CreateListFromArrayLike : accept BigInts [Fix] ES2019 +: AsyncFromSyncIteratorContinuation : throw a SyntaxError when > 1 arg is passed [patch] ES2020 +: GetIterator : use SyntaxError for intentionally unsupported [patch] ES2015 +: GetPrototypeFromContructor : use SyntaxError for intentionally unsupported [patch] ES2022 +: StringToNumber : fix non-string assertion failure message [Deps] update es-set-tostringtag , is-array-buffer [Tests] increase coverage [Tests] exclude coverage from files that have been replaced by an extracted package 1.21.0 / 2023-01-04 [New] ES2015 +: add IsDetachedBuffer [New] ES2015+ : add DetachArrayBuffer [New] ES2020 +: add NumericToRawBytes [New] ES2017 - ES2019 : add NumberToRawBytes [New] ES2020+ : add RawBytesToNumeric [New] ES2017-ES2019 : add RawBytesToNumber [New] ES2017 +: add ValidateAtomicAccess [New] ES2021 +: add ValidateIntegerTypedArray [New] ES2015 +: add ValidateTypedArray [New] ES2015 +: add GetGlobalObject [New] ES2022 +: add TypedArrayElementSize , TypedArrayElementType [New] ES2015 +: add max , min [New] helpers/assertRecord : add predicates for PromiseCapability and AsyncGeneratorRequest Records [New] ES2018 +: add AsyncIteratorClose [New] ES2015 +: IteratorClose : also accept a Completion Record instance instead of a completion thunk [New] ES2015 + (CompletionRecord, NormalCompletion), ES2018 + (ThrowCompletion): add new AOs [New] ES2015 + ( ObjectCreate ) and ES2020 + ( OrdinaryObjectCreate ): use internal-slot to support additional slots [New] ES2018 +: add CreateAsyncFromSyncIterator [patch] ES2015 +: GetMethod : better failure message [Refactor] use es-set-tostringtag package [Refactor] use has-proto package [Deps] update has-proto , es-set-tostringtag , internal-slot [meta] fix spackle script to git add after all writing is done [meta] autogenerate esX entry points [meta] use a leading slash in gitattributes for proper spackle matching [Tests] fix comments on missing AOs [Tests] filter out host-defined AOs [Dev Deps] update @ljharb/eslint-config , aud 1.20.5 / 2022-12-07 [Fix] ES2020+ : floor : make it work with BigInts as well [Refactor] use gopd [Tests] add mod helper tests (#147) [Deps] update string.prototype.trimend , string.prototype.trimstart [Dev Deps] update array.prototype.filter , array.prototype.flatmap , array.prototype.indexof , object.fromentries 1.20.4 / 2022-10-06 [Fix] ES2021+ : values that truncate to -0 in ToIntegerOrInfinity (#146) [Deps] update is-callable 1.20.3 / 2022-09-22 [Refactor] extract regex tester to safe-regex-test package [Deps] update get-intrinsic , is-callable [Dev Deps] update aud , tape 1.20.2 / 2022-09-01 [Fix] ES2020+ : SameValueNonNumeric : properly throw on BigInt values [Deps] update object.assign , get-intrinsic , object-inspect [Dev Deps] update array.prototype.indexof , diff , es-value-fixtures , tape [meta] spackle : always mkdirp new files to be written [Tests] fix vscode auto-const from 8fc256d 1.20.1 / 2022-05-16 [Fix] thisTimeValue : use getTime , not valueOf , to get the time value [Refactor] create IsArray helper [Deps] update regexp.prototype.flags [Dev Deps] use for-each instead of foreach 1.20.0 / 2022-05-05 [New] add ES2022 [New] ES2015+ : add ObjectDefineProperties [Refactor] create fromPropertyDescriptor helper [Refactor] use has-property-descriptors [Deps] update string.prototype.trimend , string.prototype.trimstart , unbox-primitive [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update es-value-fixtures , has-bigints , functions-have-names [Tests] copy GetIntrinsic tests over from get-intrinsic 1.19.5 / 2022-04-13 [Fix] DefineOwnProperty : FF 4-22 throws an exception when defining length of an array [Dev Deps] update @ljharb/eslint-config 1.19.4 / 2022-04-12 [Fix] ES2015+ : CreateDataProperty : a nonwritable but configurable property is still converted to a data property 1.19.3 / 2022-04-11 [Fix] ES2015+ : GetIterator , IterableToArrayLike : in Symbol-less envs, handle boxed string objects [Robustness] use exec instead of test , since the latter observably looks up exec [Deps] update is-shared-array-buffer [actions] restrict permissions [Dev Deps] update tape [Tests] add test coverage [Tests] avoid a bug in node v4.0 with bound function names 1.19.2 / 2022-03-28 [Fix] ES2018+ : EnumerableOwnPropertyNames , ToIntegerOrInfinity , UTF16SurrogatePairToCodePoint : proper function names [Fix] ES2015+ : GetOwnPropertyKeys / IsExtensible / {Set,Test}IntegrityLevel : avoid a crash in IE 8 on missing ES5 intrinsics [Fix] helpers/DefineOwnProperty : avoid a crash in IE 8 [Fix] ES2015+ : StringCreate : properly check for prototype being String.prototype [Docs] ES2015+ : GetV : Fix spec URL [meta] operations: use a URL object instead of a URL string [meta] remove defunct greenkeeper config [meta] better eccheck command; fix indentation [Tests] node v0.6 lacks RegExp.prototype.source [Tests] remove a stray console.log [Tests] properly set the lastIndex in IE 8 [Tests] skip test due to IE 6-8 sparse/undefined bug [Tests] in IE 8, an empty regex is ` and not (?:)` [Tests] ES3 engines don\u2019t have .bind [Tests] avoid needless failures in ES3 engines that don't support descriptors [Tests] add test to cover https://github.com/tc39/ecma262/issues/2611 [Deps] update has-symbols , is-negative-zero , is-weakref , object-inspect [Dev Deps] update eslint , @ljharb/eslint-config , object.fromentries , safe-publish-latest , tape [actions] reuse common workflows [actions] update codecov uploader 1.19.1 / 2021-10-02 [Fix] ES2020+ : CreateRegExpStringIterator : should not have enumerable methods [Dev Deps] update array.prototype.filter , array.prototype.indexof 1.19.0 / 2021-09-30 [New] ES2021+ : IterableToList : make method parameter optional (#61) [New] add ES2021 [New] ES2020+ : add StringToBigInt , ToBigInt , ToBigInt64 , ToBigUint64 [New] ES2017 +: add IsSharedArrayBuffer , OrdinaryToPrimitive [New] ES2015+ : add CharacterRange , IsCompatiblePropertyDescriptor [New] ES2020+ : add CreateRegExpStringIterator [Fix] ES2020+ : ToBigInt64 / ToBigUint64 : avoid node v10.4-v10.8 bug with limited BigInt range [Fix] ES2020+ : AbstractRelationalComparison , AbstractEqualityComparison : support BigInt [Fix] ES2020+ : ToBigInt64 / ToBigUint64 : Improve the definitions of twoSixtyThree and twoSixtyFour (#140) [meta] do not publish .gitattributes [Tests] Correct the behavior of safeBigInt [Tests] Exclude dotfiles from the testing sweep (#141) 1.18.7 / 2021-09-28 [Fix] getOwnPropertyDescriptor helper: avoid crashing in IE < 9 [Fix] ArraySetLength : node v0.6 has a bug where array lengths can be Set but not Defined [eslint] remove unused directive [Tests] fix spelling 1.18.6 / 2021-09-07 [Fix] ES2020+ : NumberToBigInt : throw a SyntaxError when BigInts are not supported [Refactor] extract getSymbolDescription logic to get-symbol-description [Refactor] ES2018+ : AbstractRelationalComparison : use IsStringPrefix [Deps] update is-callable , is-regex , is-string [Dev Deps] update @ljharb/eslint-config , tape [Tests] GetSubstitution : add cases 1.18.5 / 2021-08-01 [meta] remove \"exports\" (#133) [Dev Deps] update eslint 1.18.4 / 2021-07-29 [meta] partial revert of b54cfe8525faff482450e843a49d43be3a086225 [Deps] update internal-slot , object-inspect [Dev Deps] update eslint , tape [Tests] ArraySetLength : increase coverage 1.18.3 / 2021-05-27 [Fix] ES2020+ : ToNumber : ensure it throws on a BigInt (#130) 1.18.2 / 2021-05-25 [meta] add helpers to \"exports\" field, for back compat 1.18.1 / 2021-05-25 [readme] update and clarify entry points [meta] add \"exports\" field, with escape hatch [meta] add sideEffects field [meta] use prepublishOnly , for npm 7+ [eslint] clean up eslint rules [Deps] update is-regex , is-string , object-inspect , unbox-primitive [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape [actions] disable fail-fast on matrix jobs [actions] use node/install action instead of node/run [actions] update codeql-analysis to new best practices 1.18.0 / 2021-03-03 [New] add ES2020 , and a number of additional AOs: See the changelog entries for the prereleases for more information: next.3 next.2 next.1 next.0 [Refactor] ES5+ : Abstract Relational Comparison : increase coverage [Tests] increase coverage [Tests] do not run coverage on node 0.6 1.18.0-next.3 / 2021-03-01 [New] ES2015 : add StringGetIndexProperty [New] ES2015+ : add RegExpCreate , SplitMatch , StringCreate [New] ES2016-ES2019 : add UTF16Decode [New] ES2020+ : add NumberToBigInt [New] ES2020+: add BigInt:: / Number::` methods: [Fix] ES5 : ToNumber : properly refuse to parse ES6+ forms [Fix] ES2015+ : Invoke : optional argumentsList must be a List of arguments, not a list of arguments [Fix] ES2016+ : UTF16Encoding : properly return a string code point instead of a numeric code point [Fix] ES2020 : NumberBitwiseOp : assert that x and y are Numbers [readme] remove travis/testling badge, fix repo URLs [meta] ES2015 : add missing CreateArrayIterator AO [meta] ES2015-ES2017 : add missing DaylightSavingTA AO [meta] rerun npm run spackle to update URLs left after 11d8c8df11c0d15d094a6035afed662e22b440ef [meta] update ecma URLs [meta] unignore 2020 operations list [meta] update operations scripts linting [meta] refactor getOps script to fetch all years at once [meta] refactor operations script to keep years in one place [meta] fix ES2015 spec URL [Deps] update has-symbols , string.prototype.trimend , string.prototype.trimstart , get-intrinsic , is-callable , is-regex [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.indexof , aud , es-value-fixtures , object.fromentries , tape , diff [operations] detect ES2020+ style T:: numeric operations [Tests] increase coverage [Tests] BigInt(1e17) throws on node v10.4-v10.6 [Tests] improve coverage on Number:: methods [Tests] tape v5 .equal now uses strict equality, so no more need for is() [Tests] improve BigInt:: and Number:: coverage [Tests] actually run all the helpers tests [Tests] ensure \"expected missing\" ops list is accurate [Tests] abstract away per-operation skips [Tests] skip BigInt:: tests on envs without BigInts [Tests] use es-value-fixtures [actions] update workflows 1.18.0-next.2 / 2021-01-17 [New] helpers : add isByteValue , isCodePoint , some [Fix] ES2018+ : fix GetSubstitution with named captures [Fix] ES2020 : GetIterator : add omitted hint parameter [Fix] ES2018 / ES2019 : SetFunctionLength : Infinities should throw [Fix] ES2020 : ToIndex uses SameValue instead of SameValueZero [Fix] ES2020 : CopyDataProperties uses CreateDataPropertyOrThrow instead of CreateDataProperty [Refactor] use extracted call-bind instead of local helpers [Refactor] use extracted get-intrinsic package [Deps] update call-bind , get-intrinsic , is-callable , is-negative-zero , is-regex , object-inspect , object.assign , string.prototype.trimend , string.prototype.trimstart [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.indexof , aud , diff , functions-have-names , has-bigints , has-strict-mode , object-is , object.fromentries , tape [actions] switch Automatic Rebase workflow to pull_request_target event [actions] add \"Allow Edits\" workflow [meta] pin cheerio to v1.0.0-rc.3, to fix getOps [meta] make all URLs consistent, and point to spec artifacts [meta] refactor deltas script; update eslint on operations scripts [meta] do not publish .github dir (#123) [Tests] add v.notNonNegativeIntegers , v.nonConstructorFunctions [Tests] migrate tests to Github Actions [Tests] run coverage on all tests [Tests] add npm run test:ses 1.18.0-next.1 / 2020-09-30 [Fix] ES2020 : ToInteger : -0 should always be normalized to +0 (#116) [patch] GetIntrinsic : Adapt to override-mistake-fix pattern (#115) [Fix] callBind : ensure compatibility with SES [Deps] update is-callable , object.assign [Dev Deps] update eslint , @ljharb/eslint-config [eslint] fix warning [Tests] temporarily allow SES tests to fail (#115) [Tests] ses-compat - initialize module after ses lockdown (#113) [Tests] [Refactor] use defineProperty helper rather than assignment [Tests] [Refactor] clean up defineProperty test helper 1.18.0-next.0 / 2020-08-14 [New] add ES2020 [New] GetIntrinsic : add %AggregateError% , %FinalizationRegistry% , and %WeakRef% [New] ES5 +: add abs , floor ; use modulo consistently [New] GetIntrinsic : Cache accessed intrinsics (#98) [New] GetIntrinsic : Add ES201x function intrinsics (#97) [New] ES2015 +: add QuoteJSONString , OrdinaryCreateFromConstructor [New] ES2017 +: add StringGetOwnProperty [New] ES2016 +: add UTF16Encoding [New] ES2018 +: add SetFunctionLength , UnicodeEscape [New] add isLeadingSurrogate / isTrailingSurrogate helpers [Fix] ES5 +: ToPropertyDescriptor : use intrinsic TypeError [Fix] ES2018+ : CopyDataProperties / NumberToString : use intrinsic TypeError [Deps] update is-regex , object-inspect [Dev Deps] update eslint 1.17.7 / 2020-09-30 [Fix] ES2020 : ToInteger : -0 should always be normalized to +0 (#116) [patch] GetIntrinsic : Adapt to override-mistake-fix pattern (#115) [Fix] callBind : ensure compatibility with SES [Deps] update is-callable , is-regex , object-inspect , object.assign [Dev Deps] update eslint , @ljharb/eslint-config 1.17.6 / 2020-06-13 [Fix] helpers/getSymbolDescription : use the global Symbol registry when available (#92) [Fix] ES2015+ : IsConstructor : when Reflect.construct is available, be spec-accurate (#93) [Fix] ES2015+ : Set : Always return boolean value (#101) [Fix] ES2015+ : Set : ensure exceptions are thrown in IE 9 when requested [Fix] Use Reflect.apply(\u2026) if available (#99) [Fix] helpers/floor : module-cache Math.floor [Fix] helpers/getSymbolDescription : Prefer bound description getter when present [Fix] 2016 : Use getIteratorMethod in IterableToArrayLike (#94) [Fix] helpers/OwnPropertyKeys : Use Reflect.ownKeys(\u2026) if available (#91) [Fix] 2018+ : Fix CopyDataProperties depending on this (#95) [meta] mark spackled files as autogenerated [meta] Type : fix spec URL [meta] ES2015 : complete ops list [Deps] update is\u2011callable , is\u2011regex [Deps] switch from string.prototype.trimleft / string.prototype.trimright to string.prototype.trimstart / string.prototype.trimend [Dev Deps] update eslint , @ljharb/eslint-config , in-publish , object-is , tape ; add aud [eslint] helpers/isPropertyDescriptor : fix indentation [Tests] helpers/getSymbolDescription : add test cases; some envs have Symbol.for but can not infer a name (#92) [Tests] try out CodeQL analysis [Tests] reformat expected missing ops [Tests] Run tests with undefined this (#96) 1.17.5 / 2020-03-22 [Fix] CreateDataProperty : update an existing property [Fix] run missing spackle from cd7504701879ddea0f5981e99cbcf93bfea9171d [Dev Deps] update make-arrow-function , tape , @ljharb/eslint-config 1.17.4 / 2020-01-21 [Fix] 2015+ : add code to handle IE 8\u2019s problems [Tests] fix tests for IE 8 1.17.3 / 2020-01-19 [Fix] ObjectCreate 2015+ : Fall back to __proto__ and normal new in older browsers [Fix] GetIntrinsic : ensure the allowMissing property actually works on dotted intrinsics 1.17.2 / 2020-01-14 [Fix] helpers/OwnPropertyKeys : include non-enumerables too 1.17.1 / 2020-01-14 [Refactor] add OwnPropertyKeys helper, use it in CopyDataProperties [Refactor] IteratorClose : remove useless assignment [Dev Deps] update eslint , tape , diff 1.17.0 / 2019-12-20 [New] Split up each operation into its own file (prereleased) [Fix] GetIntrinsic : IE 8 has a broken Object.getOwnPropertyDescriptor [Fix] object.assign is a runtime dep (prereleased) [Refactor] GetIntrinsic : remove the internal property salts, since % already handles that [Refactor] GetIntrinsic : further simplification [Deps] update is-callable , string.prototype.trimleft , string.prototype.trimright , is-regex [Dev Deps] update @ljharb/eslint-config , object-is , object.fromentries , tape [Tests] add .eslintignore [meta] remove unused Makefile and associated utils [meta] only run spackle script in publish (#78) (prereleased) 1.17.0-next.1 / 2019-12-11 [Fix] object.assign is a runtime dep [meta] only run spackle script in publish (#78) 1.17.0-next.0 / 2019-12-11 [New] Split up each operation into its own file 1.16.3 / 2019-12-04 [Fix] GetIntrinsic : when given a path to a getter, return the actual getter [Dev Deps] update eslint 1.16.2 / 2019-11-24 [Fix] IE 6-7 lack JSON [Fix] IE 6-8 strings can\u2019t use array slice, they need string slice [Dev Deps] update eslint 1.16.1 / 2019-11-24 [Fix] GetIntrinsics : turns out IE 8 throws when Object.getOwnPropertyDescriptor(arguments); , and does not throw on callee anyways [Deps] update es-to-primitive , has-symbols , object-inspect [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest [meta] re-include year files inside operations [meta] add funding field [actions] add Automatic Rebase github action [Tests] use shared travis-ci config [Tests] disable check-coverage , and let codecov do it 1.16.0 / 2019-10-18 [New] ES2015+ : add SetFunctionName [New] ES2015+ : add GetPrototypeFromConstructor , with caveats [New] ES2015+ : add CreateListFromArrayLike [New] ES2016+ : add OrdinarySetPrototypeOf [New] ES2016+ : add OrdinaryGetPrototypeOf [New] add getSymbolDescription and getInferredName helpers [Fix] GetIterator : add fallback for pre-Symbol environments, tests [Dev Deps] update object.fromentries [Tests] add node v12.2 1.15.0 / 2019-10-02 [New] ES2018 +: add DateString , TimeString [New] ES2015 +: add ToDateString [New] ES5 +: add msFromTime , SecFromTime , MinFromTime , HourFromTime , TimeWithinDay , Day , DayFromYear , TimeFromYear , YearFromTime , WeekDay , DaysInYear , InLeapYear , DayWithinYear , MonthFromTime , DateFromTime , MakeDay , MakeDate , MakeTime , TimeClip , modulo [New] add regexTester helper [New] add callBound helper [New] add ES2020\u2019s intrinsic dot notation [New] add isPrefixOf helper [New] add maxSafeInteger helper [Deps] update string.prototype.trimleft , string.prototype.trimright [Dev Deps] update eslint [Tests] on node v12.11 [meta] npmignore operations scripts; add \"deltas\" 1.14.2 / 2019-09-08 [Fix] ES2016 : IterableToArrayLike : add proper fallback for strings, pre-Symbols [Tests] on node v12.10 1.14.1 / 2019-09-03 [meta] republish with some extra files removed 1.14.0 / 2019-09-02 [New] add ES2019 [New] ES2017+ : add IterableToList [New] ES2016 : add IterableToArrayLike [New] ES2015+ : add ArrayCreate , ArraySetLength , OrdinaryDefineOwnProperty , OrdinaryGetOwnProperty , OrdinaryHasProperty , CreateHTML , GetOwnPropertyKeys , InstanceofOperator , SymbolDescriptiveString , GetSubstitution , ValidateAndApplyPropertyDescriptor , IsPromise , OrdinaryHasInstance , TestIntegrityLevel , SetIntegrityLevel [New] add callBind helper, and use it [New] add helpers: isPropertyDescriptor , every [New] ES5+: add Abstract Relational Comparison [New] ES5+: add Abstract Equality Comparison , Strict Equality Comparison [Fix] ES2015+ : GetIterator : only require native Symbols when method is omitted [Fix] ES2015 : Call : error message now properly displays Symbols using object-inspect [Fix] ES2015+ : ValidateAndApplyPropertyDescriptor : use ES2017 logic to bypass spec bugs [Fix] ES2015+ : CreateDataProperty , DefinePropertyOrThrow , ValidateAndApplyPropertyDescriptor : add fallbacks for ES3 [Fix] ES2015+ : FromPropertyDescriptor : no longer requires a fully complete Property Descriptor [Fix] ES5 : IsPropertyDescriptor : call into IsDataDescriptor and IsAccessorDescriptor [Refactor] use has-symbols for Symbol detection [Fix] helpers/assertRecord : remove console.log [Deps] update object-keys [readme] add security note [meta] change http URLs to https [meta] linter cleanup [meta] fix getOps script [meta] add FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , semver , replace , cheerio , tape [Tests] up to node v12.9 , v11.15 , v10.16 , v8.16 , v6.17 [Tests] temporarily allow node 0.6 to fail; segfaulting in travis [Tests] use the values helper more in es5 tests [Tests] fix linting to apply to all files [Tests] run npx aud only on prod deps [Tests] add v.descriptors helpers [Tests] use npx aud instead of npm audit with hoops [Tests] use eclint instead of editorconfig-tools [Tests] some intrinsic cleanup [Tests] migrate es5 tests to use values helper [Tests] add some missing ES2015 ops 1.13.0 / 2019-01-02 [New] add ES2018 [New] add ES2015/ES2016: EnumerableOwnNames; ES2017: EnumerableOwnProperties [New] ES2015+ : add thisBooleanValue , thisNumberValue , thisStringValue , thisTimeValue [New] ES2015+ : add DefinePropertyOrThrow , DeletePropertyOrThrow , CreateMethodProperty [New] add assertRecord helper [Deps] update is-callable , has , object-keys , es-to-primitive [Dev Deps] update eslint , @ljharb/eslint-config , tape , semver , safe-publish-latest , replace [Tests] use npm audit instead of nsp [Tests] remove jscs [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 [Tests] move descriptor factories to values helper [Tests] add getOps to programmatically fetch abstract operation names 1.12.0 / 2018-05-31 [New] add GetIntrinsic entry point [New] ES2015 +: add ObjectCreate [Robustness]: ES2015+ : ensure Math.{abs,floor} and Function.call are cached 1.11.0 / 2018-03-21 [New] ES2015+ : add iterator abstract ops [Dev Deps] update eslint , nsp , object.assign , semver , tape [Tests] up to node v9.8 , v8.10 , v6.13 1.10.0 / 2017-11-24 [New] ES2015+: AdvanceStringIndex [Dev Deps] update eslint , nsp [Tests] require node 0.6 to pass again [Tests] up to node v9.2 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS 1.9.0 / 2017-09-30 [New] es2015+ : add ArraySpeciesCreate [New] ES2015+: add CreateDataProperty and CreateDataPropertyOrThrow [Tests] consolidate duplicated tests [Tests] increase coverage [Dev Deps] update nsp , eslint 1.8.2 / 2017-09-03 [Fix] es2015 +: ToNumber : provide the proper hint for Date objects (#27) [Dev Deps] update eslint 1.8.1 / 2017-08-30 [Fix] ES2015+: ToPropertyKey : should return a symbol for Symbols (#26) [Deps] update function-bind [Dev Deps] update eslint , @ljharb/eslint-config [Docs] github broke markdown parsing 1.8.0 / 2017-08-04 [New] add ES2017 [New] move es6+ to es2015+; leave es6/es7 as aliases [New] ES5+: add IsPropertyDescriptor , IsAccessorDescriptor , IsDataDescriptor , IsGenericDescriptor , FromPropertyDescriptor , ToPropertyDescriptor [New] ES2015+: add CompletePropertyDescriptor , Set , HasOwnProperty , HasProperty , IsConcatSpreadable , Invoke , CreateIterResultObject , RegExpExec [Fix] es7/es2016: do not mutate ES6 [Fix] assign helper only supports one source [Deps] update is-regex [Dev Deps] update nsp , eslint , @ljharb/eslint-config [Dev Deps] update eslint , @ljharb/eslint-config , nsp , semver , tape [Tests] add tests for missing and excess operations [Tests] add codecov for coverage [Tests] up to node v8.2 , v7.10 , v6.11 , v4.8 ; newer npm breaks on older node [Tests] use same lists of value types across tests; ensure tests are the same when ops are the same [Tests] ES2015: add ToNumber symbol tests [Tests] switch to nyc for code coverage [Tests] make IsRegExp tests consistent across editions 1.7.0 / 2017-01-22 [New] ES6: Add GetMethod (#16) [New] ES6: Add GetV (#16) [New] ES6: Add Get (#17) [Tests] up to node v7.4 , v6.9 , v4.6 ; improve test matrix [Dev Deps] update tape , nsp , eslint , @ljharb/eslint-config , safe-publish-latest 1.6.1 / 2016-08-21 [Fix] ES6: IsConstructor should return true for class constructors. 1.6.0 / 2016-08-20 [New] ES5 / ES6: add Type [New] ES6: SpeciesConstructor [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver ; add safe-publish-latest [Tests] up to node v6.4 , v5.12 , v4.5 1.5.1 / 2016-05-30 [Fix] ES.IsRegExp : actually look up Symbol.match on the argument [Refactor] create isNaN helper [Deps] update is-callable , function-bind [Deps] update es-to-primitive , fix ES5 tests [Dev Deps] update jscs , eslint , @ljharb/eslint-config , tape , nsp [Tests] up to node v6.2 , v5.11 , v4.4 [Tests] use pretest/posttest for linting/security 1.5.0 / 2015-12-27 [New] adds Symbol.toPrimitive support via es-to-primitive [Deps] update is-callable , es-to-primitive [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver , tape [Tests] up to node v5.3 1.4.3 / 2015-11-04 [Fix] ES6.ToNumber : should give NaN for explicitly signed hex strings (#4) [Refactor] ES6.ToNumber : No need to double-trim [Refactor] group tests better [Tests] should still pass on node v0.8 1.4.2 / 2015-11-02 [Fix] ensure ES.ToNumber trims whitespace, and does not trim non-whitespace (#3) 1.4.1 / 2015-10-31 [Fix] ensure only 0-1 are valid binary and 0-7 are valid octal digits (#2) [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config [Tests] on node v5.0 [Tests] fix npm upgrades for older node versions package.json: use object form of \"authors\", add \"contributors\" 1.4.0 / 2015-09-26 [Deps] update is-callable [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config [Tests] on node v4.2 [New] Add SameValueNonNumber to ES7 1.3.2 / 2015-09-26 [Fix] Fix ES6.IsRegExp to properly handle Symbol.match , per spec. [Tests] up to io.js v3.3 , node v4.1 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 1.3.1 / 2015-08-15 [Fix] Ensure that objects that toString to a binary or octal literal also convert properly 1.3.0 / 2015-08-15 [New] ES6\u2019s ToNumber now supports binary and octal literals. [Dev Deps] update jscs , eslint , @ljharb/eslint-config , tape [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Tests] up to io.js v3.0 1.2.2 / 2015-07-28 [Fix] Both ES5.CheckObjectCoercible and ES6.RequireObjectCoercible return the value if they don't throw. [Tests] Test on latest io.js versions. [Dev Deps] Update eslint , jscs , tape , semver , covert , nsp 1.2.1 / 2015-03-20 Fix isFinite helper. 1.2.0 / 2015-03-19 Use es-to-primitive for ToPrimitive methods. Test on latest io.js versions; allow failures on all but 2 latest node / io.js versions. 1.1.2 / 2015-03-20 Fix isFinite helper. 1.1.1 / 2015-03-19 Fix isPrimitive check for functions Update eslint , editorconfig-tools , semver , nsp 1.1.0 / 2015-02-17 Add ES7 export (non-default). All grade A-supported node / iojs versions now ship with an npm that understands ^ . Test on iojs-v1.2 . 1.0.1 / 2015-01-30 Use is-callable instead of an internal function. Update tape , jscs , nsp , eslint 1.0.0 / 2015-01-10 v1.0.0","title":"1.23.3 / 2024-03-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1233-2024-03-29","text":"[Fix] ES2024 : StringPad , StringPaddingBuiltinsImpl : prefer uppercase spec enums [Fix] helpers/bytesAsInteger : avoid a crash in node 10.4 - 10.8 [Fix] ES5 : CheckObjectCoercible : restore optMessage optional arg [Refactor] ES2022 +: update TimeString to use ToZeroPaddedDecimalString [Robustness] use cached copies of builtins [Deps] update string.prototype.trimstart , typed-array-length [Dev Deps] update array.from , array.prototype.filter , array.prototype.indexof , object.fromentries , safe-bigint","title":"1.23.3 / 2024-03-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1232-2024-03-17","text":"[Fix] records/regexp-record : add optional [[UnicodeSets]] boolean field [Fix] ES2024 +: AddValueToKeyedGroup : avoid adding matched values twice [Fix] ES5 : CheckObjectCoercible : use the right function name [Fix] ES2024 +: AddEntriesFromIterable , GetIterator , GroupBy : properly capitalize spec enums [Deps] update string.prototype.trim , string.prototype.trimend [Tests] increase coverage","title":"1.23.2 / 2024-03-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1231-2024-03-16","text":"[Refactor] use es-object-atoms [Deps] update hasown , which-typed-array , data-view-byte-length , safe-array-concat [Dev Deps] update diff","title":"1.23.1 / 2024-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1230-2024-03-04","text":"[New] add ES2024 [New] ES2015 +: add InternalizeJSONProperty [New] ES2015 +: add IntegerIndexedElement{Get,Set} [New] ES2018 +: add TimeZoneString [New] ES2022 +: add DefineMethodProperty [New] ES2023 : add DefaultTimeZone [Fix] ES2023 +: SetTypedArrayFrom{TypedArray,ArrayLike} : match engine reality [Fix] ES2024 +: GetViewByteLength , IsViewOutOfBounds : support engines with only own DV properties [Tests] use safe-bigint","title":"1.23.0 / 2024-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1225-2024-02-28","text":"[Fix] ES2015 +: DetachArrayBuffer : node v21.0.0+ structuredClone throws with an already-detached ArrayBuffer [Fix] helpers/assertRecord : partial revert of 87c340d2; unintentional breaking change [patch] records: fix indentation, improve object checks [Refactor] extract TA tables to separate files [meta] extract \"list spackled files\" to separate run-script [Deps] update available-typed-arrays , es-set-tostringtag , has-proto , is-negative-zero , is-shared-array-buffer , typed-array-buffer , typed-array-byte-length , typed-array-byte-offset , typed-array-length [Dev Deps] update available-regexp-flags , tape [Dev Deps] pin jackspeak and glob , since v2.1.2+ and v10.3.8+ respectively depend on npm aliases, which kill the install process in npm < 6 [Tests] use define-{accessor,data}-property [Tests] fix some test cases [Tests] use safeBigInt for Z() pattern to handle node 10.4 - 10.8","title":"1.22.5 / 2024-02-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1224-2024-02-13","text":"[Fix] ES2017 +: IsDetachedBuffer : properly allow SABs [Fix] ES2022 +: ToBigInt : properly throw on an unparseable string [Fix] ES2015 +: ValidateTypedArray : proper detachment check and return value [Fix] ES2022 +: GetSubstitution : match updated semantics [Refactor] prefer typeof over Type() , except for Object, where possible [Refactor] use es-errors instead of get-intrinsic where possible [Refactor] use es-define-property [Refactor] records: extract predicates to individual files [Refactor] ES2015 +: Canonicalize , WordCharacters : use explicit .json extension for imports [Deps] update array-buffer-byte-length , arraybuffer.prototype.slice , available-typed-arrays , call-bind , es-set-tostringtag , get-intrinsic , get-symbol-description , has-proper ty-descriptors , has-property-descriptors , hasown , internal-slot , is-array-buffer , is-typed-array , object.assign , regexp.prototype.flags , safe-array-concat , safe-regex-test , typed-array-buffer , which-typed-array [eslint] remove unused overrides [Tests] increase/fix coverage [Dev Deps] update aud , npmignore , mock-property , tape","title":"1.22.4 / 2024-02-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1223-2023-10-20","text":"[Fix] ES2015 +: GetSubstitution : accept undefined instead of a hole [Refactor] use hasown instead of has [Deps] update call-bind , get-intrinsic , object-inspect , which-typed-array [Dev Deps] update function-bind , is-core-module , mock-property , tape","title":"1.22.3 / 2023-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1222-2023-09-14","text":"[Fix] ES2015 +: NewPromiseCapability : use AOs from the current year, not 2022 [Refactor] ES2021 +: SetTypedArrayFromArrayLike : use IsBigIntElementType [Refactor] properly name helpers/typedArrayConstructors [Refactor] simplify helpers [Deps] update arraybuffer.prototype.slice , function.prototype.name , is-typed-array , regexp.prototype.flags , safe-array-concat , string.prototype.trim , string.prototype.trimend , string.prototype.trimstart , which-typed-array [actions] update actions [Tests] run SES tests on more node versions [Dev Deps] update @unicode/unicode-15.0.0 , array.from , array.prototype.filter , array.prototype.flatmap , array.prototype.indexof , is-core-module , object.fromentries , ses , tape","title":"1.22.2 / 2023-09-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1221-2023-07-15","text":"[Deps] add missing safe-array-concat dep","title":"1.22.1 / 2023-07-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1220-2023-07-15","text":"[New] add ES2023 [New] ES2021+ : add SetTypedArrayFromArrayLike , SetTypedArrayFromTypedArray [New] ES2021 +: add CloneArrayBuffer [New] ES2020 +: add IsValidIntegerIndex [New] ES2015 +: add GetValueFromBuffer , SetValueInBuffer [New] ES2016 +: add TypedArrayCreate , TypedArraySpeciesCreate [New] ES2015 +: add IsWordChar [New] ES2017 + add WordCharacters [New] ES2015 +: add Canonicalize [New] ES2015 +: add NewPromiseCapability [Fix] ES2017+ : NumberToRawBytes , NumericToRawBytes : reimplement Float64, fix integer scenarios [Refactor] add helpers/isLineTerminator [Refactor] add isInteger helper, and use it [Refactor] extract isStringOrHole to a helper [Refactor] ES2017 +: RawBytesToNumber , RawBytesToNumeric : extract common code to helpers [Refactor] make a MAX_VALUE helper [Tests] fix RawBytesToNumeric tests in node v10.4-10.8 [Tests] fix buffer test cases in node v10.4-v10.8","title":"1.22.0 / 2023-07-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1213-2023-07-12","text":"[Fix] ES2017+ : RawBytesToNumber , RawBytesToNumeric : properly handle some scenarios [Fix] ES2015 +: GetV : the receiver is V , not O [Fix] ES2017 +: RawBytesToNumber , RawBytesToNumeric : fix exponent calculation for Float64, improve tests [Fix] ES2017 +: RawBytesToNumber , RawBytesToNumeric : fix logic, improve tests [Fix] ES2019 +: thisTimeValue : fix spackling [Robustness] ES2017 +: NumberToRawBytes , NumericToRawBytes : use SameValue instead of Object.is [Refactor] ES2021 +: ValidateAtomicAccess : use typed-array-byte-offset [Refactor] ES2019 +: AddEntriesFromIterable : use ThrowCompletion [patch] ES2015 +: ObjectDefineProperties : satisfy TODO [patch] ES2015 +: GetV : improve error message [patch] fix spec URLs [Deps] update get-intrinsic , regexp.prototype.flags , which-typed-array [actions] fix permissions [Tests] add buffer test case fixtures + tests [Tests] skip test that modifies the env in SES [Tests] fix regex flags tests for node 20 [Dev Deps] update @ljharb/eslint-config , aud , available-regexp-flags , is-core-module , tape","title":"1.21.3 / 2023-07-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1212-2023-03-12","text":"[Fix] ES2015 +: CreateDataProperty : use OrdinaryDefineOwnProperty [Fix] ES2015 +: CreateDataProperty : use OrdinaryDefineOwnProperty [Fix] ES2015 +: GetPrototypeFromConstructor : add missing assertion that intrinsicDefaultProto is an object [Fix] ES2015 +: IsDetachedBuffer : ensure a nullish error does not crash [Fix] ES2015 +: ToDateString : properly handle time values that aren\u2019t \"now\" [Fix] ES2015 +: ToUint8Clamp : avoid an extra observable ToNumber [Fix] ES2015 + : GetMethod : when func is not callable and P` is a symbol, avoid the wrong TypeError [Fix] ES2020 +: ToBigInt : properly throw on anything besides string, bigint, boolean [Fix] ES2021 +: SplitMatch : instead of false , return 'not-matched' [Fix] helpers/assertRecord : handle nullish input [Fix] helpers/isFullyPopulatedPropertyDescriptor : handle primitive inputs [Robustness] ES5 : ToNumber : avoid relying on runtime .test and .replace [Refactor] ES2015 : mark IsDataDescriptor and IsAccessorDescriptor as spackled [Refactor] ES2015 +: IsDetachedBuffer : use array-buffer-byte-length package [Refactor] ES2015 +: OrdinaryHasInstance : rely on falsiness [Refactor] ES2016 +: CreateListFromArrayLike : hoist default element types to module level [Refactor] ES2022 +: StringToNumber , ToNumber : use string.prototype.trim [patch] ES2022 +: IsLessThan : fix a comment [patch] ES2022 +: TypedArrayElementSize , TypedArrayElementType : throw a SyntaxError with an unknown TA type [patch] ES2022 +: IsLessThan : fix a comment [patch] ES2020 +: thisBigIntValue : throw a SyntaxError, not TypeError, for unsupported features [patch] helpers/getIteratorMethod : String is always available [patch] fix commented spec URLs [patch] omit % for callBound [meta] fix spec URLs [meta] fix spackle metadata, comments [Deps] update get-intrinsic , internal-slot , is-array-buffer , object-inspect [Deps] move function-bind to dev deps [Tests] String.fromCharCode takes numbers, not strings [Tests] use makeIteratorRecord helper [Tests] increase coverage [Tests] fix tests that throw a sentinel [Dev Deps] update array.from , available-regexp-flags , tape","title":"1.21.2 / 2023-03-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1211-2023-01-10","text":"[Fix] move available-typed-arrays to runtime deps [Fix] ES2021 +: NumberToBigInt : throw the proper error on an env without BigInts [Fix] ES2018 +: CreateAsyncFromSyncIterator : properly check next method args length [Fix] ES2020 - ES2021 : Abstract Relational Comparison: handle BigInts properly [Fix] ES2022 +: StringToBigInt : invalid BigInts should be undefined , not NaN as in previous years [Fix] helpers/isFinite : properly handle BigInt values [Fix] ES2020 +: CreateListFromArrayLike : accept BigInts [Fix] ES2019 +: AsyncFromSyncIteratorContinuation : throw a SyntaxError when > 1 arg is passed [patch] ES2020 +: GetIterator : use SyntaxError for intentionally unsupported [patch] ES2015 +: GetPrototypeFromContructor : use SyntaxError for intentionally unsupported [patch] ES2022 +: StringToNumber : fix non-string assertion failure message [Deps] update es-set-tostringtag , is-array-buffer [Tests] increase coverage [Tests] exclude coverage from files that have been replaced by an extracted package","title":"1.21.1 / 2023-01-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1210-2023-01-04","text":"[New] ES2015 +: add IsDetachedBuffer [New] ES2015+ : add DetachArrayBuffer [New] ES2020 +: add NumericToRawBytes [New] ES2017 - ES2019 : add NumberToRawBytes [New] ES2020+ : add RawBytesToNumeric [New] ES2017-ES2019 : add RawBytesToNumber [New] ES2017 +: add ValidateAtomicAccess [New] ES2021 +: add ValidateIntegerTypedArray [New] ES2015 +: add ValidateTypedArray [New] ES2015 +: add GetGlobalObject [New] ES2022 +: add TypedArrayElementSize , TypedArrayElementType [New] ES2015 +: add max , min [New] helpers/assertRecord : add predicates for PromiseCapability and AsyncGeneratorRequest Records [New] ES2018 +: add AsyncIteratorClose [New] ES2015 +: IteratorClose : also accept a Completion Record instance instead of a completion thunk [New] ES2015 + (CompletionRecord, NormalCompletion), ES2018 + (ThrowCompletion): add new AOs [New] ES2015 + ( ObjectCreate ) and ES2020 + ( OrdinaryObjectCreate ): use internal-slot to support additional slots [New] ES2018 +: add CreateAsyncFromSyncIterator [patch] ES2015 +: GetMethod : better failure message [Refactor] use es-set-tostringtag package [Refactor] use has-proto package [Deps] update has-proto , es-set-tostringtag , internal-slot [meta] fix spackle script to git add after all writing is done [meta] autogenerate esX entry points [meta] use a leading slash in gitattributes for proper spackle matching [Tests] fix comments on missing AOs [Tests] filter out host-defined AOs [Dev Deps] update @ljharb/eslint-config , aud","title":"1.21.0 / 2023-01-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1205-2022-12-07","text":"[Fix] ES2020+ : floor : make it work with BigInts as well [Refactor] use gopd [Tests] add mod helper tests (#147) [Deps] update string.prototype.trimend , string.prototype.trimstart [Dev Deps] update array.prototype.filter , array.prototype.flatmap , array.prototype.indexof , object.fromentries","title":"1.20.5 / 2022-12-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1204-2022-10-06","text":"[Fix] ES2021+ : values that truncate to -0 in ToIntegerOrInfinity (#146) [Deps] update is-callable","title":"1.20.4 / 2022-10-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1203-2022-09-22","text":"[Refactor] extract regex tester to safe-regex-test package [Deps] update get-intrinsic , is-callable [Dev Deps] update aud , tape","title":"1.20.3 / 2022-09-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1202-2022-09-01","text":"[Fix] ES2020+ : SameValueNonNumeric : properly throw on BigInt values [Deps] update object.assign , get-intrinsic , object-inspect [Dev Deps] update array.prototype.indexof , diff , es-value-fixtures , tape [meta] spackle : always mkdirp new files to be written [Tests] fix vscode auto-const from 8fc256d","title":"1.20.2 / 2022-09-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1201-2022-05-16","text":"[Fix] thisTimeValue : use getTime , not valueOf , to get the time value [Refactor] create IsArray helper [Deps] update regexp.prototype.flags [Dev Deps] use for-each instead of foreach","title":"1.20.1 / 2022-05-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1200-2022-05-05","text":"[New] add ES2022 [New] ES2015+ : add ObjectDefineProperties [Refactor] create fromPropertyDescriptor helper [Refactor] use has-property-descriptors [Deps] update string.prototype.trimend , string.prototype.trimstart , unbox-primitive [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update es-value-fixtures , has-bigints , functions-have-names [Tests] copy GetIntrinsic tests over from get-intrinsic","title":"1.20.0 / 2022-05-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1195-2022-04-13","text":"[Fix] DefineOwnProperty : FF 4-22 throws an exception when defining length of an array [Dev Deps] update @ljharb/eslint-config","title":"1.19.5 / 2022-04-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1194-2022-04-12","text":"[Fix] ES2015+ : CreateDataProperty : a nonwritable but configurable property is still converted to a data property","title":"1.19.4 / 2022-04-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1193-2022-04-11","text":"[Fix] ES2015+ : GetIterator , IterableToArrayLike : in Symbol-less envs, handle boxed string objects [Robustness] use exec instead of test , since the latter observably looks up exec [Deps] update is-shared-array-buffer [actions] restrict permissions [Dev Deps] update tape [Tests] add test coverage [Tests] avoid a bug in node v4.0 with bound function names","title":"1.19.3 / 2022-04-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1192-2022-03-28","text":"[Fix] ES2018+ : EnumerableOwnPropertyNames , ToIntegerOrInfinity , UTF16SurrogatePairToCodePoint : proper function names [Fix] ES2015+ : GetOwnPropertyKeys / IsExtensible / {Set,Test}IntegrityLevel : avoid a crash in IE 8 on missing ES5 intrinsics [Fix] helpers/DefineOwnProperty : avoid a crash in IE 8 [Fix] ES2015+ : StringCreate : properly check for prototype being String.prototype [Docs] ES2015+ : GetV : Fix spec URL [meta] operations: use a URL object instead of a URL string [meta] remove defunct greenkeeper config [meta] better eccheck command; fix indentation [Tests] node v0.6 lacks RegExp.prototype.source [Tests] remove a stray console.log [Tests] properly set the lastIndex in IE 8 [Tests] skip test due to IE 6-8 sparse/undefined bug [Tests] in IE 8, an empty regex is ` and not (?:)` [Tests] ES3 engines don\u2019t have .bind [Tests] avoid needless failures in ES3 engines that don't support descriptors [Tests] add test to cover https://github.com/tc39/ecma262/issues/2611 [Deps] update has-symbols , is-negative-zero , is-weakref , object-inspect [Dev Deps] update eslint , @ljharb/eslint-config , object.fromentries , safe-publish-latest , tape [actions] reuse common workflows [actions] update codecov uploader","title":"1.19.2 / 2022-03-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1191-2021-10-02","text":"[Fix] ES2020+ : CreateRegExpStringIterator : should not have enumerable methods [Dev Deps] update array.prototype.filter , array.prototype.indexof","title":"1.19.1 / 2021-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1190-2021-09-30","text":"[New] ES2021+ : IterableToList : make method parameter optional (#61) [New] add ES2021 [New] ES2020+ : add StringToBigInt , ToBigInt , ToBigInt64 , ToBigUint64 [New] ES2017 +: add IsSharedArrayBuffer , OrdinaryToPrimitive [New] ES2015+ : add CharacterRange , IsCompatiblePropertyDescriptor [New] ES2020+ : add CreateRegExpStringIterator [Fix] ES2020+ : ToBigInt64 / ToBigUint64 : avoid node v10.4-v10.8 bug with limited BigInt range [Fix] ES2020+ : AbstractRelationalComparison , AbstractEqualityComparison : support BigInt [Fix] ES2020+ : ToBigInt64 / ToBigUint64 : Improve the definitions of twoSixtyThree and twoSixtyFour (#140) [meta] do not publish .gitattributes [Tests] Correct the behavior of safeBigInt [Tests] Exclude dotfiles from the testing sweep (#141)","title":"1.19.0 / 2021-09-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1187-2021-09-28","text":"[Fix] getOwnPropertyDescriptor helper: avoid crashing in IE < 9 [Fix] ArraySetLength : node v0.6 has a bug where array lengths can be Set but not Defined [eslint] remove unused directive [Tests] fix spelling","title":"1.18.7 / 2021-09-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1186-2021-09-07","text":"[Fix] ES2020+ : NumberToBigInt : throw a SyntaxError when BigInts are not supported [Refactor] extract getSymbolDescription logic to get-symbol-description [Refactor] ES2018+ : AbstractRelationalComparison : use IsStringPrefix [Deps] update is-callable , is-regex , is-string [Dev Deps] update @ljharb/eslint-config , tape [Tests] GetSubstitution : add cases","title":"1.18.6 / 2021-09-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1185-2021-08-01","text":"[meta] remove \"exports\" (#133) [Dev Deps] update eslint","title":"1.18.5 / 2021-08-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1184-2021-07-29","text":"[meta] partial revert of b54cfe8525faff482450e843a49d43be3a086225 [Deps] update internal-slot , object-inspect [Dev Deps] update eslint , tape [Tests] ArraySetLength : increase coverage","title":"1.18.4 / 2021-07-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1183-2021-05-27","text":"[Fix] ES2020+ : ToNumber : ensure it throws on a BigInt (#130)","title":"1.18.3 / 2021-05-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1182-2021-05-25","text":"[meta] add helpers to \"exports\" field, for back compat","title":"1.18.2 / 2021-05-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1181-2021-05-25","text":"[readme] update and clarify entry points [meta] add \"exports\" field, with escape hatch [meta] add sideEffects field [meta] use prepublishOnly , for npm 7+ [eslint] clean up eslint rules [Deps] update is-regex , is-string , object-inspect , unbox-primitive [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape [actions] disable fail-fast on matrix jobs [actions] use node/install action instead of node/run [actions] update codeql-analysis to new best practices","title":"1.18.1 / 2021-05-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1180-2021-03-03","text":"[New] add ES2020 , and a number of additional AOs: See the changelog entries for the prereleases for more information: next.3 next.2 next.1 next.0 [Refactor] ES5+ : Abstract Relational Comparison : increase coverage [Tests] increase coverage [Tests] do not run coverage on node 0.6","title":"1.18.0 / 2021-03-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1180-next3-2021-03-01","text":"[New] ES2015 : add StringGetIndexProperty [New] ES2015+ : add RegExpCreate , SplitMatch , StringCreate [New] ES2016-ES2019 : add UTF16Decode [New] ES2020+ : add NumberToBigInt [New] ES2020+: add BigInt:: / Number::` methods: [Fix] ES5 : ToNumber : properly refuse to parse ES6+ forms [Fix] ES2015+ : Invoke : optional argumentsList must be a List of arguments, not a list of arguments [Fix] ES2016+ : UTF16Encoding : properly return a string code point instead of a numeric code point [Fix] ES2020 : NumberBitwiseOp : assert that x and y are Numbers [readme] remove travis/testling badge, fix repo URLs [meta] ES2015 : add missing CreateArrayIterator AO [meta] ES2015-ES2017 : add missing DaylightSavingTA AO [meta] rerun npm run spackle to update URLs left after 11d8c8df11c0d15d094a6035afed662e22b440ef [meta] update ecma URLs [meta] unignore 2020 operations list [meta] update operations scripts linting [meta] refactor getOps script to fetch all years at once [meta] refactor operations script to keep years in one place [meta] fix ES2015 spec URL [Deps] update has-symbols , string.prototype.trimend , string.prototype.trimstart , get-intrinsic , is-callable , is-regex [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.indexof , aud , es-value-fixtures , object.fromentries , tape , diff [operations] detect ES2020+ style T:: numeric operations [Tests] increase coverage [Tests] BigInt(1e17) throws on node v10.4-v10.6 [Tests] improve coverage on Number:: methods [Tests] tape v5 .equal now uses strict equality, so no more need for is() [Tests] improve BigInt:: and Number:: coverage [Tests] actually run all the helpers tests [Tests] ensure \"expected missing\" ops list is accurate [Tests] abstract away per-operation skips [Tests] skip BigInt:: tests on envs without BigInts [Tests] use es-value-fixtures [actions] update workflows","title":"1.18.0-next.3 / 2021-03-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1180-next2-2021-01-17","text":"[New] helpers : add isByteValue , isCodePoint , some [Fix] ES2018+ : fix GetSubstitution with named captures [Fix] ES2020 : GetIterator : add omitted hint parameter [Fix] ES2018 / ES2019 : SetFunctionLength : Infinities should throw [Fix] ES2020 : ToIndex uses SameValue instead of SameValueZero [Fix] ES2020 : CopyDataProperties uses CreateDataPropertyOrThrow instead of CreateDataProperty [Refactor] use extracted call-bind instead of local helpers [Refactor] use extracted get-intrinsic package [Deps] update call-bind , get-intrinsic , is-callable , is-negative-zero , is-regex , object-inspect , object.assign , string.prototype.trimend , string.prototype.trimstart [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.indexof , aud , diff , functions-have-names , has-bigints , has-strict-mode , object-is , object.fromentries , tape [actions] switch Automatic Rebase workflow to pull_request_target event [actions] add \"Allow Edits\" workflow [meta] pin cheerio to v1.0.0-rc.3, to fix getOps [meta] make all URLs consistent, and point to spec artifacts [meta] refactor deltas script; update eslint on operations scripts [meta] do not publish .github dir (#123) [Tests] add v.notNonNegativeIntegers , v.nonConstructorFunctions [Tests] migrate tests to Github Actions [Tests] run coverage on all tests [Tests] add npm run test:ses","title":"1.18.0-next.2 / 2021-01-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1180-next1-2020-09-30","text":"[Fix] ES2020 : ToInteger : -0 should always be normalized to +0 (#116) [patch] GetIntrinsic : Adapt to override-mistake-fix pattern (#115) [Fix] callBind : ensure compatibility with SES [Deps] update is-callable , object.assign [Dev Deps] update eslint , @ljharb/eslint-config [eslint] fix warning [Tests] temporarily allow SES tests to fail (#115) [Tests] ses-compat - initialize module after ses lockdown (#113) [Tests] [Refactor] use defineProperty helper rather than assignment [Tests] [Refactor] clean up defineProperty test helper","title":"1.18.0-next.1 / 2020-09-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1180-next0-2020-08-14","text":"[New] add ES2020 [New] GetIntrinsic : add %AggregateError% , %FinalizationRegistry% , and %WeakRef% [New] ES5 +: add abs , floor ; use modulo consistently [New] GetIntrinsic : Cache accessed intrinsics (#98) [New] GetIntrinsic : Add ES201x function intrinsics (#97) [New] ES2015 +: add QuoteJSONString , OrdinaryCreateFromConstructor [New] ES2017 +: add StringGetOwnProperty [New] ES2016 +: add UTF16Encoding [New] ES2018 +: add SetFunctionLength , UnicodeEscape [New] add isLeadingSurrogate / isTrailingSurrogate helpers [Fix] ES5 +: ToPropertyDescriptor : use intrinsic TypeError [Fix] ES2018+ : CopyDataProperties / NumberToString : use intrinsic TypeError [Deps] update is-regex , object-inspect [Dev Deps] update eslint","title":"1.18.0-next.0 / 2020-08-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1177-2020-09-30","text":"[Fix] ES2020 : ToInteger : -0 should always be normalized to +0 (#116) [patch] GetIntrinsic : Adapt to override-mistake-fix pattern (#115) [Fix] callBind : ensure compatibility with SES [Deps] update is-callable , is-regex , object-inspect , object.assign [Dev Deps] update eslint , @ljharb/eslint-config","title":"1.17.7 / 2020-09-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1176-2020-06-13","text":"[Fix] helpers/getSymbolDescription : use the global Symbol registry when available (#92) [Fix] ES2015+ : IsConstructor : when Reflect.construct is available, be spec-accurate (#93) [Fix] ES2015+ : Set : Always return boolean value (#101) [Fix] ES2015+ : Set : ensure exceptions are thrown in IE 9 when requested [Fix] Use Reflect.apply(\u2026) if available (#99) [Fix] helpers/floor : module-cache Math.floor [Fix] helpers/getSymbolDescription : Prefer bound description getter when present [Fix] 2016 : Use getIteratorMethod in IterableToArrayLike (#94) [Fix] helpers/OwnPropertyKeys : Use Reflect.ownKeys(\u2026) if available (#91) [Fix] 2018+ : Fix CopyDataProperties depending on this (#95) [meta] mark spackled files as autogenerated [meta] Type : fix spec URL [meta] ES2015 : complete ops list [Deps] update is\u2011callable , is\u2011regex [Deps] switch from string.prototype.trimleft / string.prototype.trimright to string.prototype.trimstart / string.prototype.trimend [Dev Deps] update eslint , @ljharb/eslint-config , in-publish , object-is , tape ; add aud [eslint] helpers/isPropertyDescriptor : fix indentation [Tests] helpers/getSymbolDescription : add test cases; some envs have Symbol.for but can not infer a name (#92) [Tests] try out CodeQL analysis [Tests] reformat expected missing ops [Tests] Run tests with undefined this (#96)","title":"1.17.6 / 2020-06-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1175-2020-03-22","text":"[Fix] CreateDataProperty : update an existing property [Fix] run missing spackle from cd7504701879ddea0f5981e99cbcf93bfea9171d [Dev Deps] update make-arrow-function , tape , @ljharb/eslint-config","title":"1.17.5 / 2020-03-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1174-2020-01-21","text":"[Fix] 2015+ : add code to handle IE 8\u2019s problems [Tests] fix tests for IE 8","title":"1.17.4 / 2020-01-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1173-2020-01-19","text":"[Fix] ObjectCreate 2015+ : Fall back to __proto__ and normal new in older browsers [Fix] GetIntrinsic : ensure the allowMissing property actually works on dotted intrinsics","title":"1.17.3 / 2020-01-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1172-2020-01-14","text":"[Fix] helpers/OwnPropertyKeys : include non-enumerables too","title":"1.17.2 / 2020-01-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1171-2020-01-14","text":"[Refactor] add OwnPropertyKeys helper, use it in CopyDataProperties [Refactor] IteratorClose : remove useless assignment [Dev Deps] update eslint , tape , diff","title":"1.17.1 / 2020-01-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1170-2019-12-20","text":"[New] Split up each operation into its own file (prereleased) [Fix] GetIntrinsic : IE 8 has a broken Object.getOwnPropertyDescriptor [Fix] object.assign is a runtime dep (prereleased) [Refactor] GetIntrinsic : remove the internal property salts, since % already handles that [Refactor] GetIntrinsic : further simplification [Deps] update is-callable , string.prototype.trimleft , string.prototype.trimright , is-regex [Dev Deps] update @ljharb/eslint-config , object-is , object.fromentries , tape [Tests] add .eslintignore [meta] remove unused Makefile and associated utils [meta] only run spackle script in publish (#78) (prereleased)","title":"1.17.0 / 2019-12-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1170-next1-2019-12-11","text":"[Fix] object.assign is a runtime dep [meta] only run spackle script in publish (#78)","title":"1.17.0-next.1 / 2019-12-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1170-next0-2019-12-11","text":"[New] Split up each operation into its own file","title":"1.17.0-next.0 / 2019-12-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1163-2019-12-04","text":"[Fix] GetIntrinsic : when given a path to a getter, return the actual getter [Dev Deps] update eslint","title":"1.16.3 / 2019-12-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1162-2019-11-24","text":"[Fix] IE 6-7 lack JSON [Fix] IE 6-8 strings can\u2019t use array slice, they need string slice [Dev Deps] update eslint","title":"1.16.2 / 2019-11-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1161-2019-11-24","text":"[Fix] GetIntrinsics : turns out IE 8 throws when Object.getOwnPropertyDescriptor(arguments); , and does not throw on callee anyways [Deps] update es-to-primitive , has-symbols , object-inspect [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest [meta] re-include year files inside operations [meta] add funding field [actions] add Automatic Rebase github action [Tests] use shared travis-ci config [Tests] disable check-coverage , and let codecov do it","title":"1.16.1 / 2019-11-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1160-2019-10-18","text":"[New] ES2015+ : add SetFunctionName [New] ES2015+ : add GetPrototypeFromConstructor , with caveats [New] ES2015+ : add CreateListFromArrayLike [New] ES2016+ : add OrdinarySetPrototypeOf [New] ES2016+ : add OrdinaryGetPrototypeOf [New] add getSymbolDescription and getInferredName helpers [Fix] GetIterator : add fallback for pre-Symbol environments, tests [Dev Deps] update object.fromentries [Tests] add node v12.2","title":"1.16.0 / 2019-10-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1150-2019-10-02","text":"[New] ES2018 +: add DateString , TimeString [New] ES2015 +: add ToDateString [New] ES5 +: add msFromTime , SecFromTime , MinFromTime , HourFromTime , TimeWithinDay , Day , DayFromYear , TimeFromYear , YearFromTime , WeekDay , DaysInYear , InLeapYear , DayWithinYear , MonthFromTime , DateFromTime , MakeDay , MakeDate , MakeTime , TimeClip , modulo [New] add regexTester helper [New] add callBound helper [New] add ES2020\u2019s intrinsic dot notation [New] add isPrefixOf helper [New] add maxSafeInteger helper [Deps] update string.prototype.trimleft , string.prototype.trimright [Dev Deps] update eslint [Tests] on node v12.11 [meta] npmignore operations scripts; add \"deltas\"","title":"1.15.0 / 2019-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1142-2019-09-08","text":"[Fix] ES2016 : IterableToArrayLike : add proper fallback for strings, pre-Symbols [Tests] on node v12.10","title":"1.14.2 / 2019-09-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1141-2019-09-03","text":"[meta] republish with some extra files removed","title":"1.14.1 / 2019-09-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1140-2019-09-02","text":"[New] add ES2019 [New] ES2017+ : add IterableToList [New] ES2016 : add IterableToArrayLike [New] ES2015+ : add ArrayCreate , ArraySetLength , OrdinaryDefineOwnProperty , OrdinaryGetOwnProperty , OrdinaryHasProperty , CreateHTML , GetOwnPropertyKeys , InstanceofOperator , SymbolDescriptiveString , GetSubstitution , ValidateAndApplyPropertyDescriptor , IsPromise , OrdinaryHasInstance , TestIntegrityLevel , SetIntegrityLevel [New] add callBind helper, and use it [New] add helpers: isPropertyDescriptor , every [New] ES5+: add Abstract Relational Comparison [New] ES5+: add Abstract Equality Comparison , Strict Equality Comparison [Fix] ES2015+ : GetIterator : only require native Symbols when method is omitted [Fix] ES2015 : Call : error message now properly displays Symbols using object-inspect [Fix] ES2015+ : ValidateAndApplyPropertyDescriptor : use ES2017 logic to bypass spec bugs [Fix] ES2015+ : CreateDataProperty , DefinePropertyOrThrow , ValidateAndApplyPropertyDescriptor : add fallbacks for ES3 [Fix] ES2015+ : FromPropertyDescriptor : no longer requires a fully complete Property Descriptor [Fix] ES5 : IsPropertyDescriptor : call into IsDataDescriptor and IsAccessorDescriptor [Refactor] use has-symbols for Symbol detection [Fix] helpers/assertRecord : remove console.log [Deps] update object-keys [readme] add security note [meta] change http URLs to https [meta] linter cleanup [meta] fix getOps script [meta] add FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , semver , replace , cheerio , tape [Tests] up to node v12.9 , v11.15 , v10.16 , v8.16 , v6.17 [Tests] temporarily allow node 0.6 to fail; segfaulting in travis [Tests] use the values helper more in es5 tests [Tests] fix linting to apply to all files [Tests] run npx aud only on prod deps [Tests] add v.descriptors helpers [Tests] use npx aud instead of npm audit with hoops [Tests] use eclint instead of editorconfig-tools [Tests] some intrinsic cleanup [Tests] migrate es5 tests to use values helper [Tests] add some missing ES2015 ops","title":"1.14.0 / 2019-09-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1130-2019-01-02","text":"[New] add ES2018 [New] add ES2015/ES2016: EnumerableOwnNames; ES2017: EnumerableOwnProperties [New] ES2015+ : add thisBooleanValue , thisNumberValue , thisStringValue , thisTimeValue [New] ES2015+ : add DefinePropertyOrThrow , DeletePropertyOrThrow , CreateMethodProperty [New] add assertRecord helper [Deps] update is-callable , has , object-keys , es-to-primitive [Dev Deps] update eslint , @ljharb/eslint-config , tape , semver , safe-publish-latest , replace [Tests] use npm audit instead of nsp [Tests] remove jscs [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 [Tests] move descriptor factories to values helper [Tests] add getOps to programmatically fetch abstract operation names","title":"1.13.0 / 2019-01-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1120-2018-05-31","text":"[New] add GetIntrinsic entry point [New] ES2015 +: add ObjectCreate [Robustness]: ES2015+ : ensure Math.{abs,floor} and Function.call are cached","title":"1.12.0 / 2018-05-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1110-2018-03-21","text":"[New] ES2015+ : add iterator abstract ops [Dev Deps] update eslint , nsp , object.assign , semver , tape [Tests] up to node v9.8 , v8.10 , v6.13","title":"1.11.0 / 2018-03-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#1100-2017-11-24","text":"[New] ES2015+: AdvanceStringIndex [Dev Deps] update eslint , nsp [Tests] require node 0.6 to pass again [Tests] up to node v9.2 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS","title":"1.10.0 / 2017-11-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#190-2017-09-30","text":"[New] es2015+ : add ArraySpeciesCreate [New] ES2015+: add CreateDataProperty and CreateDataPropertyOrThrow [Tests] consolidate duplicated tests [Tests] increase coverage [Dev Deps] update nsp , eslint","title":"1.9.0 / 2017-09-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#182-2017-09-03","text":"[Fix] es2015 +: ToNumber : provide the proper hint for Date objects (#27) [Dev Deps] update eslint","title":"1.8.2 / 2017-09-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#181-2017-08-30","text":"[Fix] ES2015+: ToPropertyKey : should return a symbol for Symbols (#26) [Deps] update function-bind [Dev Deps] update eslint , @ljharb/eslint-config [Docs] github broke markdown parsing","title":"1.8.1 / 2017-08-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#180-2017-08-04","text":"[New] add ES2017 [New] move es6+ to es2015+; leave es6/es7 as aliases [New] ES5+: add IsPropertyDescriptor , IsAccessorDescriptor , IsDataDescriptor , IsGenericDescriptor , FromPropertyDescriptor , ToPropertyDescriptor [New] ES2015+: add CompletePropertyDescriptor , Set , HasOwnProperty , HasProperty , IsConcatSpreadable , Invoke , CreateIterResultObject , RegExpExec [Fix] es7/es2016: do not mutate ES6 [Fix] assign helper only supports one source [Deps] update is-regex [Dev Deps] update nsp , eslint , @ljharb/eslint-config [Dev Deps] update eslint , @ljharb/eslint-config , nsp , semver , tape [Tests] add tests for missing and excess operations [Tests] add codecov for coverage [Tests] up to node v8.2 , v7.10 , v6.11 , v4.8 ; newer npm breaks on older node [Tests] use same lists of value types across tests; ensure tests are the same when ops are the same [Tests] ES2015: add ToNumber symbol tests [Tests] switch to nyc for code coverage [Tests] make IsRegExp tests consistent across editions","title":"1.8.0 / 2017-08-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#170-2017-01-22","text":"[New] ES6: Add GetMethod (#16) [New] ES6: Add GetV (#16) [New] ES6: Add Get (#17) [Tests] up to node v7.4 , v6.9 , v4.6 ; improve test matrix [Dev Deps] update tape , nsp , eslint , @ljharb/eslint-config , safe-publish-latest","title":"1.7.0 / 2017-01-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#161-2016-08-21","text":"[Fix] ES6: IsConstructor should return true for class constructors.","title":"1.6.1 / 2016-08-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#160-2016-08-20","text":"[New] ES5 / ES6: add Type [New] ES6: SpeciesConstructor [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver ; add safe-publish-latest [Tests] up to node v6.4 , v5.12 , v4.5","title":"1.6.0 / 2016-08-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#151-2016-05-30","text":"[Fix] ES.IsRegExp : actually look up Symbol.match on the argument [Refactor] create isNaN helper [Deps] update is-callable , function-bind [Deps] update es-to-primitive , fix ES5 tests [Dev Deps] update jscs , eslint , @ljharb/eslint-config , tape , nsp [Tests] up to node v6.2 , v5.11 , v4.4 [Tests] use pretest/posttest for linting/security","title":"1.5.1 / 2016-05-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#150-2015-12-27","text":"[New] adds Symbol.toPrimitive support via es-to-primitive [Deps] update is-callable , es-to-primitive [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver , tape [Tests] up to node v5.3","title":"1.5.0 / 2015-12-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#143-2015-11-04","text":"[Fix] ES6.ToNumber : should give NaN for explicitly signed hex strings (#4) [Refactor] ES6.ToNumber : No need to double-trim [Refactor] group tests better [Tests] should still pass on node v0.8","title":"1.4.3 / 2015-11-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#142-2015-11-02","text":"[Fix] ensure ES.ToNumber trims whitespace, and does not trim non-whitespace (#3)","title":"1.4.2 / 2015-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#141-2015-10-31","text":"[Fix] ensure only 0-1 are valid binary and 0-7 are valid octal digits (#2) [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config [Tests] on node v5.0 [Tests] fix npm upgrades for older node versions package.json: use object form of \"authors\", add \"contributors\"","title":"1.4.1 / 2015-10-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#140-2015-09-26","text":"[Deps] update is-callable [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config [Tests] on node v4.2 [New] Add SameValueNonNumber to ES7","title":"1.4.0 / 2015-09-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#132-2015-09-26","text":"[Fix] Fix ES6.IsRegExp to properly handle Symbol.match , per spec. [Tests] up to io.js v3.3 , node v4.1 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver","title":"1.3.2 / 2015-09-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#131-2015-08-15","text":"[Fix] Ensure that objects that toString to a binary or octal literal also convert properly","title":"1.3.1 / 2015-08-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#130-2015-08-15","text":"[New] ES6\u2019s ToNumber now supports binary and octal literals. [Dev Deps] update jscs , eslint , @ljharb/eslint-config , tape [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Tests] up to io.js v3.0","title":"1.3.0 / 2015-08-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#122-2015-07-28","text":"[Fix] Both ES5.CheckObjectCoercible and ES6.RequireObjectCoercible return the value if they don't throw. [Tests] Test on latest io.js versions. [Dev Deps] Update eslint , jscs , tape , semver , covert , nsp","title":"1.2.2 / 2015-07-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#121-2015-03-20","text":"Fix isFinite helper.","title":"1.2.1 / 2015-03-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#120-2015-03-19","text":"Use es-to-primitive for ToPrimitive methods. Test on latest io.js versions; allow failures on all but 2 latest node / io.js versions.","title":"1.2.0 / 2015-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#112-2015-03-20","text":"Fix isFinite helper.","title":"1.1.2 / 2015-03-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#111-2015-03-19","text":"Fix isPrimitive check for functions Update eslint , editorconfig-tools , semver , nsp","title":"1.1.1 / 2015-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#110-2015-02-17","text":"Add ES7 export (non-default). All grade A-supported node / iojs versions now ship with an npm that understands ^ . Test on iojs-v1.2 .","title":"1.1.0 / 2015-02-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#101-2015-01-30","text":"Use is-callable instead of an internal function. Update tape , jscs , nsp , eslint","title":"1.0.1 / 2015-01-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-abstract/CHANGELOG/#100-2015-01-10","text":"v1.0.0","title":"1.0.0 / 2015-01-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/","text":"es-define-property Object.defineProperty , but not IE 8's broken one. Example const assert = require('assert'); const $defineProperty = require('es-define-property'); if ($defineProperty) { assert.equal($defineProperty, Object.defineProperty); } else if (Object.defineProperty) { assert.equal($defineProperty, false, 'this is IE 8'); } else { assert.equal($defineProperty, false, 'this is an ES3 engine'); } Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-define-property Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/#es-define-property","text":"Object.defineProperty , but not IE 8's broken one.","title":"es-define-property"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/#example","text":"const assert = require('assert'); const $defineProperty = require('es-define-property'); if ($defineProperty) { assert.equal($defineProperty, Object.defineProperty); } else if (Object.defineProperty) { assert.equal($defineProperty, false, 'this is IE 8'); } else { assert.equal($defineProperty, false, 'this is an ES3 engine'); }","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.0 - 2024-02-12 Commits Initial implementation, tests, readme, types 3e154e1 Initial commit 07d98de npm init c4eb634 Only apps should have lockfiles 7af86ec","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/CHANGELOG/#v100-2024-02-12","text":"","title":"v1.0.0 - 2024-02-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-define-property/CHANGELOG/#commits","text":"Initial implementation, tests, readme, types 3e154e1 Initial commit 07d98de npm init c4eb634 Only apps should have lockfiles 7af86ec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/","text":"es-errors A simple cache for a few of the JS Error constructors. Example const assert = require('assert'); const Base = require('es-errors'); const Eval = require('es-errors/eval'); const Range = require('es-errors/range'); const Ref = require('es-errors/ref'); const Syntax = require('es-errors/syntax'); const Type = require('es-errors/type'); const URI = require('es-errors/uri'); assert.equal(Base, Error); assert.equal(Eval, EvalError); assert.equal(Range, RangeError); assert.equal(Ref, ReferenceError); assert.equal(Syntax, SyntaxError); assert.equal(Type, TypeError); assert.equal(URI, URIError); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-errors Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/#es-errors","text":"A simple cache for a few of the JS Error constructors.","title":"es-errors"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/#example","text":"const assert = require('assert'); const Base = require('es-errors'); const Eval = require('es-errors/eval'); const Range = require('es-errors/range'); const Ref = require('es-errors/ref'); const Syntax = require('es-errors/syntax'); const Type = require('es-errors/type'); const URI = require('es-errors/uri'); assert.equal(Base, Error); assert.equal(Eval, EvalError); assert.equal(Range, RangeError); assert.equal(Ref, ReferenceError); assert.equal(Syntax, SyntaxError); assert.equal(Type, TypeError); assert.equal(URI, URIError);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.3.0 - 2024-02-05 Commits [New] add EvalError and URIError 1927627 v1.2.1 - 2024-02-04 Commits [Fix] add missing exports entry 5bb5f28 v1.2.0 - 2024-02-04 Commits [New] add ReferenceError 6d8cf5b v1.1.0 - 2024-02-04 Commits [New] add base Error 2983ab6 v1.0.0 - 2024-02-03 Commits Initial implementation, tests, readme, type 8f47631 Initial commit ea5d099 npm init 6f5ebf9 Only apps should have lockfiles e1a0aeb [meta] add sideEffects flag a9c7d46","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#v130-2024-02-05","text":"","title":"v1.3.0 - 2024-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#commits","text":"[New] add EvalError and URIError 1927627","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#v121-2024-02-04","text":"","title":"v1.2.1 - 2024-02-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#commits_1","text":"[Fix] add missing exports entry 5bb5f28","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#v120-2024-02-04","text":"","title":"v1.2.0 - 2024-02-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#commits_2","text":"[New] add ReferenceError 6d8cf5b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#v110-2024-02-04","text":"","title":"v1.1.0 - 2024-02-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#commits_3","text":"[New] add base Error 2983ab6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#v100-2024-02-03","text":"","title":"v1.0.0 - 2024-02-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-errors/CHANGELOG/#commits_4","text":"Initial implementation, tests, readme, type 8f47631 Initial commit ea5d099 npm init 6f5ebf9 Only apps should have lockfiles e1a0aeb [meta] add sideEffects flag a9c7d46","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/","text":"es-iterator-helpers An ESnext spec-compliant sync iterator helpers shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API \u201cmulti\u201d interface. It works in an ES3-supported environment and complies with the spec . Because the Iterator.prototype methods depend on a receiver (the this value), the main export in each subdirectory takes the string to operate on as the first argument. The main export of the package itself is simply an array of the available directory names. It\u2019s sole intended use is for build tooling and testing. Supported things Iterator constructor Iterator.prototype Iterator.from Iterator.prototype.constructor Iterator.prototype.drop Iterator.prototype.every Iterator.prototype.filter Iterator.prototype.find Iterator.prototype.flatMap Iterator.prototype.forEach Iterator.prototype.map Iterator.prototype.reduce Iterator.prototype.some Iterator.prototype.take Iterator.prototype.toArray Environments where this is needed node v22, Chrome >= v122: has a bug node < v22, Chrome < v122, Safari <= v17.1, Firefox <= v125: not implemented Getting started npm install --save es-iterator-helpers Usage/Examples const map = require('es-iterator-helpers/Iterator.prototype.map'); const toArray = require('es-iterator-helpers/Iterator.prototype.toArray'); const assert = require('assert'); const iterator = [1, 2, 3].values(); const mapped = map(iterator, (x) => x + 10); assert.deepEqual( mapped.next(), { done: false, value: 11, } ); assert.deepEqual( toArray(mapped), [12, 13] ); require('./auto'); // shim all of the methods require('./Iterator.prototype.map/auto'); // shim the \u201cmap\u201d method Tests Simply clone the repo, npm install , and run npm test","title":"es-iterator-helpers Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/#es-iterator-helpers","text":"An ESnext spec-compliant sync iterator helpers shim/polyfill/replacement that works as far down as ES3. This package implements the es-shim API \u201cmulti\u201d interface. It works in an ES3-supported environment and complies with the spec . Because the Iterator.prototype methods depend on a receiver (the this value), the main export in each subdirectory takes the string to operate on as the first argument. The main export of the package itself is simply an array of the available directory names. It\u2019s sole intended use is for build tooling and testing.","title":"es-iterator-helpers"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/#supported-things","text":"Iterator constructor Iterator.prototype Iterator.from Iterator.prototype.constructor Iterator.prototype.drop Iterator.prototype.every Iterator.prototype.filter Iterator.prototype.find Iterator.prototype.flatMap Iterator.prototype.forEach Iterator.prototype.map Iterator.prototype.reduce Iterator.prototype.some Iterator.prototype.take Iterator.prototype.toArray","title":"Supported things"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/#environments-where-this-is-needed","text":"node v22, Chrome >= v122: has a bug node < v22, Chrome < v122, Safari <= v17.1, Firefox <= v125: not implemented","title":"Environments where this is needed"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/#getting-started","text":"npm install --save es-iterator-helpers","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/#usageexamples","text":"const map = require('es-iterator-helpers/Iterator.prototype.map'); const toArray = require('es-iterator-helpers/Iterator.prototype.toArray'); const assert = require('assert'); const iterator = [1, 2, 3].values(); const mapped = map(iterator, (x) => x + 10); assert.deepEqual( mapped.next(), { done: false, value: 11, } ); assert.deepEqual( toArray(mapped), [12, 13] ); require('./auto'); // shim all of the methods require('./Iterator.prototype.map/auto'); // shim the \u201cmap\u201d method","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.19 - 2024-04-24 Commits [patch] remove unused AOs 698cef7 [Fix] drop , filter , flatMap , map : rpatch a v8 bug when polyfilling 3670395 [Deps] update es-abstract d2b47a5 v1.0.18 - 2024-03-15 Commits [Deps] update es-abstract 6b45f15 [Deps] update es-set-tostringtag , has-proto , safe-array-concat 6350106 [Dev Deps] update tape 5509b40 [Deps] remove an unused dep 78e34a5 v1.0.17 - 2024-02-13 Fixed [Fix] avoid use of internal assertRecord helper from es-abstract #5 Commits [Deps] update call-bind , es-abstract , has-property-descriptors e563ee7 v1.0.16 - 2024-02-09 Commits [Refactor] use IteratorStepValue aa62d72 [Refactor] use es-errors instead of get-intrinsic where possible 05a25ae [Deps] update call-bind , es-abstract , es-set-tostringtag , function-bind , get-intrinsic , has-property-descriptors , internal-slot , safe-array-concat 6aeee43 [Dev Deps] update aud , eslint-plugin-import , mock-property , npmignore , object-inspect , tape 0a21fdb [Deps] update call-bind , es-errors , get-intrinsic , internal-slot 5b10625 [meta] add missing engines.node 1534039 [Deps] update get-intrinsic 37da5f2 [Dev Deps] update has-tostringtag a7cac51 v1.0.15 - 2023-09-13 Commits [New] add Iterator.prototype shim c4a6203 [Tests] add passing tests for native generators 57bae8c [Deps] update define-properties , iterator.prototype , safe-array-concat 56ca087 v1.0.14 - 2023-08-26 Commits [Deps] update es-abstract 477b123 [Dev Deps] update aud , eslint-plugin-import , tape e4ea414 v1.0.13 - 2023-08-16 Fixed [Deps] add missing deps; add eslint-plugin-import #3 v1.0.12 - 2023-07-14 Commits [Fix] avoid creating string wrapper objects with sloppy mode flatMap mappers db16b34 [Deps] update es-abstract f002147 [Dev Deps] update @ljharb/eslint-config , aud [ 42064e8`](https://github.com/es-shims/iterator-helpers/commit/42064e80e0cc37f5e4676c2133dacae7456e313f) [meta] fix tidelift funding identifier 896fd4f v1.0.11 - 2023-05-22 Commits [Fix] iterator helpers are not a constructor 8a7f999 v1.0.10 - 2023-05-18 Commits [patch] remove IsCallable check on NextMethod, deferring errors to callsite bbb7efa [patch] change Symbol.iterator fallback from callable check to nullish check ec3e255 [Tests] add test cases 5117c47 [Dev Deps] update @es-shims/api 9fa13a0 [Dev Deps] update @es-shims/api b74b0ac v1.0.9 - 2023-05-02 Commits [Refactor] use 2022 AO instead of 2015 AO 75ee5c4 v1.0.8 - 2023-05-02 Commits [Fix] flatMap : close the inner iterator when applicable 4dc94e0 v1.0.7 - 2023-05-01 Commits [Fix] flatMap : properly handle yielded iterables 3a78767 [Fix] flatMap : only increment the count when iterating the outer iterator 955d0b0 v1.0.6 - 2023-04-20 Commits [Refactor] GetIteratorFlattenable : remove hint 781fc7c [Refactor] GetIteratorFlattenable : use GetIteratorDirect 026118b [Refactor] use safe-array-concat 1d985a4 v1.0.5 - 2023-03-22 Commits [Tests] add passing tests for 4240029 c2082fe [Fix] properly allow subclasses of Iterator to be constructed 5cebe2a v1.0.4 - 2023-03-21 Commits [Fix] validate arguments first 4240029 [Fix] close underlying iterator when helper is closed f5372c7 [Tests] Iterator : remove an unnecessary call-bind 7d0ba59 v1.0.3 - 2023-03-17 Commits [Fix] drop / filter / flatMap / map / take : properly IfAbruptCloseIterator ff643a0 [Refactor] use NormalCompletion / ThrowCompletion instead of thunks 68fd937 [Fix] filter : IteratorClose needs to rethrow the error 200474f [Fix] filter : properly increment the counter 14aa2d8 [Fix] Iterator can not be new ed or invoked directly 6fbd68e [Fix] Iterator.prototype should be non-writable 1080288 [Deps] update es-abstract b7913da [Dev Deps] update @es-shims/api 0071bed v1.0.2 - 2023-02-09 Commits [Refactor] inline 2023 impls of Iterator AOs until es-abstract is published with them b9c80c5 [Fix] ensure calling .return does not invoke the next iteration 9e28ed5 [Fix] map : pass the proper index argument to the mapper 125e3ca [Deps] update internal-slot 43351b6 v1.0.1 - 2023-02-07 Commits [Fix] Iterator : throw when Iterator() is called without new a6fc7e7 v1.0.0 - 2023-02-05 Commits Initial implementation, tests, readme 650713e Initial commit 2379dfd npm init f77411a Only apps should have lockfiles 313dcf5","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1019-2024-04-24","text":"","title":"v1.0.19 - 2024-04-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits","text":"[patch] remove unused AOs 698cef7 [Fix] drop , filter , flatMap , map : rpatch a v8 bug when polyfilling 3670395 [Deps] update es-abstract d2b47a5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1018-2024-03-15","text":"","title":"v1.0.18 - 2024-03-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_1","text":"[Deps] update es-abstract 6b45f15 [Deps] update es-set-tostringtag , has-proto , safe-array-concat 6350106 [Dev Deps] update tape 5509b40 [Deps] remove an unused dep 78e34a5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1017-2024-02-13","text":"","title":"v1.0.17 - 2024-02-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#fixed","text":"[Fix] avoid use of internal assertRecord helper from es-abstract #5","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_2","text":"[Deps] update call-bind , es-abstract , has-property-descriptors e563ee7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1016-2024-02-09","text":"","title":"v1.0.16 - 2024-02-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_3","text":"[Refactor] use IteratorStepValue aa62d72 [Refactor] use es-errors instead of get-intrinsic where possible 05a25ae [Deps] update call-bind , es-abstract , es-set-tostringtag , function-bind , get-intrinsic , has-property-descriptors , internal-slot , safe-array-concat 6aeee43 [Dev Deps] update aud , eslint-plugin-import , mock-property , npmignore , object-inspect , tape 0a21fdb [Deps] update call-bind , es-errors , get-intrinsic , internal-slot 5b10625 [meta] add missing engines.node 1534039 [Deps] update get-intrinsic 37da5f2 [Dev Deps] update has-tostringtag a7cac51","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1015-2023-09-13","text":"","title":"v1.0.15 - 2023-09-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_4","text":"[New] add Iterator.prototype shim c4a6203 [Tests] add passing tests for native generators 57bae8c [Deps] update define-properties , iterator.prototype , safe-array-concat 56ca087","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1014-2023-08-26","text":"","title":"v1.0.14 - 2023-08-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_5","text":"[Deps] update es-abstract 477b123 [Dev Deps] update aud , eslint-plugin-import , tape e4ea414","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1013-2023-08-16","text":"","title":"v1.0.13 - 2023-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#fixed_1","text":"[Deps] add missing deps; add eslint-plugin-import #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1012-2023-07-14","text":"","title":"v1.0.12 - 2023-07-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_6","text":"[Fix] avoid creating string wrapper objects with sloppy mode flatMap mappers db16b34 [Deps] update es-abstract f002147 [Dev Deps] update @ljharb/eslint-config , aud [ 42064e8`](https://github.com/es-shims/iterator-helpers/commit/42064e80e0cc37f5e4676c2133dacae7456e313f) [meta] fix tidelift funding identifier 896fd4f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1011-2023-05-22","text":"","title":"v1.0.11 - 2023-05-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_7","text":"[Fix] iterator helpers are not a constructor 8a7f999","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v1010-2023-05-18","text":"","title":"v1.0.10 - 2023-05-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_8","text":"[patch] remove IsCallable check on NextMethod, deferring errors to callsite bbb7efa [patch] change Symbol.iterator fallback from callable check to nullish check ec3e255 [Tests] add test cases 5117c47 [Dev Deps] update @es-shims/api 9fa13a0 [Dev Deps] update @es-shims/api b74b0ac","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v109-2023-05-02","text":"","title":"v1.0.9 - 2023-05-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_9","text":"[Refactor] use 2022 AO instead of 2015 AO 75ee5c4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v108-2023-05-02","text":"","title":"v1.0.8 - 2023-05-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_10","text":"[Fix] flatMap : close the inner iterator when applicable 4dc94e0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v107-2023-05-01","text":"","title":"v1.0.7 - 2023-05-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_11","text":"[Fix] flatMap : properly handle yielded iterables 3a78767 [Fix] flatMap : only increment the count when iterating the outer iterator 955d0b0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v106-2023-04-20","text":"","title":"v1.0.6 - 2023-04-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_12","text":"[Refactor] GetIteratorFlattenable : remove hint 781fc7c [Refactor] GetIteratorFlattenable : use GetIteratorDirect 026118b [Refactor] use safe-array-concat 1d985a4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v105-2023-03-22","text":"","title":"v1.0.5 - 2023-03-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_13","text":"[Tests] add passing tests for 4240029 c2082fe [Fix] properly allow subclasses of Iterator to be constructed 5cebe2a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v104-2023-03-21","text":"","title":"v1.0.4 - 2023-03-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_14","text":"[Fix] validate arguments first 4240029 [Fix] close underlying iterator when helper is closed f5372c7 [Tests] Iterator : remove an unnecessary call-bind 7d0ba59","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v103-2023-03-17","text":"","title":"v1.0.3 - 2023-03-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_15","text":"[Fix] drop / filter / flatMap / map / take : properly IfAbruptCloseIterator ff643a0 [Refactor] use NormalCompletion / ThrowCompletion instead of thunks 68fd937 [Fix] filter : IteratorClose needs to rethrow the error 200474f [Fix] filter : properly increment the counter 14aa2d8 [Fix] Iterator can not be new ed or invoked directly 6fbd68e [Fix] Iterator.prototype should be non-writable 1080288 [Deps] update es-abstract b7913da [Dev Deps] update @es-shims/api 0071bed","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v102-2023-02-09","text":"","title":"v1.0.2 - 2023-02-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_16","text":"[Refactor] inline 2023 impls of Iterator AOs until es-abstract is published with them b9c80c5 [Fix] ensure calling .return does not invoke the next iteration 9e28ed5 [Fix] map : pass the proper index argument to the mapper 125e3ca [Deps] update internal-slot 43351b6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v101-2023-02-07","text":"","title":"v1.0.1 - 2023-02-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_17","text":"[Fix] Iterator : throw when Iterator() is called without new a6fc7e7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#v100-2023-02-05","text":"","title":"v1.0.0 - 2023-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-iterator-helpers/CHANGELOG/#commits_18","text":"Initial implementation, tests, readme 650713e Initial commit 2379dfd npm init f77411a Only apps should have lockfiles 313dcf5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/","text":"es-object-atoms ES Object-related atoms: Object, ToObject, RequireObjectCoercible. Example const assert = require('assert'); const $Object = require('es-object-atoms'); const ToObject = require('es-object-atoms/ToObject'); const RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible'); assert.equal($Object, Object); assert.throws(() => ToObject(null), TypeError); assert.throws(() => ToObject(undefined), TypeError); assert.throws(() => RequireObjectCoercible(null), TypeError); assert.throws(() => RequireObjectCoercible(undefined), TypeError); assert.deepEqual(RequireObjectCoercible(true), true); assert.deepEqual(ToObject(true), Object(true)); const obj = {}; assert.equal(RequireObjectCoercible(obj), obj); assert.equal(ToObject(obj), obj); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-object-atoms Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/#es-object-atoms","text":"ES Object-related atoms: Object, ToObject, RequireObjectCoercible.","title":"es-object-atoms"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/#example","text":"const assert = require('assert'); const $Object = require('es-object-atoms'); const ToObject = require('es-object-atoms/ToObject'); const RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible'); assert.equal($Object, Object); assert.throws(() => ToObject(null), TypeError); assert.throws(() => ToObject(undefined), TypeError); assert.throws(() => RequireObjectCoercible(null), TypeError); assert.throws(() => RequireObjectCoercible(undefined), TypeError); assert.deepEqual(RequireObjectCoercible(true), true); assert.deepEqual(ToObject(true), Object(true)); const obj = {}; assert.equal(RequireObjectCoercible(obj), obj); assert.equal(ToObject(obj), obj);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.0 - 2024-03-16 Commits Initial implementation, tests, readme, types f1499db Initial commit 99eedc7 [meta] rename repo fc851fa npm init b909377 Only apps should have lockfiles 7249edd","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/CHANGELOG/#v100-2024-03-16","text":"","title":"v1.0.0 - 2024-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-object-atoms/CHANGELOG/#commits","text":"Initial implementation, tests, readme, types f1499db Initial commit 99eedc7 [meta] rename repo fc851fa npm init b909377 Only apps should have lockfiles 7249edd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/","text":"es-set-tostringtag A helper to optimistically set Symbol.toStringTag, when possible. Most common usage: var assert = require('assert'); var setToStringTag = require('es-set-tostringtag'); var obj = {}; assert.equal(Object.prototype.toString.call(obj), '[object Object]'); setToStringTag(obj, 'tagged!'); assert.equal(Object.prototype.toString.call(obj), '[object tagged!]'); Tests Simply clone the repo, npm install , and run npm test","title":"es-set-tostringtag Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/#es-set-tostringtag","text":"A helper to optimistically set Symbol.toStringTag, when possible. Most common usage: var assert = require('assert'); var setToStringTag = require('es-set-tostringtag'); var obj = {}; assert.equal(Object.prototype.toString.call(obj), '[object Object]'); setToStringTag(obj, 'tagged!'); assert.equal(Object.prototype.toString.call(obj), '[object tagged!]');","title":"es-set-tostringtag"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.3 - 2024-02-20 Commits add types d538513 [Deps] update get-intrinsic , has-tostringtag , hasown d129b29 [Dev Deps] update aud , npmignore , tape 132ed23 [Tests] fix hasOwn require f89c831 v2.0.2 - 2023-10-20 Commits [Refactor] use hasown instead of has 0cc6c4e [Dev Deps] update @ljharb/eslint-config , aud , tape 70e447c [Deps] update get-intrinsic 826aab7 v2.0.1 - 2023-01-05 Fixed [Fix] move has to prod deps #2 Commits [Dev Deps] update @ljharb/eslint-config b9eecd2 v2.0.0 - 2022-12-21 Commits [Tests] refactor tests 168dcfb [Breaking] do not set toStringTag if it is already set 226ab87 [New] add force option to set even if already set 1abd4ec v1.0.0 - 2022-12-21 Commits Initial implementation, tests, readme a0e1147 Initial commit ffd4aff npm init fffe5bd Only apps should have lockfiles d363871","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#v203-2024-02-20","text":"","title":"v2.0.3 - 2024-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#commits","text":"add types d538513 [Deps] update get-intrinsic , has-tostringtag , hasown d129b29 [Dev Deps] update aud , npmignore , tape 132ed23 [Tests] fix hasOwn require f89c831","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#v202-2023-10-20","text":"","title":"v2.0.2 - 2023-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#commits_1","text":"[Refactor] use hasown instead of has 0cc6c4e [Dev Deps] update @ljharb/eslint-config , aud , tape 70e447c [Deps] update get-intrinsic 826aab7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#v201-2023-01-05","text":"","title":"v2.0.1 - 2023-01-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#fixed","text":"[Fix] move has to prod deps #2","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#commits_2","text":"[Dev Deps] update @ljharb/eslint-config b9eecd2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#v200-2022-12-21","text":"","title":"v2.0.0 - 2022-12-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#commits_3","text":"[Tests] refactor tests 168dcfb [Breaking] do not set toStringTag if it is already set 226ab87 [New] add force option to set even if already set 1abd4ec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#v100-2022-12-21","text":"","title":"v1.0.0 - 2022-12-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-set-tostringtag/CHANGELOG/#commits_4","text":"Initial implementation, tests, readme a0e1147 Initial commit ffd4aff npm init fffe5bd Only apps should have lockfiles d363871","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/","text":"es-shim-unscopables Helper package to shim a method into Array.prototype[Symbol.unscopables] Example const assert = require('assert'); const shimUnscopables = require('es-shim-unscopables'); let copyWithin; let concat; with ([]) { assert.equal(concat, Array.prototype.concat); assert.notEqual(copyWithin, Array.prototype.copyWithin); } shimUnscopables('concat'); with ([]) { assert.notEqual(concat, Array.prototype.concat); assert.notEqual(copyWithin, Array.prototype.copyWithin); } Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"es-shim-unscopables Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/#es-shim-unscopables","text":"Helper package to shim a method into Array.prototype[Symbol.unscopables]","title":"es-shim-unscopables"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/#example","text":"const assert = require('assert'); const shimUnscopables = require('es-shim-unscopables'); let copyWithin; let concat; with ([]) { assert.equal(concat, Array.prototype.concat); assert.notEqual(copyWithin, Array.prototype.copyWithin); } shimUnscopables('concat'); with ([]) { assert.notEqual(concat, Array.prototype.concat); assert.notEqual(copyWithin, Array.prototype.copyWithin); }","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. Dates are displayed in UTC. Generated by auto-changelog . v1.0.2 20 October 2023 [Deps] remove unused has f9fc3ba v1.0.1 20 October 2023 [meta] use npmignore to autogenerate an npmignore file 4f29eb9 [Refactor] use hasown instead of has 9d2577b [actions] update checkout action 4525257 v1.0.0 11 April 2022 Initial implementation, tests 0313267 Initial commit 5a68e27 [meta] do not publish workflow files 4e29785","title":"CHANGELOG"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. Dates are displayed in UTC. Generated by auto-changelog .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/CHANGELOG/#v102","text":"20 October 2023 [Deps] remove unused has f9fc3ba","title":"v1.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/CHANGELOG/#v101","text":"20 October 2023 [meta] use npmignore to autogenerate an npmignore file 4f29eb9 [Refactor] use hasown instead of has 9d2577b [actions] update checkout action 4525257","title":"v1.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-shim-unscopables/CHANGELOG/#v100","text":"11 April 2022 Initial implementation, tests 0313267 Initial commit 5a68e27 [meta] do not publish workflow files 4e29785","title":"v1.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/","text":"es-to-primitive ECMAScript \u201cToPrimitive\u201d algorithm. Provides ES5 and ES2015 versions. When different versions of the spec conflict, the default export will be the latest version of the abstract operation. Alternative versions will also be available under an es5 / es2015 exported property if you require a specific version. Example var toPrimitive = require('es-to-primitive'); var assert = require('assert'); assert(toPrimitive(function () {}) === String(function () {})); var date = new Date(); assert(toPrimitive(date) === String(date)); assert(toPrimitive({ valueOf: function () { return 3; } }) === 3); assert(toPrimitive(['a', 'b', 3]) === String(['a', 'b', 3])); var sym = Symbol(); assert(toPrimitive(Object(sym)) === sym); Tests Simply clone the repo, npm install , and run npm test","title":"es-to-primitive Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/#es-to-primitive","text":"ECMAScript \u201cToPrimitive\u201d algorithm. Provides ES5 and ES2015 versions. When different versions of the spec conflict, the default export will be the latest version of the abstract operation. Alternative versions will also be available under an es5 / es2015 exported property if you require a specific version.","title":"es-to-primitive"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/#example","text":"var toPrimitive = require('es-to-primitive'); var assert = require('assert'); assert(toPrimitive(function () {}) === String(function () {})); var date = new Date(); assert(toPrimitive(date) === String(date)); assert(toPrimitive({ valueOf: function () { return 3; } }) === 3); assert(toPrimitive(['a', 'b', 3]) === String(['a', 'b', 3])); var sym = Symbol(); assert(toPrimitive(Object(sym)) === sym);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/","text":"1.2.1 / 2019-11-08 [readme] remove testling URLs [meta] add funding field [meta] create FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , covert , replace , semver , tape , function.prototype.name [Tests] use shared travis-ci configs [Tests] Add es5 tests for symbol types (#45) [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs 1.2.0 / 2018-09-27 [New] create ES2015 entry point/property, to replace ES6 [Fix] Ensure optional arguments are not part of the length (#29) [Deps] update is-callable [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver , object-inspect , replace [Tests] avoid util.inspect bug with new Date(NaN) on node v6.0 and v6.1. [Tests] up to node v10.11 , v9.11 , v8.12 , v6.14 , v4.9 1.1.1 / 2016-01-03 [Fix: ES5] fix coercion logic: ES5\u2019s ToPrimitive does not coerce any primitive value, regardless of hint (#2) 1.1.0 / 2015-12-27 [New] add Symbol.toPrimitive support [Deps] update is-callable , is-date-object [Dev Deps] update eslint , tape , semver , jscs , covert , nsp , @ljharb/eslint-config [Dev Deps] remove unused deps [Tests] up to node v5.3 [Tests] fix npm upgrades on older node versions [Tests] fix testling [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG 1.0.1 / 2016-01-03 [Fix: ES5] fix coercion logic: ES5\u2019s ToPrimitive does not coerce any primitive value, regardless of hint (#2) [Deps] update is-callable , is-date-object [Dev Deps] update eslint , tape , semver , jscs , covert , nsp , @ljharb/eslint-config [Dev Deps] remove unused deps [Tests] up to node v5.3 [Tests] fix npm upgrades on older node versions [Tests] fix testling [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG 1.0.0 / 2015-03-19 Initial release.","title":"1.2.1 / 2019-11-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/#121-2019-11-08","text":"[readme] remove testling URLs [meta] add funding field [meta] create FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , covert , replace , semver , tape , function.prototype.name [Tests] use shared travis-ci configs [Tests] Add es5 tests for symbol types (#45) [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs","title":"1.2.1 / 2019-11-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/#120-2018-09-27","text":"[New] create ES2015 entry point/property, to replace ES6 [Fix] Ensure optional arguments are not part of the length (#29) [Deps] update is-callable [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver , object-inspect , replace [Tests] avoid util.inspect bug with new Date(NaN) on node v6.0 and v6.1. [Tests] up to node v10.11 , v9.11 , v8.12 , v6.14 , v4.9","title":"1.2.0 / 2018-09-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/#111-2016-01-03","text":"[Fix: ES5] fix coercion logic: ES5\u2019s ToPrimitive does not coerce any primitive value, regardless of hint (#2)","title":"1.1.1 / 2016-01-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/#110-2015-12-27","text":"[New] add Symbol.toPrimitive support [Deps] update is-callable , is-date-object [Dev Deps] update eslint , tape , semver , jscs , covert , nsp , @ljharb/eslint-config [Dev Deps] remove unused deps [Tests] up to node v5.3 [Tests] fix npm upgrades on older node versions [Tests] fix testling [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG","title":"1.1.0 / 2015-12-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/#101-2016-01-03","text":"[Fix: ES5] fix coercion logic: ES5\u2019s ToPrimitive does not coerce any primitive value, regardless of hint (#2) [Deps] update is-callable , is-date-object [Dev Deps] update eslint , tape , semver , jscs , covert , nsp , @ljharb/eslint-config [Dev Deps] remove unused deps [Tests] up to node v5.3 [Tests] fix npm upgrades on older node versions [Tests] fix testling [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG","title":"1.0.1 / 2016-01-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/es-to-primitive/CHANGELOG/#100-2015-03-19","text":"Initial release.","title":"1.0.0 / 2015-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/esbuild/","text":"esbuild This is a JavaScript bundler and minifier. See https://github.com/evanw/esbuild and the JavaScript API documentation for details.","title":"esbuild"},{"location":"_Disciplina/Code/my-react-app/node_modules/esbuild/#esbuild","text":"This is a JavaScript bundler and minifier. See https://github.com/evanw/esbuild and the JavaScript API documentation for details.","title":"esbuild"},{"location":"_Disciplina/Code/my-react-app/node_modules/esbuild/LICENSE/","text":"MIT License Copyright (c) 2020 Evan Wallace Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/","text":"escalade A tiny (183B to 210B) and fast utility to ascend parent directories With escalade , you can scale parent directories until you've found what you're looking for. Given an input file or directory, escalade will continue executing your callback function until either: 1) the callback returns a truthy value 2) escalade has reached the system root directory (eg, / ) Important: Please note that escalade only deals with direct ancestry \u2013 it will not dive into parents' sibling directories. Notice: As of v3.1.0, escalade now includes Deno support ! Please see Deno Usage below. Install $ npm install --save escalade Modes There are two \"versions\" of escalade available: \"async\" Node.js: >= 8.x Size (gzip): 210 bytes Availability: CommonJS , ES Module This is the primary/default mode. It makes use of async / await and util.promisify . \"sync\" Node.js: >= 6.x Size (gzip): 183 bytes Availability: CommonJS , ES Module This is the opt-in mode, ideal for scenarios where async usage cannot be supported. Usage Example Structure /Users/lukeed \u2514\u2500\u2500 oss \u251c\u2500\u2500 license \u2514\u2500\u2500 escalade \u251c\u2500\u2500 package.json \u2514\u2500\u2500 test \u2514\u2500\u2500 fixtures \u251c\u2500\u2500 index.js \u2514\u2500\u2500 foobar \u2514\u2500\u2500 demo.js Example Usage //~> demo.js import { join } from 'path'; import escalade from 'escalade'; const input = join(__dirname, 'demo.js'); // or: const input = __dirname; const pkg = await escalade(input, (dir, names) => { console.log('~> dir:', dir); console.log('~> names:', names); console.log('---'); if (names.includes('package.json')) { // will be resolved into absolute return 'package.json'; } }); //~> dir: /Users/lukeed/oss/escalade/test/fixtures/foobar //~> names: ['demo.js'] //--- //~> dir: /Users/lukeed/oss/escalade/test/fixtures //~> names: ['index.js', 'foobar'] //--- //~> dir: /Users/lukeed/oss/escalade/test //~> names: ['fixtures'] //--- //~> dir: /Users/lukeed/oss/escalade //~> names: ['package.json', 'test'] //--- console.log(pkg); //=> /Users/lukeed/oss/escalade/package.json // Now search for \"missing123.txt\" // (Assume it doesn't exist anywhere!) const missing = await escalade(input, (dir, names) => { console.log('~> dir:', dir); return names.includes('missing123.txt') && 'missing123.txt'; }); //~> dir: /Users/lukeed/oss/escalade/test/fixtures/foobar //~> dir: /Users/lukeed/oss/escalade/test/fixtures //~> dir: /Users/lukeed/oss/escalade/test //~> dir: /Users/lukeed/oss/escalade //~> dir: /Users/lukeed/oss //~> dir: /Users/lukeed //~> dir: /Users //~> dir: / console.log(missing); //=> undefined Note: To run the above example with \"sync\" mode, import from escalade/sync and remove the await keyword. API escalade(input, callback) Returns: string|void or Promise<string|void> When your callback locates a file, escalade will resolve/return with an absolute path. If your callback was never satisfied, then escalade will resolve/return with nothing (undefined). Important: The sync and async versions share the same API. The only difference is that sync is not Promise-based. input Type: string The path from which to start ascending. This may be a file or a directory path. However, when input is a file, escalade will begin with its parent directory. Important: Unless given an absolute path, input will be resolved from process.cwd() location. callback Type: Function The callback to execute for each ancestry level. It always is given two arguments: 1) dir - an absolute path of the current parent directory 2) names - a list ( string[] ) of contents relative to the dir parent Note: The names list can contain names of files and directories. When your callback returns a falsey value, then escalade will continue with dir 's parent directory, re-invoking your callback with new argument values. When your callback returns a string, then escalade stops iteration immediately. If the string is an absolute path, then it's left as is. Otherwise, the string is resolved into an absolute path from the dir that housed the satisfying condition. Important: Your callback can be a Promise/AsyncFunction when using the \"async\" version of escalade . Benchmarks Running on Node.js v10.13.0 # Load Time find-up 3.891ms escalade 0.485ms escalade/sync 0.309ms # Levels: 6 (target = \"foo.txt\"): find-up x 24,856 ops/sec \u00b16.46% (55 runs sampled) escalade x 73,084 ops/sec \u00b14.23% (73 runs sampled) find-up.sync x 3,663 ops/sec \u00b11.12% (83 runs sampled) escalade/sync x 9,360 ops/sec \u00b10.62% (88 runs sampled) # Levels: 12 (target = \"package.json\"): find-up x 29,300 ops/sec \u00b110.68% (70 runs sampled) escalade x 73,685 ops/sec \u00b1 5.66% (66 runs sampled) find-up.sync x 1,707 ops/sec \u00b1 0.58% (91 runs sampled) escalade/sync x 4,667 ops/sec \u00b1 0.68% (94 runs sampled) # Levels: 18 (target = \"missing123.txt\"): find-up x 21,818 ops/sec \u00b117.37% (14 runs sampled) escalade x 67,101 ops/sec \u00b121.60% (20 runs sampled) find-up.sync x 1,037 ops/sec \u00b1 2.86% (88 runs sampled) escalade/sync x 1,248 ops/sec \u00b1 0.50% (93 runs sampled) Deno As of v3.1.0, escalade is available on the Deno registry. Please note that the API is identical and that there are still two modes from which to choose: // Choose \"async\" mode import escalade from 'https://deno.land/escalade/async.ts'; // Choose \"sync\" mode import escalade from 'https://deno.land/escalade/sync.ts'; Important: The allow-read permission is required! Related premove - A tiny (247B) utility to remove items recursively totalist - A tiny (195B to 224B) utility to recursively list all (total) files in a directory mk-dirs - A tiny (420B) utility to make a directory and its parents, recursively License MIT \u00a9 Luke Edwards","title":"escalade CI licenses codecov"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#escalade","text":"A tiny (183B to 210B) and fast utility to ascend parent directories With escalade , you can scale parent directories until you've found what you're looking for. Given an input file or directory, escalade will continue executing your callback function until either: 1) the callback returns a truthy value 2) escalade has reached the system root directory (eg, / ) Important: Please note that escalade only deals with direct ancestry \u2013 it will not dive into parents' sibling directories. Notice: As of v3.1.0, escalade now includes Deno support ! Please see Deno Usage below.","title":"escalade"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#install","text":"$ npm install --save escalade","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#modes","text":"There are two \"versions\" of escalade available:","title":"Modes"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#async","text":"Node.js: >= 8.x Size (gzip): 210 bytes Availability: CommonJS , ES Module This is the primary/default mode. It makes use of async / await and util.promisify .","title":"\"async\""},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#sync","text":"Node.js: >= 6.x Size (gzip): 183 bytes Availability: CommonJS , ES Module This is the opt-in mode, ideal for scenarios where async usage cannot be supported.","title":"\"sync\""},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#usage","text":"Example Structure /Users/lukeed \u2514\u2500\u2500 oss \u251c\u2500\u2500 license \u2514\u2500\u2500 escalade \u251c\u2500\u2500 package.json \u2514\u2500\u2500 test \u2514\u2500\u2500 fixtures \u251c\u2500\u2500 index.js \u2514\u2500\u2500 foobar \u2514\u2500\u2500 demo.js Example Usage //~> demo.js import { join } from 'path'; import escalade from 'escalade'; const input = join(__dirname, 'demo.js'); // or: const input = __dirname; const pkg = await escalade(input, (dir, names) => { console.log('~> dir:', dir); console.log('~> names:', names); console.log('---'); if (names.includes('package.json')) { // will be resolved into absolute return 'package.json'; } }); //~> dir: /Users/lukeed/oss/escalade/test/fixtures/foobar //~> names: ['demo.js'] //--- //~> dir: /Users/lukeed/oss/escalade/test/fixtures //~> names: ['index.js', 'foobar'] //--- //~> dir: /Users/lukeed/oss/escalade/test //~> names: ['fixtures'] //--- //~> dir: /Users/lukeed/oss/escalade //~> names: ['package.json', 'test'] //--- console.log(pkg); //=> /Users/lukeed/oss/escalade/package.json // Now search for \"missing123.txt\" // (Assume it doesn't exist anywhere!) const missing = await escalade(input, (dir, names) => { console.log('~> dir:', dir); return names.includes('missing123.txt') && 'missing123.txt'; }); //~> dir: /Users/lukeed/oss/escalade/test/fixtures/foobar //~> dir: /Users/lukeed/oss/escalade/test/fixtures //~> dir: /Users/lukeed/oss/escalade/test //~> dir: /Users/lukeed/oss/escalade //~> dir: /Users/lukeed/oss //~> dir: /Users/lukeed //~> dir: /Users //~> dir: / console.log(missing); //=> undefined Note: To run the above example with \"sync\" mode, import from escalade/sync and remove the await keyword.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#escaladeinput-callback","text":"Returns: string|void or Promise<string|void> When your callback locates a file, escalade will resolve/return with an absolute path. If your callback was never satisfied, then escalade will resolve/return with nothing (undefined). Important: The sync and async versions share the same API. The only difference is that sync is not Promise-based.","title":"escalade(input, callback)"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#input","text":"Type: string The path from which to start ascending. This may be a file or a directory path. However, when input is a file, escalade will begin with its parent directory. Important: Unless given an absolute path, input will be resolved from process.cwd() location.","title":"input"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#callback","text":"Type: Function The callback to execute for each ancestry level. It always is given two arguments: 1) dir - an absolute path of the current parent directory 2) names - a list ( string[] ) of contents relative to the dir parent Note: The names list can contain names of files and directories. When your callback returns a falsey value, then escalade will continue with dir 's parent directory, re-invoking your callback with new argument values. When your callback returns a string, then escalade stops iteration immediately. If the string is an absolute path, then it's left as is. Otherwise, the string is resolved into an absolute path from the dir that housed the satisfying condition. Important: Your callback can be a Promise/AsyncFunction when using the \"async\" version of escalade .","title":"callback"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#benchmarks","text":"Running on Node.js v10.13.0 # Load Time find-up 3.891ms escalade 0.485ms escalade/sync 0.309ms # Levels: 6 (target = \"foo.txt\"): find-up x 24,856 ops/sec \u00b16.46% (55 runs sampled) escalade x 73,084 ops/sec \u00b14.23% (73 runs sampled) find-up.sync x 3,663 ops/sec \u00b11.12% (83 runs sampled) escalade/sync x 9,360 ops/sec \u00b10.62% (88 runs sampled) # Levels: 12 (target = \"package.json\"): find-up x 29,300 ops/sec \u00b110.68% (70 runs sampled) escalade x 73,685 ops/sec \u00b1 5.66% (66 runs sampled) find-up.sync x 1,707 ops/sec \u00b1 0.58% (91 runs sampled) escalade/sync x 4,667 ops/sec \u00b1 0.68% (94 runs sampled) # Levels: 18 (target = \"missing123.txt\"): find-up x 21,818 ops/sec \u00b117.37% (14 runs sampled) escalade x 67,101 ops/sec \u00b121.60% (20 runs sampled) find-up.sync x 1,037 ops/sec \u00b1 2.86% (88 runs sampled) escalade/sync x 1,248 ops/sec \u00b1 0.50% (93 runs sampled)","title":"Benchmarks"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#deno","text":"As of v3.1.0, escalade is available on the Deno registry. Please note that the API is identical and that there are still two modes from which to choose: // Choose \"async\" mode import escalade from 'https://deno.land/escalade/async.ts'; // Choose \"sync\" mode import escalade from 'https://deno.land/escalade/sync.ts'; Important: The allow-read permission is required!","title":"Deno"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#related","text":"premove - A tiny (247B) utility to remove items recursively totalist - A tiny (195B to 224B) utility to recursively list all (total) files in a directory mk-dirs - A tiny (420B) utility to make a directory and its parents, recursively","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/escalade/readme/#license","text":"MIT \u00a9 Luke Edwards","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/escape-string-regexp/readme/","text":"escape-string-regexp Escape RegExp special characters Install $ npm install --save escape-string-regexp Usage const escapeStringRegexp = require('escape-string-regexp'); const escapedString = escapeStringRegexp('how much $ for a unicorn?'); //=> 'how much \\$ for a unicorn\\?' new RegExp(escapedString); License MIT \u00a9 Sindre Sorhus","title":"escape-string-regexp Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/escape-string-regexp/readme/#escape-string-regexp","text":"Escape RegExp special characters","title":"escape-string-regexp"},{"location":"_Disciplina/Code/my-react-app/node_modules/escape-string-regexp/readme/#install","text":"$ npm install --save escape-string-regexp","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/escape-string-regexp/readme/#usage","text":"const escapeStringRegexp = require('escape-string-regexp'); const escapedString = escapeStringRegexp('how much $ for a unicorn?'); //=> 'how much \\$ for a unicorn\\?' new RegExp(escapedString);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/escape-string-regexp/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/","text":"ESLint Website | Configure ESLint | Rules | Contribute to ESLint | Report Bugs | Code of Conduct | Twitter | Discord | Mastodon ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions: ESLint uses Espree for JavaScript parsing. ESLint uses an AST to evaluate patterns in code. ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime. Table of Contents Installation and Usage Configuration Version Support Code of Conduct Filing Issues Frequently Asked Questions Releases Security Policy Semantic Versioning Policy Stylistic Rule Updates License Team Sponsors Technology Sponsors Installation and Usage Prerequisites: Node.js ( ^18.18.0 , ^20.9.0 , or >=21.1.0 ) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.) You can install and configure ESLint using this command: npm init @eslint/config@latest After that, you can run ESLint on any file or directory like this: npx eslint yourfile.js Configuration You can configure rules in your eslint.config.js files as in this example: export default [ { files: [\"**/*.js\", \"**/*.cjs\", \"**/*.mjs\"], rules: { \"prefer-const\": \"warn\", \"no-constant-binary-expression\": \"error\" } } ]; The names \"prefer-const\" and \"no-constant-binary-expression\" are the names of rules in ESLint. The first value is the error level of the rule and can be one of these values: \"off\" or 0 - turn the rule off \"warn\" or 1 - turn the rule on as a warning (doesn't affect exit code) \"error\" or 2 - turn the rule on as an error (exit code will be 1) The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the configuration docs ). Version Support The ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only. ESLint offers commercial support for both current and previous versions through our partners, Tidelift and HeroDevs . See Version Support for more details. Code of Conduct ESLint adheres to the OpenJS Foundation Code of Conduct . Filing Issues Before filing an issue, please be sure to read the guidelines for what you're reporting: Bug Report Propose a New Rule Proposing a Rule Change Request a Change Frequently Asked Questions Does ESLint support JSX? Yes, ESLint natively supports parsing JSX syntax (this must be enabled in configuration ). Please note that supporting JSX syntax is not the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using eslint-plugin-react if you are using React and want React semantics. Does Prettier replace ESLint? No, ESLint and Prettier have different jobs: ESLint is a linter (looking for problematic patterns) and Prettier is a code formatter. Using both tools is common, refer to Prettier's documentation to learn how to configure them to work well with each other. What ECMAScript versions does ESLint support? ESLint has full support for ECMAScript 3, 5, and every year from 2015 up until the most recent stage 4 specification (the default). You can set your desired ECMAScript syntax and other settings (like global variables) through configuration . What about experimental features? ESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis. In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use @babel/eslint-parser and @babel/eslint-plugin to use any option available in Babel. Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the TC39 process ), we will accept issues and pull requests related to the new feature, subject to our contributing guidelines . Until then, please use the appropriate parser and plugin(s) for your experimental feature. Which Node.js versions does ESLint support? ESLint updates the supported Node.js versions with each major release of ESLint. At that time, ESLint's supported Node.js versions are updated to be: The most recent maintenance release of Node.js The lowest minor version of the Node.js LTS release that includes the features the ESLint team wants to use. The Node.js Current release ESLint is also expected to work with Node.js versions released after the Node.js Current release. Refer to the Quick Start Guide for the officially supported Node.js versions for a given ESLint release. Where to ask for help? Open a discussion or stop by our Discord server . Why doesn't ESLint lock dependency versions? Lock files like package-lock.json are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments. Packages like eslint that get published to the npm registry do not include lock files. npm install eslint as a user will respect version constraints in ESLint's package.json . ESLint and its dependencies will be included in the user's lock file if one exists, but ESLint's own lock file would not be used. We intentionally don't lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project. The Twilio blog has a deeper dive to learn more. Releases We have scheduled releases every two weeks on Friday or Saturday. You can follow a release issue for updates about the scheduling of any particular release. Security Policy ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy . Semantic Versioning Policy ESLint follows semantic versioning . However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint: Patch release (intended to not break your lint build) A bug fix in a rule that results in ESLint reporting fewer linting errors. A bug fix to the CLI or core (including formatters). Improvements to documentation. Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage. Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone). Minor release (might break your lint build) A bug fix in a rule that results in ESLint reporting more linting errors. A new rule is created. A new option to an existing rule that does not result in ESLint reporting more linting errors by default. A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default. An existing rule is deprecated. A new CLI capability is created. New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.). A new formatter is created. eslint:recommended is updated and will result in strictly fewer linting errors (e.g., rule removals). Major release (likely to break your lint build) eslint:recommended is updated and may result in new linting errors (e.g., rule additions, most rule option updates). A new option to an existing rule that results in ESLint reporting more linting errors by default. An existing formatter is removed. Part of the public API is removed or changed in an incompatible way. The public API includes: Rule schemas Configuration schema Command-line options Node.js API Rule, formatter, parser, plugin APIs According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde ( ~ ) in package.json e.g. \"eslint\": \"~3.1.0\" to guarantee the results of your builds. Stylistic Rule Updates Stylistic rules are frozen according to our policy on how we evaluate new rules and rule changes. This means: Bug fixes : We will still fix bugs in stylistic rules. New ECMAScript features : We will also make sure stylistic rules are compatible with new ECMAScript features. New options : We will not add any new options to stylistic rules unless an option is the only way to fix a bug or support a newly-added ECMAScript feature. License Team These folks keep the project moving and are resources for help. Technical Steering Committee (TSC) The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained. Nicholas C. Zakas Francesco Trotta Milos Djermanovic Reviewers The people who review and implement new features. \u552f\u7136 Nitin Kumar Committers The people who review and fix bugs and help triage issues. Josh Goldberg \u2728 Tanuj Kanti Website Team Team members who focus specifically on eslint.org Amaresh S M Strek Percy Ma Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#eslint","text":"Website | Configure ESLint | Rules | Contribute to ESLint | Report Bugs | Code of Conduct | Twitter | Discord | Mastodon ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions: ESLint uses Espree for JavaScript parsing. ESLint uses an AST to evaluate patterns in code. ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.","title":"ESLint"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#table-of-contents","text":"Installation and Usage Configuration Version Support Code of Conduct Filing Issues Frequently Asked Questions Releases Security Policy Semantic Versioning Policy Stylistic Rule Updates License Team Sponsors Technology Sponsors","title":"Table of Contents"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#installation-and-usage","text":"Prerequisites: Node.js ( ^18.18.0 , ^20.9.0 , or >=21.1.0 ) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.) You can install and configure ESLint using this command: npm init @eslint/config@latest After that, you can run ESLint on any file or directory like this: npx eslint yourfile.js","title":"Installation and Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#configuration","text":"You can configure rules in your eslint.config.js files as in this example: export default [ { files: [\"**/*.js\", \"**/*.cjs\", \"**/*.mjs\"], rules: { \"prefer-const\": \"warn\", \"no-constant-binary-expression\": \"error\" } } ]; The names \"prefer-const\" and \"no-constant-binary-expression\" are the names of rules in ESLint. The first value is the error level of the rule and can be one of these values: \"off\" or 0 - turn the rule off \"warn\" or 1 - turn the rule on as a warning (doesn't affect exit code) \"error\" or 2 - turn the rule on as an error (exit code will be 1) The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the configuration docs ).","title":"Configuration"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#version-support","text":"The ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only. ESLint offers commercial support for both current and previous versions through our partners, Tidelift and HeroDevs . See Version Support for more details.","title":"Version Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#code-of-conduct","text":"ESLint adheres to the OpenJS Foundation Code of Conduct .","title":"Code of Conduct"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#filing-issues","text":"Before filing an issue, please be sure to read the guidelines for what you're reporting: Bug Report Propose a New Rule Proposing a Rule Change Request a Change","title":"Filing Issues"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#does-eslint-support-jsx","text":"Yes, ESLint natively supports parsing JSX syntax (this must be enabled in configuration ). Please note that supporting JSX syntax is not the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using eslint-plugin-react if you are using React and want React semantics.","title":"Does ESLint support JSX?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#does-prettier-replace-eslint","text":"No, ESLint and Prettier have different jobs: ESLint is a linter (looking for problematic patterns) and Prettier is a code formatter. Using both tools is common, refer to Prettier's documentation to learn how to configure them to work well with each other.","title":"Does Prettier replace ESLint?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#what-ecmascript-versions-does-eslint-support","text":"ESLint has full support for ECMAScript 3, 5, and every year from 2015 up until the most recent stage 4 specification (the default). You can set your desired ECMAScript syntax and other settings (like global variables) through configuration .","title":"What ECMAScript versions does ESLint support?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#what-about-experimental-features","text":"ESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis. In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use @babel/eslint-parser and @babel/eslint-plugin to use any option available in Babel. Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the TC39 process ), we will accept issues and pull requests related to the new feature, subject to our contributing guidelines . Until then, please use the appropriate parser and plugin(s) for your experimental feature.","title":"What about experimental features?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#which-nodejs-versions-does-eslint-support","text":"ESLint updates the supported Node.js versions with each major release of ESLint. At that time, ESLint's supported Node.js versions are updated to be: The most recent maintenance release of Node.js The lowest minor version of the Node.js LTS release that includes the features the ESLint team wants to use. The Node.js Current release ESLint is also expected to work with Node.js versions released after the Node.js Current release. Refer to the Quick Start Guide for the officially supported Node.js versions for a given ESLint release.","title":"Which Node.js versions does ESLint support?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#where-to-ask-for-help","text":"Open a discussion or stop by our Discord server .","title":"Where to ask for help?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#why-doesnt-eslint-lock-dependency-versions","text":"Lock files like package-lock.json are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments. Packages like eslint that get published to the npm registry do not include lock files. npm install eslint as a user will respect version constraints in ESLint's package.json . ESLint and its dependencies will be included in the user's lock file if one exists, but ESLint's own lock file would not be used. We intentionally don't lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project. The Twilio blog has a deeper dive to learn more.","title":"Why doesn't ESLint lock dependency versions?"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#releases","text":"We have scheduled releases every two weeks on Friday or Saturday. You can follow a release issue for updates about the scheduling of any particular release.","title":"Releases"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#security-policy","text":"ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy .","title":"Security Policy"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#semantic-versioning-policy","text":"ESLint follows semantic versioning . However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint: Patch release (intended to not break your lint build) A bug fix in a rule that results in ESLint reporting fewer linting errors. A bug fix to the CLI or core (including formatters). Improvements to documentation. Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage. Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone). Minor release (might break your lint build) A bug fix in a rule that results in ESLint reporting more linting errors. A new rule is created. A new option to an existing rule that does not result in ESLint reporting more linting errors by default. A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default. An existing rule is deprecated. A new CLI capability is created. New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.). A new formatter is created. eslint:recommended is updated and will result in strictly fewer linting errors (e.g., rule removals). Major release (likely to break your lint build) eslint:recommended is updated and may result in new linting errors (e.g., rule additions, most rule option updates). A new option to an existing rule that results in ESLint reporting more linting errors by default. An existing formatter is removed. Part of the public API is removed or changed in an incompatible way. The public API includes: Rule schemas Configuration schema Command-line options Node.js API Rule, formatter, parser, plugin APIs According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde ( ~ ) in package.json e.g. \"eslint\": \"~3.1.0\" to guarantee the results of your builds.","title":"Semantic Versioning Policy"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#stylistic-rule-updates","text":"Stylistic rules are frozen according to our policy on how we evaluate new rules and rule changes. This means: Bug fixes : We will still fix bugs in stylistic rules. New ECMAScript features : We will also make sure stylistic rules are compatible with new ECMAScript features. New options : We will not add any new options to stylistic rules unless an option is the only way to fix a bug or support a newly-added ECMAScript feature.","title":"Stylistic Rule Updates"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#license","text":"","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#team","text":"These folks keep the project moving and are resources for help.","title":"Team"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#technical-steering-committee-tsc","text":"The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained. Nicholas C. Zakas Francesco Trotta Milos Djermanovic","title":"Technical Steering Committee (TSC)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#reviewers","text":"The people who review and implement new features. \u552f\u7136 Nitin Kumar","title":"Reviewers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#committers","text":"The people who review and fix bugs and help triage issues. Josh Goldberg \u2728 Tanuj Kanti","title":"Committers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#website-team","text":"Team members who focus specifically on eslint.org Amaresh S M Strek Percy Ma","title":"Website Team"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/","text":"ansi-styles ANSI escape codes for styling strings in the terminal You probably want the higher-level chalk module for styling your strings. Install $ npm install ansi-styles Usage const style = require('ansi-styles'); console.log(`${style.green.open}Hello world!${style.green.close}`); // Color conversion between 16/256/truecolor // NOTE: If conversion goes to 16 colors or 256 colors, the original color // may be degraded to fit that color palette. This means terminals // that do not support 16 million colors will best-match the // original color. console.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close); console.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close); console.log(style.color.ansi16m.hex('#abcdef') + 'Hello world!' + style.color.close); API Each style has an open and close property. Styles Modifiers reset bold dim italic (Not widely supported) underline inverse hidden strikethrough (Not widely supported) Colors black red green yellow blue magenta cyan white blackBright (alias: gray , grey ) redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright Background colors bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright (alias: bgGray , bgGrey ) bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright Advanced usage By default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module. style.modifier style.color style.bgColor Example console.log(style.color.green.open); Raw escape codes (i.e. without the CSI escape prefix \\u001B[ and render mode postfix m ) are available under style.codes , which returns a Map with the open codes as keys and close codes as values. Example console.log(style.codes.get(36)); //=> 39 256 / 16 million (TrueColor) support ansi-styles uses the color-convert package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors. The following color spaces from color-convert are supported: rgb hex keyword hsl hsv hwb ansi ansi256 To use these, call the associated conversion function with the intended output, for example: style.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code style.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code style.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code style.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code Related ansi-escapes - ANSI escape codes for manipulating the terminal Maintainers Sindre Sorhus Josh Junon For enterprise Available as part of the Tidelift Subscription. The maintainers of ansi-styles and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"ansi-styles Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#ansi-styles","text":"ANSI escape codes for styling strings in the terminal You probably want the higher-level chalk module for styling your strings.","title":"ansi-styles"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#install","text":"$ npm install ansi-styles","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#usage","text":"const style = require('ansi-styles'); console.log(`${style.green.open}Hello world!${style.green.close}`); // Color conversion between 16/256/truecolor // NOTE: If conversion goes to 16 colors or 256 colors, the original color // may be degraded to fit that color palette. This means terminals // that do not support 16 million colors will best-match the // original color. console.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close); console.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close); console.log(style.color.ansi16m.hex('#abcdef') + 'Hello world!' + style.color.close);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#api","text":"Each style has an open and close property.","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#styles","text":"","title":"Styles"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#modifiers","text":"reset bold dim italic (Not widely supported) underline inverse hidden strikethrough (Not widely supported)","title":"Modifiers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#colors","text":"black red green yellow blue magenta cyan white blackBright (alias: gray , grey ) redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright","title":"Colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#background-colors","text":"bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright (alias: bgGray , bgGrey ) bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright","title":"Background colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#advanced-usage","text":"By default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module. style.modifier style.color style.bgColor","title":"Advanced usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#example","text":"console.log(style.color.green.open); Raw escape codes (i.e. without the CSI escape prefix \\u001B[ and render mode postfix m ) are available under style.codes , which returns a Map with the open codes as keys and close codes as values.","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#example_1","text":"console.log(style.codes.get(36)); //=> 39","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#256-16-million-truecolor-support","text":"ansi-styles uses the color-convert package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors. The following color spaces from color-convert are supported: rgb hex keyword hsl hsv hwb ansi ansi256 To use these, call the associated conversion function with the intended output, for example: style.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code style.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code style.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code style.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code style.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code","title":"256 / 16 million (TrueColor) support"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#related","text":"ansi-escapes - ANSI escape codes for manipulating the terminal","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#maintainers","text":"Sindre Sorhus Josh Junon","title":"Maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/ansi-styles/readme/#for-enterprise","text":"Available as part of the Tidelift Subscription. The maintainers of ansi-styles and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"For enterprise"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/","text":"Terminal string styling done right Sindre Sorhus' open source work is supported by the community on GitHub Sponsors and Dev Special thanks to: All your environment variables, in one place Stop struggling with scattered API keys, hacking together home-brewed tools, and avoiding access controls. Keep your team and servers in sync with Doppler. Highlights Expressive API Highly performant Ability to nest styles 256/Truecolor color support Auto-detects color support Doesn't extend String.prototype Clean and focused Actively maintained Used by ~50,000 packages as of January 1, 2020 Install $ npm install chalk Usage const chalk = require('chalk'); console.log(chalk.blue('Hello world!')); Chalk comes with an easy to use composable API where you just chain and nest the styles you want. const chalk = require('chalk'); const log = console.log; // Combine styled and normal strings log(chalk.blue('Hello') + ' World' + chalk.red('!')); // Compose multiple styles using the chainable API log(chalk.blue.bgRed.bold('Hello world!')); // Pass in multiple arguments log(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz')); // Nest styles log(chalk.red('Hello', chalk.underline.bgBlue('world') + '!')); // Nest styles of the same type even (color, underline, background) log(chalk.green( 'I am a green line ' + chalk.blue.underline.bold('with a blue substring') + ' that becomes green again!' )); // ES2015 template literal log(` CPU: ${chalk.red('90%')} RAM: ${chalk.green('40%')} DISK: ${chalk.yellow('70%')} `); // ES2015 tagged template literal log(chalk` CPU: {red ${cpu.totalPercent}%} RAM: {green ${ram.used / ram.total * 100}%} DISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%} `); // Use RGB colors in terminal emulators that support it. log(chalk.keyword('orange')('Yay for orange colored text!')); log(chalk.rgb(123, 45, 67).underline('Underlined reddish color')); log(chalk.hex('#DEADED').bold('Bold gray!')); Easily define your own themes: const chalk = require('chalk'); const error = chalk.bold.red; const warning = chalk.keyword('orange'); console.log(error('Error!')); console.log(warning('Warning!')); Take advantage of console.log string substitution : const name = 'Sindre'; console.log(chalk.green('Hello %s'), name); //=> 'Hello Sindre' API chalk. <style>[.<style>...](string, [string...]) Example: chalk.red.bold.underline('Hello', 'world'); Chain styles and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green . Multiple arguments will be separated by space. chalk.level Specifies the level of color support. Color support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers. If you need to change this in a reusable module, create a new instance: const ctx = new chalk.Instance({level: 0}); Level Description 0 All colors disabled 1 Basic color support (16 colors) 2 256 color support 3 Truecolor support (16 million colors) chalk.supportsColor Detect whether the terminal supports color . Used internally and handled for you, but exposed for convenience. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, use the environment variable FORCE_COLOR=1 (level 1), FORCE_COLOR=2 (level 2), or FORCE_COLOR=3 (level 3) to forcefully enable color, or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively. chalk.stderr and chalk.stderr.supportsColor chalk.stderr contains a separate instance configured with color support detected for stderr stream instead of stdout . Override rules from chalk.supportsColor apply to this too. chalk.stderr.supportsColor is exposed for convenience. Styles Modifiers reset - Resets the current color chain. bold - Make text bold. dim - Emitting only a small amount of light. italic - Make text italic. (Not widely supported) underline - Make text underline. (Not widely supported) inverse - Inverse background and foreground colors. hidden - Prints the text, but makes it invisible. strikethrough - Puts a horizontal line through the center of the text. (Not widely supported) visible - Prints the text only when Chalk has a color level > 0. Can be useful for things that are purely cosmetic. Colors black red green yellow blue magenta cyan white blackBright (alias: gray , grey ) redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright Background colors bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright (alias: bgGray , bgGrey ) bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright Tagged template literal Chalk can be used as a tagged template literal . const chalk = require('chalk'); const miles = 18; const calculateFeet = miles => miles * 5280; console.log(chalk` There are {bold 5280 feet} in a mile. In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}. `); Blocks are delimited by an opening curly brace ( { ), a style, some content, and a closing curly brace ( } ). Template styles are chained exactly like normal Chalk styles. The following three statements are equivalent: console.log(chalk.bold.rgb(10, 100, 200)('Hello!')); console.log(chalk.bold.rgb(10, 100, 200)`Hello!`); console.log(chalk`{bold.rgb(10,100,200) Hello!}`); Note that function styles ( rgb() , hsl() , keyword() , etc.) may not contain spaces between parameters. All interpolated values ( chalk`${foo}` ) are converted to strings via the .toString() method. All curly braces ( { and } ) in interpolated value strings are escaped. 256 and Truecolor color support Chalk supports 256 colors and Truecolor (16 million colors) on supported terminal apps. Colors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying {level: n} as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red). Examples: chalk.hex('#DEADED').underline('Hello, world!') chalk.keyword('orange')('Some orange text') chalk.rgb(15, 100, 204).inverse('Hello!') Background versions of these models are prefixed with bg and the first level of the module capitalized (e.g. keyword for foreground colors and bgKeyword for background colors). chalk.bgHex('#DEADED').underline('Hello, world!') chalk.bgKeyword('orange')('Some orange text') chalk.bgRgb(15, 100, 204).inverse('Hello!') The following color models can be used: rgb - Example: chalk.rgb(255, 136, 0).bold('Orange!') hex - Example: chalk.hex('#FF8800').bold('Orange!') keyword (CSS keywords) - Example: chalk.keyword('orange').bold('Orange!') hsl - Example: chalk.hsl(32, 100, 50).bold('Orange!') hsv - Example: chalk.hsv(32, 100, 100).bold('Orange!') hwb - Example: chalk.hwb(32, 0, 50).bold('Orange!') ansi - Example: chalk.ansi(31).bgAnsi(93)('red on yellowBright') ansi256 - Example: chalk.bgAnsi256(194)('Honeydew, more or less') Windows If you're on Windows, do yourself a favor and use Windows Terminal instead of cmd.exe . Origin story colors.js used to be the most popular string styling module, but it has serious deficiencies like extending String.prototype which causes all kinds of problems and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative. chalk for enterprise Available as part of the Tidelift Subscription. The maintainers of chalk and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more. Related chalk-cli - CLI for this module ansi-styles - ANSI escape codes for styling strings in the terminal supports-color - Detect whether a terminal supports color strip-ansi - Strip ANSI escape codes strip-ansi-stream - Strip ANSI escape codes from a stream has-ansi - Check if a string has ANSI escape codes ansi-regex - Regular expression for matching ANSI escape codes wrap-ansi - Wordwrap a string with ANSI escape codes slice-ansi - Slice a string with ANSI escape codes color-convert - Converts colors between different models chalk-animation - Animate strings in the terminal gradient-string - Apply color gradients to strings chalk-pipe - Create chalk style schemes with simpler style strings terminal-link - Create clickable links in the terminal Maintainers Sindre Sorhus Josh Junon","title":"Readme"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#highlights","text":"Expressive API Highly performant Ability to nest styles 256/Truecolor color support Auto-detects color support Doesn't extend String.prototype Clean and focused Actively maintained Used by ~50,000 packages as of January 1, 2020","title":"Highlights"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#install","text":"$ npm install chalk","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#usage","text":"const chalk = require('chalk'); console.log(chalk.blue('Hello world!')); Chalk comes with an easy to use composable API where you just chain and nest the styles you want. const chalk = require('chalk'); const log = console.log; // Combine styled and normal strings log(chalk.blue('Hello') + ' World' + chalk.red('!')); // Compose multiple styles using the chainable API log(chalk.blue.bgRed.bold('Hello world!')); // Pass in multiple arguments log(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz')); // Nest styles log(chalk.red('Hello', chalk.underline.bgBlue('world') + '!')); // Nest styles of the same type even (color, underline, background) log(chalk.green( 'I am a green line ' + chalk.blue.underline.bold('with a blue substring') + ' that becomes green again!' )); // ES2015 template literal log(` CPU: ${chalk.red('90%')} RAM: ${chalk.green('40%')} DISK: ${chalk.yellow('70%')} `); // ES2015 tagged template literal log(chalk` CPU: {red ${cpu.totalPercent}%} RAM: {green ${ram.used / ram.total * 100}%} DISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%} `); // Use RGB colors in terminal emulators that support it. log(chalk.keyword('orange')('Yay for orange colored text!')); log(chalk.rgb(123, 45, 67).underline('Underlined reddish color')); log(chalk.hex('#DEADED').bold('Bold gray!')); Easily define your own themes: const chalk = require('chalk'); const error = chalk.bold.red; const warning = chalk.keyword('orange'); console.log(error('Error!')); console.log(warning('Warning!')); Take advantage of console.log string substitution : const name = 'Sindre'; console.log(chalk.green('Hello %s'), name); //=> 'Hello Sindre'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#chalkstylestylestring-string","text":"Example: chalk.red.bold.underline('Hello', 'world'); Chain styles and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green . Multiple arguments will be separated by space.","title":"chalk.&lt;style&gt;[.&lt;style&gt;...](string, [string...])"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#chalklevel","text":"Specifies the level of color support. Color support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers. If you need to change this in a reusable module, create a new instance: const ctx = new chalk.Instance({level: 0}); Level Description 0 All colors disabled 1 Basic color support (16 colors) 2 256 color support 3 Truecolor support (16 million colors)","title":"chalk.level"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#chalksupportscolor","text":"Detect whether the terminal supports color . Used internally and handled for you, but exposed for convenience. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, use the environment variable FORCE_COLOR=1 (level 1), FORCE_COLOR=2 (level 2), or FORCE_COLOR=3 (level 3) to forcefully enable color, or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively.","title":"chalk.supportsColor"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#chalkstderr-and-chalkstderrsupportscolor","text":"chalk.stderr contains a separate instance configured with color support detected for stderr stream instead of stdout . Override rules from chalk.supportsColor apply to this too. chalk.stderr.supportsColor is exposed for convenience.","title":"chalk.stderr and chalk.stderr.supportsColor"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#styles","text":"","title":"Styles"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#modifiers","text":"reset - Resets the current color chain. bold - Make text bold. dim - Emitting only a small amount of light. italic - Make text italic. (Not widely supported) underline - Make text underline. (Not widely supported) inverse - Inverse background and foreground colors. hidden - Prints the text, but makes it invisible. strikethrough - Puts a horizontal line through the center of the text. (Not widely supported) visible - Prints the text only when Chalk has a color level > 0. Can be useful for things that are purely cosmetic.","title":"Modifiers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#colors","text":"black red green yellow blue magenta cyan white blackBright (alias: gray , grey ) redBright greenBright yellowBright blueBright magentaBright cyanBright whiteBright","title":"Colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#background-colors","text":"bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgBlackBright (alias: bgGray , bgGrey ) bgRedBright bgGreenBright bgYellowBright bgBlueBright bgMagentaBright bgCyanBright bgWhiteBright","title":"Background colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#tagged-template-literal","text":"Chalk can be used as a tagged template literal . const chalk = require('chalk'); const miles = 18; const calculateFeet = miles => miles * 5280; console.log(chalk` There are {bold 5280 feet} in a mile. In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}. `); Blocks are delimited by an opening curly brace ( { ), a style, some content, and a closing curly brace ( } ). Template styles are chained exactly like normal Chalk styles. The following three statements are equivalent: console.log(chalk.bold.rgb(10, 100, 200)('Hello!')); console.log(chalk.bold.rgb(10, 100, 200)`Hello!`); console.log(chalk`{bold.rgb(10,100,200) Hello!}`); Note that function styles ( rgb() , hsl() , keyword() , etc.) may not contain spaces between parameters. All interpolated values ( chalk`${foo}` ) are converted to strings via the .toString() method. All curly braces ( { and } ) in interpolated value strings are escaped.","title":"Tagged template literal"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#256-and-truecolor-color-support","text":"Chalk supports 256 colors and Truecolor (16 million colors) on supported terminal apps. Colors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying {level: n} as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red). Examples: chalk.hex('#DEADED').underline('Hello, world!') chalk.keyword('orange')('Some orange text') chalk.rgb(15, 100, 204).inverse('Hello!') Background versions of these models are prefixed with bg and the first level of the module capitalized (e.g. keyword for foreground colors and bgKeyword for background colors). chalk.bgHex('#DEADED').underline('Hello, world!') chalk.bgKeyword('orange')('Some orange text') chalk.bgRgb(15, 100, 204).inverse('Hello!') The following color models can be used: rgb - Example: chalk.rgb(255, 136, 0).bold('Orange!') hex - Example: chalk.hex('#FF8800').bold('Orange!') keyword (CSS keywords) - Example: chalk.keyword('orange').bold('Orange!') hsl - Example: chalk.hsl(32, 100, 50).bold('Orange!') hsv - Example: chalk.hsv(32, 100, 100).bold('Orange!') hwb - Example: chalk.hwb(32, 0, 50).bold('Orange!') ansi - Example: chalk.ansi(31).bgAnsi(93)('red on yellowBright') ansi256 - Example: chalk.bgAnsi256(194)('Honeydew, more or less')","title":"256 and Truecolor color support"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#windows","text":"If you're on Windows, do yourself a favor and use Windows Terminal instead of cmd.exe .","title":"Windows"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#origin-story","text":"colors.js used to be the most popular string styling module, but it has serious deficiencies like extending String.prototype which causes all kinds of problems and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.","title":"Origin story"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#chalk-for-enterprise","text":"Available as part of the Tidelift Subscription. The maintainers of chalk and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"chalk for enterprise"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#related","text":"chalk-cli - CLI for this module ansi-styles - ANSI escape codes for styling strings in the terminal supports-color - Detect whether a terminal supports color strip-ansi - Strip ANSI escape codes strip-ansi-stream - Strip ANSI escape codes from a stream has-ansi - Check if a string has ANSI escape codes ansi-regex - Regular expression for matching ANSI escape codes wrap-ansi - Wordwrap a string with ANSI escape codes slice-ansi - Slice a string with ANSI escape codes color-convert - Converts colors between different models chalk-animation - Animate strings in the terminal gradient-string - Apply color gradients to strings chalk-pipe - Create chalk style schemes with simpler style strings terminal-link - Create clickable links in the terminal","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/chalk/readme/#maintainers","text":"Sindre Sorhus Josh Junon","title":"Maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/","text":"color-convert Color-convert is a color conversion library for JavaScript and node. It converts all ways between rgb , hsl , hsv , hwb , cmyk , ansi , ansi16 , hex strings, and CSS keyword s (will round to closest): var convert = require('color-convert'); convert.rgb.hsl(140, 200, 100); // [96, 48, 59] convert.keyword.rgb('blue'); // [0, 0, 255] var rgbChannels = convert.rgb.channels; // 3 var cmykChannels = convert.cmyk.channels; // 4 var ansiChannels = convert.ansi16.channels; // 1 Install $ npm install color-convert API Simply get the property of the from and to conversion that you're looking for. All functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on .raw to the function. All 'from' functions have a hidden property called .channels that indicates the number of channels the function expects (not including alpha). var convert = require('color-convert'); // Hex to LAB convert.hex.lab('DEADBF'); // [ 76, 21, -2 ] convert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ] // RGB to CMYK convert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ] convert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ] Arrays All functions that accept multiple arguments also support passing an array. Note that this does not apply to functions that convert from a color that only requires one value (e.g. keyword , ansi256 , hex , etc.) var convert = require('color-convert'); convert.rgb.hex(123, 45, 67); // '7B2D43' convert.rgb.hex([123, 45, 67]); // '7B2D43' Routing Conversions that don't have an explicitly defined conversion (in conversions.js ), but can be converted by means of sub-conversions (e.g. XYZ -> RGB -> CMYK), are automatically routed together. This allows just about any color model supported by color-convert to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> LAB -> XYZ -> RGB -> Hex). Keep in mind that extensive conversions may result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see conversions.js . Contribute If there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request. License Copyright \u00a9 2011-2016, Heather Arthur and Josh Junon. Licensed under the MIT License .","title":"color-convert"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#color-convert","text":"Color-convert is a color conversion library for JavaScript and node. It converts all ways between rgb , hsl , hsv , hwb , cmyk , ansi , ansi16 , hex strings, and CSS keyword s (will round to closest): var convert = require('color-convert'); convert.rgb.hsl(140, 200, 100); // [96, 48, 59] convert.keyword.rgb('blue'); // [0, 0, 255] var rgbChannels = convert.rgb.channels; // 3 var cmykChannels = convert.cmyk.channels; // 4 var ansiChannels = convert.ansi16.channels; // 1","title":"color-convert"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#install","text":"$ npm install color-convert","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#api","text":"Simply get the property of the from and to conversion that you're looking for. All functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on .raw to the function. All 'from' functions have a hidden property called .channels that indicates the number of channels the function expects (not including alpha). var convert = require('color-convert'); // Hex to LAB convert.hex.lab('DEADBF'); // [ 76, 21, -2 ] convert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ] // RGB to CMYK convert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ] convert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#arrays","text":"All functions that accept multiple arguments also support passing an array. Note that this does not apply to functions that convert from a color that only requires one value (e.g. keyword , ansi256 , hex , etc.) var convert = require('color-convert'); convert.rgb.hex(123, 45, 67); // '7B2D43' convert.rgb.hex([123, 45, 67]); // '7B2D43'","title":"Arrays"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#routing","text":"Conversions that don't have an explicitly defined conversion (in conversions.js ), but can be converted by means of sub-conversions (e.g. XYZ -> RGB -> CMYK), are automatically routed together. This allows just about any color model supported by color-convert to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> LAB -> XYZ -> RGB -> Hex). Keep in mind that extensive conversions may result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see conversions.js .","title":"Routing"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#contribute","text":"If there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.","title":"Contribute"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/#license","text":"Copyright \u00a9 2011-2016, Heather Arthur and Josh Junon. Licensed under the MIT License .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/CHANGELOG/","text":"1.0.0 - 2016-01-07 Removed: unused speed test Added: Automatic routing between previously unsupported conversions ( #27 ) Removed: xxx2xxx() and xxx2xxxRaw() functions ( #27 ) Removed: convert() class ( #27 ) Changed: all functions to lookup dictionary ( #27 ) Changed: ansi to ansi256 ( #27 ) Fixed: argument grouping for functions requiring only one argument ( #27 ) 0.6.0 - 2015-07-23 Added: methods to handle ANSI 16/256 colors: rgb2ansi16 rgb2ansi hsl2ansi16 hsl2ansi hsv2ansi16 hsv2ansi hwb2ansi16 hwb2ansi cmyk2ansi16 cmyk2ansi keyword2ansi16 keyword2ansi ansi162rgb ansi162hsl ansi162hsv ansi162hwb ansi162cmyk ansi162keyword ansi2rgb ansi2hsl ansi2hsv ansi2hwb ansi2cmyk ansi2keyword ( #18 ) 0.5.3 - 2015-06-02 Fixed: hsl2hsv does not return NaN anymore when using [0,0,0] ( #15 ) Check out commit logs for older releases","title":"1.0.0 - 2016-01-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/CHANGELOG/#100-2016-01-07","text":"Removed: unused speed test Added: Automatic routing between previously unsupported conversions ( #27 ) Removed: xxx2xxx() and xxx2xxxRaw() functions ( #27 ) Removed: convert() class ( #27 ) Changed: all functions to lookup dictionary ( #27 ) Changed: ansi to ansi256 ( #27 ) Fixed: argument grouping for functions requiring only one argument ( #27 )","title":"1.0.0 - 2016-01-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/CHANGELOG/#060-2015-07-23","text":"Added: methods to handle ANSI 16/256 colors: rgb2ansi16 rgb2ansi hsl2ansi16 hsl2ansi hsv2ansi16 hsv2ansi hwb2ansi16 hwb2ansi cmyk2ansi16 cmyk2ansi keyword2ansi16 keyword2ansi ansi162rgb ansi162hsl ansi162hsv ansi162hwb ansi162cmyk ansi162keyword ansi2rgb ansi2hsl ansi2hsv ansi2hwb ansi2cmyk ansi2keyword ( #18 )","title":"0.6.0 - 2015-07-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-convert/CHANGELOG/#053-2015-06-02","text":"Fixed: hsl2hsv does not return NaN anymore when using [0,0,0] ( #15 ) Check out commit logs for older releases","title":"0.5.3 - 2015-06-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/color-name/","text":"A JSON with color names and its values. Based on http://dev.w3.org/csswg/css-color/#named-colors. var colors = require('color-name'); colors.red //[255,0,0]","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/escape-string-regexp/readme/","text":"escape-string-regexp Escape RegExp special characters Install $ npm install escape-string-regexp Usage const escapeStringRegexp = require('escape-string-regexp'); const escapedString = escapeStringRegexp('How much $ for a \ud83e\udd84?'); //=> 'How much \\\\$ for a \ud83e\udd84\\\\?' new RegExp(escapedString); You can also use this to escape a string that is inserted into the middle of a regex, for example, into a character class. Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"escape-string-regexp Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/escape-string-regexp/readme/#escape-string-regexp","text":"Escape RegExp special characters","title":"escape-string-regexp"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/escape-string-regexp/readme/#install","text":"$ npm install escape-string-regexp","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/escape-string-regexp/readme/#usage","text":"const escapeStringRegexp = require('escape-string-regexp'); const escapedString = escapeStringRegexp('How much $ for a \ud83e\udd84?'); //=> 'How much \\\\$ for a \ud83e\udd84\\\\?' new RegExp(escapedString); You can also use this to escape a string that is inserted into the middle of a regex, for example, into a character class. Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/","text":"has-flag Check if argv has a specific flag Correctly stops looking after an -- argument terminator. Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies. Install $ npm install has-flag Usage // foo.js const hasFlag = require('has-flag'); hasFlag('unicorn'); //=> true hasFlag('--unicorn'); //=> true hasFlag('f'); //=> true hasFlag('-f'); //=> true hasFlag('foo=bar'); //=> true hasFlag('foo'); //=> false hasFlag('rainbow'); //=> false $ node foo.js -f --unicorn --foo=bar -- --rainbow API hasFlag(flag, [argv]) Returns a boolean for whether the flag exists. flag Type: string CLI flag to look for. The -- prefix is optional. argv Type: string[] Default: process.argv CLI arguments. Security To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. License MIT \u00a9 Sindre Sorhus","title":"has-flag Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#has-flag","text":"Check if argv has a specific flag Correctly stops looking after an -- argument terminator. Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"has-flag"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#install","text":"$ npm install has-flag","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#usage","text":"// foo.js const hasFlag = require('has-flag'); hasFlag('unicorn'); //=> true hasFlag('--unicorn'); //=> true hasFlag('f'); //=> true hasFlag('-f'); //=> true hasFlag('foo=bar'); //=> true hasFlag('foo'); //=> false hasFlag('rainbow'); //=> false $ node foo.js -f --unicorn --foo=bar -- --rainbow","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#hasflagflag-argv","text":"Returns a boolean for whether the flag exists.","title":"hasFlag(flag, [argv])"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#flag","text":"Type: string CLI flag to look for. The -- prefix is optional.","title":"flag"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#argv","text":"Type: string[] Default: process.argv CLI arguments.","title":"argv"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#security","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/has-flag/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/","text":"supports-color Detect whether a terminal supports color Install $ npm install supports-color Usage const supportsColor = require('supports-color'); if (supportsColor.stdout) { console.log('Terminal stdout supports color'); } if (supportsColor.stdout.has256) { console.log('Terminal stdout supports 256 colors'); } if (supportsColor.stderr.has16m) { console.log('Terminal stderr supports 16 million colors (truecolor)'); } API Returns an Object with a stdout and stderr property for testing either streams. Each property is an Object , or false if color is not supported. The stdout / stderr objects specifies a level of support for color through a .level property and a corresponding flag: .level = 1 and .hasBasic = true : Basic color support (16 colors) .level = 2 and .has256 = true : 256 color support .level = 3 and .has16m = true : Truecolor support (16 million colors) Info It obeys the --color and --no-color CLI flags. For situations where using --color is not possible, use the environment variable FORCE_COLOR=1 (level 1), FORCE_COLOR=2 (level 2), or FORCE_COLOR=3 (level 3) to forcefully enable color, or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively. Related supports-color-cli - CLI for this module chalk - Terminal string styling done right Maintainers Sindre Sorhus Josh Junon Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"supports-color Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#supports-color","text":"Detect whether a terminal supports color","title":"supports-color"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#install","text":"$ npm install supports-color","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#usage","text":"const supportsColor = require('supports-color'); if (supportsColor.stdout) { console.log('Terminal stdout supports color'); } if (supportsColor.stdout.has256) { console.log('Terminal stdout supports 256 colors'); } if (supportsColor.stderr.has16m) { console.log('Terminal stderr supports 16 million colors (truecolor)'); }","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#api","text":"Returns an Object with a stdout and stderr property for testing either streams. Each property is an Object , or false if color is not supported. The stdout / stderr objects specifies a level of support for color through a .level property and a corresponding flag: .level = 1 and .hasBasic = true : Basic color support (16 colors) .level = 2 and .has256 = true : 256 color support .level = 3 and .has16m = true : Truecolor support (16 million colors)","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#info","text":"It obeys the --color and --no-color CLI flags. For situations where using --color is not possible, use the environment variable FORCE_COLOR=1 (level 1), FORCE_COLOR=2 (level 2), or FORCE_COLOR=3 (level 3) to forcefully enable color, or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively.","title":"Info"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#related","text":"supports-color-cli - CLI for this module chalk - Terminal string styling done right","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint/node_modules/supports-color/readme/#maintainers","text":"Sindre Sorhus Josh Junon Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/","text":"eslint-plugin-react =================== React specific linting rules for eslint Installation npm install eslint eslint-plugin-react --save-dev It is also possible to install ESLint globally rather than locally (using npm install -g eslint ). However, this is not recommended, and any plugins or shareable configs that you use must be installed locally in either case. Configuration (legacy: .eslintrc* ) Use our preset to get reasonable defaults: \"extends\": [ \"eslint:recommended\", \"plugin:react/recommended\" ] If you are using the new JSX transform from React 17 , extend react/jsx-runtime in your eslint config (add \"plugin:react/jsx-runtime\" to \"extends\" ) to disable the relevant rules. You should also specify settings that will be shared across all the plugin rules. ( More about eslint shared settings ) { \"settings\": { \"react\": { \"createClass\": \"createReactClass\", // Regex for Component Factory to use, // default to \"createReactClass\" \"pragma\": \"React\", // Pragma to use, default to \"React\" \"fragment\": \"Fragment\", // Fragment to use (may be a property of <pragma>), default to \"Fragment\" \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed. // You can also use `16.0`, `16.3`, etc, if you want to override the detected value. // Defaults to the \"defaultVersion\" setting and warns if missing, and to \"detect\" in the future \"defaultVersion\": \"\", // Default React version to use when the version you have installed cannot be detected. // If not provided, defaults to the latest React version. \"flowVersion\": \"0.53\" // Flow version }, \"propWrapperFunctions\": [ // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped. \"forbidExtraProps\", {\"property\": \"freeze\", \"object\": \"Object\"}, {\"property\": \"myFavoriteWrapper\"}, // for rules that check exact prop wrappers {\"property\": \"forbidExtraProps\", \"exact\": true} ], \"componentWrapperFunctions\": [ // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped. \"observer\", // `property` {\"property\": \"styled\"}, // `object` is optional {\"property\": \"observer\", \"object\": \"Mobx\"}, {\"property\": \"observer\", \"object\": \"<pragma>\"} // sets `object` to whatever value `settings.react.pragma` is set to ], \"formComponents\": [ // Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } /> \"CustomForm\", {\"name\": \"SimpleForm\", \"formAttribute\": \"endpoint\"}, {\"name\": \"Form\", \"formAttribute\": [\"registerEndpoint\", \"loginEndpoint\"]}, // allows specifying multiple properties if necessary ], \"linkComponents\": [ // Components used as alternatives to <a> for linking, eg. <Link to={ url } /> \"Hyperlink\", {\"name\": \"MyLink\", \"linkAttribute\": \"to\"}, {\"name\": \"Link\", \"linkAttribute\": [\"to\", \"href\"]}, // allows specifying multiple properties if necessary ] } } If you do not use a preset you will need to specify individual rules and add extra configuration. Add \"react\" to the plugins section. { \"plugins\": [ \"react\" ] } Enable JSX support. With eslint 2+ { \"parserOptions\": { \"ecmaFeatures\": { \"jsx\": true } } } Enable the rules that you would like to use. \"rules\": { \"react/jsx-uses-react\": \"error\", \"react/jsx-uses-vars\": \"error\", } Shareable configs Recommended This plugin exports a recommended configuration that enforces React good practices. To enable this configuration use the extends property in your .eslintrc config file: { \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"] } See eslint documentation for more information about extending configuration files. All This plugin also exports an all configuration that includes every available rule. This pairs well with the eslint:all rule. { \"plugins\": [ \"react\" ], \"extends\": [\"eslint:all\", \"plugin:react/all\"] } Note : These configurations will import eslint-plugin-react and enable JSX in parser options . Configuration (new: eslint.config.js ) From v8.21.0 , eslint announced a new config system. In the new system, .eslintrc* is no longer used. eslint.config.js would be the default config file name. In eslint v8 , the legacy system ( .eslintrc* ) would still be supported, while in eslint v9 , only the new system would be supported. And from v8.23.0 , eslint CLI starts to look up eslint.config.js . So, if your eslint is >=8.23.0 , you're 100% ready to use the new config system. You might want to check out the official blog posts, https://eslint.org/blog/2022/08/new-config-system-part-1/ https://eslint.org/blog/2022/08/new-config-system-part-2/ https://eslint.org/blog/2022/08/new-config-system-part-3/ and the official docs . Plugin The default export of eslint-plugin-react is a plugin object. const react = require('eslint-plugin-react'); const globals = require('globals'); module.exports = [ \u2026 { files: ['**/*.{js,jsx,mjs,cjs,ts,tsx}'], plugins: { react, }, languageOptions: { parserOptions: { ecmaFeatures: { jsx: true, }, }, globals: { ...globals.browser, }, }, rules: { // ... any rules you want 'react/jsx-uses-react': 'error', 'react/jsx-uses-vars': 'error', }, // ... others are omitted for brevity }, \u2026 ]; Configuring shared settings Refer to the official docs . The schema of the settings.react object would be identical to that of what's already described above in the legacy config section. Flat Configs This plugin exports 3 flat configs: flat.all flat.recommended flat['jsx-runtime'] The flat configs are available via the root plugin import. They will configure the plugin under the react/ namespace and enable JSX in languageOptions.parserOptions . const reactPlugin = require('eslint-plugin-react'); module.exports = [ \u2026 reactPlugin.configs.flat.recommended, // This is not a plugin object, but a shareable config object reactPlugin.configs.flat['jsx-runtime'], // Add this if you are using React 17+ \u2026 ]; You can of course add/override some properties. Note : Our shareable configs does not preconfigure files or languageOptions.globals . For most of the cases, you probably want to configure some properties by yourself. const reactPlugin = require('eslint-plugin-react'); const globals = require('globals'); module.exports = [ \u2026 { files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'], ...reactPlugin.configs.flat.recommended, languageOptions: { ...reactPlugin.configs.flat.recommended.languageOptions, globals: { ...globals.serviceworker, ...globals.browser, }, }, }, \u2026 ]; The above example is same as the example below, as the new config system is based on chaining. const reactPlugin = require('eslint-plugin-react'); const globals = require('globals'); module.exports = [ \u2026 { files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'], ...reactPlugin.configs.flat.recommended, }, { files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'], languageOptions: { globals: { ...globals.serviceworker, ...globals.browser, }, }, }, \u2026 ]; List of supported rules \ud83d\udcbc Configurations enabled in.\\ \ud83d\udeab Configurations disabled in.\\ \ud83c\udfc3 Set in the jsx-runtime configuration .\\ \u2611\ufe0f Set in the recommended configuration .\\ \ud83d\udd27 Automatically fixable by the --fix CLI option .\\ \ud83d\udca1 Manually fixable by editor suggestions .\\ \u274c Deprecated. Name Description \ud83d\udcbc \ud83d\udeab \ud83d\udd27 \ud83d\udca1 \u274c boolean-prop-naming Enforces consistent naming for boolean props button-has-type Disallow usage of button elements without an explicit type attribute checked-requires-onchange-or-readonly Enforce using onChange or readonly attribute when checked is used default-props-match-prop-types Enforce all defaultProps have a corresponding non-required PropType destructuring-assignment Enforce consistent usage of destructuring assignment of props, state, and context \ud83d\udd27 display-name Disallow missing displayName in a React component definition \u2611\ufe0f forbid-component-props Disallow certain props on components forbid-dom-props Disallow certain props on DOM Nodes forbid-elements Disallow certain elements forbid-foreign-prop-types Disallow using another component's propTypes forbid-prop-types Disallow certain propTypes forward-ref-uses-ref Require all forwardRef components include a ref parameter \ud83d\udca1 function-component-definition Enforce a specific function type for function components \ud83d\udd27 hook-use-state Ensure destructuring and symmetric naming of useState hook value and setter variables \ud83d\udca1 iframe-missing-sandbox Enforce sandbox attribute on iframe elements jsx-boolean-value Enforce boolean attributes notation in JSX \ud83d\udd27 jsx-child-element-spacing Enforce or disallow spaces inside of curly braces in JSX attributes and expressions jsx-closing-bracket-location Enforce closing bracket location in JSX \ud83d\udd27 jsx-closing-tag-location Enforce closing tag location for multiline JSX \ud83d\udd27 jsx-curly-brace-presence Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes \ud83d\udd27 jsx-curly-newline Enforce consistent linebreaks in curly braces in JSX attributes and expressions \ud83d\udd27 jsx-curly-spacing Enforce or disallow spaces inside of curly braces in JSX attributes and expressions \ud83d\udd27 jsx-equals-spacing Enforce or disallow spaces around equal signs in JSX attributes \ud83d\udd27 jsx-filename-extension Disallow file extensions that may contain JSX jsx-first-prop-new-line Enforce proper position of the first property in JSX \ud83d\udd27 jsx-fragments Enforce shorthand or standard form for React fragments \ud83d\udd27 jsx-handler-names Enforce event handler naming conventions in JSX jsx-indent Enforce JSX indentation \ud83d\udd27 jsx-indent-props Enforce props indentation in JSX \ud83d\udd27 jsx-key Disallow missing key props in iterators/collection literals \u2611\ufe0f jsx-max-depth Enforce JSX maximum depth jsx-max-props-per-line Enforce maximum of props on a single line in JSX \ud83d\udd27 jsx-newline Require or prevent a new line after jsx elements and expressions. \ud83d\udd27 jsx-no-bind Disallow .bind() or arrow functions in JSX props jsx-no-comment-textnodes Disallow comments from being inserted as text nodes \u2611\ufe0f jsx-no-constructed-context-values Disallows JSX context provider values from taking values that will cause needless rerenders jsx-no-duplicate-props Disallow duplicate properties in JSX \u2611\ufe0f jsx-no-leaked-render Disallow problematic leaked values from being rendered \ud83d\udd27 jsx-no-literals Disallow usage of string literals in JSX jsx-no-script-url Disallow usage of javascript: URLs jsx-no-target-blank Disallow target=\"_blank\" attribute without rel=\"noreferrer\" \u2611\ufe0f \ud83d\udd27 jsx-no-undef Disallow undeclared variables in JSX \u2611\ufe0f jsx-no-useless-fragment Disallow unnecessary fragments \ud83d\udd27 jsx-one-expression-per-line Require one JSX element per line \ud83d\udd27 jsx-pascal-case Enforce PascalCase for user-defined JSX components jsx-props-no-multi-spaces Disallow multiple spaces between inline JSX props \ud83d\udd27 jsx-props-no-spread-multi Disallow JSX prop spreading the same identifier multiple times jsx-props-no-spreading Disallow JSX prop spreading jsx-sort-default-props Enforce defaultProps declarations alphabetical sorting \u274c jsx-sort-props Enforce props alphabetical sorting \ud83d\udd27 jsx-space-before-closing Enforce spacing before closing bracket in JSX \ud83d\udd27 \u274c jsx-tag-spacing Enforce whitespace in and around the JSX opening and closing brackets \ud83d\udd27 jsx-uses-react Disallow React to be incorrectly marked as unused \u2611\ufe0f \ud83c\udfc3 jsx-uses-vars Disallow variables used in JSX to be incorrectly marked as unused \u2611\ufe0f jsx-wrap-multilines Disallow missing parentheses around multiline JSX \ud83d\udd27 no-access-state-in-setstate Disallow when this.state is accessed within setState no-adjacent-inline-elements Disallow adjacent inline elements not separated by whitespace. no-array-index-key Disallow usage of Array index in keys no-arrow-function-lifecycle Lifecycle methods should be methods on the prototype, not class fields \ud83d\udd27 no-children-prop Disallow passing of children as props \u2611\ufe0f no-danger Disallow usage of dangerous JSX properties no-danger-with-children Disallow when a DOM element is using both children and dangerouslySetInnerHTML \u2611\ufe0f no-deprecated Disallow usage of deprecated methods \u2611\ufe0f no-did-mount-set-state Disallow usage of setState in componentDidMount no-did-update-set-state Disallow usage of setState in componentDidUpdate no-direct-mutation-state Disallow direct mutation of this.state \u2611\ufe0f no-find-dom-node Disallow usage of findDOMNode \u2611\ufe0f no-invalid-html-attribute Disallow usage of invalid attributes \ud83d\udca1 no-is-mounted Disallow usage of isMounted \u2611\ufe0f no-multi-comp Disallow multiple component definition per file no-namespace Enforce that namespaces are not used in React elements no-object-type-as-default-prop Disallow usage of referential-type variables as default param in functional component no-redundant-should-component-update Disallow usage of shouldComponentUpdate when extending React.PureComponent no-render-return-value Disallow usage of the return value of ReactDOM.render \u2611\ufe0f no-set-state Disallow usage of setState no-string-refs Disallow using string references \u2611\ufe0f no-this-in-sfc Disallow this from being used in stateless functional components no-typos Disallow common typos no-unescaped-entities Disallow unescaped HTML entities from appearing in markup \u2611\ufe0f \ud83d\udca1 no-unknown-property Disallow usage of unknown DOM property \u2611\ufe0f \ud83d\udd27 no-unsafe Disallow usage of unsafe lifecycle methods \u2611\ufe0f no-unstable-nested-components Disallow creating unstable components inside components no-unused-class-component-methods Disallow declaring unused methods of component class no-unused-prop-types Disallow definitions of unused propTypes no-unused-state Disallow definitions of unused state no-will-update-set-state Disallow usage of setState in componentWillUpdate prefer-es6-class Enforce ES5 or ES6 class for React Components prefer-exact-props Prefer exact proptype definitions prefer-read-only-props Enforce that props are read-only \ud83d\udd27 prefer-stateless-function Enforce stateless components to be written as a pure function prop-types Disallow missing props validation in a React component definition \u2611\ufe0f react-in-jsx-scope Disallow missing React when using JSX \u2611\ufe0f \ud83c\udfc3 require-default-props Enforce a defaultProps definition for every prop that is not a required prop require-optimization Enforce React components to have a shouldComponentUpdate method require-render-return Enforce ES5 or ES6 class for returning value in render function \u2611\ufe0f self-closing-comp Disallow extra closing tags for components without children \ud83d\udd27 sort-comp Enforce component methods order sort-default-props Enforce defaultProps declarations alphabetical sorting sort-prop-types Enforce propTypes declarations alphabetical sorting \ud83d\udd27 state-in-constructor Enforce class component state initialization style static-property-placement Enforces where React component static properties should be positioned. style-prop-object Enforce style prop value is an object void-dom-elements-no-children Disallow void DOM elements (e.g. <img /> , <br /> ) from receiving children Other useful plugins Rules of Hooks: eslint-plugin-react-hooks JSX accessibility: eslint-plugin-jsx-a11y React Native: eslint-plugin-react-native License eslint-plugin-react is licensed under the MIT License .","title":"eslint-plugin-react Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#eslint-plugin-react","text":"=================== React specific linting rules for eslint","title":"eslint-plugin-react"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#installation","text":"npm install eslint eslint-plugin-react --save-dev It is also possible to install ESLint globally rather than locally (using npm install -g eslint ). However, this is not recommended, and any plugins or shareable configs that you use must be installed locally in either case.","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#configuration-legacy-eslintrc","text":"Use our preset to get reasonable defaults: \"extends\": [ \"eslint:recommended\", \"plugin:react/recommended\" ] If you are using the new JSX transform from React 17 , extend react/jsx-runtime in your eslint config (add \"plugin:react/jsx-runtime\" to \"extends\" ) to disable the relevant rules. You should also specify settings that will be shared across all the plugin rules. ( More about eslint shared settings ) { \"settings\": { \"react\": { \"createClass\": \"createReactClass\", // Regex for Component Factory to use, // default to \"createReactClass\" \"pragma\": \"React\", // Pragma to use, default to \"React\" \"fragment\": \"Fragment\", // Fragment to use (may be a property of <pragma>), default to \"Fragment\" \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed. // You can also use `16.0`, `16.3`, etc, if you want to override the detected value. // Defaults to the \"defaultVersion\" setting and warns if missing, and to \"detect\" in the future \"defaultVersion\": \"\", // Default React version to use when the version you have installed cannot be detected. // If not provided, defaults to the latest React version. \"flowVersion\": \"0.53\" // Flow version }, \"propWrapperFunctions\": [ // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped. \"forbidExtraProps\", {\"property\": \"freeze\", \"object\": \"Object\"}, {\"property\": \"myFavoriteWrapper\"}, // for rules that check exact prop wrappers {\"property\": \"forbidExtraProps\", \"exact\": true} ], \"componentWrapperFunctions\": [ // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped. \"observer\", // `property` {\"property\": \"styled\"}, // `object` is optional {\"property\": \"observer\", \"object\": \"Mobx\"}, {\"property\": \"observer\", \"object\": \"<pragma>\"} // sets `object` to whatever value `settings.react.pragma` is set to ], \"formComponents\": [ // Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } /> \"CustomForm\", {\"name\": \"SimpleForm\", \"formAttribute\": \"endpoint\"}, {\"name\": \"Form\", \"formAttribute\": [\"registerEndpoint\", \"loginEndpoint\"]}, // allows specifying multiple properties if necessary ], \"linkComponents\": [ // Components used as alternatives to <a> for linking, eg. <Link to={ url } /> \"Hyperlink\", {\"name\": \"MyLink\", \"linkAttribute\": \"to\"}, {\"name\": \"Link\", \"linkAttribute\": [\"to\", \"href\"]}, // allows specifying multiple properties if necessary ] } } If you do not use a preset you will need to specify individual rules and add extra configuration. Add \"react\" to the plugins section. { \"plugins\": [ \"react\" ] } Enable JSX support. With eslint 2+ { \"parserOptions\": { \"ecmaFeatures\": { \"jsx\": true } } } Enable the rules that you would like to use. \"rules\": { \"react/jsx-uses-react\": \"error\", \"react/jsx-uses-vars\": \"error\", }","title":"Configuration (legacy: .eslintrc*)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#shareable-configs","text":"","title":"Shareable configs"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#recommended","text":"This plugin exports a recommended configuration that enforces React good practices. To enable this configuration use the extends property in your .eslintrc config file: { \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"] } See eslint documentation for more information about extending configuration files.","title":"Recommended"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#all","text":"This plugin also exports an all configuration that includes every available rule. This pairs well with the eslint:all rule. { \"plugins\": [ \"react\" ], \"extends\": [\"eslint:all\", \"plugin:react/all\"] } Note : These configurations will import eslint-plugin-react and enable JSX in parser options .","title":"All"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#configuration-new-eslintconfigjs","text":"From v8.21.0 , eslint announced a new config system. In the new system, .eslintrc* is no longer used. eslint.config.js would be the default config file name. In eslint v8 , the legacy system ( .eslintrc* ) would still be supported, while in eslint v9 , only the new system would be supported. And from v8.23.0 , eslint CLI starts to look up eslint.config.js . So, if your eslint is >=8.23.0 , you're 100% ready to use the new config system. You might want to check out the official blog posts, https://eslint.org/blog/2022/08/new-config-system-part-1/ https://eslint.org/blog/2022/08/new-config-system-part-2/ https://eslint.org/blog/2022/08/new-config-system-part-3/ and the official docs .","title":"Configuration (new: eslint.config.js)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#plugin","text":"The default export of eslint-plugin-react is a plugin object. const react = require('eslint-plugin-react'); const globals = require('globals'); module.exports = [ \u2026 { files: ['**/*.{js,jsx,mjs,cjs,ts,tsx}'], plugins: { react, }, languageOptions: { parserOptions: { ecmaFeatures: { jsx: true, }, }, globals: { ...globals.browser, }, }, rules: { // ... any rules you want 'react/jsx-uses-react': 'error', 'react/jsx-uses-vars': 'error', }, // ... others are omitted for brevity }, \u2026 ];","title":"Plugin"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#configuring-shared-settings","text":"Refer to the official docs . The schema of the settings.react object would be identical to that of what's already described above in the legacy config section.","title":"Configuring shared settings"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#flat-configs","text":"This plugin exports 3 flat configs: flat.all flat.recommended flat['jsx-runtime'] The flat configs are available via the root plugin import. They will configure the plugin under the react/ namespace and enable JSX in languageOptions.parserOptions . const reactPlugin = require('eslint-plugin-react'); module.exports = [ \u2026 reactPlugin.configs.flat.recommended, // This is not a plugin object, but a shareable config object reactPlugin.configs.flat['jsx-runtime'], // Add this if you are using React 17+ \u2026 ]; You can of course add/override some properties. Note : Our shareable configs does not preconfigure files or languageOptions.globals . For most of the cases, you probably want to configure some properties by yourself. const reactPlugin = require('eslint-plugin-react'); const globals = require('globals'); module.exports = [ \u2026 { files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'], ...reactPlugin.configs.flat.recommended, languageOptions: { ...reactPlugin.configs.flat.recommended.languageOptions, globals: { ...globals.serviceworker, ...globals.browser, }, }, }, \u2026 ]; The above example is same as the example below, as the new config system is based on chaining. const reactPlugin = require('eslint-plugin-react'); const globals = require('globals'); module.exports = [ \u2026 { files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'], ...reactPlugin.configs.flat.recommended, }, { files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'], languageOptions: { globals: { ...globals.serviceworker, ...globals.browser, }, }, }, \u2026 ];","title":"Flat Configs"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#list-of-supported-rules","text":"\ud83d\udcbc Configurations enabled in.\\ \ud83d\udeab Configurations disabled in.\\ \ud83c\udfc3 Set in the jsx-runtime configuration .\\ \u2611\ufe0f Set in the recommended configuration .\\ \ud83d\udd27 Automatically fixable by the --fix CLI option .\\ \ud83d\udca1 Manually fixable by editor suggestions .\\ \u274c Deprecated. Name Description \ud83d\udcbc \ud83d\udeab \ud83d\udd27 \ud83d\udca1 \u274c boolean-prop-naming Enforces consistent naming for boolean props button-has-type Disallow usage of button elements without an explicit type attribute checked-requires-onchange-or-readonly Enforce using onChange or readonly attribute when checked is used default-props-match-prop-types Enforce all defaultProps have a corresponding non-required PropType destructuring-assignment Enforce consistent usage of destructuring assignment of props, state, and context \ud83d\udd27 display-name Disallow missing displayName in a React component definition \u2611\ufe0f forbid-component-props Disallow certain props on components forbid-dom-props Disallow certain props on DOM Nodes forbid-elements Disallow certain elements forbid-foreign-prop-types Disallow using another component's propTypes forbid-prop-types Disallow certain propTypes forward-ref-uses-ref Require all forwardRef components include a ref parameter \ud83d\udca1 function-component-definition Enforce a specific function type for function components \ud83d\udd27 hook-use-state Ensure destructuring and symmetric naming of useState hook value and setter variables \ud83d\udca1 iframe-missing-sandbox Enforce sandbox attribute on iframe elements jsx-boolean-value Enforce boolean attributes notation in JSX \ud83d\udd27 jsx-child-element-spacing Enforce or disallow spaces inside of curly braces in JSX attributes and expressions jsx-closing-bracket-location Enforce closing bracket location in JSX \ud83d\udd27 jsx-closing-tag-location Enforce closing tag location for multiline JSX \ud83d\udd27 jsx-curly-brace-presence Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes \ud83d\udd27 jsx-curly-newline Enforce consistent linebreaks in curly braces in JSX attributes and expressions \ud83d\udd27 jsx-curly-spacing Enforce or disallow spaces inside of curly braces in JSX attributes and expressions \ud83d\udd27 jsx-equals-spacing Enforce or disallow spaces around equal signs in JSX attributes \ud83d\udd27 jsx-filename-extension Disallow file extensions that may contain JSX jsx-first-prop-new-line Enforce proper position of the first property in JSX \ud83d\udd27 jsx-fragments Enforce shorthand or standard form for React fragments \ud83d\udd27 jsx-handler-names Enforce event handler naming conventions in JSX jsx-indent Enforce JSX indentation \ud83d\udd27 jsx-indent-props Enforce props indentation in JSX \ud83d\udd27 jsx-key Disallow missing key props in iterators/collection literals \u2611\ufe0f jsx-max-depth Enforce JSX maximum depth jsx-max-props-per-line Enforce maximum of props on a single line in JSX \ud83d\udd27 jsx-newline Require or prevent a new line after jsx elements and expressions. \ud83d\udd27 jsx-no-bind Disallow .bind() or arrow functions in JSX props jsx-no-comment-textnodes Disallow comments from being inserted as text nodes \u2611\ufe0f jsx-no-constructed-context-values Disallows JSX context provider values from taking values that will cause needless rerenders jsx-no-duplicate-props Disallow duplicate properties in JSX \u2611\ufe0f jsx-no-leaked-render Disallow problematic leaked values from being rendered \ud83d\udd27 jsx-no-literals Disallow usage of string literals in JSX jsx-no-script-url Disallow usage of javascript: URLs jsx-no-target-blank Disallow target=\"_blank\" attribute without rel=\"noreferrer\" \u2611\ufe0f \ud83d\udd27 jsx-no-undef Disallow undeclared variables in JSX \u2611\ufe0f jsx-no-useless-fragment Disallow unnecessary fragments \ud83d\udd27 jsx-one-expression-per-line Require one JSX element per line \ud83d\udd27 jsx-pascal-case Enforce PascalCase for user-defined JSX components jsx-props-no-multi-spaces Disallow multiple spaces between inline JSX props \ud83d\udd27 jsx-props-no-spread-multi Disallow JSX prop spreading the same identifier multiple times jsx-props-no-spreading Disallow JSX prop spreading jsx-sort-default-props Enforce defaultProps declarations alphabetical sorting \u274c jsx-sort-props Enforce props alphabetical sorting \ud83d\udd27 jsx-space-before-closing Enforce spacing before closing bracket in JSX \ud83d\udd27 \u274c jsx-tag-spacing Enforce whitespace in and around the JSX opening and closing brackets \ud83d\udd27 jsx-uses-react Disallow React to be incorrectly marked as unused \u2611\ufe0f \ud83c\udfc3 jsx-uses-vars Disallow variables used in JSX to be incorrectly marked as unused \u2611\ufe0f jsx-wrap-multilines Disallow missing parentheses around multiline JSX \ud83d\udd27 no-access-state-in-setstate Disallow when this.state is accessed within setState no-adjacent-inline-elements Disallow adjacent inline elements not separated by whitespace. no-array-index-key Disallow usage of Array index in keys no-arrow-function-lifecycle Lifecycle methods should be methods on the prototype, not class fields \ud83d\udd27 no-children-prop Disallow passing of children as props \u2611\ufe0f no-danger Disallow usage of dangerous JSX properties no-danger-with-children Disallow when a DOM element is using both children and dangerouslySetInnerHTML \u2611\ufe0f no-deprecated Disallow usage of deprecated methods \u2611\ufe0f no-did-mount-set-state Disallow usage of setState in componentDidMount no-did-update-set-state Disallow usage of setState in componentDidUpdate no-direct-mutation-state Disallow direct mutation of this.state \u2611\ufe0f no-find-dom-node Disallow usage of findDOMNode \u2611\ufe0f no-invalid-html-attribute Disallow usage of invalid attributes \ud83d\udca1 no-is-mounted Disallow usage of isMounted \u2611\ufe0f no-multi-comp Disallow multiple component definition per file no-namespace Enforce that namespaces are not used in React elements no-object-type-as-default-prop Disallow usage of referential-type variables as default param in functional component no-redundant-should-component-update Disallow usage of shouldComponentUpdate when extending React.PureComponent no-render-return-value Disallow usage of the return value of ReactDOM.render \u2611\ufe0f no-set-state Disallow usage of setState no-string-refs Disallow using string references \u2611\ufe0f no-this-in-sfc Disallow this from being used in stateless functional components no-typos Disallow common typos no-unescaped-entities Disallow unescaped HTML entities from appearing in markup \u2611\ufe0f \ud83d\udca1 no-unknown-property Disallow usage of unknown DOM property \u2611\ufe0f \ud83d\udd27 no-unsafe Disallow usage of unsafe lifecycle methods \u2611\ufe0f no-unstable-nested-components Disallow creating unstable components inside components no-unused-class-component-methods Disallow declaring unused methods of component class no-unused-prop-types Disallow definitions of unused propTypes no-unused-state Disallow definitions of unused state no-will-update-set-state Disallow usage of setState in componentWillUpdate prefer-es6-class Enforce ES5 or ES6 class for React Components prefer-exact-props Prefer exact proptype definitions prefer-read-only-props Enforce that props are read-only \ud83d\udd27 prefer-stateless-function Enforce stateless components to be written as a pure function prop-types Disallow missing props validation in a React component definition \u2611\ufe0f react-in-jsx-scope Disallow missing React when using JSX \u2611\ufe0f \ud83c\udfc3 require-default-props Enforce a defaultProps definition for every prop that is not a required prop require-optimization Enforce React components to have a shouldComponentUpdate method require-render-return Enforce ES5 or ES6 class for returning value in render function \u2611\ufe0f self-closing-comp Disallow extra closing tags for components without children \ud83d\udd27 sort-comp Enforce component methods order sort-default-props Enforce defaultProps declarations alphabetical sorting sort-prop-types Enforce propTypes declarations alphabetical sorting \ud83d\udd27 state-in-constructor Enforce class component state initialization style static-property-placement Enforces where React component static properties should be positioned. style-prop-object Enforce style prop value is an object void-dom-elements-no-children Disallow void DOM elements (e.g. <img /> , <br /> ) from receiving children","title":"List of supported rules"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#other-useful-plugins","text":"Rules of Hooks: eslint-plugin-react-hooks JSX accessibility: eslint-plugin-jsx-a11y React Native: eslint-plugin-react-native","title":"Other useful plugins"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react/#license","text":"eslint-plugin-react is licensed under the MIT License .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/","text":"eslint-plugin-react-hooks This ESLint plugin enforces the Rules of Hooks . It is a part of the Hooks API for React. Installation Note: If you're using Create React App, please use react-scripts >= 3 instead of adding it directly. Assuming you already have ESLint installed, run: # npm npm install eslint-plugin-react-hooks --save-dev # yarn yarn add eslint-plugin-react-hooks --dev Then extend the recommended eslint config: { \"extends\": [ // ... \"plugin:react-hooks/recommended\" ] } Custom Configuration If you want more fine-grained configuration, you can instead add a snippet like this to your ESLint configuration file: { \"plugins\": [ // ... \"react-hooks\" ], \"rules\": { // ... \"react-hooks/rules-of-hooks\": \"error\", \"react-hooks/exhaustive-deps\": \"warn\" } } Advanced Configuration exhaustive-deps can be configured to validate dependencies of custom Hooks with the additionalHooks option. This option accepts a regex to match the names of custom Hooks that have dependencies. { \"rules\": { // ... \"react-hooks/exhaustive-deps\": [\"warn\", { \"additionalHooks\": \"(useMyCustomHook|useMyOtherCustomHook)\" }] } } We suggest to use this option very sparingly, if at all . Generally saying, we recommend most custom Hooks to not use the dependencies argument, and instead provide a higher-level API that is more focused around a specific use case. Valid and Invalid Examples Please refer to the Rules of Hooks documentation to learn more about this rule. License MIT","title":"eslint-plugin-react-hooks"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/#eslint-plugin-react-hooks","text":"This ESLint plugin enforces the Rules of Hooks . It is a part of the Hooks API for React.","title":"eslint-plugin-react-hooks"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/#installation","text":"Note: If you're using Create React App, please use react-scripts >= 3 instead of adding it directly. Assuming you already have ESLint installed, run: # npm npm install eslint-plugin-react-hooks --save-dev # yarn yarn add eslint-plugin-react-hooks --dev Then extend the recommended eslint config: { \"extends\": [ // ... \"plugin:react-hooks/recommended\" ] }","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/#custom-configuration","text":"If you want more fine-grained configuration, you can instead add a snippet like this to your ESLint configuration file: { \"plugins\": [ // ... \"react-hooks\" ], \"rules\": { // ... \"react-hooks/rules-of-hooks\": \"error\", \"react-hooks/exhaustive-deps\": \"warn\" } }","title":"Custom Configuration"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/#advanced-configuration","text":"exhaustive-deps can be configured to validate dependencies of custom Hooks with the additionalHooks option. This option accepts a regex to match the names of custom Hooks that have dependencies. { \"rules\": { // ... \"react-hooks/exhaustive-deps\": [\"warn\", { \"additionalHooks\": \"(useMyCustomHook|useMyOtherCustomHook)\" }] } } We suggest to use this option very sparingly, if at all . Generally saying, we recommend most custom Hooks to not use the dependencies argument, and instead provide a higher-level API that is more focused around a specific use case.","title":"Advanced Configuration"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/#valid-and-invalid-examples","text":"Please refer to the Rules of Hooks documentation to learn more about this rule.","title":"Valid and Invalid Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-hooks/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/","text":"eslint-plugin-react-refresh Validate that your components can safely be updated with fast refresh. Limitations \u26a0\ufe0f To avoid false positive, by default this plugin is only applied on tsx & jsx files. See options to run on JS files. \u26a0\ufe0f The plugin rely on naming conventions (i.e. use PascalCase for components, camelCase for util functions). This is why there are some limitations: export * are not supported and will be reported as an error Anonymous function are not supported (i.e export default function() {} ) Class components are not supported All-uppercase function export is considered an error when not using direct named export (ex const CMS = () => <>; export { CMS } ) Installation npm i -D eslint-plugin-react-refresh Usage { \"plugins\": [\"react-refresh\"], \"rules\": { \"react-refresh/only-export-components\": \"warn\" } } Flat config import reactRefresh from \"eslint-plugin-react-refresh\"; export default [ { // in main config for TSX/JSX source files plugins: { \"react-refresh\": reactRefresh, }, rules: { \"react-refresh/only-export-components\": \"warn\", }, }, ]; Fail export const foo = () => {}; export const Bar = () => <></>; export default function () {} export default compose()(MainComponent) export * from \"./foo\"; const Tab = () => {}; export const tabs = [<Tab />, <Tab />]; const App = () => {}; createRoot(document.getElementById(\"root\")).render(<App />); Pass with allowConstantExport export const CONSTANT = 3; export const Foo = () => <></>; Pass export default function Foo() { return <></>; } const foo = () => {}; export const Bar = () => <></>; import { App } from \"./App\"; createRoot(document.getElementById(\"root\")).render(<App />); Options allowExportNames (v0.4.4) If you use a framework that handles HMR of some specific exports, you can use this option to avoid warning for them. Example for Remix : { \"react-refresh/only-export-components\": [ \"warn\", { \"allowExportNames\": [\"meta\", \"links\", \"headers\", \"loader\", \"action\"] } ] } allowConstantExport (v0.4.0) Don't warn when a constant (string, number, boolean, templateLiteral) is exported aside one or more components. This should be enabled if the fast refresh implementation correctly handles this case (HMR when the constant doesn't change, propagate update to importers when the constant changes.). Vite supports it, PR welcome if you notice other integrations works well. { \"react-refresh/only-export-components\": [ \"warn\", { \"allowConstantExport\": true } ] } checkJS (v0.3.3) If your using JSX inside .js files (which I don't recommend because it forces you to configure every tool you use to switch the parser), you can still use the plugin by enabling this option. To reduce the number of false positive, only files importing react are checked. { \"react-refresh/only-export-components\": [\"warn\", { \"checkJS\": true }] }","title":"eslint-plugin-react-refresh npm"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#eslint-plugin-react-refresh","text":"Validate that your components can safely be updated with fast refresh.","title":"eslint-plugin-react-refresh"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#limitations","text":"\u26a0\ufe0f To avoid false positive, by default this plugin is only applied on tsx & jsx files. See options to run on JS files. \u26a0\ufe0f The plugin rely on naming conventions (i.e. use PascalCase for components, camelCase for util functions). This is why there are some limitations: export * are not supported and will be reported as an error Anonymous function are not supported (i.e export default function() {} ) Class components are not supported All-uppercase function export is considered an error when not using direct named export (ex const CMS = () => <>; export { CMS } )","title":"Limitations"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#installation","text":"npm i -D eslint-plugin-react-refresh","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#usage","text":"{ \"plugins\": [\"react-refresh\"], \"rules\": { \"react-refresh/only-export-components\": \"warn\" } }","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#flat-config","text":"import reactRefresh from \"eslint-plugin-react-refresh\"; export default [ { // in main config for TSX/JSX source files plugins: { \"react-refresh\": reactRefresh, }, rules: { \"react-refresh/only-export-components\": \"warn\", }, }, ];","title":"Flat config"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#fail","text":"export const foo = () => {}; export const Bar = () => <></>; export default function () {} export default compose()(MainComponent) export * from \"./foo\"; const Tab = () => {}; export const tabs = [<Tab />, <Tab />]; const App = () => {}; createRoot(document.getElementById(\"root\")).render(<App />);","title":"Fail"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#pass-with-allowconstantexport","text":"export const CONSTANT = 3; export const Foo = () => <></>;","title":"Pass with allowConstantExport"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#pass","text":"export default function Foo() { return <></>; } const foo = () => {}; export const Bar = () => <></>; import { App } from \"./App\"; createRoot(document.getElementById(\"root\")).render(<App />);","title":"Pass"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#options","text":"","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#allowexportnames-v044","text":"If you use a framework that handles HMR of some specific exports, you can use this option to avoid warning for them. Example for Remix : { \"react-refresh/only-export-components\": [ \"warn\", { \"allowExportNames\": [\"meta\", \"links\", \"headers\", \"loader\", \"action\"] } ] }","title":"allowExportNames (v0.4.4)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#allowconstantexport-v040","text":"Don't warn when a constant (string, number, boolean, templateLiteral) is exported aside one or more components. This should be enabled if the fast refresh implementation correctly handles this case (HMR when the constant doesn't change, propagate update to importers when the constant changes.). Vite supports it, PR welcome if you notice other integrations works well. { \"react-refresh/only-export-components\": [ \"warn\", { \"allowConstantExport\": true } ] }","title":"allowConstantExport (v0.4.0)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-plugin-react-refresh/#checkjs-v033","text":"If your using JSX inside .js files (which I don't recommend because it forces you to configure every tool you use to switch the parser), you can still use the plugin by enabling this option. To reduce the number of false positive, only files importing react are checked. { \"react-refresh/only-export-components\": [\"warn\", { \"checkJS\": true }] }","title":"checkJS (v0.3.3)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/","text":"ESLint Scope ESLint Scope is the ECMAScript scope analyzer used in ESLint. It is a fork of escope . Install npm i eslint-scope --save \ud83d\udcd6 Usage To use in an ESM file: import * as eslintScope from 'eslint-scope'; To use in a CommonJS file: const eslintScope = require('eslint-scope'); In order to analyze scope, you'll need to have an ESTree compliant AST structure to run it on. The primary method is eslintScope.analyze() , which takes two arguments: ast - the ESTree-compliant AST structure to analyze. options (optional) - Options to adjust how the scope is analyzed, including: ignoreEval (default: false ) - Set to true to ignore all eval() calls (which would normally create scopes). nodejsScope (default: false ) - Set to true to create a top-level function scope needed for CommonJS evaluation. impliedStrict (default: false ) - Set to true to evaluate the code in strict mode even outside of modules and without \"use strict\" . ecmaVersion (default: 5 ) - The version of ECMAScript to use to evaluate the code. sourceType (default: \"script\" ) - The type of JavaScript file to evaluate. Change to \"module\" for ECMAScript module code. childVisitorKeys (default: null ) - An object with visitor key information (like eslint-visitor-keys ). Without this, eslint-scope finds child nodes to visit algorithmically. Providing this option is a performance enhancement. fallback (default: \"iteration\" ) - The strategy to use when childVisitorKeys is not specified. May be a function. Example: import * as eslintScope from 'eslint-scope'; import * as espree from 'espree'; import estraverse from 'estraverse'; const options = { ecmaVersion: 2022, sourceType: \"module\" }; const ast = espree.parse(code, { range: true, ...options }); const scopeManager = eslintScope.analyze(ast, options); const currentScope = scopeManager.acquire(ast); // global scope estraverse.traverse(ast, { enter (node, parent) { // do stuff if (/Function/.test(node.type)) { currentScope = scopeManager.acquire(node); // get current function scope } }, leave(node, parent) { if (/Function/.test(node.type)) { currentScope = currentScope.upper; // set to parent scope } // do stuff } }); Contributing Issues and pull requests will be triaged and responded to as quickly as possible. We operate under the ESLint Contributor Guidelines , so please be sure to read them before contributing. If you're not sure where to dig in, check out the issues . Security Policy We work hard to ensure that ESLint Scope is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy . Build Commands npm test - run all linting and tests npm run lint - run all linting License ESLint Scope is licensed under a permissive BSD 2-clause license. Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#eslint-scope","text":"ESLint Scope is the ECMAScript scope analyzer used in ESLint. It is a fork of escope .","title":"ESLint Scope"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#install","text":"npm i eslint-scope --save","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#usage","text":"To use in an ESM file: import * as eslintScope from 'eslint-scope'; To use in a CommonJS file: const eslintScope = require('eslint-scope'); In order to analyze scope, you'll need to have an ESTree compliant AST structure to run it on. The primary method is eslintScope.analyze() , which takes two arguments: ast - the ESTree-compliant AST structure to analyze. options (optional) - Options to adjust how the scope is analyzed, including: ignoreEval (default: false ) - Set to true to ignore all eval() calls (which would normally create scopes). nodejsScope (default: false ) - Set to true to create a top-level function scope needed for CommonJS evaluation. impliedStrict (default: false ) - Set to true to evaluate the code in strict mode even outside of modules and without \"use strict\" . ecmaVersion (default: 5 ) - The version of ECMAScript to use to evaluate the code. sourceType (default: \"script\" ) - The type of JavaScript file to evaluate. Change to \"module\" for ECMAScript module code. childVisitorKeys (default: null ) - An object with visitor key information (like eslint-visitor-keys ). Without this, eslint-scope finds child nodes to visit algorithmically. Providing this option is a performance enhancement. fallback (default: \"iteration\" ) - The strategy to use when childVisitorKeys is not specified. May be a function. Example: import * as eslintScope from 'eslint-scope'; import * as espree from 'espree'; import estraverse from 'estraverse'; const options = { ecmaVersion: 2022, sourceType: \"module\" }; const ast = espree.parse(code, { range: true, ...options }); const scopeManager = eslintScope.analyze(ast, options); const currentScope = scopeManager.acquire(ast); // global scope estraverse.traverse(ast, { enter (node, parent) { // do stuff if (/Function/.test(node.type)) { currentScope = scopeManager.acquire(node); // get current function scope } }, leave(node, parent) { if (/Function/.test(node.type)) { currentScope = currentScope.upper; // set to parent scope } // do stuff } });","title":"\ud83d\udcd6 Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#contributing","text":"Issues and pull requests will be triaged and responded to as quickly as possible. We operate under the ESLint Contributor Guidelines , so please be sure to read them before contributing. If you're not sure where to dig in, check out the issues .","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#security-policy","text":"We work hard to ensure that ESLint Scope is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy .","title":"Security Policy"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#build-commands","text":"npm test - run all linting and tests npm run lint - run all linting","title":"Build Commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#license","text":"ESLint Scope is licensed under a permissive BSD 2-clause license.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-scope/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/","text":"eslint-visitor-keys Constants and utilities about visitor keys to traverse AST. \ud83d\udcbf Installation Use npm to install. $ npm install eslint-visitor-keys Requirements Node.js ^18.18.0 , ^20.9.0 , or >=21.1.0 \ud83d\udcd6 Usage To use in an ESM file: import * as evk from \"eslint-visitor-keys\" To use in a CommonJS file: const evk = require(\"eslint-visitor-keys\") evk.KEYS type: { [type: string]: string[] | undefined } Visitor keys. This keys are frozen. This is an object. Keys are the type of ESTree nodes. Their values are an array of property names which have child nodes. For example: console.log(evk.KEYS.AssignmentExpression) // \u2192 [\"left\", \"right\"] evk.getKeys(node) type: (node: object) => string[] Get the visitor keys of a given AST node. This is similar to Object.keys(node) of ES Standard, but some keys are excluded: parent , leadingComments , trailingComments , and names which start with _ . This will be used to traverse unknown nodes. For example: const node = { type: \"AssignmentExpression\", left: { type: \"Identifier\", name: \"foo\" }, right: { type: \"Literal\", value: 0 } } console.log(evk.getKeys(node)) // \u2192 [\"type\", \"left\", \"right\"] evk.unionWith(additionalKeys) type: (additionalKeys: object) => { [type: string]: string[] | undefined } Make the union set with evk.KEYS and the given keys. The order of keys is, additionalKeys is at first, then evk.KEYS is concatenated after that. It removes duplicated keys as keeping the first one. For example: console.log(evk.unionWith({ MethodDefinition: [\"decorators\"] })) // \u2192 { ..., MethodDefinition: [\"decorators\", \"key\", \"value\"], ... } \ud83d\udcf0 Change log See GitHub releases . \ud83c\udf7b Contributing Welcome. See ESLint contribution guidelines . Development commands npm test runs tests and measures code coverage. npm run lint checks source codes with ESLint. npm run test:open-coverage opens the code coverage report of the previous test with your default browser. Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"eslint-visitor-keys"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#eslint-visitor-keys","text":"Constants and utilities about visitor keys to traverse AST.","title":"eslint-visitor-keys"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#installation","text":"Use npm to install. $ npm install eslint-visitor-keys","title":"\ud83d\udcbf Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#requirements","text":"Node.js ^18.18.0 , ^20.9.0 , or >=21.1.0","title":"Requirements"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#usage","text":"To use in an ESM file: import * as evk from \"eslint-visitor-keys\" To use in a CommonJS file: const evk = require(\"eslint-visitor-keys\")","title":"\ud83d\udcd6 Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#evkkeys","text":"type: { [type: string]: string[] | undefined } Visitor keys. This keys are frozen. This is an object. Keys are the type of ESTree nodes. Their values are an array of property names which have child nodes. For example: console.log(evk.KEYS.AssignmentExpression) // \u2192 [\"left\", \"right\"]","title":"evk.KEYS"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#evkgetkeysnode","text":"type: (node: object) => string[] Get the visitor keys of a given AST node. This is similar to Object.keys(node) of ES Standard, but some keys are excluded: parent , leadingComments , trailingComments , and names which start with _ . This will be used to traverse unknown nodes. For example: const node = { type: \"AssignmentExpression\", left: { type: \"Identifier\", name: \"foo\" }, right: { type: \"Literal\", value: 0 } } console.log(evk.getKeys(node)) // \u2192 [\"type\", \"left\", \"right\"]","title":"evk.getKeys(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#evkunionwithadditionalkeys","text":"type: (additionalKeys: object) => { [type: string]: string[] | undefined } Make the union set with evk.KEYS and the given keys. The order of keys is, additionalKeys is at first, then evk.KEYS is concatenated after that. It removes duplicated keys as keeping the first one. For example: console.log(evk.unionWith({ MethodDefinition: [\"decorators\"] })) // \u2192 { ..., MethodDefinition: [\"decorators\", \"key\", \"value\"], ... }","title":"evk.unionWith(additionalKeys)"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#change-log","text":"See GitHub releases .","title":"\ud83d\udcf0 Change log"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#contributing","text":"Welcome. See ESLint contribution guidelines .","title":"\ud83c\udf7b Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#development-commands","text":"npm test runs tests and measures code coverage. npm run lint checks source codes with ESLint. npm run test:open-coverage opens the code coverage report of the previous test with your default browser.","title":"Development commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/eslint-visitor-keys/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/","text":"Espree Espree started out as a fork of Esprima v1.2.2, the last stable published released of Esprima before work on ECMAScript 6 began. Espree is now built on top of Acorn , which has a modular architecture that allows extension of core functionality. The goal of Espree is to produce output that is similar to Esprima with a similar API so that it can be used in place of Esprima. Usage Install: npm i espree To use in an ESM file: import * as espree from \"espree\"; const ast = espree.parse(code); To use in a Common JS file: const espree = require(\"espree\"); const ast = espree.parse(code); API parse() parse parses the given code and returns a abstract syntax tree (AST). It takes two parameters. code string - the code which needs to be parsed. options (Optional) Object - read more about this here . import * as espree from \"espree\"; const ast = espree.parse(code); Example : const ast = espree.parse('let foo = \"bar\"', { ecmaVersion: 6 }); console.log(ast); Output Node { type: 'Program', start: 0, end: 15, body: [ Node { type: 'VariableDeclaration', start: 0, end: 15, declarations: [Array], kind: 'let' } ], sourceType: 'script' } tokenize() tokenize returns the tokens of a given code. It takes two parameters. code string - the code which needs to be parsed. options (Optional) Object - read more about this here . Even if options is empty or undefined or options.tokens is false , it assigns it to true in order to get the tokens array Example : import * as espree from \"espree\"; const tokens = espree.tokenize('let foo = \"bar\"', { ecmaVersion: 6 }); console.log(tokens); Output Token { type: 'Keyword', value: 'let', start: 0, end: 3 }, Token { type: 'Identifier', value: 'foo', start: 4, end: 7 }, Token { type: 'Punctuator', value: '=', start: 8, end: 9 }, Token { type: 'String', value: '\"bar\"', start: 10, end: 15 } version Returns the current espree version VisitorKeys Returns all visitor keys for traversing the AST from eslint-visitor-keys latestEcmaVersion Returns the latest ECMAScript supported by espree supportedEcmaVersions Returns an array of all supported ECMAScript versions Options const options = { // attach range information to each node range: false, // attach line/column location information to each node loc: false, // create a top-level comments array containing all comments comment: false, // create a top-level tokens array containing all tokens tokens: false, // Set to 3, 5 (the default), 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 or 16 to specify the version of ECMAScript syntax you want to use. // You can also set to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10), 2020 (same as 11), 2021 (same as 12), 2022 (same as 13), 2023 (same as 14), 2024 (same as 15) or 2025 (same as 16) to use the year-based naming. // You can also set \"latest\" to use the most recently supported version. ecmaVersion: 3, allowReserved: true, // only allowed when ecmaVersion is 3 // specify which type of script you're parsing (\"script\", \"module\", or \"commonjs\") sourceType: \"script\", // specify additional language features ecmaFeatures: { // enable JSX parsing jsx: false, // enable return in global scope (set to true automatically when sourceType is \"commonjs\") globalReturn: false, // enable implied strict mode (if ecmaVersion >= 5) impliedStrict: false } } Esprima Compatibility Going Forward The primary goal is to produce the exact same AST structure and tokens as Esprima, and that takes precedence over anything else. (The AST structure being the ESTree API with JSX extensions.) Separate from that, Espree may deviate from what Esprima outputs in terms of where and how comments are attached, as well as what additional information is available on AST nodes. That is to say, Espree may add more things to the AST nodes than Esprima does but the overall AST structure produced will be the same. Espree may also deviate from Esprima in the interface it exposes. Contributing Issues and pull requests will be triaged and responded to as quickly as possible. We operate under the ESLint Contributor Guidelines , so please be sure to read them before contributing. If you're not sure where to dig in, check out the issues . Espree is licensed under a permissive BSD 2-clause license. Security Policy We work hard to ensure that Espree is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy . Build Commands npm test - run all tests npm run lint - run all linting Differences from Espree 2.x The tokenize() method does not use ecmaFeatures . Any string will be tokenized completely based on ECMAScript 6 semantics. Trailing whitespace no longer is counted as part of a node. let and const declarations are no longer parsed by default. You must opt-in by using an ecmaVersion newer than 5 or setting sourceType to module . The esparse and esvalidate binary scripts have been removed. There is no tolerant option. We will investigate adding this back in the future. Known Incompatibilities In an effort to help those wanting to transition from other parsers to Espree, the following is a list of noteworthy incompatibilities with other parsers. These are known differences that we do not intend to change. Esprima 1.2.2 Esprima counts trailing whitespace as part of each AST node while Espree does not. In Espree, the end of a node is where the last token occurs. Espree does not parse let and const declarations by default. Error messages returned for parsing errors are different. There are two addition properties on every node and token: start and end . These represent the same data as range and are used internally by Acorn. Esprima 2.x Esprima 2.x uses a different comment attachment algorithm that results in some comments being added in different places than Espree. The algorithm Espree uses is the same one used in Esprima 1.2.2. Frequently Asked Questions Why another parser ESLint had been relying on Esprima as its parser from the beginning. While that was fine when the JavaScript language was evolving slowly, the pace of development increased dramatically and Esprima had fallen behind. ESLint, like many other tools reliant on Esprima, has been stuck in using new JavaScript language features until Esprima updates, and that caused our users frustration. We decided the only way for us to move forward was to create our own parser, bringing us inline with JSHint and JSLint, and allowing us to keep implementing new features as we need them. We chose to fork Esprima instead of starting from scratch in order to move as quickly as possible with a compatible API. With Espree 2.0.0, we are no longer a fork of Esprima but rather a translation layer between Acorn and Esprima syntax. This allows us to put work back into a community-supported parser (Acorn) that is continuing to grow and evolve while maintaining an Esprima-compatible parser for those utilities still built on Esprima. Have you tried working with Esprima? Yes. Since the start of ESLint, we've regularly filed bugs and feature requests with Esprima and will continue to do so. However, there are some different philosophies around how the projects work that need to be worked through. The initial goal was to have Espree track Esprima and eventually merge the two back together, but we ultimately decided that building on top of Acorn was a better choice due to Acorn's plugin support. Why don't you just use Acorn? Acorn is a great JavaScript parser that produces an AST that is compatible with Esprima. Unfortunately, ESLint relies on more than just the AST to do its job. It relies on Esprima's tokens and comment attachment features to get a complete picture of the source code. We investigated switching to Acorn, but the inconsistencies between Esprima and Acorn created too much work for a project like ESLint. We are building on top of Acorn, however, so that we can contribute back and help make Acorn even better. What ECMAScript features do you support? Espree supports all ECMAScript 2024 features and partially supports ECMAScript 2025 features. Because ECMAScript 2025 is still under development, we are implementing features as they are finalized. Currently, Espree supports: RegExp Duplicate named capturing groups See finished-proposals.md to know what features are finalized. How do you determine which experimental features to support? In general, we do not support experimental JavaScript features. We may make exceptions from time to time depending on the maturity of the features. Sponsors The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website. Platinum Sponsors Gold Sponsors Silver Sponsors Bronze Sponsors Technology Sponsors","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#espree","text":"Espree started out as a fork of Esprima v1.2.2, the last stable published released of Esprima before work on ECMAScript 6 began. Espree is now built on top of Acorn , which has a modular architecture that allows extension of core functionality. The goal of Espree is to produce output that is similar to Esprima with a similar API so that it can be used in place of Esprima.","title":"Espree"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#usage","text":"Install: npm i espree To use in an ESM file: import * as espree from \"espree\"; const ast = espree.parse(code); To use in a Common JS file: const espree = require(\"espree\"); const ast = espree.parse(code);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#parse","text":"parse parses the given code and returns a abstract syntax tree (AST). It takes two parameters. code string - the code which needs to be parsed. options (Optional) Object - read more about this here . import * as espree from \"espree\"; const ast = espree.parse(code); Example : const ast = espree.parse('let foo = \"bar\"', { ecmaVersion: 6 }); console.log(ast); Output Node { type: 'Program', start: 0, end: 15, body: [ Node { type: 'VariableDeclaration', start: 0, end: 15, declarations: [Array], kind: 'let' } ], sourceType: 'script' }","title":"parse()"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#tokenize","text":"tokenize returns the tokens of a given code. It takes two parameters. code string - the code which needs to be parsed. options (Optional) Object - read more about this here . Even if options is empty or undefined or options.tokens is false , it assigns it to true in order to get the tokens array Example : import * as espree from \"espree\"; const tokens = espree.tokenize('let foo = \"bar\"', { ecmaVersion: 6 }); console.log(tokens); Output Token { type: 'Keyword', value: 'let', start: 0, end: 3 }, Token { type: 'Identifier', value: 'foo', start: 4, end: 7 }, Token { type: 'Punctuator', value: '=', start: 8, end: 9 }, Token { type: 'String', value: '\"bar\"', start: 10, end: 15 }","title":"tokenize()"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#version","text":"Returns the current espree version","title":"version"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#visitorkeys","text":"Returns all visitor keys for traversing the AST from eslint-visitor-keys","title":"VisitorKeys"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#latestecmaversion","text":"Returns the latest ECMAScript supported by espree","title":"latestEcmaVersion"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#supportedecmaversions","text":"Returns an array of all supported ECMAScript versions","title":"supportedEcmaVersions"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#options","text":"const options = { // attach range information to each node range: false, // attach line/column location information to each node loc: false, // create a top-level comments array containing all comments comment: false, // create a top-level tokens array containing all tokens tokens: false, // Set to 3, 5 (the default), 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 or 16 to specify the version of ECMAScript syntax you want to use. // You can also set to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10), 2020 (same as 11), 2021 (same as 12), 2022 (same as 13), 2023 (same as 14), 2024 (same as 15) or 2025 (same as 16) to use the year-based naming. // You can also set \"latest\" to use the most recently supported version. ecmaVersion: 3, allowReserved: true, // only allowed when ecmaVersion is 3 // specify which type of script you're parsing (\"script\", \"module\", or \"commonjs\") sourceType: \"script\", // specify additional language features ecmaFeatures: { // enable JSX parsing jsx: false, // enable return in global scope (set to true automatically when sourceType is \"commonjs\") globalReturn: false, // enable implied strict mode (if ecmaVersion >= 5) impliedStrict: false } }","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#esprima-compatibility-going-forward","text":"The primary goal is to produce the exact same AST structure and tokens as Esprima, and that takes precedence over anything else. (The AST structure being the ESTree API with JSX extensions.) Separate from that, Espree may deviate from what Esprima outputs in terms of where and how comments are attached, as well as what additional information is available on AST nodes. That is to say, Espree may add more things to the AST nodes than Esprima does but the overall AST structure produced will be the same. Espree may also deviate from Esprima in the interface it exposes.","title":"Esprima Compatibility Going Forward"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#contributing","text":"Issues and pull requests will be triaged and responded to as quickly as possible. We operate under the ESLint Contributor Guidelines , so please be sure to read them before contributing. If you're not sure where to dig in, check out the issues . Espree is licensed under a permissive BSD 2-clause license.","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#security-policy","text":"We work hard to ensure that Espree is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy .","title":"Security Policy"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#build-commands","text":"npm test - run all tests npm run lint - run all linting","title":"Build Commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#differences-from-espree-2x","text":"The tokenize() method does not use ecmaFeatures . Any string will be tokenized completely based on ECMAScript 6 semantics. Trailing whitespace no longer is counted as part of a node. let and const declarations are no longer parsed by default. You must opt-in by using an ecmaVersion newer than 5 or setting sourceType to module . The esparse and esvalidate binary scripts have been removed. There is no tolerant option. We will investigate adding this back in the future.","title":"Differences from Espree 2.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#known-incompatibilities","text":"In an effort to help those wanting to transition from other parsers to Espree, the following is a list of noteworthy incompatibilities with other parsers. These are known differences that we do not intend to change.","title":"Known Incompatibilities"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#esprima-122","text":"Esprima counts trailing whitespace as part of each AST node while Espree does not. In Espree, the end of a node is where the last token occurs. Espree does not parse let and const declarations by default. Error messages returned for parsing errors are different. There are two addition properties on every node and token: start and end . These represent the same data as range and are used internally by Acorn.","title":"Esprima 1.2.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#esprima-2x","text":"Esprima 2.x uses a different comment attachment algorithm that results in some comments being added in different places than Espree. The algorithm Espree uses is the same one used in Esprima 1.2.2.","title":"Esprima 2.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#why-another-parser","text":"ESLint had been relying on Esprima as its parser from the beginning. While that was fine when the JavaScript language was evolving slowly, the pace of development increased dramatically and Esprima had fallen behind. ESLint, like many other tools reliant on Esprima, has been stuck in using new JavaScript language features until Esprima updates, and that caused our users frustration. We decided the only way for us to move forward was to create our own parser, bringing us inline with JSHint and JSLint, and allowing us to keep implementing new features as we need them. We chose to fork Esprima instead of starting from scratch in order to move as quickly as possible with a compatible API. With Espree 2.0.0, we are no longer a fork of Esprima but rather a translation layer between Acorn and Esprima syntax. This allows us to put work back into a community-supported parser (Acorn) that is continuing to grow and evolve while maintaining an Esprima-compatible parser for those utilities still built on Esprima.","title":"Why another parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#have-you-tried-working-with-esprima","text":"Yes. Since the start of ESLint, we've regularly filed bugs and feature requests with Esprima and will continue to do so. However, there are some different philosophies around how the projects work that need to be worked through. The initial goal was to have Espree track Esprima and eventually merge the two back together, but we ultimately decided that building on top of Acorn was a better choice due to Acorn's plugin support.","title":"Have you tried working with Esprima?"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#why-dont-you-just-use-acorn","text":"Acorn is a great JavaScript parser that produces an AST that is compatible with Esprima. Unfortunately, ESLint relies on more than just the AST to do its job. It relies on Esprima's tokens and comment attachment features to get a complete picture of the source code. We investigated switching to Acorn, but the inconsistencies between Esprima and Acorn created too much work for a project like ESLint. We are building on top of Acorn, however, so that we can contribute back and help make Acorn even better.","title":"Why don't you just use Acorn?"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#what-ecmascript-features-do-you-support","text":"Espree supports all ECMAScript 2024 features and partially supports ECMAScript 2025 features. Because ECMAScript 2025 is still under development, we are implementing features as they are finalized. Currently, Espree supports: RegExp Duplicate named capturing groups See finished-proposals.md to know what features are finalized.","title":"What ECMAScript features do you support?"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#how-do-you-determine-which-experimental-features-to-support","text":"In general, we do not support experimental JavaScript features. We may make exceptions from time to time depending on the maturity of the features.","title":"How do you determine which experimental features to support?"},{"location":"_Disciplina/Code/my-react-app/node_modules/espree/#sponsors","text":"The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor to get your logo on our README and website.","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/esquery/","text":"ESQuery is a library for querying the AST output by Esprima for patterns of syntax using a CSS style selector system. Check out the demo: demo The following selectors are supported: * AST node type: ForStatement * wildcard : * * attribute existence : [attr] * attribute value : [attr=\"foo\"] or [attr=123] * attribute regex: [attr=/foo.*/] or (with flags) [attr=/foo.*/is] * attribute conditions: [attr!=\"foo\"] , [attr>2] , [attr<3] , [attr>=2] , or [attr<=3] * nested attribute: [attr.level2=\"foo\"] * field: FunctionDeclaration > Identifier.id * First or last child: :first-child or :last-child * nth-child (no ax+b support): :nth-child(2) * nth-last-child (no ax+b support): :nth-last-child(1) * descendant : ancestor descendant * child : parent > child * following sibling : node ~ sibling * adjacent sibling : node + adjacent * negation : :not(ForStatement) * has : :has(ForStatement) , :has(> ForStatement) * matches-any : :matches([attr] > :first-child, :last-child) * subject indicator : !IfStatement > [name=\"foo\"] * class of AST node: :statement , :expression , :declaration , :function , or :pattern","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/esrecurse/","text":"Esrecurse Esrecurse ( esrecurse ) is ECMAScript recursive traversing functionality. Example Usage The following code will output all variables declared at the root of a file. esrecurse.visit(ast, { XXXStatement: function (node) { this.visit(node.left); // do something... this.visit(node.right); } }); We can use Visitor instance. var visitor = new esrecurse.Visitor({ XXXStatement: function (node) { this.visit(node.left); // do something... this.visit(node.right); } }); visitor.visit(ast); We can inherit Visitor instance easily. class Derived extends esrecurse.Visitor { constructor() { super(null); } XXXStatement(node) { } } function DerivedVisitor() { esrecurse.Visitor.call(/* this for constructor */ this /* visitor object automatically becomes this. */); } util.inherits(DerivedVisitor, esrecurse.Visitor); DerivedVisitor.prototype.XXXStatement = function (node) { this.visit(node.left); // do something... this.visit(node.right); }; And you can invoke default visiting operation inside custom visit operation. function DerivedVisitor() { esrecurse.Visitor.call(/* this for constructor */ this /* visitor object automatically becomes this. */); } util.inherits(DerivedVisitor, esrecurse.Visitor); DerivedVisitor.prototype.XXXStatement = function (node) { // do something... this.visitChildren(node); }; The childVisitorKeys option does customize the behaviour of this.visitChildren(node) . We can use user-defined node types. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; esrecurse.visit( ast, { Literal: function (node) { // do something... } }, { // Extending the existing traversing rules. childVisitorKeys: { // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ] TestExpression: ['argument'] } } ); We can use the fallback option as well. If the fallback option is \"iteration\" , esrecurse would visit all enumerable properties of unknown nodes. Please note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. node.parent ). esrecurse.visit( ast, { Literal: function (node) { // do something... } }, { fallback: 'iteration' } ); If the fallback option is a function, esrecurse calls this function to determine the enumerable properties of unknown nodes. Please note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. node.parent ). esrecurse.visit( ast, { Literal: function (node) { // do something... } }, { fallback: function (node) { return Object.keys(node).filter(function(key) { return key !== 'argument' }); } } ); License Copyright (C) 2014 Yusuke Suzuki (twitter: @Constellation ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/esrecurse/#esrecurse","text":"Esrecurse ( esrecurse ) is ECMAScript recursive traversing functionality.","title":"Esrecurse"},{"location":"_Disciplina/Code/my-react-app/node_modules/esrecurse/#example-usage","text":"The following code will output all variables declared at the root of a file. esrecurse.visit(ast, { XXXStatement: function (node) { this.visit(node.left); // do something... this.visit(node.right); } }); We can use Visitor instance. var visitor = new esrecurse.Visitor({ XXXStatement: function (node) { this.visit(node.left); // do something... this.visit(node.right); } }); visitor.visit(ast); We can inherit Visitor instance easily. class Derived extends esrecurse.Visitor { constructor() { super(null); } XXXStatement(node) { } } function DerivedVisitor() { esrecurse.Visitor.call(/* this for constructor */ this /* visitor object automatically becomes this. */); } util.inherits(DerivedVisitor, esrecurse.Visitor); DerivedVisitor.prototype.XXXStatement = function (node) { this.visit(node.left); // do something... this.visit(node.right); }; And you can invoke default visiting operation inside custom visit operation. function DerivedVisitor() { esrecurse.Visitor.call(/* this for constructor */ this /* visitor object automatically becomes this. */); } util.inherits(DerivedVisitor, esrecurse.Visitor); DerivedVisitor.prototype.XXXStatement = function (node) { // do something... this.visitChildren(node); }; The childVisitorKeys option does customize the behaviour of this.visitChildren(node) . We can use user-defined node types. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; esrecurse.visit( ast, { Literal: function (node) { // do something... } }, { // Extending the existing traversing rules. childVisitorKeys: { // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ] TestExpression: ['argument'] } } ); We can use the fallback option as well. If the fallback option is \"iteration\" , esrecurse would visit all enumerable properties of unknown nodes. Please note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. node.parent ). esrecurse.visit( ast, { Literal: function (node) { // do something... } }, { fallback: 'iteration' } ); If the fallback option is a function, esrecurse calls this function to determine the enumerable properties of unknown nodes. Please note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. node.parent ). esrecurse.visit( ast, { Literal: function (node) { // do something... } }, { fallback: function (node) { return Object.keys(node).filter(function(key) { return key !== 'argument' }); } } );","title":"Example Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/esrecurse/#license","text":"Copyright (C) 2014 Yusuke Suzuki (twitter: @Constellation ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/estraverse/","text":"Estraverse Estraverse ( estraverse ) is ECMAScript traversal functions from esmangle project . Documentation You can find usage docs at wiki page . Example Usage The following code will output all variables declared at the root of a file. estraverse.traverse(ast, { enter: function (node, parent) { if (node.type == 'FunctionExpression' || node.type == 'FunctionDeclaration') return estraverse.VisitorOption.Skip; }, leave: function (node, parent) { if (node.type == 'VariableDeclarator') console.log(node.id.name); } }); We can use this.skip , this.remove and this.break functions instead of using Skip, Remove and Break. estraverse.traverse(ast, { enter: function (node) { this.break(); } }); And estraverse provides estraverse.replace function. When returning node from enter / leave , current node is replaced with it. result = estraverse.replace(tree, { enter: function (node) { // Replace it with replaced. if (node.type === 'Literal') return replaced; } }); By passing visitor.keys mapping, we can extend estraverse traversing functionality. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; estraverse.traverse(tree, { enter: function (node) { }, // Extending the existing traversing rules. keys: { // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ] TestExpression: ['argument'] } }); By passing visitor.fallback option, we can control the behavior when encountering unknown nodes. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; estraverse.traverse(tree, { enter: function (node) { }, // Iterating the child **nodes** of unknown nodes. fallback: 'iteration' }); When visitor.fallback is a function, we can determine which keys to visit on each node. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; estraverse.traverse(tree, { enter: function (node) { }, // Skip the `argument` property of each node fallback: function(node) { return Object.keys(node).filter(function(key) { return key !== 'argument'; }); } }); License Copyright (C) 2012-2016 Yusuke Suzuki (twitter: @Constellation ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/estraverse/#estraverse","text":"Estraverse ( estraverse ) is ECMAScript traversal functions from esmangle project .","title":"Estraverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/estraverse/#documentation","text":"You can find usage docs at wiki page .","title":"Documentation"},{"location":"_Disciplina/Code/my-react-app/node_modules/estraverse/#example-usage","text":"The following code will output all variables declared at the root of a file. estraverse.traverse(ast, { enter: function (node, parent) { if (node.type == 'FunctionExpression' || node.type == 'FunctionDeclaration') return estraverse.VisitorOption.Skip; }, leave: function (node, parent) { if (node.type == 'VariableDeclarator') console.log(node.id.name); } }); We can use this.skip , this.remove and this.break functions instead of using Skip, Remove and Break. estraverse.traverse(ast, { enter: function (node) { this.break(); } }); And estraverse provides estraverse.replace function. When returning node from enter / leave , current node is replaced with it. result = estraverse.replace(tree, { enter: function (node) { // Replace it with replaced. if (node.type === 'Literal') return replaced; } }); By passing visitor.keys mapping, we can extend estraverse traversing functionality. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; estraverse.traverse(tree, { enter: function (node) { }, // Extending the existing traversing rules. keys: { // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ] TestExpression: ['argument'] } }); By passing visitor.fallback option, we can control the behavior when encountering unknown nodes. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; estraverse.traverse(tree, { enter: function (node) { }, // Iterating the child **nodes** of unknown nodes. fallback: 'iteration' }); When visitor.fallback is a function, we can determine which keys to visit on each node. // This tree contains a user-defined `TestExpression` node. var tree = { type: 'TestExpression', // This 'argument' is the property containing the other **node**. argument: { type: 'Literal', value: 20 }, // This 'extended' is the property not containing the other **node**. extended: true }; estraverse.traverse(tree, { enter: function (node) { }, // Skip the `argument` property of each node fallback: function(node) { return Object.keys(node).filter(function(key) { return key !== 'argument'; }); } });","title":"Example Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/estraverse/#license","text":"Copyright (C) 2012-2016 Yusuke Suzuki (twitter: @Constellation ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/","text":"esutils esutils ( esutils ) is utility box for ECMAScript language tools. API ast ast.isExpression(node) Returns true if node is an Expression as defined in ECMA262 edition 5.1 section 11 . ast.isStatement(node) Returns true if node is a Statement as defined in ECMA262 edition 5.1 section 12 . ast.isIterationStatement(node) Returns true if node is an IterationStatement as defined in ECMA262 edition 5.1 section 12.6 . ast.isSourceElement(node) Returns true if node is a SourceElement as defined in ECMA262 edition 5.1 section 14 . ast.trailingStatement(node) Returns Statement? if node has trailing Statement . if (cond) consequent; When taking this IfStatement , returns consequent; statement. ast.isProblematicIfStatement(node) Returns true if node is a problematic IfStatement. If node is a problematic IfStatement , node cannot be represented as an one on one JavaScript code. { type: 'IfStatement', consequent: { type: 'WithStatement', body: { type: 'IfStatement', consequent: {type: 'EmptyStatement'} } }, alternate: {type: 'EmptyStatement'} } The above node cannot be represented as a JavaScript code, since the top level else alternate belongs to an inner IfStatement . code code.isDecimalDigit(code) Return true if provided code is decimal digit. code.isHexDigit(code) Return true if provided code is hexadecimal digit. code.isOctalDigit(code) Return true if provided code is octal digit. code.isWhiteSpace(code) Return true if provided code is white space. White space characters are formally defined in ECMA262. code.isLineTerminator(code) Return true if provided code is line terminator. Line terminator characters are formally defined in ECMA262. code.isIdentifierStart(code) Return true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262. code.isIdentifierPart(code) Return true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262. keyword keyword.isKeywordES5(id, strict) Returns true if provided identifier string is a Keyword or Future Reserved Word in ECMA262 edition 5.1. They are formally defined in ECMA262 sections 7.6.1.1 and 7.6.1.2 , respectively. If the strict flag is truthy, this function additionally checks whether id is a Keyword or Future Reserved Word under strict mode. keyword.isKeywordES6(id, strict) Returns true if provided identifier string is a Keyword or Future Reserved Word in ECMA262 edition 6. They are formally defined in ECMA262 sections 11.6.2.1 and 11.6.2.2 , respectively. If the strict flag is truthy, this function additionally checks whether id is a Keyword or Future Reserved Word under strict mode. keyword.isReservedWordES5(id, strict) Returns true if provided identifier string is a Reserved Word in ECMA262 edition 5.1. They are formally defined in ECMA262 section 7.6.1 . If the strict flag is truthy, this function additionally checks whether id is a Reserved Word under strict mode. keyword.isReservedWordES6(id, strict) Returns true if provided identifier string is a Reserved Word in ECMA262 edition 6. They are formally defined in ECMA262 section 11.6.2 . If the strict flag is truthy, this function additionally checks whether id is a Reserved Word under strict mode. keyword.isRestrictedWord(id) Returns true if provided identifier string is one of eval or arguments . They are restricted in strict mode code throughout ECMA262 edition 5.1 and in ECMA262 edition 6 section 12.1.1 . keyword.isIdentifierNameES5(id) Return true if provided identifier string is an IdentifierName as specified in ECMA262 edition 5.1 section 7.6 . keyword.isIdentifierNameES6(id) Return true if provided identifier string is an IdentifierName as specified in ECMA262 edition 6 section 11.6 . keyword.isIdentifierES5(id, strict) Return true if provided identifier string is an Identifier as specified in ECMA262 edition 5.1 section 7.6 . If the strict flag is truthy, this function additionally checks whether id is an Identifier under strict mode. keyword.isIdentifierES6(id, strict) Return true if provided identifier string is an Identifier as specified in ECMA262 edition 6 section 12.1 . If the strict flag is truthy, this function additionally checks whether id is an Identifier under strict mode. License Copyright (C) 2013 Yusuke Suzuki (twitter: @Constellation ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#esutils","text":"esutils ( esutils ) is utility box for ECMAScript language tools.","title":"esutils"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#ast","text":"","title":"ast"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#astisexpressionnode","text":"Returns true if node is an Expression as defined in ECMA262 edition 5.1 section 11 .","title":"ast.isExpression(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#astisstatementnode","text":"Returns true if node is a Statement as defined in ECMA262 edition 5.1 section 12 .","title":"ast.isStatement(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#astisiterationstatementnode","text":"Returns true if node is an IterationStatement as defined in ECMA262 edition 5.1 section 12.6 .","title":"ast.isIterationStatement(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#astissourceelementnode","text":"Returns true if node is a SourceElement as defined in ECMA262 edition 5.1 section 14 .","title":"ast.isSourceElement(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#asttrailingstatementnode","text":"Returns Statement? if node has trailing Statement . if (cond) consequent; When taking this IfStatement , returns consequent; statement.","title":"ast.trailingStatement(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#astisproblematicifstatementnode","text":"Returns true if node is a problematic IfStatement. If node is a problematic IfStatement , node cannot be represented as an one on one JavaScript code. { type: 'IfStatement', consequent: { type: 'WithStatement', body: { type: 'IfStatement', consequent: {type: 'EmptyStatement'} } }, alternate: {type: 'EmptyStatement'} } The above node cannot be represented as a JavaScript code, since the top level else alternate belongs to an inner IfStatement .","title":"ast.isProblematicIfStatement(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#code","text":"","title":"code"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeisdecimaldigitcode","text":"Return true if provided code is decimal digit.","title":"code.isDecimalDigit(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeishexdigitcode","text":"Return true if provided code is hexadecimal digit.","title":"code.isHexDigit(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeisoctaldigitcode","text":"Return true if provided code is octal digit.","title":"code.isOctalDigit(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeiswhitespacecode","text":"Return true if provided code is white space. White space characters are formally defined in ECMA262.","title":"code.isWhiteSpace(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeislineterminatorcode","text":"Return true if provided code is line terminator. Line terminator characters are formally defined in ECMA262.","title":"code.isLineTerminator(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeisidentifierstartcode","text":"Return true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262.","title":"code.isIdentifierStart(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#codeisidentifierpartcode","text":"Return true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262.","title":"code.isIdentifierPart(code)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keyword","text":"","title":"keyword"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordiskeywordes5id-strict","text":"Returns true if provided identifier string is a Keyword or Future Reserved Word in ECMA262 edition 5.1. They are formally defined in ECMA262 sections 7.6.1.1 and 7.6.1.2 , respectively. If the strict flag is truthy, this function additionally checks whether id is a Keyword or Future Reserved Word under strict mode.","title":"keyword.isKeywordES5(id, strict)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordiskeywordes6id-strict","text":"Returns true if provided identifier string is a Keyword or Future Reserved Word in ECMA262 edition 6. They are formally defined in ECMA262 sections 11.6.2.1 and 11.6.2.2 , respectively. If the strict flag is truthy, this function additionally checks whether id is a Keyword or Future Reserved Word under strict mode.","title":"keyword.isKeywordES6(id, strict)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisreservedwordes5id-strict","text":"Returns true if provided identifier string is a Reserved Word in ECMA262 edition 5.1. They are formally defined in ECMA262 section 7.6.1 . If the strict flag is truthy, this function additionally checks whether id is a Reserved Word under strict mode.","title":"keyword.isReservedWordES5(id, strict)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisreservedwordes6id-strict","text":"Returns true if provided identifier string is a Reserved Word in ECMA262 edition 6. They are formally defined in ECMA262 section 11.6.2 . If the strict flag is truthy, this function additionally checks whether id is a Reserved Word under strict mode.","title":"keyword.isReservedWordES6(id, strict)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisrestrictedwordid","text":"Returns true if provided identifier string is one of eval or arguments . They are restricted in strict mode code throughout ECMA262 edition 5.1 and in ECMA262 edition 6 section 12.1.1 .","title":"keyword.isRestrictedWord(id)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisidentifiernamees5id","text":"Return true if provided identifier string is an IdentifierName as specified in ECMA262 edition 5.1 section 7.6 .","title":"keyword.isIdentifierNameES5(id)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisidentifiernamees6id","text":"Return true if provided identifier string is an IdentifierName as specified in ECMA262 edition 6 section 11.6 .","title":"keyword.isIdentifierNameES6(id)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisidentifieres5id-strict","text":"Return true if provided identifier string is an Identifier as specified in ECMA262 edition 5.1 section 7.6 . If the strict flag is truthy, this function additionally checks whether id is an Identifier under strict mode.","title":"keyword.isIdentifierES5(id, strict)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#keywordisidentifieres6id-strict","text":"Return true if provided identifier string is an Identifier as specified in ECMA262 edition 6 section 12.1 . If the strict flag is truthy, this function additionally checks whether id is an Identifier under strict mode.","title":"keyword.isIdentifierES6(id, strict)"},{"location":"_Disciplina/Code/my-react-app/node_modules/esutils/#license","text":"Copyright (C) 2013 Yusuke Suzuki (twitter: @Constellation ) and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/","text":"fast-deep-equal The fastest deep equal with ES6 Map, Set and Typed arrays support. Install npm install fast-deep-equal Features ES5 compatible works in node.js (8+) and browsers (IE9+) checks equality of Date and RegExp objects by value. ES6 equal ( require('fast-deep-equal/es6') ) also supports: - Maps - Sets - Typed arrays Usage var equal = require('fast-deep-equal'); console.log(equal({foo: 'bar'}, {foo: 'bar'})); // true To support ES6 Maps, Sets and Typed arrays equality use: var equal = require('fast-deep-equal/es6'); console.log(equal(Int16Array([1, 2]), Int16Array([1, 2]))); // true To use with React (avoiding the traversal of React elements' _owner property that contains circular references and is not needed when comparing the elements - borrowed from react-fast-compare ): var equal = require('fast-deep-equal/react'); var equal = require('fast-deep-equal/es6/react'); Performance benchmark Node.js v12.6.0: fast-deep-equal x 261,950 ops/sec \u00b10.52% (89 runs sampled) fast-deep-equal/es6 x 212,991 ops/sec \u00b10.34% (92 runs sampled) fast-equals x 230,957 ops/sec \u00b10.83% (85 runs sampled) nano-equal x 187,995 ops/sec \u00b10.53% (88 runs sampled) shallow-equal-fuzzy x 138,302 ops/sec \u00b10.49% (90 runs sampled) underscore.isEqual x 74,423 ops/sec \u00b10.38% (89 runs sampled) lodash.isEqual x 36,637 ops/sec \u00b10.72% (90 runs sampled) deep-equal x 2,310 ops/sec \u00b10.37% (90 runs sampled) deep-eql x 35,312 ops/sec \u00b10.67% (91 runs sampled) ramda.equals x 12,054 ops/sec \u00b10.40% (91 runs sampled) util.isDeepStrictEqual x 46,440 ops/sec \u00b10.43% (90 runs sampled) assert.deepStrictEqual x 456 ops/sec \u00b10.71% (88 runs sampled) The fastest is fast-deep-equal To run benchmark (requires node.js 6+): npm run benchmark Please note : this benchmark runs against the available test cases. To choose the most performant library for your application, it is recommended to benchmark against your data and to NOT expect this benchmark to reflect the performance difference in your application. Enterprise support fast-deep-equal package is a part of Tidelift enterprise subscription - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers. Security contact To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues. License MIT","title":"fast-deep-equal"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#fast-deep-equal","text":"The fastest deep equal with ES6 Map, Set and Typed arrays support.","title":"fast-deep-equal"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#install","text":"npm install fast-deep-equal","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#features","text":"ES5 compatible works in node.js (8+) and browsers (IE9+) checks equality of Date and RegExp objects by value. ES6 equal ( require('fast-deep-equal/es6') ) also supports: - Maps - Sets - Typed arrays","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#usage","text":"var equal = require('fast-deep-equal'); console.log(equal({foo: 'bar'}, {foo: 'bar'})); // true To support ES6 Maps, Sets and Typed arrays equality use: var equal = require('fast-deep-equal/es6'); console.log(equal(Int16Array([1, 2]), Int16Array([1, 2]))); // true To use with React (avoiding the traversal of React elements' _owner property that contains circular references and is not needed when comparing the elements - borrowed from react-fast-compare ): var equal = require('fast-deep-equal/react'); var equal = require('fast-deep-equal/es6/react');","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#performance-benchmark","text":"Node.js v12.6.0: fast-deep-equal x 261,950 ops/sec \u00b10.52% (89 runs sampled) fast-deep-equal/es6 x 212,991 ops/sec \u00b10.34% (92 runs sampled) fast-equals x 230,957 ops/sec \u00b10.83% (85 runs sampled) nano-equal x 187,995 ops/sec \u00b10.53% (88 runs sampled) shallow-equal-fuzzy x 138,302 ops/sec \u00b10.49% (90 runs sampled) underscore.isEqual x 74,423 ops/sec \u00b10.38% (89 runs sampled) lodash.isEqual x 36,637 ops/sec \u00b10.72% (90 runs sampled) deep-equal x 2,310 ops/sec \u00b10.37% (90 runs sampled) deep-eql x 35,312 ops/sec \u00b10.67% (91 runs sampled) ramda.equals x 12,054 ops/sec \u00b10.40% (91 runs sampled) util.isDeepStrictEqual x 46,440 ops/sec \u00b10.43% (90 runs sampled) assert.deepStrictEqual x 456 ops/sec \u00b10.71% (88 runs sampled) The fastest is fast-deep-equal To run benchmark (requires node.js 6+): npm run benchmark Please note : this benchmark runs against the available test cases. To choose the most performant library for your application, it is recommended to benchmark against your data and to NOT expect this benchmark to reflect the performance difference in your application.","title":"Performance benchmark"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#enterprise-support","text":"fast-deep-equal package is a part of Tidelift enterprise subscription - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers.","title":"Enterprise support"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#security-contact","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues.","title":"Security contact"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-deep-equal/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/","text":"fast-json-stable-stringify Deterministic JSON.stringify() - a faster version of @substack 's json-stable-strigify without jsonify . You can also pass in a custom comparison function. example var stringify = require('fast-json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; console.log(stringify(obj)); output: {\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8} methods var stringify = require('fast-json-stable-stringify') var str = stringify(obj, opts) Return a deterministic stringified string str from the object obj . options cmp If opts is given, you can supply an opts.cmp to have a custom comparison function for object keys. Your function opts.cmp is called with these parameters: opts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue }) For example, to sort on the object key names in reverse order you could write: var stringify = require('fast-json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; var s = stringify(obj, function (a, b) { return a.key < b.key ? 1 : -1; }); console.log(s); which results in the output string: {\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3} Or if you wanted to sort on the object values in reverse order, you could write: var stringify = require('fast-json-stable-stringify'); var obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 }; var s = stringify(obj, function (a, b) { return a.value < b.value ? 1 : -1; }); console.log(s); which outputs: {\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10} cycles Pass true in opts.cycles to stringify circular property as __cycle__ - the result will not be a valid JSON string in this case. TypeError will be thrown in case of circular object without this option. install With npm do: npm install fast-json-stable-stringify benchmark To run benchmark (requires Node.js 6+): node benchmark Results: fast-json-stable-stringify x 17,189 ops/sec \u00b11.43% (83 runs sampled) json-stable-stringify x 13,634 ops/sec \u00b11.39% (85 runs sampled) fast-stable-stringify x 20,212 ops/sec \u00b11.20% (84 runs sampled) faster-stable-stringify x 15,549 ops/sec \u00b11.12% (84 runs sampled) The fastest is fast-stable-stringify Enterprise support fast-json-stable-stringify package is a part of Tidelift enterprise subscription - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers. Security contact To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues. license MIT","title":"fast-json-stable-stringify"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#fast-json-stable-stringify","text":"Deterministic JSON.stringify() - a faster version of @substack 's json-stable-strigify without jsonify . You can also pass in a custom comparison function.","title":"fast-json-stable-stringify"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#example","text":"var stringify = require('fast-json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; console.log(stringify(obj)); output: {\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#methods","text":"var stringify = require('fast-json-stable-stringify')","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#var-str-stringifyobj-opts","text":"Return a deterministic stringified string str from the object obj .","title":"var str = stringify(obj, opts)"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#options","text":"","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#cmp","text":"If opts is given, you can supply an opts.cmp to have a custom comparison function for object keys. Your function opts.cmp is called with these parameters: opts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue }) For example, to sort on the object key names in reverse order you could write: var stringify = require('fast-json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; var s = stringify(obj, function (a, b) { return a.key < b.key ? 1 : -1; }); console.log(s); which results in the output string: {\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3} Or if you wanted to sort on the object values in reverse order, you could write: var stringify = require('fast-json-stable-stringify'); var obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 }; var s = stringify(obj, function (a, b) { return a.value < b.value ? 1 : -1; }); console.log(s); which outputs: {\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}","title":"cmp"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#cycles","text":"Pass true in opts.cycles to stringify circular property as __cycle__ - the result will not be a valid JSON string in this case. TypeError will be thrown in case of circular object without this option.","title":"cycles"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#install","text":"With npm do: npm install fast-json-stable-stringify","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#benchmark","text":"To run benchmark (requires Node.js 6+): node benchmark Results: fast-json-stable-stringify x 17,189 ops/sec \u00b11.43% (83 runs sampled) json-stable-stringify x 13,634 ops/sec \u00b11.39% (85 runs sampled) fast-stable-stringify x 20,212 ops/sec \u00b11.20% (84 runs sampled) faster-stable-stringify x 15,549 ops/sec \u00b11.12% (84 runs sampled) The fastest is fast-stable-stringify","title":"benchmark"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#enterprise-support","text":"fast-json-stable-stringify package is a part of Tidelift enterprise subscription - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers.","title":"Enterprise support"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#security-contact","text":"To report a security vulnerability, please use the Tidelift security contact . Tidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues.","title":"Security contact"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-json-stable-stringify/#license","text":"MIT","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/","text":"fast-levenshtein - Levenshtein algorithm in Javascript An efficient Javascript implementation of the Levenshtein algorithm with locale-specific collator support. Features Works in node.js and in the browser. Better performance than other implementations by not needing to store the whole matrix ( more info ). Locale-sensitive string comparisions if needed. Comprehensive test suite and performance benchmark. Small: <1 KB minified and gzipped Installation node.js Install using npm : $ npm install fast-levenshtein Browser Using bower: $ bower install fast-levenshtein If you are not using any module loader system then the API will then be accessible via the window.Levenshtein object. Examples Default usage var levenshtein = require('fast-levenshtein'); var distance = levenshtein.get('back', 'book'); // 2 var distance = levenshtein.get('\u6211\u611b\u4f60', '\u6211\u53eb\u4f60'); // 1 Locale-sensitive string comparisons It supports using Intl.Collator for locale-sensitive string comparisons: var levenshtein = require('fast-levenshtein'); levenshtein.get('mikailovitch', 'Mikha\u00eflovitch', { useCollator: true}); // 1 Building and Testing To build the code and run the tests: $ npm install -g grunt-cli $ npm install $ npm run build Performance Thanks to Titus Wormer for encouraging me to do this. Benchmarked against other node.js levenshtein distance modules (on Macbook Air 2012, Core i7, 8GB RAM): Running suite Implementation comparison [benchmark/speed.js]... >> levenshtein-edit-distance x 234 ops/sec \u00b13.02% (73 runs sampled) >> levenshtein-component x 422 ops/sec \u00b14.38% (83 runs sampled) >> levenshtein-deltas x 283 ops/sec \u00b13.83% (78 runs sampled) >> natural x 255 ops/sec \u00b10.76% (88 runs sampled) >> levenshtein x 180 ops/sec \u00b13.55% (86 runs sampled) >> fast-levenshtein x 1,792 ops/sec \u00b12.72% (95 runs sampled) Benchmark done. Fastest test is fast-levenshtein at 4.2x faster than levenshtein-component You can run this benchmark yourself by doing: $ npm install $ npm run build $ npm run benchmark Contributing If you wish to submit a pull request please update and/or create new tests for any changes you make and ensure the grunt build passes. See CONTRIBUTING.md for details. License MIT - see LICENSE.md","title":"fast-levenshtein - Levenshtein algorithm in Javascript"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#fast-levenshtein-levenshtein-algorithm-in-javascript","text":"An efficient Javascript implementation of the Levenshtein algorithm with locale-specific collator support.","title":"fast-levenshtein - Levenshtein algorithm in Javascript"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#features","text":"Works in node.js and in the browser. Better performance than other implementations by not needing to store the whole matrix ( more info ). Locale-sensitive string comparisions if needed. Comprehensive test suite and performance benchmark. Small: <1 KB minified and gzipped","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#installation","text":"","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#nodejs","text":"Install using npm : $ npm install fast-levenshtein","title":"node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#browser","text":"Using bower: $ bower install fast-levenshtein If you are not using any module loader system then the API will then be accessible via the window.Levenshtein object.","title":"Browser"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#examples","text":"Default usage var levenshtein = require('fast-levenshtein'); var distance = levenshtein.get('back', 'book'); // 2 var distance = levenshtein.get('\u6211\u611b\u4f60', '\u6211\u53eb\u4f60'); // 1 Locale-sensitive string comparisons It supports using Intl.Collator for locale-sensitive string comparisons: var levenshtein = require('fast-levenshtein'); levenshtein.get('mikailovitch', 'Mikha\u00eflovitch', { useCollator: true}); // 1","title":"Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#building-and-testing","text":"To build the code and run the tests: $ npm install -g grunt-cli $ npm install $ npm run build","title":"Building and Testing"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#performance","text":"Thanks to Titus Wormer for encouraging me to do this. Benchmarked against other node.js levenshtein distance modules (on Macbook Air 2012, Core i7, 8GB RAM): Running suite Implementation comparison [benchmark/speed.js]... >> levenshtein-edit-distance x 234 ops/sec \u00b13.02% (73 runs sampled) >> levenshtein-component x 422 ops/sec \u00b14.38% (83 runs sampled) >> levenshtein-deltas x 283 ops/sec \u00b13.83% (78 runs sampled) >> natural x 255 ops/sec \u00b10.76% (88 runs sampled) >> levenshtein x 180 ops/sec \u00b13.55% (86 runs sampled) >> fast-levenshtein x 1,792 ops/sec \u00b12.72% (95 runs sampled) Benchmark done. Fastest test is fast-levenshtein at 4.2x faster than levenshtein-component You can run this benchmark yourself by doing: $ npm install $ npm run build $ npm run benchmark","title":"Performance"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#contributing","text":"If you wish to submit a pull request please update and/or create new tests for any changes you make and ensure the grunt build passes. See CONTRIBUTING.md for details.","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/#license","text":"MIT - see LICENSE.md","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/fast-levenshtein/LICENSE/","text":"(MIT License) Copyright (c) 2013 Ramesh Nair Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/","text":"file-entry-cache Super simple cache for file metadata, useful for process that work on a given series of files and that only need to repeat the job on the changed ones since the previous run of the process \u2014 Edit install npm i --save file-entry-cache Usage The module exposes two functions create and createFromFile . create(cacheName, [directory, useCheckSum]) cacheName : the name of the cache to be created directory : Optional the directory to load the cache from usecheckSum : Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file. createFromFile(pathToCache, [useCheckSum]) pathToCache : the path to the cache file (this combines the cache name and directory) useCheckSum : Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file. // loads the cache, if one does not exists for the given // Id a new one will be prepared to be created var fileEntryCache = require('file-entry-cache'); var cache = fileEntryCache.create('testCache'); var files = expand('../fixtures/*.txt'); // the first time this method is called, will return all the files var oFiles = cache.getUpdatedFiles(files); // this will persist this to disk checking each file stats and // updating the meta attributes `size` and `mtime`. // custom fields could also be added to the meta object and will be persisted // in order to retrieve them later cache.reconcile(); // use this if you want the non visited file entries to be kept in the cache // for more than one execution // // cache.reconcile( true /* noPrune */) // on a second run var cache2 = fileEntryCache.create('testCache'); // will return now only the files that were modified or none // if no files were modified previous to the execution of this function var oFiles = cache.getUpdatedFiles(files); // if you want to prevent a file from being considered non modified // something useful if a file failed some sort of validation // you can then remove the entry from the cache doing cache.removeEntry('path/to/file'); // path to file should be the same path of the file received on `getUpdatedFiles` // that will effectively make the file to appear again as modified until the validation is passed. In that // case you should not remove it from the cache // if you need all the files, so you can determine what to do with the changed ones // you can call var oFiles = cache.normalizeEntries(files); // oFiles will be an array of objects like the following entry = { key: 'some/name/file', the path to the file changed: true, // if the file was changed since previous run meta: { size: 3242, // the size of the file mtime: 231231231, // the modification time of the file data: {} // some extra field stored for this file (useful to save the result of a transformation on the file } } Motivation for this module I needed a super simple and dumb in-memory cache with optional disk persistence (write-back cache) in order to make a script that will beautify files with esformatter to execute only on the files that were changed since the last run. In doing so the process of beautifying files was reduced from several seconds to a small fraction of a second. This module uses flat-cache a super simple key/value cache storage with optional file persistance. The main idea is to read the files when the task begins, apply the transforms required, and if the process succeed, then store the new state of the files. The next time this module request for getChangedFiles will return only the files that were modified. Making the process to end faster. This module could also be used by processes that modify the files applying a transform, in that case the result of the transform could be stored in the meta field, of the entries. Anything added to the meta field will be persisted. Those processes won't need to call getChangedFiles they will instead call normalizeEntries that will return the entries with a changed field that can be used to determine if the file was changed or not. If it was not changed the transformed stored data could be used instead of actually applying the transformation, saving time in case of only a few files changed. In the worst case scenario all the files will be processed. In the best case scenario only a few of them will be processed. Important notes The values set on the meta attribute of the entries should be stringify-able ones if possible, flat-cache uses circular-json to try to persist circular structures, but this should be considered experimental. The best results are always obtained with non circular values All the changes to the cache state are done to memory first and only persisted after reconcile. License MIT","title":"file-entry-cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#file-entry-cache","text":"Super simple cache for file metadata, useful for process that work on a given series of files and that only need to repeat the job on the changed ones since the previous run of the process \u2014 Edit","title":"file-entry-cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#install","text":"npm i --save file-entry-cache","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#usage","text":"The module exposes two functions create and createFromFile .","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#createcachename-directory-usechecksum","text":"cacheName : the name of the cache to be created directory : Optional the directory to load the cache from usecheckSum : Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file.","title":"create(cacheName, [directory, useCheckSum])"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#createfromfilepathtocache-usechecksum","text":"pathToCache : the path to the cache file (this combines the cache name and directory) useCheckSum : Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file. // loads the cache, if one does not exists for the given // Id a new one will be prepared to be created var fileEntryCache = require('file-entry-cache'); var cache = fileEntryCache.create('testCache'); var files = expand('../fixtures/*.txt'); // the first time this method is called, will return all the files var oFiles = cache.getUpdatedFiles(files); // this will persist this to disk checking each file stats and // updating the meta attributes `size` and `mtime`. // custom fields could also be added to the meta object and will be persisted // in order to retrieve them later cache.reconcile(); // use this if you want the non visited file entries to be kept in the cache // for more than one execution // // cache.reconcile( true /* noPrune */) // on a second run var cache2 = fileEntryCache.create('testCache'); // will return now only the files that were modified or none // if no files were modified previous to the execution of this function var oFiles = cache.getUpdatedFiles(files); // if you want to prevent a file from being considered non modified // something useful if a file failed some sort of validation // you can then remove the entry from the cache doing cache.removeEntry('path/to/file'); // path to file should be the same path of the file received on `getUpdatedFiles` // that will effectively make the file to appear again as modified until the validation is passed. In that // case you should not remove it from the cache // if you need all the files, so you can determine what to do with the changed ones // you can call var oFiles = cache.normalizeEntries(files); // oFiles will be an array of objects like the following entry = { key: 'some/name/file', the path to the file changed: true, // if the file was changed since previous run meta: { size: 3242, // the size of the file mtime: 231231231, // the modification time of the file data: {} // some extra field stored for this file (useful to save the result of a transformation on the file } }","title":"createFromFile(pathToCache, [useCheckSum])"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#motivation-for-this-module","text":"I needed a super simple and dumb in-memory cache with optional disk persistence (write-back cache) in order to make a script that will beautify files with esformatter to execute only on the files that were changed since the last run. In doing so the process of beautifying files was reduced from several seconds to a small fraction of a second. This module uses flat-cache a super simple key/value cache storage with optional file persistance. The main idea is to read the files when the task begins, apply the transforms required, and if the process succeed, then store the new state of the files. The next time this module request for getChangedFiles will return only the files that were modified. Making the process to end faster. This module could also be used by processes that modify the files applying a transform, in that case the result of the transform could be stored in the meta field, of the entries. Anything added to the meta field will be persisted. Those processes won't need to call getChangedFiles they will instead call normalizeEntries that will return the entries with a changed field that can be used to determine if the file was changed or not. If it was not changed the transformed stored data could be used instead of actually applying the transformation, saving time in case of only a few files changed. In the worst case scenario all the files will be processed. In the best case scenario only a few of them will be processed.","title":"Motivation for this module"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#important-notes","text":"The values set on the meta attribute of the entries should be stringify-able ones if possible, flat-cache uses circular-json to try to persist circular structures, but this should be considered experimental. The best results are always obtained with non circular values All the changes to the cache state are done to memory first and only persisted after reconcile.","title":"Important notes"},{"location":"_Disciplina/Code/my-react-app/node_modules/file-entry-cache/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/","text":"find-up Find a file or directory by walking up parent directories Install $ npm install find-up Usage / \u2514\u2500\u2500 Users \u2514\u2500\u2500 sindresorhus \u251c\u2500\u2500 unicorn.png \u2514\u2500\u2500 foo \u2514\u2500\u2500 bar \u251c\u2500\u2500 baz \u2514\u2500\u2500 example.js example.js const path = require('path'); const findUp = require('find-up'); (async () => { console.log(await findUp('unicorn.png')); //=> '/Users/sindresorhus/unicorn.png' console.log(await findUp(['rainbow.png', 'unicorn.png'])); //=> '/Users/sindresorhus/unicorn.png' console.log(await findUp(async directory => { const hasUnicorns = await findUp.exists(path.join(directory, 'unicorn.png')); return hasUnicorns && directory; }, {type: 'directory'})); //=> '/Users/sindresorhus' })(); API findUp(name, options?) findUp(matcher, options?) Returns a Promise for either the path or undefined if it couldn't be found. findUp([...name], options?) Returns a Promise for either the first path found (by respecting the order of the array) or undefined if none could be found. findUp.sync(name, options?) findUp.sync(matcher, options?) Returns a path or undefined if it couldn't be found. findUp.sync([...name], options?) Returns the first path found (by respecting the order of the array) or undefined if none could be found. name Type: string Name of the file or directory to find. matcher Type: Function A function that will be called with each directory until it returns a string with the path, which stops the search, or the root directory has been reached and nothing was found. Useful if you want to match files with certain patterns, set of permissions, or other advanced use-cases. When using async mode, the matcher may optionally be an async or promise-returning function that returns the path. options Type: object cwd Type: string \\ Default: process.cwd() Directory to start from. type Type: string \\ Default: 'file' \\ Values: 'file' 'directory' The type of paths that can match. allowSymlinks Type: boolean \\ Default: true Allow symbolic links to match if they point to the chosen path type. findUp.exists(path) Returns a Promise<boolean> of whether the path exists. findUp.sync.exists(path) Returns a boolean of whether the path exists. path Type: string Path to a file or directory. findUp.stop A Symbol that can be returned by a matcher function to stop the search and cause findUp to immediately return undefined . Useful as a performance optimization in case the current working directory is deeply nested in the filesystem. const path = require('path'); const findUp = require('find-up'); (async () => { await findUp(directory => { return path.basename(directory) === 'work' ? findUp.stop : 'logo.png'; }); })(); Related find-up-cli - CLI for this module pkg-up - Find the closest package.json file pkg-dir - Find the root directory of an npm package resolve-from - Resolve the path of a module like require.resolve() but from a given path Get professional support for 'find-up' with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"find-up Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#find-up","text":"Find a file or directory by walking up parent directories","title":"find-up"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#install","text":"$ npm install find-up","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#usage","text":"/ \u2514\u2500\u2500 Users \u2514\u2500\u2500 sindresorhus \u251c\u2500\u2500 unicorn.png \u2514\u2500\u2500 foo \u2514\u2500\u2500 bar \u251c\u2500\u2500 baz \u2514\u2500\u2500 example.js example.js const path = require('path'); const findUp = require('find-up'); (async () => { console.log(await findUp('unicorn.png')); //=> '/Users/sindresorhus/unicorn.png' console.log(await findUp(['rainbow.png', 'unicorn.png'])); //=> '/Users/sindresorhus/unicorn.png' console.log(await findUp(async directory => { const hasUnicorns = await findUp.exists(path.join(directory, 'unicorn.png')); return hasUnicorns && directory; }, {type: 'directory'})); //=> '/Users/sindresorhus' })();","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupname-options","text":"","title":"findUp(name, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupmatcher-options","text":"Returns a Promise for either the path or undefined if it couldn't be found.","title":"findUp(matcher, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupname-options_1","text":"Returns a Promise for either the first path found (by respecting the order of the array) or undefined if none could be found.","title":"findUp([...name], options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupsyncname-options","text":"","title":"findUp.sync(name, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupsyncmatcher-options","text":"Returns a path or undefined if it couldn't be found.","title":"findUp.sync(matcher, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupsyncname-options_1","text":"Returns the first path found (by respecting the order of the array) or undefined if none could be found.","title":"findUp.sync([...name], options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#name","text":"Type: string Name of the file or directory to find.","title":"name"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#matcher","text":"Type: Function A function that will be called with each directory until it returns a string with the path, which stops the search, or the root directory has been reached and nothing was found. Useful if you want to match files with certain patterns, set of permissions, or other advanced use-cases. When using async mode, the matcher may optionally be an async or promise-returning function that returns the path.","title":"matcher"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#options","text":"Type: object","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#cwd","text":"Type: string \\ Default: process.cwd() Directory to start from.","title":"cwd"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#type","text":"Type: string \\ Default: 'file' \\ Values: 'file' 'directory' The type of paths that can match.","title":"type"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#allowsymlinks","text":"Type: boolean \\ Default: true Allow symbolic links to match if they point to the chosen path type.","title":"allowSymlinks"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupexistspath","text":"Returns a Promise<boolean> of whether the path exists.","title":"findUp.exists(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupsyncexistspath","text":"Returns a boolean of whether the path exists.","title":"findUp.sync.exists(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#path","text":"Type: string Path to a file or directory.","title":"path"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#findupstop","text":"A Symbol that can be returned by a matcher function to stop the search and cause findUp to immediately return undefined . Useful as a performance optimization in case the current working directory is deeply nested in the filesystem. const path = require('path'); const findUp = require('find-up'); (async () => { await findUp(directory => { return path.basename(directory) === 'work' ? findUp.stop : 'logo.png'; }); })();","title":"findUp.stop"},{"location":"_Disciplina/Code/my-react-app/node_modules/find-up/readme/#related","text":"find-up-cli - CLI for this module pkg-up - Find the closest package.json file pkg-dir - Find the root directory of an npm package resolve-from - Resolve the path of a module like require.resolve() but from a given path Get professional support for 'find-up' with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/","text":"flat-cache A stupidly simple key/value storage using files to persist the data install npm i --save flat-cache Usage const flatCache = require('flat-cache'); // loads the cache, if one does not exists for the given // Id a new one will be prepared to be created const cache = flatCache.load('cacheId'); // sets a key on the cache cache.setKey('key', { foo: 'var' }); // get a key from the cache cache.getKey('key'); // { foo: 'var' } // fetch the entire persisted object cache.all(); // { 'key': { foo: 'var' } } // remove a key cache.removeKey('key'); // removes a key from the cache // save it to disk cache.save(); // very important, if you don't save no changes will be persisted. // cache.save( true /* noPrune */) // can be used to prevent the removal of non visited keys // loads the cache from a given directory, if one does // not exists for the given Id a new one will be prepared to be created const cache = flatCache.load('cacheId', path.resolve('./path/to/folder')); // The following methods are useful to clear the cache // delete a given cache flatCache.clearCacheById('cacheId'); // removes the cacheId document if one exists. // delete all cache flatCache.clearAll(); // remove the cache directory Motivation for this module I needed a super simple and dumb in-memory cache with optional disk persistance in order to make a script that will beutify files with esformatter only execute on the files that were changed since the last run. To make that possible we need to store the fileSize and modificationTime of the files. So a simple key/value storage was needed and Bam! this module was born. Important notes If no directory is especified when the load method is called, a folder named .cache will be created inside the module directory when cache.save is called. If you're committing your node_modules to any vcs, you might want to ignore the default .cache folder, or specify a custom directory. The values set on the keys of the cache should be stringify-able ones, meaning no circular references All the changes to the cache state are done to memory I could have used a timer or Object.observe to deliver the changes to disk, but I wanted to keep this module intentionally dumb and simple Non visited keys are removed when cache.save() is called. If this is not desired, you can pass true to the save call like: cache.save( true /* noPrune */ ) . License MIT Changelog changelog","title":"flat-cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#flat-cache","text":"A stupidly simple key/value storage using files to persist the data","title":"flat-cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#install","text":"npm i --save flat-cache","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#usage","text":"const flatCache = require('flat-cache'); // loads the cache, if one does not exists for the given // Id a new one will be prepared to be created const cache = flatCache.load('cacheId'); // sets a key on the cache cache.setKey('key', { foo: 'var' }); // get a key from the cache cache.getKey('key'); // { foo: 'var' } // fetch the entire persisted object cache.all(); // { 'key': { foo: 'var' } } // remove a key cache.removeKey('key'); // removes a key from the cache // save it to disk cache.save(); // very important, if you don't save no changes will be persisted. // cache.save( true /* noPrune */) // can be used to prevent the removal of non visited keys // loads the cache from a given directory, if one does // not exists for the given Id a new one will be prepared to be created const cache = flatCache.load('cacheId', path.resolve('./path/to/folder')); // The following methods are useful to clear the cache // delete a given cache flatCache.clearCacheById('cacheId'); // removes the cacheId document if one exists. // delete all cache flatCache.clearAll(); // remove the cache directory","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#motivation-for-this-module","text":"I needed a super simple and dumb in-memory cache with optional disk persistance in order to make a script that will beutify files with esformatter only execute on the files that were changed since the last run. To make that possible we need to store the fileSize and modificationTime of the files. So a simple key/value storage was needed and Bam! this module was born.","title":"Motivation for this module"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#important-notes","text":"If no directory is especified when the load method is called, a folder named .cache will be created inside the module directory when cache.save is called. If you're committing your node_modules to any vcs, you might want to ignore the default .cache folder, or specify a custom directory. The values set on the keys of the cache should be stringify-able ones, meaning no circular references All the changes to the cache state are done to memory I could have used a timer or Object.observe to deliver the changes to disk, but I wanted to keep this module intentionally dumb and simple Non visited keys are removed when cache.save() is called. If this is not desired, you can pass true to the save call like: cache.save( true /* noPrune */ ) .","title":"Important notes"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/#changelog","text":"changelog","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/","text":"flat-cache - Changelog v3.0.4 Refactoring add files by name to the list of exported files - 89a2698 , Roy Riojas , 08/11/2020 02:35:39 v3.0.3 Bug Fixes Fix wrong eslint command - f268e42 , Roy Riojas , 08/11/2020 02:15:04 v3.0.2 Refactoring Update the files paths - 6983a80 , Roy Riojas , 08/11/2020 01:58:39 Move code to src/ - 18ed6e8 , Roy Riojas , 08/11/2020 01:57:17 Change eslint-cache location - beed74c , Roy Riojas , 08/11/2020 01:48:32 v3.0.1 Refactoring Remove unused deps - 8c6d9dc , Roy Riojas , 08/11/2020 01:43:29 v3.0.0 Refactoring Fix engines - 52b824c , Roy Riojas , 08/11/2020 01:01:52 Other changes Replace write with combination of mkdir and writeFile ( #49 ) - ef48276 , Bogdan Chadkin , 08/11/2020 00:17:15 Node v10 introduced a great \"recursive\" option for mkdir which allows to get rid from mkdirp package and easily rewrite \"write\" package usage with two function calls. https://nodejs.org/api/fs.html#fs_fs_mkdir_path_options_callback Added a testcase for clearAll ( #48 ) - 45b51ca , Aaron Chen , 21/05/2020 08:40:03 requet node>=10 - a5c482c , yumetodo , 10/04/2020 23:14:53 thanks @SuperITMan Update README.md - 29fe40b , Roy Riojas , 10/04/2020 20:08:05 reduce vulnerability to 1 - e9db1b2 , yumetodo , 30/03/2020 11:10:43 reduce vulnerabilities dependencies to 8 - b58d196 , yumetodo , 30/03/2020 10:54:56 use prettier instead of esbeautifier - 03b1db7 , yumetodo , 30/03/2020 10:27:14 update proxyquire - c2f048d , yumetodo , 30/03/2020 10:16:16 update flatted and mocha - a0e56da , yumetodo , 30/03/2020 09:46:45 mocha > mkdirp is updated istanble >>> optimist > minimist is not updated drop support node.js < 10 in develop - beba691 , yumetodo , 18/03/2020 01:31:09 see mkdirp npm aufit fix(still remains) - ce166cb , yumetodo , 18/03/2020 01:18:08 37 vulnerabilities required manual review and could not be updated updtate sinon - 9f2d1b6 , yumetodo , 18/03/2020 01:17:51 apply eslint-plugin-mocha - 07343b5 , yumetodo , 13/03/2020 22:17:21 Less strint version check ( #44 ) - 92aca1c , Wojciech Maj , 13/11/2019 16:18:25 Use ^ version matching for production dependencies Run npm audit fix Bug Fixes update dependencies and use eslint directly - 73fbed2 , yumetodo , 18/03/2020 01:17:27 v2.0.1 Refactoring upgrade node modules to latest versions - 6402ed3 , Roy Riojas , 08/01/2019 18:47:05 v2.0.0 Bug Fixes upgrade package.json lock file - 8d21c7b , Roy Riojas , 08/01/2019 17:03:13 Use the same versions of node_js that eslint use - 8d23379 , Roy Riojas , 08/01/2019 16:25:11 Other changes Replace circular-json with flatted ( #36 ) - b93aced , C. K. Tang , 08/01/2019 17:03:01 Change JSON parser from circular-json to flatted & 1 more changes ( #37 ) - 745e65a , Andy Chen , 08/01/2019 16:17:20 Change JSON parser from circular-json to flatted & 1 more changes Change JSON parser from circular-json Audited 2 vulnerabilities Update package.json Update Engine require There's a bunch of dependencies in this pkg requires node >=4, so I changed it to 4 Remove and add node versions I have seen this pkg is not available with node 0.12 so I removed it I have added a popular used LTS version of node - 10 v1.3.4 Refactoring Add del.js and utils.js to the list of files to be beautified - 9d0ca9b , Roy Riojas , 14/11/2018 12:19:02 v1.3.3 Refactoring Make sure package-lock.json is up to date - a7d2598 , Roy Riojas , 14/11/2018 11:36:08 Other changes Removed the need for del ( #33 ) - c429012 , S. Gilroy , 13/11/2018 13:56:37 Removed the need for del Removed the need for del as newer versions have broken backwards compatibility. del mainly uses rimraf for deleting folders and files, replaceing it with rimraf only is a minimal change. Disable glob on rimraf calls Added glob disable to wrong call Wrapped rimraf to simplify solution v1.3.2 Refactoring remove yarn.lock file - 704c6c4 , Roy Riojas , 07/11/2018 15:41:08 Other changes replace circular-json with flatted ( #23 )\" - db12d74 , Roy Riojas , 07/11/2018 15:40:39 This reverts commit 00f689277a75e85fef28e6a048fad227afc525e6. v1.3.1 Refactoring upgrade deps to remove some security warnings - f405719 , Roy Riojas , 06/11/2018 12:07:31 Bug Fixes replace circular-json with flatted ( #23 ) - 00f6892 , Terry , 05/11/2018 18:44:16 Other changes update del to v3.0.0 ( #26 ) - d42883f , Patrick Silva , 03/11/2018 01:00:44 Closes #25 v1.3.0 Other changes Added #all method ( #16 ) - 12293be , Ozair Patel , 25/09/2017 14:46:38 Added #all method Added #all method test Updated readme Added yarn.lock Added more keys for #all test Beautified file fix changelog title style ( #14 ) - af8338a , \u524d\u7aef\u5c0f\u6b66 , 19/12/2016 20:34:48 v1.2.2 Bug Fixes Do not crash if cache file is invalid JSON. ( #13 ) - 87beaa6 , Roy Riojas , 19/12/2016 18:03:35 Fixes #12 Not sure under which situations a cache file might exist that does not contain a valid JSON structure, but just in case to cover the possibility of this happening a try catch block has been added If the cache is somehow not valid the cache will be discarded an a a new cache will be stored instead Other changes Added travis ci support for modern node versions ( #11 ) - 1c2b1f7 , Amila Welihinda , 10/11/2016 23:47:52 Bumping circular-son version ( #10 ) - 4d5e861 , Andrea Giammarchi , 02/08/2016 07:13:52 As mentioned in https://github.com/WebReflection/circular-json/issues/25 circular-json wan't rightly implementing the license field. Latest version bump changed only that bit so that ESLint should now be happy. v1.2.1 Bug Fixes Add missing utils.js file to the package. closes #8 - ec10cf2 , Roy Riojas , 01/08/2016 02:18:57 v1.2.0 Documentation Add documentation about noPrune option - 23e11f9 , Roy Riojas , 01/08/2016 02:06:49 v1.0.11 Features Add noPrune option to cache.save() method. closes #7 - 2c8016a , Roy Riojas , 01/08/2016 02:00:29 Add json read and write utility based on circular-json - c31081e , Jean Ponchon , 28/07/2016 08:58:17 Bug Fixes Remove UTF16 BOM stripping - 4a41e22 , Jean Ponchon , 29/07/2016 02:18:06 Since we control both writing and reading of JSON stream, there no needs to handle unicode BOM. Use circular-json to handle circular references (fix #5 ) - cd7aeed , Jean Ponchon , 25/07/2016 11:11:59 Tests Related fixes Add missing file from eslint test - d6fa3c3 , Jean Ponchon , 29/07/2016 02:15:51 Add test for circular json serialization / deserialization - 07d2ddd , Jean Ponchon , 28/07/2016 08:59:36 Refactoring Remove unused read-json-sync - 2be1c24 , Jean Ponchon , 28/07/2016 08:59:18 Build Scripts Changes travis tests on 0.12 and 4x - 3a613fd , royriojas , 15/11/2015 14:34:40 v1.0.10 Build Scripts Changes add eslint-fix task - fd29e52 , royriojas , 01/11/2015 15:04:08 make sure the test script also verify beautification and linting of files before running tests - e94e176 , royriojas , 01/11/2015 11:54:48 Other changes add clearAll for cacheDir - 97383d9 , xieyaowu , 31/10/2015 21:02:18 v1.0.9 Bug Fixes wrong default values for changelogx user repo name - 7bb52d1 , royriojas , 11/09/2015 15:59:30 v1.0.8 Build Scripts Changes test against node 4 - c395b66 , royriojas , 11/09/2015 15:51:39 v1.0.7 Other changes Move dependencies into devDep - 7e47099 , Bogdan Chadkin , 11/09/2015 15:10:57 Documentation Add missing changelog link - f51197a , royriojas , 11/09/2015 14:48:05 v1.0.6 Build Scripts Changes Add helpers/code check scripts - bdb82f3 , royriojas , 11/09/2015 14:44:31 v1.0.5 Documentation better description for the module - 436817f , royriojas , 11/09/2015 14:35:33 Other changes Update dependencies - be88aa3 , Bogdan Chadkin , 11/09/2015 13:47:41 v1.0.4 Refactoring load a cache file using the full filepath - b8f68c2 , Roy Riojas , 30/08/2015 04:19:14 Documentation Add documentation about clearAll and clearCacheById - 13947c1 , Roy Riojas , 01/03/2015 23:44:05 Features Add methods to remove the cache documents created - af40443 , Roy Riojas , 01/03/2015 23:39:27 v1.0.1 Other changes Update README.md - c2b6805 , Roy Riojas , 26/02/2015 04:28:07 v1.0.0 Refactoring flat-cache v.1.0.0 - c984274 , Roy Riojas , 26/02/2015 04:11:50 Other changes Initial commit - d43cccf , Roy Riojas , 26/02/2015 01:12:16","title":"flat-cache - Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#flat-cache-changelog","text":"","title":"flat-cache - Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v304","text":"Refactoring add files by name to the list of exported files - 89a2698 , Roy Riojas , 08/11/2020 02:35:39","title":"v3.0.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v303","text":"Bug Fixes Fix wrong eslint command - f268e42 , Roy Riojas , 08/11/2020 02:15:04","title":"v3.0.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v302","text":"Refactoring Update the files paths - 6983a80 , Roy Riojas , 08/11/2020 01:58:39 Move code to src/ - 18ed6e8 , Roy Riojas , 08/11/2020 01:57:17 Change eslint-cache location - beed74c , Roy Riojas , 08/11/2020 01:48:32","title":"v3.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v301","text":"Refactoring Remove unused deps - 8c6d9dc , Roy Riojas , 08/11/2020 01:43:29","title":"v3.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v300","text":"Refactoring Fix engines - 52b824c , Roy Riojas , 08/11/2020 01:01:52 Other changes Replace write with combination of mkdir and writeFile ( #49 ) - ef48276 , Bogdan Chadkin , 08/11/2020 00:17:15 Node v10 introduced a great \"recursive\" option for mkdir which allows to get rid from mkdirp package and easily rewrite \"write\" package usage with two function calls. https://nodejs.org/api/fs.html#fs_fs_mkdir_path_options_callback Added a testcase for clearAll ( #48 ) - 45b51ca , Aaron Chen , 21/05/2020 08:40:03 requet node>=10 - a5c482c , yumetodo , 10/04/2020 23:14:53 thanks @SuperITMan Update README.md - 29fe40b , Roy Riojas , 10/04/2020 20:08:05 reduce vulnerability to 1 - e9db1b2 , yumetodo , 30/03/2020 11:10:43 reduce vulnerabilities dependencies to 8 - b58d196 , yumetodo , 30/03/2020 10:54:56 use prettier instead of esbeautifier - 03b1db7 , yumetodo , 30/03/2020 10:27:14 update proxyquire - c2f048d , yumetodo , 30/03/2020 10:16:16 update flatted and mocha - a0e56da , yumetodo , 30/03/2020 09:46:45 mocha > mkdirp is updated istanble >>> optimist > minimist is not updated drop support node.js < 10 in develop - beba691 , yumetodo , 18/03/2020 01:31:09 see mkdirp npm aufit fix(still remains) - ce166cb , yumetodo , 18/03/2020 01:18:08 37 vulnerabilities required manual review and could not be updated updtate sinon - 9f2d1b6 , yumetodo , 18/03/2020 01:17:51 apply eslint-plugin-mocha - 07343b5 , yumetodo , 13/03/2020 22:17:21 Less strint version check ( #44 ) - 92aca1c , Wojciech Maj , 13/11/2019 16:18:25 Use ^ version matching for production dependencies Run npm audit fix Bug Fixes update dependencies and use eslint directly - 73fbed2 , yumetodo , 18/03/2020 01:17:27","title":"v3.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v201","text":"Refactoring upgrade node modules to latest versions - 6402ed3 , Roy Riojas , 08/01/2019 18:47:05","title":"v2.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v200","text":"Bug Fixes upgrade package.json lock file - 8d21c7b , Roy Riojas , 08/01/2019 17:03:13 Use the same versions of node_js that eslint use - 8d23379 , Roy Riojas , 08/01/2019 16:25:11 Other changes Replace circular-json with flatted ( #36 ) - b93aced , C. K. Tang , 08/01/2019 17:03:01 Change JSON parser from circular-json to flatted & 1 more changes ( #37 ) - 745e65a , Andy Chen , 08/01/2019 16:17:20 Change JSON parser from circular-json to flatted & 1 more changes Change JSON parser from circular-json Audited 2 vulnerabilities Update package.json Update Engine require There's a bunch of dependencies in this pkg requires node >=4, so I changed it to 4 Remove and add node versions I have seen this pkg is not available with node 0.12 so I removed it I have added a popular used LTS version of node - 10","title":"v2.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v134","text":"Refactoring Add del.js and utils.js to the list of files to be beautified - 9d0ca9b , Roy Riojas , 14/11/2018 12:19:02","title":"v1.3.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v133","text":"Refactoring Make sure package-lock.json is up to date - a7d2598 , Roy Riojas , 14/11/2018 11:36:08 Other changes Removed the need for del ( #33 ) - c429012 , S. Gilroy , 13/11/2018 13:56:37 Removed the need for del Removed the need for del as newer versions have broken backwards compatibility. del mainly uses rimraf for deleting folders and files, replaceing it with rimraf only is a minimal change. Disable glob on rimraf calls Added glob disable to wrong call Wrapped rimraf to simplify solution","title":"v1.3.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v132","text":"Refactoring remove yarn.lock file - 704c6c4 , Roy Riojas , 07/11/2018 15:41:08 Other changes replace circular-json with flatted ( #23 )\" - db12d74 , Roy Riojas , 07/11/2018 15:40:39 This reverts commit 00f689277a75e85fef28e6a048fad227afc525e6.","title":"v1.3.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v131","text":"Refactoring upgrade deps to remove some security warnings - f405719 , Roy Riojas , 06/11/2018 12:07:31 Bug Fixes replace circular-json with flatted ( #23 ) - 00f6892 , Terry , 05/11/2018 18:44:16 Other changes update del to v3.0.0 ( #26 ) - d42883f , Patrick Silva , 03/11/2018 01:00:44 Closes #25","title":"v1.3.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v130","text":"Other changes Added #all method ( #16 ) - 12293be , Ozair Patel , 25/09/2017 14:46:38 Added #all method Added #all method test Updated readme Added yarn.lock Added more keys for #all test Beautified file fix changelog title style ( #14 ) - af8338a , \u524d\u7aef\u5c0f\u6b66 , 19/12/2016 20:34:48","title":"v1.3.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v122","text":"Bug Fixes Do not crash if cache file is invalid JSON. ( #13 ) - 87beaa6 , Roy Riojas , 19/12/2016 18:03:35 Fixes #12 Not sure under which situations a cache file might exist that does not contain a valid JSON structure, but just in case to cover the possibility of this happening a try catch block has been added If the cache is somehow not valid the cache will be discarded an a a new cache will be stored instead Other changes Added travis ci support for modern node versions ( #11 ) - 1c2b1f7 , Amila Welihinda , 10/11/2016 23:47:52 Bumping circular-son version ( #10 ) - 4d5e861 , Andrea Giammarchi , 02/08/2016 07:13:52 As mentioned in https://github.com/WebReflection/circular-json/issues/25 circular-json wan't rightly implementing the license field. Latest version bump changed only that bit so that ESLint should now be happy.","title":"v1.2.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v121","text":"Bug Fixes Add missing utils.js file to the package. closes #8 - ec10cf2 , Roy Riojas , 01/08/2016 02:18:57","title":"v1.2.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v120","text":"Documentation Add documentation about noPrune option - 23e11f9 , Roy Riojas , 01/08/2016 02:06:49","title":"v1.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v1011","text":"Features Add noPrune option to cache.save() method. closes #7 - 2c8016a , Roy Riojas , 01/08/2016 02:00:29 Add json read and write utility based on circular-json - c31081e , Jean Ponchon , 28/07/2016 08:58:17 Bug Fixes Remove UTF16 BOM stripping - 4a41e22 , Jean Ponchon , 29/07/2016 02:18:06 Since we control both writing and reading of JSON stream, there no needs to handle unicode BOM. Use circular-json to handle circular references (fix #5 ) - cd7aeed , Jean Ponchon , 25/07/2016 11:11:59 Tests Related fixes Add missing file from eslint test - d6fa3c3 , Jean Ponchon , 29/07/2016 02:15:51 Add test for circular json serialization / deserialization - 07d2ddd , Jean Ponchon , 28/07/2016 08:59:36 Refactoring Remove unused read-json-sync - 2be1c24 , Jean Ponchon , 28/07/2016 08:59:18 Build Scripts Changes travis tests on 0.12 and 4x - 3a613fd , royriojas , 15/11/2015 14:34:40","title":"v1.0.11"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v1010","text":"Build Scripts Changes add eslint-fix task - fd29e52 , royriojas , 01/11/2015 15:04:08 make sure the test script also verify beautification and linting of files before running tests - e94e176 , royriojas , 01/11/2015 11:54:48 Other changes add clearAll for cacheDir - 97383d9 , xieyaowu , 31/10/2015 21:02:18","title":"v1.0.10"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v109","text":"Bug Fixes wrong default values for changelogx user repo name - 7bb52d1 , royriojas , 11/09/2015 15:59:30","title":"v1.0.9"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v108","text":"Build Scripts Changes test against node 4 - c395b66 , royriojas , 11/09/2015 15:51:39","title":"v1.0.8"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v107","text":"Other changes Move dependencies into devDep - 7e47099 , Bogdan Chadkin , 11/09/2015 15:10:57 Documentation Add missing changelog link - f51197a , royriojas , 11/09/2015 14:48:05","title":"v1.0.7"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v106","text":"Build Scripts Changes Add helpers/code check scripts - bdb82f3 , royriojas , 11/09/2015 14:44:31","title":"v1.0.6"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v105","text":"Documentation better description for the module - 436817f , royriojas , 11/09/2015 14:35:33 Other changes Update dependencies - be88aa3 , Bogdan Chadkin , 11/09/2015 13:47:41","title":"v1.0.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v104","text":"Refactoring load a cache file using the full filepath - b8f68c2 , Roy Riojas , 30/08/2015 04:19:14 Documentation Add documentation about clearAll and clearCacheById - 13947c1 , Roy Riojas , 01/03/2015 23:44:05 Features Add methods to remove the cache documents created - af40443 , Roy Riojas , 01/03/2015 23:39:27","title":"v1.0.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v101","text":"Other changes Update README.md - c2b6805 , Roy Riojas , 26/02/2015 04:28:07","title":"v1.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/flat-cache/changelog/#v100","text":"Refactoring flat-cache v.1.0.0 - c984274 , Roy Riojas , 26/02/2015 04:11:50 Other changes Initial commit - d43cccf , Roy Riojas , 26/02/2015 01:12:16","title":"v1.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/","text":"flatted Social Media Photo by Matt Seymour on Unsplash A super light (0.5K) and fast circular JSON parser, directly from the creator of CircularJSON . Available also for PHP . Available also for Python . Announcement \ud83d\udce3 There is a standard approach to recursion and more data-types than what JSON allows, and it's part of the Structured Clone polyfill . Beside acting as a polyfill, its @ungap/structured-clone/json export provides both stringify and parse , and it's been tested for being faster than flatted , but its produced output is also smaller than flatted in general. The @ungap/structured-clone module is, in short, a drop in replacement for flatted , but it's not compatible with flatted specialized syntax. However, if recursion, as well as more data-types, are what you are after, or interesting for your projects/use cases, consider switching to this new module whenever you can \ud83d\udc4d npm i flatted Usable via CDN or as regular module. // ESM import {parse, stringify, toJSON, fromJSON} from 'flatted'; // CJS const {parse, stringify, toJSON, fromJSON} = require('flatted'); const a = [{}]; a[0].a = a; a.push(a); stringify(a); // [[\"1\",\"0\"],{\"a\":\"0\"}] toJSON and fromJSON If you'd like to implicitly survive JSON serialization, these two helpers helps: import {toJSON, fromJSON} from 'flatted'; class RecursiveMap extends Map { static fromJSON(any) { return new this(fromJSON(any)); } toJSON() { return toJSON([...this.entries()]); } } const recursive = new RecursiveMap; const same = {}; same.same = same; recursive.set('same', same); const asString = JSON.stringify(recursive); const asMap = RecursiveMap.fromJSON(JSON.parse(asString)); asMap.get('same') === asMap.get('same').same; // true Flatted VS JSON As it is for every other specialized format capable of serializing and deserializing circular data, you should never JSON.parse(Flatted.stringify(data)) , and you should never Flatted.parse(JSON.stringify(data)) . The only way this could work is to Flatted.parse(Flatted.stringify(data)) , as it is also for CircularJSON or any other, otherwise there's no granted data integrity. Also please note this project serializes and deserializes only data compatible with JSON, so that sockets, or anything else with internal classes different from those allowed by JSON standard, won't be serialized and unserialized as expected. New in V1: Exact same JSON API Added a reviver parameter to .parse(string, reviver) and revive your own objects. Added a replacer and a space parameter to .stringify(object, replacer, space) for feature parity with JSON signature. Compatibility All ECMAScript engines compatible with Map , Set , Object.keys , and Array.prototype.reduce will work, even if polyfilled. How does it work ? While stringifying, all Objects, including Arrays, and strings, are flattened out and replaced as unique index. * Once parsed, all indexes will be replaced through the flattened collection. * represented as string to avoid conflicts with numbers // logic example var a = [{one: 1}, {two: '2'}]; a[0].a = a; // a is the main object, will be at index '0' // {one: 1} is the second object, index '1' // {two: '2'} the third, in '2', and it has a string // which will be found at index '3' Flatted.stringify(a); // [[\"1\",\"2\"],{\"one\":1,\"a\":\"0\"},{\"two\":\"3\"},\"2\"] // a[one,two] {one: 1, a} {two: '2'} '2'","title":"flatted"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#flatted","text":"Social Media Photo by Matt Seymour on Unsplash A super light (0.5K) and fast circular JSON parser, directly from the creator of CircularJSON . Available also for PHP . Available also for Python .","title":"flatted"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#announcement","text":"There is a standard approach to recursion and more data-types than what JSON allows, and it's part of the Structured Clone polyfill . Beside acting as a polyfill, its @ungap/structured-clone/json export provides both stringify and parse , and it's been tested for being faster than flatted , but its produced output is also smaller than flatted in general. The @ungap/structured-clone module is, in short, a drop in replacement for flatted , but it's not compatible with flatted specialized syntax. However, if recursion, as well as more data-types, are what you are after, or interesting for your projects/use cases, consider switching to this new module whenever you can \ud83d\udc4d npm i flatted Usable via CDN or as regular module. // ESM import {parse, stringify, toJSON, fromJSON} from 'flatted'; // CJS const {parse, stringify, toJSON, fromJSON} = require('flatted'); const a = [{}]; a[0].a = a; a.push(a); stringify(a); // [[\"1\",\"0\"],{\"a\":\"0\"}]","title":"Announcement \ud83d\udce3"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#tojson-and-fromjson","text":"If you'd like to implicitly survive JSON serialization, these two helpers helps: import {toJSON, fromJSON} from 'flatted'; class RecursiveMap extends Map { static fromJSON(any) { return new this(fromJSON(any)); } toJSON() { return toJSON([...this.entries()]); } } const recursive = new RecursiveMap; const same = {}; same.same = same; recursive.set('same', same); const asString = JSON.stringify(recursive); const asMap = RecursiveMap.fromJSON(JSON.parse(asString)); asMap.get('same') === asMap.get('same').same; // true","title":"toJSON and fromJSON"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#flatted-vs-json","text":"As it is for every other specialized format capable of serializing and deserializing circular data, you should never JSON.parse(Flatted.stringify(data)) , and you should never Flatted.parse(JSON.stringify(data)) . The only way this could work is to Flatted.parse(Flatted.stringify(data)) , as it is also for CircularJSON or any other, otherwise there's no granted data integrity. Also please note this project serializes and deserializes only data compatible with JSON, so that sockets, or anything else with internal classes different from those allowed by JSON standard, won't be serialized and unserialized as expected.","title":"Flatted VS JSON"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#new-in-v1-exact-same-json-api","text":"Added a reviver parameter to .parse(string, reviver) and revive your own objects. Added a replacer and a space parameter to .stringify(object, replacer, space) for feature parity with JSON signature.","title":"New in V1: Exact same JSON API"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#compatibility","text":"All ECMAScript engines compatible with Map , Set , Object.keys , and Array.prototype.reduce will work, even if polyfilled.","title":"Compatibility"},{"location":"_Disciplina/Code/my-react-app/node_modules/flatted/#how-does-it-work","text":"While stringifying, all Objects, including Arrays, and strings, are flattened out and replaced as unique index. * Once parsed, all indexes will be replaced through the flattened collection. * represented as string to avoid conflicts with numbers // logic example var a = [{one: 1}, {two: '2'}]; a[0].a = a; // a is the main object, will be at index '0' // {one: 1} is the second object, index '1' // {two: '2'} the third, in '2', and it has a string // which will be found at index '3' Flatted.stringify(a); // [[\"1\",\"2\"],{\"one\":1,\"a\":\"0\"},{\"two\":\"3\"},\"2\"] // a[one,two] {one: 1, a} {two: '2'} '2'","title":"How does it work ?"},{"location":"_Disciplina/Code/my-react-app/node_modules/for-each/","text":"for-each A better forEach. Example Like Array.prototype.forEach but works on objects. var forEach = require(\"for-each\") forEach({ key: \"value\" }, function (value, key, object) { /* code */ }) As a bonus, it's also a perfectly function shim/polyfill for arrays too! var forEach = require(\"for-each\") forEach([1, 2, 3], function (value, index, array) { /* code */ }) Installation npm install for-each Contributors Raynos MIT Licenced","title":"for-each build status"},{"location":"_Disciplina/Code/my-react-app/node_modules/for-each/#for-each","text":"A better forEach.","title":"for-each"},{"location":"_Disciplina/Code/my-react-app/node_modules/for-each/#example","text":"Like Array.prototype.forEach but works on objects. var forEach = require(\"for-each\") forEach({ key: \"value\" }, function (value, key, object) { /* code */ }) As a bonus, it's also a perfectly function shim/polyfill for arrays too! var forEach = require(\"for-each\") forEach([1, 2, 3], function (value, index, array) { /* code */ })","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/for-each/#installation","text":"npm install for-each","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/for-each/#contributors","text":"Raynos","title":"Contributors"},{"location":"_Disciplina/Code/my-react-app/node_modules/for-each/#mit-licenced","text":"","title":"MIT Licenced"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/","text":"function-bind Implementation of function.prototype.bind Old versions of phantomjs, Internet Explorer < 9, and node < 0.6 don't support Function.prototype.bind . Example Function.prototype.bind = require(\"function-bind\") Installation npm install function-bind Contributors Raynos MIT Licenced","title":"function-bind Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/#function-bind","text":"Implementation of function.prototype.bind Old versions of phantomjs, Internet Explorer < 9, and node < 0.6 don't support Function.prototype.bind .","title":"function-bind"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/#example","text":"Function.prototype.bind = require(\"function-bind\")","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/#installation","text":"npm install function-bind","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/#contributors","text":"Raynos","title":"Contributors"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/#mit-licenced","text":"","title":"MIT Licenced"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.2 - 2023-10-12 Merged Point to the correct file #16 Commits [Tests] migrate tests to Github Actions 4f8b57c [Tests] remove jscs 90eb2ed [meta] update .gitignore 53fcdc3 [Tests] up to node v11.10 , v10.15 , v9.11 , v8.15 , v6.16 , v4.9 ; use nvm install-latest-npm ; run audit script in tests 1fe8f6e [meta] add auto-changelog 1921fcb [Robustness] remove runtime dependency on all builtins except .apply f743e61 Docs: enable badges; update wording 503cb12 [readme] update badges 290c5db [Tests] switch to nyc for coverage ea360ba [Dev Deps] update eslint , @ljharb/eslint-config , tape cae5e9e [meta] add funding field; create FUNDING.yml c9f4274 [Tests] fix eslint errors from #15 f69aaa2 [actions] fix permissions 99a0cd9 [meta] use npmignore to autogenerate an npmignore file f03b524 [Dev Deps] update @ljharb/eslint\u2011config , eslint , tape 7af9300 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 64a9127 [Tests] use aud instead of npm audit e75069c [Dev Deps] update @ljharb/eslint-config , aud , tape d03555c [meta] add safe-publish-latest 9c8f809 [Dev Deps] update @ljharb/eslint-config , tape baf6893 [meta] create SECURITY.md 4db1779 [Tests] add npm run audit c8b38ec Revert \"Point to the correct file\" 05cdf0f v1.1.1 - 2017-08-28 Commits [Tests] up to node v8 ; newer npm breaks on older node; fix scripts 817f7d2 [Dev Deps] update eslint , jscs , tape , @ljharb/eslint-config 854288b [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 83e639f Only apps should have lockfiles 5ed97f5 Use a SPDX-compliant \u201clicense\u201d field. 5feefea v1.1.0 - 2016-02-14 Commits Update eslint , tape ; use my personal shared eslint config 9c9062a Add npm run eslint dd96c56 [New] return the native bind when available. 82186e0 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config a3dd767 Update eslint 3dae2f7 Update tape , covert , jscs a181eee [Tests] up to node v5.6 , v4.3 964929a Test up to io.js v2.1 2be7310 Update tape , jscs , eslint , @ljharb/eslint-config 45f3d68 [Dev Deps] update tape , jscs 6e1340d [Tests] up to io.js v3.3 , node v4.1 d9bad2b Update eslint 935590c [Dev Deps] update jscs , eslint , @ljharb/eslint-config 8c9a1ef Test on io.js v2.2 9a3a38c Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 69afc26 [Dev Deps] Update tape , eslint 36c1be0 Update tape , jscs 98d8303 Update jscs 9633a4e Update tape , jscs c80ef0f Test up to io.js v3.0 7e2c853 Test on io.js v2.4 5a199a2 Test on io.js v2.3 a511b88 Fixing a typo from 822b4e1938db02dc9584aa434fd3a45cb20caf43 732d6b6 Update jscs da52a48 Lock covert to v1.0.0. d6150fd v1.0.2 - 2014-10-04 v1.0.1 - 2014-10-03 Merged make CI build faster #3 Commits Using my standard jscs.json d8ee94c Adding npm run lint 7571ab7 Using consistent indentation e91a1b1 Updating jscs 7e17892 Using consistent quotes c50b57f Adding keywords cb94631 Directly export a function expression instead of using a declaration, and relying on hoisting. 5a33c5f Naming npm URL and badge in README; use SVG 2aef8fc Naming deps URLs in README 04228d7 Naming travis-ci URLs in README; using SVG 62c810c Make sure functions are invoked correctly (also passing coverage tests) 2b289b4 Removing the strict mode pragmas; they make tests fail. 1aa701d Adding myself as a contributor 85fd57b Adding strict mode pragmas 915b08e Adding devDeps URLs to README 4ccc731 Fixing the description. a7a472c Using a function expression instead of a function declaration. b5d3e4e Updating tape f086be6 Updating jscs 5f9bdb3 Updating jscs 9b409ba Run coverage as part of tests. 8e1b6d4 Run linter as part of tests c1ca83f Updating covert 701e837 v1.0.0 - 2014-08-09 Commits Make sure old and unstable nodes don't fail Travis 27adca3 Fixing an issue when the bound function is called as a constructor in ES3. e20122d Adding npm run coverage a2e29c4 Updating tape b741168 Upgrading tape 63631a0 Updating tape 363cb46 v0.2.0 - 2014-03-23 Commits Updating test coverage to match es5-shim. aa94d44 initial 942ee07 Setting the bound function's length properly. 079f46a Ensuring that some older browsers will throw when given a regex. 36ac55b Removing npm scripts that don't have dependencies 9d2be60 Updating tape 297a4ac Skipping length tests for now. d9891ea don't take my tea dccd930","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v112-2023-10-12","text":"","title":"v1.1.2 - 2023-10-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#merged","text":"Point to the correct file #16","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#commits","text":"[Tests] migrate tests to Github Actions 4f8b57c [Tests] remove jscs 90eb2ed [meta] update .gitignore 53fcdc3 [Tests] up to node v11.10 , v10.15 , v9.11 , v8.15 , v6.16 , v4.9 ; use nvm install-latest-npm ; run audit script in tests 1fe8f6e [meta] add auto-changelog 1921fcb [Robustness] remove runtime dependency on all builtins except .apply f743e61 Docs: enable badges; update wording 503cb12 [readme] update badges 290c5db [Tests] switch to nyc for coverage ea360ba [Dev Deps] update eslint , @ljharb/eslint-config , tape cae5e9e [meta] add funding field; create FUNDING.yml c9f4274 [Tests] fix eslint errors from #15 f69aaa2 [actions] fix permissions 99a0cd9 [meta] use npmignore to autogenerate an npmignore file f03b524 [Dev Deps] update @ljharb/eslint\u2011config , eslint , tape 7af9300 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 64a9127 [Tests] use aud instead of npm audit e75069c [Dev Deps] update @ljharb/eslint-config , aud , tape d03555c [meta] add safe-publish-latest 9c8f809 [Dev Deps] update @ljharb/eslint-config , tape baf6893 [meta] create SECURITY.md 4db1779 [Tests] add npm run audit c8b38ec Revert \"Point to the correct file\" 05cdf0f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v111-2017-08-28","text":"","title":"v1.1.1 - 2017-08-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#commits_1","text":"[Tests] up to node v8 ; newer npm breaks on older node; fix scripts 817f7d2 [Dev Deps] update eslint , jscs , tape , @ljharb/eslint-config 854288b [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 83e639f Only apps should have lockfiles 5ed97f5 Use a SPDX-compliant \u201clicense\u201d field. 5feefea","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v110-2016-02-14","text":"","title":"v1.1.0 - 2016-02-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#commits_2","text":"Update eslint , tape ; use my personal shared eslint config 9c9062a Add npm run eslint dd96c56 [New] return the native bind when available. 82186e0 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config a3dd767 Update eslint 3dae2f7 Update tape , covert , jscs a181eee [Tests] up to node v5.6 , v4.3 964929a Test up to io.js v2.1 2be7310 Update tape , jscs , eslint , @ljharb/eslint-config 45f3d68 [Dev Deps] update tape , jscs 6e1340d [Tests] up to io.js v3.3 , node v4.1 d9bad2b Update eslint 935590c [Dev Deps] update jscs , eslint , @ljharb/eslint-config 8c9a1ef Test on io.js v2.2 9a3a38c Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 69afc26 [Dev Deps] Update tape , eslint 36c1be0 Update tape , jscs 98d8303 Update jscs 9633a4e Update tape , jscs c80ef0f Test up to io.js v3.0 7e2c853 Test on io.js v2.4 5a199a2 Test on io.js v2.3 a511b88 Fixing a typo from 822b4e1938db02dc9584aa434fd3a45cb20caf43 732d6b6 Update jscs da52a48 Lock covert to v1.0.0. d6150fd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v102-2014-10-04","text":"","title":"v1.0.2 - 2014-10-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v101-2014-10-03","text":"","title":"v1.0.1 - 2014-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#merged_1","text":"make CI build faster #3","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#commits_3","text":"Using my standard jscs.json d8ee94c Adding npm run lint 7571ab7 Using consistent indentation e91a1b1 Updating jscs 7e17892 Using consistent quotes c50b57f Adding keywords cb94631 Directly export a function expression instead of using a declaration, and relying on hoisting. 5a33c5f Naming npm URL and badge in README; use SVG 2aef8fc Naming deps URLs in README 04228d7 Naming travis-ci URLs in README; using SVG 62c810c Make sure functions are invoked correctly (also passing coverage tests) 2b289b4 Removing the strict mode pragmas; they make tests fail. 1aa701d Adding myself as a contributor 85fd57b Adding strict mode pragmas 915b08e Adding devDeps URLs to README 4ccc731 Fixing the description. a7a472c Using a function expression instead of a function declaration. b5d3e4e Updating tape f086be6 Updating jscs 5f9bdb3 Updating jscs 9b409ba Run coverage as part of tests. 8e1b6d4 Run linter as part of tests c1ca83f Updating covert 701e837","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v100-2014-08-09","text":"","title":"v1.0.0 - 2014-08-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#commits_4","text":"Make sure old and unstable nodes don't fail Travis 27adca3 Fixing an issue when the bound function is called as a constructor in ES3. e20122d Adding npm run coverage a2e29c4 Updating tape b741168 Upgrading tape 63631a0 Updating tape 363cb46","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#v020-2014-03-23","text":"","title":"v0.2.0 - 2014-03-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/function-bind/CHANGELOG/#commits_5","text":"Updating test coverage to match es5-shim. aa94d44 initial 942ee07 Setting the bound function's length properly. 079f46a Ensuring that some older browsers will throw when given a regex. 36ac55b Removing npm scripts that don't have dependencies 9d2be60 Updating tape 297a4ac Skipping length tests for now. d9891ea don't take my tea dccd930","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/","text":"function.prototype.name An ES2015 spec-compliant Function.prototype.name shim. Invoke its \"shim\" method to shim Function.prototype.name if it is unavailable. Note : Function#name requires a true ES5 environment - specifically, one with ES5 getters. This package implements the es-shim API interface. It works in an ES5-supported environment and complies with the spec . Most common usage: Example var functionName = require('function.prototype.name'); var assert = require('assert'); assert.equal(functionName(function foo() {}), 'foo'); functionName.shim(); assert.equal(function foo() {}.name, 'foo'); Supported engines Automatically tested in every minor version of node. Manually tested in: - Safari: v4 - v15 (4, 5, 5.1, 6.0.5, 6.2, 7.1, 8, 9.1.3, 10.1.2, 11.1.2, 12.1, 13.1.2, 14.1.2, 15.3, 15.6.1) - Chrome: v15 - v81, v83 - v106 (every integer version) - Note: This includes Edge v80+ and Opera v15+, which matches Chrome - Firefox: v3, v3.6, v4 - v105 (every integer version) - Note: in v42 - v63, Function.prototype.toString throws on HTML element constructors, or a Proxy to a function - Note: in v20 - v35, HTML element constructors are not callable, despite having typeof function - IE: v6 - v11 (every integer version - Opera: v11.1, v11.5, v11.6, v12.0, v12.1, v12.14, v12.15, v12.16, v15+ v15+ matches Chrome Tests Simply clone the repo, npm install , and run npm test","title":"function.prototype.name Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/#functionprototypename","text":"An ES2015 spec-compliant Function.prototype.name shim. Invoke its \"shim\" method to shim Function.prototype.name if it is unavailable. Note : Function#name requires a true ES5 environment - specifically, one with ES5 getters. This package implements the es-shim API interface. It works in an ES5-supported environment and complies with the spec . Most common usage:","title":"function.prototype.name"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/#example","text":"var functionName = require('function.prototype.name'); var assert = require('assert'); assert.equal(functionName(function foo() {}), 'foo'); functionName.shim(); assert.equal(function foo() {}.name, 'foo');","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/#supported-engines","text":"Automatically tested in every minor version of node. Manually tested in: - Safari: v4 - v15 (4, 5, 5.1, 6.0.5, 6.2, 7.1, 8, 9.1.3, 10.1.2, 11.1.2, 12.1, 13.1.2, 14.1.2, 15.3, 15.6.1) - Chrome: v15 - v81, v83 - v106 (every integer version) - Note: This includes Edge v80+ and Opera v15+, which matches Chrome - Firefox: v3, v3.6, v4 - v105 (every integer version) - Note: in v42 - v63, Function.prototype.toString throws on HTML element constructors, or a Proxy to a function - Note: in v20 - v35, HTML element constructors are not callable, despite having typeof function - IE: v6 - v11 (every integer version - Opera: v11.1, v11.5, v11.6, v12.0, v12.1, v12.14, v12.15, v12.16, v15+ v15+ matches Chrome","title":"Supported engines"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.6 - 2023-08-28 Commits [actions] reuse common workflows 5f6bfba [meta] use npmignore to autogenerate an npmignore file 28ea2f9 [Fix] properly recognize document.all in IE 6-8 316d676 [Fix] only return an own name d647609 [Tests] add browserstack browser tests 67ae402 [meta] better eccheck command 728df4c [meta] add auto-changelog dbb700b [readme] fix eclint c98fdf1 [readme] add tested browsers d41325c [actions] update rebase action to use reusable workflow 085f340 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 3f071ce [actions] update codecov uploader a187b4f [Deps] update define-properties , es-abstract 3ca42ef [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 8de25d2 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 8b04da7 [Dev Deps] update @ljharb/eslint-config , aud , tape 39d8538 [meta] reorder scripts 054f96b [Dev Deps] update eslint , @ljharb/eslint-config , tape bebee89 [Dev Deps] update aud , tape 8e68159 [Tests] handle Function.prototype in Opera 12.1 f3b8f9a [Deps] update es-abstract , functions-have-names 6a59889 [Deps] update define-properties , es-abstract cd1c5e7 [Deps] update es-abstract 3584585 [Deps] update es-abstract 0e2f6d9 [Deps] update es-abstract b11748e [Dev Deps] update tape d787a81 [Deps] update es-abstract 4692639 [Dev Deps] add in-publish 568e263 1.1.5 / 2021-10-01 [Deps] update es-abstract [meta] use prepublishOnly script for npm 7+ [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , tape [actions] update workflows [actions] use node/install instead of node/run ; use codecov action 1.1.4 / 2021-02-22 [readme] remove travis badge [meta] remove audit-level [meta] gitignore coverage output [meta] do not publish github action workflow files [Deps] update call-bind , es-abstract , functions-have-names [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-strict-mode , tape [Tests] increase coverage [actions] update workflows 1.1.3 / 2020-11-27 [Deps] update es-abstract , functions-have-names ; use call-bind where applicable [Dev Deps] update eslint , @ljharb/eslint-config , tape , make-arrow-function , make-generator-function ; add aud , make-async-function [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [Tests] only audit prod deps 1.1.2 / 2019-12-14 [Refactor] use es-abstract [Deps] update functions-have-names [meta] add funding field [meta] fix repo capitalization [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking 1.1.1 / 2019-07-24 [Refactor] use functions-have-names [meta] clean up package.json scripts [meta] update links [meta] create FUNDING.yml [Deps] update is-callable , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , tape , safe-publish-latest , covert [Tests] use eccheck over editorconfig-tools [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] up to node v11.7 , v10.15 , v9.11 , v8.15 , v6.16 , v4.9 [Test] remove jscs 1.1.0 / 2017-12-31 [New] add auto entry point [Deps] update function-bind [Dev Deps] update uglify-register , tape , nsp , eslint , @ljharb/eslint-config , @es-shims/api [Tests] up to node v9.3 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS 1.0.3 / 2017-07-21 [Fix] be robust against function name mangling [Refactor] move function name detection to separate file 1.0.2 / 2017-07-14 [Refactor] shim: Remove unnecessary !functionsHaveNames check 1.0.1 / 2017-07-11 [Fix] in IE 9-11, we must rely on .call being available (#13) [Fix] ensure that Function.prototype.name does not erase the getter [Deps] update is-callable [Dev Deps] add safe-publish-latest [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , @es-shims/api [Tests] up to node v8.1 ; v7.10 , v6.11 , v4.8 ; improve matrix; newer npm fails on older nodes [Tests] use Object to avoid function name inference in node 7 1.0.0 / 2016-02-27 Initial release.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#v116-2023-08-28","text":"","title":"v1.1.6 - 2023-08-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#commits","text":"[actions] reuse common workflows 5f6bfba [meta] use npmignore to autogenerate an npmignore file 28ea2f9 [Fix] properly recognize document.all in IE 6-8 316d676 [Fix] only return an own name d647609 [Tests] add browserstack browser tests 67ae402 [meta] better eccheck command 728df4c [meta] add auto-changelog dbb700b [readme] fix eclint c98fdf1 [readme] add tested browsers d41325c [actions] update rebase action to use reusable workflow 085f340 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 3f071ce [actions] update codecov uploader a187b4f [Deps] update define-properties , es-abstract 3ca42ef [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 8de25d2 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 8b04da7 [Dev Deps] update @ljharb/eslint-config , aud , tape 39d8538 [meta] reorder scripts 054f96b [Dev Deps] update eslint , @ljharb/eslint-config , tape bebee89 [Dev Deps] update aud , tape 8e68159 [Tests] handle Function.prototype in Opera 12.1 f3b8f9a [Deps] update es-abstract , functions-have-names 6a59889 [Deps] update define-properties , es-abstract cd1c5e7 [Deps] update es-abstract 3584585 [Deps] update es-abstract 0e2f6d9 [Deps] update es-abstract b11748e [Dev Deps] update tape d787a81 [Deps] update es-abstract 4692639 [Dev Deps] add in-publish 568e263","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#115-2021-10-01","text":"[Deps] update es-abstract [meta] use prepublishOnly script for npm 7+ [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , tape [actions] update workflows [actions] use node/install instead of node/run ; use codecov action","title":"1.1.5 / 2021-10-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#114-2021-02-22","text":"[readme] remove travis badge [meta] remove audit-level [meta] gitignore coverage output [meta] do not publish github action workflow files [Deps] update call-bind , es-abstract , functions-have-names [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-strict-mode , tape [Tests] increase coverage [actions] update workflows","title":"1.1.4 / 2021-02-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#113-2020-11-27","text":"[Deps] update es-abstract , functions-have-names ; use call-bind where applicable [Dev Deps] update eslint , @ljharb/eslint-config , tape , make-arrow-function , make-generator-function ; add aud , make-async-function [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [Tests] only audit prod deps","title":"1.1.3 / 2020-11-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#112-2019-12-14","text":"[Refactor] use es-abstract [Deps] update functions-have-names [meta] add funding field [meta] fix repo capitalization [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking","title":"1.1.2 / 2019-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#111-2019-07-24","text":"[Refactor] use functions-have-names [meta] clean up package.json scripts [meta] update links [meta] create FUNDING.yml [Deps] update is-callable , define-properties [Dev Deps] update eslint , @ljharb/eslint-config , tape , safe-publish-latest , covert [Tests] use eccheck over editorconfig-tools [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] up to node v11.7 , v10.15 , v9.11 , v8.15 , v6.16 , v4.9 [Test] remove jscs","title":"1.1.1 / 2019-07-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#110-2017-12-31","text":"[New] add auto entry point [Deps] update function-bind [Dev Deps] update uglify-register , tape , nsp , eslint , @ljharb/eslint-config , @es-shims/api [Tests] up to node v9.3 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS","title":"1.1.0 / 2017-12-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#103-2017-07-21","text":"[Fix] be robust against function name mangling [Refactor] move function name detection to separate file","title":"1.0.3 / 2017-07-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#102-2017-07-14","text":"[Refactor] shim: Remove unnecessary !functionsHaveNames check","title":"1.0.2 / 2017-07-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#101-2017-07-11","text":"[Fix] in IE 9-11, we must rely on .call being available (#13) [Fix] ensure that Function.prototype.name does not erase the getter [Deps] update is-callable [Dev Deps] add safe-publish-latest [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , @es-shims/api [Tests] up to node v8.1 ; v7.10 , v6.11 , v4.8 ; improve matrix; newer npm fails on older nodes [Tests] use Object to avoid function name inference in node 7","title":"1.0.1 / 2017-07-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/function.prototype.name/CHANGELOG/#100-2016-02-27","text":"Initial release.","title":"1.0.0 / 2016-02-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/","text":"functions-have-names Does this JS environment support the name property on functions? Example var functionsHaveNames = require('functions-have-names'); var assert = require('assert'); assert.equal(functionsHaveNames(), true); // will be `false` in IE 6-8 Tests Simply clone the repo, npm install , and run npm test","title":"functions-have-names Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/#functions-have-names","text":"Does this JS environment support the name property on functions?","title":"functions-have-names"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/#example","text":"var functionsHaveNames = require('functions-have-names'); var assert = require('assert'); assert.equal(functionsHaveNames(), true); // will be `false` in IE 6-8","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.3 - 2022-04-19 Fixed [Fix] in IE 9-11, the descriptor is absent #11 #25 Commits [actions] reuse common workflows 4ed274a [actions] use node/install instead of node/run ; use codecov action 96dfcaa [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 9e674f8 [readme] add github actions/codecov badges; update URLs d913f5b [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape f61058f [actions] update codecov uploader 3348839 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape ee1a321 [Dev Deps] update eslint , @ljharb/eslint-config , tape b8dc1a2 [Dev Deps] update @ljharb/eslint-config , tape 0e825c4 [meta] use prepublishOnly script for npm 7+ 9489d66 v1.2.2 - 2020-12-14 Commits [Tests] migrate tests to Github Actions 39bf4fe [meta] do not publish github action workflow files 45ab0cb [readme] add docs, fix URLs fad3af6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 82df94a [Tests] run nyc on all tests; use tape runner 8038329 [actions] add automatic rebasing / merge commit blocking 49795eb [actions] add \"Allow Edits\" workflow 2096fe6 [actions] switch Automatic Rebase workflow to pull_request_target event ec1c6fe [Dev Deps] update auto-changelog ; add aud 79fdb23 [Tests] only audit prod deps d9ca245 [Dev Deps] update auto-changelog , tape ac026d4 [Dev Deps] update tape a8c5ee3 [Dev Deps] update @ljharb/eslint-config b25fafd v1.2.1 - 2020-01-19 Commits [Tests] use shared travis-ci configs 612823a [Fix] IE 8 has a broken Object.getOwnPropertyDescriptor ba01c22 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog ; add safe-publish-latest b28d9d2 [Dev Deps] update eslint , @ljharb/eslint-config , tape a62fbd6 [meta] add funding field 8734a94 v1.2.0 - 2019-10-20 Commits [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog 7e07444 [New] add boundFunctionsHaveNames() 05661be v1.1.1 - 2019-07-24 Commits [Tests] fix linting errors 0cb8017 [Tests] fix tests when name is not configurable 38a8aee [Fix] ensure function name mangling does not break detection f6926ab v1.1.0 - 2019-07-23 Commits [New] add functionsHaveConfigurableNames function on main export ce73f75 v1.0.0 - 2019-07-22 Commits [Tests] add travis.yml 06ed096 Initial commit ced60bd npm init 79088ab add tests c9e8e09 [Tests] add npm run lint 988b924 [meta] create FUNDING.yml 2e443ef [meta] add version scripts 52005e3 implementation b7b4942 Only apps should have lockfiles 81d2e04 [Tests] use npx aud baa92d8","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v123-2022-04-19","text":"","title":"v1.2.3 - 2022-04-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#fixed","text":"[Fix] in IE 9-11, the descriptor is absent #11 #25","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits","text":"[actions] reuse common workflows 4ed274a [actions] use node/install instead of node/run ; use codecov action 96dfcaa [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 9e674f8 [readme] add github actions/codecov badges; update URLs d913f5b [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape f61058f [actions] update codecov uploader 3348839 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape ee1a321 [Dev Deps] update eslint , @ljharb/eslint-config , tape b8dc1a2 [Dev Deps] update @ljharb/eslint-config , tape 0e825c4 [meta] use prepublishOnly script for npm 7+ 9489d66","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v122-2020-12-14","text":"","title":"v1.2.2 - 2020-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions 39bf4fe [meta] do not publish github action workflow files 45ab0cb [readme] add docs, fix URLs fad3af6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 82df94a [Tests] run nyc on all tests; use tape runner 8038329 [actions] add automatic rebasing / merge commit blocking 49795eb [actions] add \"Allow Edits\" workflow 2096fe6 [actions] switch Automatic Rebase workflow to pull_request_target event ec1c6fe [Dev Deps] update auto-changelog ; add aud 79fdb23 [Tests] only audit prod deps d9ca245 [Dev Deps] update auto-changelog , tape ac026d4 [Dev Deps] update tape a8c5ee3 [Dev Deps] update @ljharb/eslint-config b25fafd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v121-2020-01-19","text":"","title":"v1.2.1 - 2020-01-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits_2","text":"[Tests] use shared travis-ci configs 612823a [Fix] IE 8 has a broken Object.getOwnPropertyDescriptor ba01c22 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog ; add safe-publish-latest b28d9d2 [Dev Deps] update eslint , @ljharb/eslint-config , tape a62fbd6 [meta] add funding field 8734a94","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v120-2019-10-20","text":"","title":"v1.2.0 - 2019-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits_3","text":"[Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog 7e07444 [New] add boundFunctionsHaveNames() 05661be","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v111-2019-07-24","text":"","title":"v1.1.1 - 2019-07-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits_4","text":"[Tests] fix linting errors 0cb8017 [Tests] fix tests when name is not configurable 38a8aee [Fix] ensure function name mangling does not break detection f6926ab","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v110-2019-07-23","text":"","title":"v1.1.0 - 2019-07-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits_5","text":"[New] add functionsHaveConfigurableNames function on main export ce73f75","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#v100-2019-07-22","text":"","title":"v1.0.0 - 2019-07-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/functions-have-names/CHANGELOG/#commits_6","text":"[Tests] add travis.yml 06ed096 Initial commit ced60bd npm init 79088ab add tests c9e8e09 [Tests] add npm run lint 988b924 [meta] create FUNDING.yml 2e443ef [meta] add version scripts 52005e3 implementation b7b4942 Only apps should have lockfiles 81d2e04 [Tests] use npx aud baa92d8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/","text":"gensync This module allows for developers to write common code that can share implementation details, hiding whether an underlying request happens synchronously or asynchronously. This is in contrast with many current Node APIs which explicitly implement the same API twice, once with calls to synchronous functions, and once with asynchronous functions. Take for example fs.readFile and fs.readFileSync , if you're writing an API that loads a file and then performs a synchronous operation on the data, it can be frustrating to maintain two parallel functions. Example const fs = require(\"fs\"); const gensync = require(\"gensync\"); const readFile = gensync({ sync: fs.readFileSync, errback: fs.readFile, }); const myOperation = gensync(function* (filename) { const code = yield* readFile(filename, \"utf8\"); return \"// some custom prefix\\n\" + code; }); // Load and add the prefix synchronously: const result = myOperation.sync(\"./some-file.js\"); // Load and add the prefix asynchronously with promises: myOperation.async(\"./some-file.js\").then(result => { }); // Load and add the prefix asynchronously with promises: myOperation.errback(\"./some-file.js\", (err, result) => { }); This could even be exposed as your official API by doing // Using the common 'Sync' suffix for sync functions, and 'Async' suffix for // promise-returning versions. exports.myOperationSync = myOperation.sync; exports.myOperationAsync = myOperation.async; exports.myOperation = myOperation.errback; or potentially expose one of the async versions as the default, with a .sync property on the function to expose the synchronous version. module.exports = myOperation.errback; module.exports.sync = myOperation.sync; ```` ## API ### gensync(generatorFnOrOptions) Returns a function that can be \"await\"-ed in another `gensync` generator function, or executed via * `.sync(...args)` - Returns the computed value, or throws. * `.async(...args)` - Returns a promise for the computed value. * `.errback(...args, (err, result) => {})` - Calls the callback with the computed value, or error. #### Passed a generator Wraps the generator to populate the `.sync`/`.async`/`.errback` helpers above to allow for evaluation of the generator for the final value. ##### Example ```js const readFile = function* () { return 42; }; const readFileAndMore = gensync(function* (){ const val = yield* readFile(); return 42 + val; }); // In general cases const code = readFileAndMore.sync(\"./file.js\", \"utf8\"); readFileAndMore.async(\"./file.js\", \"utf8\").then(code => {}) readFileAndMore.errback(\"./file.js\", \"utf8\", (err, code) => {}); // In a generator being called indirectly with .sync/.async/.errback const code = yield* readFileAndMore(\"./file.js\", \"utf8\"); Passed an options object opts.sync Example: (...args) => 4 A function that will be called when .sync() is called on the gensync() result, or when the result is passed to yield* in another generator that is being run synchronously. Also called for .async() calls if no async handlers are provided. opts.async Example: async (...args) => 4 A function that will be called when .async() or .errback() is called on the gensync() result, or when the result is passed to yield* in another generator that is being run asynchronously. opts.errback Example: (...args, cb) => cb(null, 4) A function that will be called when .async() or .errback() is called on the gensync() result, or when the result is passed to yield* in another generator that is being run asynchronously. This option allows for simpler compatibility with many existing Node APIs, and also avoids introducing the extra even loop turns that promises introduce to access the result value. opts.name Example: \"readFile\" A string name to apply to the returned function. If no value is provided, the name of errback / async / sync functions will be used, with any Sync or Async suffix stripped off. If the callback is simply named with ES6 inference (same name as the options property), the name is ignored. opts.arity Example: 4 A number for the length to set on the returned function. If no value is provided, the length will be carried over from the sync function's length value. Example const readFile = gensync({ sync: fs.readFileSync, errback: fs.readFile, }); const code = readFile.sync(\"./file.js\", \"utf8\"); readFile.async(\"./file.js\", \"utf8\").then(code => {}) readFile.errback(\"./file.js\", \"utf8\", (err, code) => {}); gensync.all(iterable) Promise.all -like combinator that works with an iterable of generator objects that could be passed to yield* within a gensync generator. Example const loadFiles = gensync(function* () { return yield* gensync.all([ readFile(\"./one.js\"), readFile(\"./two.js\"), readFile(\"./three.js\"), ]); }); gensync.race(iterable) Promise.race -like combinator that works with an iterable of generator objects that could be passed to yield* within a gensync generator. Example const loadFiles = gensync(function* () { return yield* gensync.race([ readFile(\"./one.js\"), readFile(\"./two.js\"), readFile(\"./three.js\"), ]); });","title":"gensync"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#gensync","text":"This module allows for developers to write common code that can share implementation details, hiding whether an underlying request happens synchronously or asynchronously. This is in contrast with many current Node APIs which explicitly implement the same API twice, once with calls to synchronous functions, and once with asynchronous functions. Take for example fs.readFile and fs.readFileSync , if you're writing an API that loads a file and then performs a synchronous operation on the data, it can be frustrating to maintain two parallel functions.","title":"gensync"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#example","text":"const fs = require(\"fs\"); const gensync = require(\"gensync\"); const readFile = gensync({ sync: fs.readFileSync, errback: fs.readFile, }); const myOperation = gensync(function* (filename) { const code = yield* readFile(filename, \"utf8\"); return \"// some custom prefix\\n\" + code; }); // Load and add the prefix synchronously: const result = myOperation.sync(\"./some-file.js\"); // Load and add the prefix asynchronously with promises: myOperation.async(\"./some-file.js\").then(result => { }); // Load and add the prefix asynchronously with promises: myOperation.errback(\"./some-file.js\", (err, result) => { }); This could even be exposed as your official API by doing // Using the common 'Sync' suffix for sync functions, and 'Async' suffix for // promise-returning versions. exports.myOperationSync = myOperation.sync; exports.myOperationAsync = myOperation.async; exports.myOperation = myOperation.errback; or potentially expose one of the async versions as the default, with a .sync property on the function to expose the synchronous version. module.exports = myOperation.errback; module.exports.sync = myOperation.sync; ```` ## API ### gensync(generatorFnOrOptions) Returns a function that can be \"await\"-ed in another `gensync` generator function, or executed via * `.sync(...args)` - Returns the computed value, or throws. * `.async(...args)` - Returns a promise for the computed value. * `.errback(...args, (err, result) => {})` - Calls the callback with the computed value, or error. #### Passed a generator Wraps the generator to populate the `.sync`/`.async`/`.errback` helpers above to allow for evaluation of the generator for the final value. ##### Example ```js const readFile = function* () { return 42; }; const readFileAndMore = gensync(function* (){ const val = yield* readFile(); return 42 + val; }); // In general cases const code = readFileAndMore.sync(\"./file.js\", \"utf8\"); readFileAndMore.async(\"./file.js\", \"utf8\").then(code => {}) readFileAndMore.errback(\"./file.js\", \"utf8\", (err, code) => {}); // In a generator being called indirectly with .sync/.async/.errback const code = yield* readFileAndMore(\"./file.js\", \"utf8\");","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#passed-an-options-object","text":"opts.sync Example: (...args) => 4 A function that will be called when .sync() is called on the gensync() result, or when the result is passed to yield* in another generator that is being run synchronously. Also called for .async() calls if no async handlers are provided. opts.async Example: async (...args) => 4 A function that will be called when .async() or .errback() is called on the gensync() result, or when the result is passed to yield* in another generator that is being run asynchronously. opts.errback Example: (...args, cb) => cb(null, 4) A function that will be called when .async() or .errback() is called on the gensync() result, or when the result is passed to yield* in another generator that is being run asynchronously. This option allows for simpler compatibility with many existing Node APIs, and also avoids introducing the extra even loop turns that promises introduce to access the result value. opts.name Example: \"readFile\" A string name to apply to the returned function. If no value is provided, the name of errback / async / sync functions will be used, with any Sync or Async suffix stripped off. If the callback is simply named with ES6 inference (same name as the options property), the name is ignored. opts.arity Example: 4 A number for the length to set on the returned function. If no value is provided, the length will be carried over from the sync function's length value.","title":"Passed an options object"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#example_1","text":"const readFile = gensync({ sync: fs.readFileSync, errback: fs.readFile, }); const code = readFile.sync(\"./file.js\", \"utf8\"); readFile.async(\"./file.js\", \"utf8\").then(code => {}) readFile.errback(\"./file.js\", \"utf8\", (err, code) => {});","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#gensyncalliterable","text":"Promise.all -like combinator that works with an iterable of generator objects that could be passed to yield* within a gensync generator.","title":"gensync.all(iterable)"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#example_2","text":"const loadFiles = gensync(function* () { return yield* gensync.all([ readFile(\"./one.js\"), readFile(\"./two.js\"), readFile(\"./three.js\"), ]); });","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#gensyncraceiterable","text":"Promise.race -like combinator that works with an iterable of generator objects that could be passed to yield* within a gensync generator.","title":"gensync.race(iterable)"},{"location":"_Disciplina/Code/my-react-app/node_modules/gensync/#example_3","text":"const loadFiles = gensync(function* () { return yield* gensync.race([ readFile(\"./one.js\"), readFile(\"./two.js\"), readFile(\"./three.js\"), ]); });","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/","text":"get-intrinsic Get and robustly cache all JS language-level intrinsics at first require time. See the syntax described in the JS spec for reference. Example var GetIntrinsic = require('get-intrinsic'); var assert = require('assert'); // static methods assert.equal(GetIntrinsic('%Math.pow%'), Math.pow); assert.equal(Math.pow(2, 3), 8); assert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8); delete Math.pow; assert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8); // instance methods var arr = [1]; assert.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push); assert.deepEqual(arr, [1]); arr.push(2); assert.deepEqual(arr, [1, 2]); GetIntrinsic('%Array.prototype.push%').call(arr, 3); assert.deepEqual(arr, [1, 2, 3]); delete Array.prototype.push; GetIntrinsic('%Array.prototype.push%').call(arr, 4); assert.deepEqual(arr, [1, 2, 3, 4]); // missing features delete JSON.parse; // to simulate a real intrinsic that is missing in the environment assert.throws(() => GetIntrinsic('%JSON.parse%')); assert.equal(undefined, GetIntrinsic('%JSON.parse%', true)); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"get-intrinsic Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/#get-intrinsic","text":"Get and robustly cache all JS language-level intrinsics at first require time. See the syntax described in the JS spec for reference.","title":"get-intrinsic"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/#example","text":"var GetIntrinsic = require('get-intrinsic'); var assert = require('assert'); // static methods assert.equal(GetIntrinsic('%Math.pow%'), Math.pow); assert.equal(Math.pow(2, 3), 8); assert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8); delete Math.pow; assert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8); // instance methods var arr = [1]; assert.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push); assert.deepEqual(arr, [1]); arr.push(2); assert.deepEqual(arr, [1, 2]); GetIntrinsic('%Array.prototype.push%').call(arr, 3); assert.deepEqual(arr, [1, 2, 3]); delete Array.prototype.push; GetIntrinsic('%Array.prototype.push%').call(arr, 4); assert.deepEqual(arr, [1, 2, 3, 4]); // missing features delete JSON.parse; // to simulate a real intrinsic that is missing in the environment assert.throws(() => GetIntrinsic('%JSON.parse%')); assert.equal(undefined, GetIntrinsic('%JSON.parse%', true));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.4 - 2024-02-05 Commits [Refactor] use all 7 <+ ES6 Errors from es-errors bcac811 v1.2.3 - 2024-02-03 Commits [Refactor] use es-errors , so things that only need those do not need get-intrinsic f11db9c [Dev Deps] update aud , es-abstract , mock-property , npmignore b7ac7d1 [meta] simplify exports faa0cc6 [meta] add missing engines.node 774dd0b [Dev Deps] update tape 5828e8e [Robustness] use null objects for lookups eb9a11f [meta] add sideEffects flag 89bcc7a v1.2.2 - 2023-10-20 Commits [Dev Deps] update @ljharb/eslint-config , aud , call-bind , es-abstract , mock-property , object-inspect , tape f51bcf2 [Refactor] use hasown instead of has 18d14b7 [Deps] update function-bind 6e109c8 v1.2.1 - 2023-05-13 Commits [Fix] avoid a crash in envs without __proto__ 7bad8d0 [Dev Deps] update es-abstract c60e6b7 v1.2.0 - 2023-01-19 Commits [actions] update checkout action ca6b12f [Dev Deps] update @ljharb/eslint-config , es-abstract , object-inspect , tape 41a3727 [Fix] ensure Error.prototype is undeniable c511e97 [Dev Deps] update aud , es-abstract , tape 1bef8a8 [Dev Deps] update aud , es-abstract 0d41f16 [New] add BigInt64Array and BigUint64Array a6cca25 [Tests] use gopd ecf7722 v1.1.3 - 2022-09-12 Commits [Dev Deps] update es-abstract , es-value-fixtures , tape 07ff291 [Fix] properly check for % signs 50ac176 v1.1.2 - 2022-06-08 Fixed [Fix] properly validate against extra % signs #16 Commits [actions] reuse common workflows 0972547 [meta] use npmignore to autogenerate an npmignore file 5ba0b51 [actions] use node/install instead of node/run ; use codecov action c364492 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es-abstract , object-inspect , tape dc04dad [Dev Deps] update eslint , @ljharb/eslint-config , es-abstract , object-inspect , safe-publish-latest , tape 1c14059 [Tests] use mock-property b396ef0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c2c758d [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-abstract , es-value-fixtures , object-inspect , tape 29e3c09 [actions] update codecov uploader 8cbc141 [Dev Deps] update @ljharb/eslint-config , es-abstract , es-value-fixtures , object-inspect , tape 10b6f5c [readme] add github actions/codecov badges 4e25400 [Tests] use for-each instead of foreach c05b957 [Dev Deps] update es-abstract 29b05ae [meta] use prepublishOnly script for npm 7+ 95c285d [Deps] update has-symbols 593cb4f [readme] fix repo URLs 1c8305b [Deps] update has-symbols c7138b6 [Dev Deps] remove unused has-bigints bd63aff v1.1.1 - 2021-02-03 Fixed [meta] export ./package.json #9 Commits [readme] flesh out the readme; use evalmd d12f12c [eslint] set up proper globals config 5a8c098 [Dev Deps] update eslint 7b9a5c0 v1.1.0 - 2021-01-25 Fixed [Refactor] delay Function eval until syntax-derived values are requested #3 Commits [Tests] migrate tests to Github Actions 2ab762b [meta] do not publish github action workflow files 5e7108e [Tests] add some coverage 01ac7a8 [Dev Deps] update eslint , @ljharb/eslint-config , call-bind , es-abstract , tape ; add call-bind 911b672 [Refactor] rearrange evalled constructors a bit 7e7e4bf [meta] add Automatic Rebase and Require Allow Edits workflows 0199968 v1.0.2 - 2020-12-17 Commits [Fix] Throw for non\u2011existent intrinsics 68f873b [Fix] Throw for non\u2011existent segments in the intrinsic path 8325dee [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-bigints , object-inspect 0c227a7 [meta] do not lint coverage output 70d2419 v1.0.1 - 2020-10-30 Commits [Tests] gather coverage data on every job d1d280d [Fix] add missing dependencies 5031771 [Tests] use es-value-fixtures af48765 v1.0.0 - 2020-10-29 Commits Implementation bbce57c Tests 17b4f0d Initial commit 3153294 npm init fb326c4 [meta] add Automatic Rebase and Require Allow Edits workflows 48862fb [meta] add auto-changelog 5f28ad0 [meta] add \"funding\"; create FUNDING.yml c2bbdde [Tests] add npm run lint 0a84b98 Only apps should have lockfiles 9586c75","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v124-2024-02-05","text":"","title":"v1.2.4 - 2024-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits","text":"[Refactor] use all 7 <+ ES6 Errors from es-errors bcac811","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v123-2024-02-03","text":"","title":"v1.2.3 - 2024-02-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_1","text":"[Refactor] use es-errors , so things that only need those do not need get-intrinsic f11db9c [Dev Deps] update aud , es-abstract , mock-property , npmignore b7ac7d1 [meta] simplify exports faa0cc6 [meta] add missing engines.node 774dd0b [Dev Deps] update tape 5828e8e [Robustness] use null objects for lookups eb9a11f [meta] add sideEffects flag 89bcc7a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v122-2023-10-20","text":"","title":"v1.2.2 - 2023-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_2","text":"[Dev Deps] update @ljharb/eslint-config , aud , call-bind , es-abstract , mock-property , object-inspect , tape f51bcf2 [Refactor] use hasown instead of has 18d14b7 [Deps] update function-bind 6e109c8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v121-2023-05-13","text":"","title":"v1.2.1 - 2023-05-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_3","text":"[Fix] avoid a crash in envs without __proto__ 7bad8d0 [Dev Deps] update es-abstract c60e6b7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v120-2023-01-19","text":"","title":"v1.2.0 - 2023-01-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_4","text":"[actions] update checkout action ca6b12f [Dev Deps] update @ljharb/eslint-config , es-abstract , object-inspect , tape 41a3727 [Fix] ensure Error.prototype is undeniable c511e97 [Dev Deps] update aud , es-abstract , tape 1bef8a8 [Dev Deps] update aud , es-abstract 0d41f16 [New] add BigInt64Array and BigUint64Array a6cca25 [Tests] use gopd ecf7722","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v113-2022-09-12","text":"","title":"v1.1.3 - 2022-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_5","text":"[Dev Deps] update es-abstract , es-value-fixtures , tape 07ff291 [Fix] properly check for % signs 50ac176","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v112-2022-06-08","text":"","title":"v1.1.2 - 2022-06-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#fixed","text":"[Fix] properly validate against extra % signs #16","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_6","text":"[actions] reuse common workflows 0972547 [meta] use npmignore to autogenerate an npmignore file 5ba0b51 [actions] use node/install instead of node/run ; use codecov action c364492 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es-abstract , object-inspect , tape dc04dad [Dev Deps] update eslint , @ljharb/eslint-config , es-abstract , object-inspect , safe-publish-latest , tape 1c14059 [Tests] use mock-property b396ef0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c2c758d [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-abstract , es-value-fixtures , object-inspect , tape 29e3c09 [actions] update codecov uploader 8cbc141 [Dev Deps] update @ljharb/eslint-config , es-abstract , es-value-fixtures , object-inspect , tape 10b6f5c [readme] add github actions/codecov badges 4e25400 [Tests] use for-each instead of foreach c05b957 [Dev Deps] update es-abstract 29b05ae [meta] use prepublishOnly script for npm 7+ 95c285d [Deps] update has-symbols 593cb4f [readme] fix repo URLs 1c8305b [Deps] update has-symbols c7138b6 [Dev Deps] remove unused has-bigints bd63aff","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v111-2021-02-03","text":"","title":"v1.1.1 - 2021-02-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#fixed_1","text":"[meta] export ./package.json #9","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_7","text":"[readme] flesh out the readme; use evalmd d12f12c [eslint] set up proper globals config 5a8c098 [Dev Deps] update eslint 7b9a5c0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v110-2021-01-25","text":"","title":"v1.1.0 - 2021-01-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#fixed_2","text":"[Refactor] delay Function eval until syntax-derived values are requested #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_8","text":"[Tests] migrate tests to Github Actions 2ab762b [meta] do not publish github action workflow files 5e7108e [Tests] add some coverage 01ac7a8 [Dev Deps] update eslint , @ljharb/eslint-config , call-bind , es-abstract , tape ; add call-bind 911b672 [Refactor] rearrange evalled constructors a bit 7e7e4bf [meta] add Automatic Rebase and Require Allow Edits workflows 0199968","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v102-2020-12-17","text":"","title":"v1.0.2 - 2020-12-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_9","text":"[Fix] Throw for non\u2011existent intrinsics 68f873b [Fix] Throw for non\u2011existent segments in the intrinsic path 8325dee [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-bigints , object-inspect 0c227a7 [meta] do not lint coverage output 70d2419","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v101-2020-10-30","text":"","title":"v1.0.1 - 2020-10-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_10","text":"[Tests] gather coverage data on every job d1d280d [Fix] add missing dependencies 5031771 [Tests] use es-value-fixtures af48765","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#v100-2020-10-29","text":"","title":"v1.0.0 - 2020-10-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-intrinsic/CHANGELOG/#commits_11","text":"Implementation bbce57c Tests 17b4f0d Initial commit 3153294 npm init fb326c4 [meta] add Automatic Rebase and Require Allow Edits workflows 48862fb [meta] add auto-changelog 5f28ad0 [meta] add \"funding\"; create FUNDING.yml c2bbdde [Tests] add npm run lint 0a84b98 Only apps should have lockfiles 9586c75","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/","text":"get-symbol-description Gets the description of a Symbol. Handles Symbol() vs Symbol('') properly when possible. Example var getSymbolDescription = require('get-symbol-description'); var assert = require('assert'); assert(getSymbolDescription(Symbol()) === undefined); assert(getSymbolDescription(Symbol('')) === ''); // or `undefined`, if in an engine that lacks name inference from concise method assert(getSymbolDescription(Symbol('foo')) === 'foo'); assert(getSymbolDescription(Symbol.iterator) === 'Symbol.iterator'); Tests Simply clone the repo, npm install , and run npm test","title":"get-symbol-description Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/#get-symbol-description","text":"Gets the description of a Symbol. Handles Symbol() vs Symbol('') properly when possible.","title":"get-symbol-description"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/#example","text":"var getSymbolDescription = require('get-symbol-description'); var assert = require('assert'); assert(getSymbolDescription(Symbol()) === undefined); assert(getSymbolDescription(Symbol('')) === ''); // or `undefined`, if in an engine that lacks name inference from concise method assert(getSymbolDescription(Symbol('foo')) === 'foo'); assert(getSymbolDescription(Symbol.iterator) === 'Symbol.iterator');","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-02-07 Fixed [Deps] add missing get-intrinsic #3 v1.0.1 - 2024-02-05 Commits [actions] reuse common workflows 168adf2 [meta] use npmignore to autogenerate an npmignore file fa3b323 [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-value-fixtures , foreach , object-inspect , tape 9301b9e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape a92a011 [actions] update rebase action to use reusable workflow 66cea29 [actions] update codecov uploader 84079e1 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 9f298a5 [Dev Deps] use hasown instead of has e993bd6 [Dev Deps] update aud , npmignore , tape 5044bed [Dev Deps] update @ljharb/eslint-config , aud , tape 3923eab [Refactor] use es-errors , so things that only need those do not need get-intrinsic a24f5c5 [Deps] update call-bind , get-intrinsic accd484 [Dev Deps] update object-inspect , tape 6c66623 [Dev Deps] update object-inspect , tape 586dfe3 [Dev Deps] update @ljharb/eslint-config , aud bc8c7e0 [Tests] use for-each instead of foreach ca97918 [Robustness] cache String slice 5ce0c56 [Deps] update get-intrinsic b656c5c [Deps] update get-intrinsic 74cf3b6 [meta] fix FUNDING.yml 6cf76c8 v1.0.0 - 2021-08-17 Commits Initial commit: pulled from es-abstract 6e34a05 Initial commit 3862092 [meta] do not publish github action workflow files 9d1e2b9 npm init 5051b32 Only apps should have lockfiles b866d1c","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#v102-2024-02-07","text":"","title":"v1.0.2 - 2024-02-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#fixed","text":"[Deps] add missing get-intrinsic #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#v101-2024-02-05","text":"","title":"v1.0.1 - 2024-02-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#commits","text":"[actions] reuse common workflows 168adf2 [meta] use npmignore to autogenerate an npmignore file fa3b323 [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-value-fixtures , foreach , object-inspect , tape 9301b9e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape a92a011 [actions] update rebase action to use reusable workflow 66cea29 [actions] update codecov uploader 84079e1 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 9f298a5 [Dev Deps] use hasown instead of has e993bd6 [Dev Deps] update aud , npmignore , tape 5044bed [Dev Deps] update @ljharb/eslint-config , aud , tape 3923eab [Refactor] use es-errors , so things that only need those do not need get-intrinsic a24f5c5 [Deps] update call-bind , get-intrinsic accd484 [Dev Deps] update object-inspect , tape 6c66623 [Dev Deps] update object-inspect , tape 586dfe3 [Dev Deps] update @ljharb/eslint-config , aud bc8c7e0 [Tests] use for-each instead of foreach ca97918 [Robustness] cache String slice 5ce0c56 [Deps] update get-intrinsic b656c5c [Deps] update get-intrinsic 74cf3b6 [meta] fix FUNDING.yml 6cf76c8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#v100-2021-08-17","text":"","title":"v1.0.0 - 2021-08-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/get-symbol-description/CHANGELOG/#commits_1","text":"Initial commit: pulled from es-abstract 6e34a05 Initial commit 3862092 [meta] do not publish github action workflow files 9d1e2b9 npm init 5051b32 Only apps should have lockfiles b866d1c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/","text":"glob-parent Extract the non-magic parent path from a glob string. Usage var globParent = require('glob-parent'); globParent('path/to/*.js'); // 'path/to' globParent('/root/path/to/*.js'); // '/root/path/to' globParent('/*.js'); // '/' globParent('*.js'); // '.' globParent('**/*.js'); // '.' globParent('path/{to,from}'); // 'path' globParent('path/!(to|from)'); // 'path' globParent('path/?(to|from)'); // 'path' globParent('path/+(to|from)'); // 'path' globParent('path/*(to|from)'); // 'path' globParent('path/@(to|from)'); // 'path' globParent('path/**/*'); // 'path' // if provided a non-glob path, returns the nearest dir globParent('path/foo/bar.js'); // 'path/foo' globParent('path/foo/'); // 'path/foo' globParent('path/foo'); // 'path' (see issue #3 for details) API globParent(maybeGlobString, [options]) Takes a string and returns the part of the path before the glob begins. Be aware of Escaping rules and Limitations below. options { // Disables the automatic conversion of slashes for Windows flipBackslashes: true; } Escaping The following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters: ? (question mark) unless used as a path segment alone * (asterisk) | (pipe) ( (opening parenthesis) ) (closing parenthesis) { (opening curly brace) } (closing curly brace) [ (opening bracket) ] (closing bracket) Example globParent('foo/[bar]/'); // 'foo' globParent('foo/\\\\[bar]/'); // 'foo/[bar]' Limitations Braces & Brackets This library attempts a quick and imperfect method of determining which path parts have glob magic without fully parsing/lexing the pattern. There are some advanced use cases that can trip it up, such as nested braces where the outer pair is escaped and the inner one contains a path separator. If you find yourself in the unlikely circumstance of being affected by this or need to ensure higher-fidelity glob handling in your library, it is recommended that you pre-process your input with expand-braces and/or expand-brackets . Windows Backslashes are not valid path separators for globs. If a path with backslashes is provided anyway, for simple cases, glob-parent will replace the path separator for you and return the non-glob parent path (now with forward-slashes, which are still valid as Windows path separators). This cannot be used in conjunction with escape characters. // BAD globParent('C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext'); // 'C:/Program Files /(x86/)' // GOOD globParent('C:/Program Files\\\\(x86\\\\)/*.ext'); // 'C:/Program Files (x86)' If you are using escape characters for a pattern without path parts (i.e. relative to cwd ), prefix with ./ to avoid confusing glob-parent. // BAD globParent('foo \\\\[bar]'); // 'foo ' globParent('foo \\\\[bar]*'); // 'foo ' // GOOD globParent('./foo \\\\[bar]'); // 'foo [bar]' globParent('./foo \\\\[bar]*'); // '.' License ISC","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#glob-parent","text":"Extract the non-magic parent path from a glob string.","title":"glob-parent"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#usage","text":"var globParent = require('glob-parent'); globParent('path/to/*.js'); // 'path/to' globParent('/root/path/to/*.js'); // '/root/path/to' globParent('/*.js'); // '/' globParent('*.js'); // '.' globParent('**/*.js'); // '.' globParent('path/{to,from}'); // 'path' globParent('path/!(to|from)'); // 'path' globParent('path/?(to|from)'); // 'path' globParent('path/+(to|from)'); // 'path' globParent('path/*(to|from)'); // 'path' globParent('path/@(to|from)'); // 'path' globParent('path/**/*'); // 'path' // if provided a non-glob path, returns the nearest dir globParent('path/foo/bar.js'); // 'path/foo' globParent('path/foo/'); // 'path/foo' globParent('path/foo'); // 'path' (see issue #3 for details)","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#globparentmaybeglobstring-options","text":"Takes a string and returns the part of the path before the glob begins. Be aware of Escaping rules and Limitations below.","title":"globParent(maybeGlobString, [options])"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#options","text":"{ // Disables the automatic conversion of slashes for Windows flipBackslashes: true; }","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#escaping","text":"The following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters: ? (question mark) unless used as a path segment alone * (asterisk) | (pipe) ( (opening parenthesis) ) (closing parenthesis) { (opening curly brace) } (closing curly brace) [ (opening bracket) ] (closing bracket) Example globParent('foo/[bar]/'); // 'foo' globParent('foo/\\\\[bar]/'); // 'foo/[bar]'","title":"Escaping"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#limitations","text":"","title":"Limitations"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#braces-brackets","text":"This library attempts a quick and imperfect method of determining which path parts have glob magic without fully parsing/lexing the pattern. There are some advanced use cases that can trip it up, such as nested braces where the outer pair is escaped and the inner one contains a path separator. If you find yourself in the unlikely circumstance of being affected by this or need to ensure higher-fidelity glob handling in your library, it is recommended that you pre-process your input with expand-braces and/or expand-brackets .","title":"Braces &amp; Brackets"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#windows","text":"Backslashes are not valid path separators for globs. If a path with backslashes is provided anyway, for simple cases, glob-parent will replace the path separator for you and return the non-glob parent path (now with forward-slashes, which are still valid as Windows path separators). This cannot be used in conjunction with escape characters. // BAD globParent('C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext'); // 'C:/Program Files /(x86/)' // GOOD globParent('C:/Program Files\\\\(x86\\\\)/*.ext'); // 'C:/Program Files (x86)' If you are using escape characters for a pattern without path parts (i.e. relative to cwd ), prefix with ./ to avoid confusing glob-parent. // BAD globParent('foo \\\\[bar]'); // 'foo ' globParent('foo \\\\[bar]*'); // 'foo ' // GOOD globParent('./foo \\\\[bar]'); // 'foo [bar]' globParent('./foo \\\\[bar]*'); // '.'","title":"Windows"},{"location":"_Disciplina/Code/my-react-app/node_modules/glob-parent/#license","text":"ISC","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/globals/readme/","text":"globals Global identifiers from different JavaScript environments It's just a JSON file , so you can use it in any environment. This package is used by ESLint 8 and earlier. For ESLint 9 and later, you should depend on this package directly in your ESLint config . Install npm install globals Usage import globals from 'globals'; console.log(globals.browser); /* { addEventListener: false, applicationCache: false, ArrayBuffer: false, atob: false, \u2026 } */ Each global is given a value of true or false . A value of true indicates that the variable may be overwritten. A value of false indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be false unless we hear otherwise. For Node.js this package provides two sets of globals: globals.nodeBuiltin : Globals available to all code running in Node.js. These will usually be available as properties on the globalThis object and include process , Buffer , but not CommonJS arguments like require . See: https://nodejs.org/api/globals.html globals.node : A combination of the globals from nodeBuiltin plus all CommonJS arguments (\"CommonJS module scope\"). See: https://nodejs.org/api/modules.html#modules_the_module_scope When analyzing code that is known to run outside of a CommonJS wrapper, for example, JavaScript modules, nodeBuiltin can find accidental CommonJS references.","title":"globals"},{"location":"_Disciplina/Code/my-react-app/node_modules/globals/readme/#globals","text":"Global identifiers from different JavaScript environments It's just a JSON file , so you can use it in any environment. This package is used by ESLint 8 and earlier. For ESLint 9 and later, you should depend on this package directly in your ESLint config .","title":"globals"},{"location":"_Disciplina/Code/my-react-app/node_modules/globals/readme/#install","text":"npm install globals","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/globals/readme/#usage","text":"import globals from 'globals'; console.log(globals.browser); /* { addEventListener: false, applicationCache: false, ArrayBuffer: false, atob: false, \u2026 } */ Each global is given a value of true or false . A value of true indicates that the variable may be overwritten. A value of false indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be false unless we hear otherwise. For Node.js this package provides two sets of globals: globals.nodeBuiltin : Globals available to all code running in Node.js. These will usually be available as properties on the globalThis object and include process , Buffer , but not CommonJS arguments like require . See: https://nodejs.org/api/globals.html globals.node : A combination of the globals from nodeBuiltin plus all CommonJS arguments (\"CommonJS module scope\"). See: https://nodejs.org/api/modules.html#modules_the_module_scope When analyzing code that is known to run outside of a CommonJS wrapper, for example, JavaScript modules, nodeBuiltin can find accidental CommonJS references.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/","text":"globalThis An ECMAScript spec-compliant polyfill/shim for globalThis . Invoke its \"shim\" method to shim globalThis if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec proposal . Most common usage: var globalThis = require('globalthis')(); // returns native globalThis if compliant /* or */ var globalThis = require('globalthis/polyfill')(); // returns native globalThis if compliant Example var assert = require('assert'); // the below function is not CSP-compliant, but reliably gets the // global object in sloppy mode in every engine. var getGlobal = Function('return this'); assert.equal(globalThis, getGlobal()); /* when `globalThis` is not present */ var shimmedGlobal = require('globalthis').shim(); /* or */ var shimmedGlobal = require('globalthis/shim')(); assert.equal(shimmedGlobal, globalThis); assert.equal(shimmedGlobal, getGlobal()); /* when `globalThis` is present */ var shimmedGlobal = require('globalthis').shim(); assert.equal(shimmedGlobal, globalThis); assert.equal(shimmedGlobal, getGlobal()); Tests Simply clone the repo, npm install , and run npm test","title":"globalThis Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/#globalthis","text":"An ECMAScript spec-compliant polyfill/shim for globalThis . Invoke its \"shim\" method to shim globalThis if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec proposal . Most common usage: var globalThis = require('globalthis')(); // returns native globalThis if compliant /* or */ var globalThis = require('globalthis/polyfill')(); // returns native globalThis if compliant","title":"globalThis"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/#example","text":"var assert = require('assert'); // the below function is not CSP-compliant, but reliably gets the // global object in sloppy mode in every engine. var getGlobal = Function('return this'); assert.equal(globalThis, getGlobal()); /* when `globalThis` is not present */ var shimmedGlobal = require('globalthis').shim(); /* or */ var shimmedGlobal = require('globalthis/shim')(); assert.equal(shimmedGlobal, globalThis); assert.equal(shimmedGlobal, getGlobal()); /* when `globalThis` is present */ var shimmedGlobal = require('globalthis').shim(); assert.equal(shimmedGlobal, globalThis); assert.equal(shimmedGlobal, getGlobal());","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.4 - 2024-04-29 Commits [actions] remove redundant finisher 280d796 [Refactor] use gopd 0209ccb [actions] update rebase action to use reusable workflow c08aea6 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape f38f2af [Dev Deps] update aud , tape a1be102 [Deps] update define-properties 3e41644 [Deps] update define-properties 3d81f70 [Dev Deps] add missing npmignore dep c2d00f7 v1.0.3 - 2022-05-07 Commits [actions] reuse common workflows 65891e4 [actions] use node/install instead of node/run ; use codecov action 82f8481 [meta] use npmignore to autogenerate an npmignore file 53afc39 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 03169d4 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 4986e3e [actions] update codecov uploader 15c4b06 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , tape 8b04a74 [Fix] globalThis should be writable 8759985 [readme] add github actions/codecov badges 0263f0d [Dev Deps] update aud , eslint , tape e88d296 [meta] use prepublishOnly script for npm 7+ c81fde6 [Tests] nycignore dist bde0c0d [meta] gitignore coverage output 79f73f8 v1.0.2 - 2021-02-22 Commits [Tests] migrate tests to Github Actions a3f50f7 [meta] do not publish github action workflow files eb5c787 [Tests] add implementation est; run es-shim-api in postlint; use tape runner c9dd792 [Tests] fix native tests 6b76dff [Tests] run nyc on all tests 0407f79 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape , browserify b8cc020 [actions] add \"Allow Edits\" workflow e2854df [readme] remove travis badge 262eb76 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog ; add safe-publish-latest 3c76883 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 7276123 [actions] update workflows bcb0f42 [Dev Deps] update eslint , @ljharb/eslint-config , tape 5485851 [Dev Deps] update auto-changelog , tape 6a01da3 [Dev Deps] update @ljharb/eslint-config , tape 7a07f4e [meta] only run the build script in publish 797e492 [meta] combine duplicate prepublish scripts 92bbef0 [Dev Deps] update auto-changelog ; add aud be6dbec [actions] switch Automatic Rebase workflow to pull_request_target event bfd54f8 [Tests] only audit prod deps 0f64b47 v1.0.1 - 2019-12-15 Fixed [Refactor] only use global in node; only check browser globals in browsers #2 Commits [Tests] use shared travis-ci configs edb1cc9 [Tests] remove jscs 1847ac2 [meta] add auto-changelog 933c381 [Dev Deps] update eslint , @ljharb/eslint-config , browserify , tape 93310bc [actions] add automatic rebasing / merge commit blocking 231dec5 [Dev Deps] update eslint , @ljharb/eslint-config , browserify , covert , is , tape e50c1f6 [Tests] use npx aud instead of nsp or npm audit with hoops 4abd340 [meta] add funding field 2d1f9eb [meta] remove unused deps 5bd6bef readme: Fix casing + phrasing 66379cc [Deps] update define-properties , object-keys 4585e5a fix issue with Webpack's CaseSensitivePathsPlugin 842e84e v1.0.0 - 2018-08-10 Commits Dotfiles. f01b02d [Tests] up to node v10.7 , v9.11 , v8.11 , v7.10 , v6.14 , v4.9 ; use nvm install-latest-npm ; improve matrix ed1fa5d Tests ab99527 [breaking] update property name, rename repo be42e3d package.json ca43a36 implementation 80b5a40 read me f6df9b3 Rename System.global to global fa8503c Initial commit 99f1dc3 [Tests] up to node v6.7 , v5.12 , v4.6 ; improve test matrix 712ec0e [Dev Deps] update browserify , tape , jscs , nsp , eslint , @ljharb/eslint-config 73278bd [Dev Deps] update @es-shims/api , @ljharb/eslint-config , browserify , eslint , for-each , is , nsp , tape 75fa992 [Dev Deps] update browserify , is , tape , nsp , eslint b223e86 [Tests] fix linting; remove parallelshell 271b329 [Deps] update function-bind , object-keys 002d0c5 Only apps should have lockfiles 960f1d0 [Tests] on node v10.8 37fad9d [Dev Deps] update eslint , @ljharb/eslint-config df28dfe [New] add auto entry point 86eb2ab [Dev Deps] update eslint 1bdc1aa [Deps] update object-keys 72cdbf5 Update most common usage to invoke the function upon being required 5026296","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#v104-2024-04-29","text":"","title":"v1.0.4 - 2024-04-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#commits","text":"[actions] remove redundant finisher 280d796 [Refactor] use gopd 0209ccb [actions] update rebase action to use reusable workflow c08aea6 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape f38f2af [Dev Deps] update aud , tape a1be102 [Deps] update define-properties 3e41644 [Deps] update define-properties 3d81f70 [Dev Deps] add missing npmignore dep c2d00f7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#v103-2022-05-07","text":"","title":"v1.0.3 - 2022-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#commits_1","text":"[actions] reuse common workflows 65891e4 [actions] use node/install instead of node/run ; use codecov action 82f8481 [meta] use npmignore to autogenerate an npmignore file 53afc39 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 03169d4 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 4986e3e [actions] update codecov uploader 15c4b06 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , tape 8b04a74 [Fix] globalThis should be writable 8759985 [readme] add github actions/codecov badges 0263f0d [Dev Deps] update aud , eslint , tape e88d296 [meta] use prepublishOnly script for npm 7+ c81fde6 [Tests] nycignore dist bde0c0d [meta] gitignore coverage output 79f73f8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#v102-2021-02-22","text":"","title":"v1.0.2 - 2021-02-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions a3f50f7 [meta] do not publish github action workflow files eb5c787 [Tests] add implementation est; run es-shim-api in postlint; use tape runner c9dd792 [Tests] fix native tests 6b76dff [Tests] run nyc on all tests 0407f79 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape , browserify b8cc020 [actions] add \"Allow Edits\" workflow e2854df [readme] remove travis badge 262eb76 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog ; add safe-publish-latest 3c76883 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 7276123 [actions] update workflows bcb0f42 [Dev Deps] update eslint , @ljharb/eslint-config , tape 5485851 [Dev Deps] update auto-changelog , tape 6a01da3 [Dev Deps] update @ljharb/eslint-config , tape 7a07f4e [meta] only run the build script in publish 797e492 [meta] combine duplicate prepublish scripts 92bbef0 [Dev Deps] update auto-changelog ; add aud be6dbec [actions] switch Automatic Rebase workflow to pull_request_target event bfd54f8 [Tests] only audit prod deps 0f64b47","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#v101-2019-12-15","text":"","title":"v1.0.1 - 2019-12-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#fixed","text":"[Refactor] only use global in node; only check browser globals in browsers #2","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#commits_3","text":"[Tests] use shared travis-ci configs edb1cc9 [Tests] remove jscs 1847ac2 [meta] add auto-changelog 933c381 [Dev Deps] update eslint , @ljharb/eslint-config , browserify , tape 93310bc [actions] add automatic rebasing / merge commit blocking 231dec5 [Dev Deps] update eslint , @ljharb/eslint-config , browserify , covert , is , tape e50c1f6 [Tests] use npx aud instead of nsp or npm audit with hoops 4abd340 [meta] add funding field 2d1f9eb [meta] remove unused deps 5bd6bef readme: Fix casing + phrasing 66379cc [Deps] update define-properties , object-keys 4585e5a fix issue with Webpack's CaseSensitivePathsPlugin 842e84e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#v100-2018-08-10","text":"","title":"v1.0.0 - 2018-08-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/globalthis/CHANGELOG/#commits_4","text":"Dotfiles. f01b02d [Tests] up to node v10.7 , v9.11 , v8.11 , v7.10 , v6.14 , v4.9 ; use nvm install-latest-npm ; improve matrix ed1fa5d Tests ab99527 [breaking] update property name, rename repo be42e3d package.json ca43a36 implementation 80b5a40 read me f6df9b3 Rename System.global to global fa8503c Initial commit 99f1dc3 [Tests] up to node v6.7 , v5.12 , v4.6 ; improve test matrix 712ec0e [Dev Deps] update browserify , tape , jscs , nsp , eslint , @ljharb/eslint-config 73278bd [Dev Deps] update @es-shims/api , @ljharb/eslint-config , browserify , eslint , for-each , is , nsp , tape 75fa992 [Dev Deps] update browserify , is , tape , nsp , eslint b223e86 [Tests] fix linting; remove parallelshell 271b329 [Deps] update function-bind , object-keys 002d0c5 Only apps should have lockfiles 960f1d0 [Tests] on node v10.8 37fad9d [Dev Deps] update eslint , @ljharb/eslint-config df28dfe [New] add auto entry point 86eb2ab [Dev Deps] update eslint 1bdc1aa [Deps] update object-keys 72cdbf5 Update most common usage to invoke the function upon being required 5026296","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/","text":"gopd Object.getOwnPropertyDescriptor , but accounts for IE's broken implementation. Usage var gOPD = require('gopd'); var assert = require('assert'); if (gOPD) { assert.equal(typeof gOPD, 'function', 'descriptors supported'); // use gOPD like Object.getOwnPropertyDescriptor here } else { assert.ok(!gOPD, 'descriptors not supported'); }","title":"gopd Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/#gopd","text":"Object.getOwnPropertyDescriptor , but accounts for IE's broken implementation.","title":"gopd"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/#usage","text":"var gOPD = require('gopd'); var assert = require('assert'); if (gOPD) { assert.equal(typeof gOPD, 'function', 'descriptors supported'); // use gOPD like Object.getOwnPropertyDescriptor here } else { assert.ok(!gOPD, 'descriptors not supported'); }","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2022-11-01 Commits [Fix] actually export gOPD instead of dP 4b624bf v1.0.0 - 2022-11-01 Commits Initial implementation, tests, readme 0911e01 Initial commit b84e33f [actions] add reusable workflows 12ae28a npm init 280118b [meta] add auto-changelog bb78de5 [meta] create FUNDING.yml; add funding in package.json 11c22e6 [meta] use npmignore to autogenerate an npmignore file 4f4537a Only apps should have lockfiles c567022","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/CHANGELOG/#v101-2022-11-01","text":"","title":"v1.0.1 - 2022-11-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/CHANGELOG/#commits","text":"[Fix] actually export gOPD instead of dP 4b624bf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/CHANGELOG/#v100-2022-11-01","text":"","title":"v1.0.0 - 2022-11-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/gopd/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme 0911e01 Initial commit b84e33f [actions] add reusable workflows 12ae28a npm init 280118b [meta] add auto-changelog bb78de5 [meta] create FUNDING.yml; add funding in package.json 11c22e6 [meta] use npmignore to autogenerate an npmignore file 4f4537a Only apps should have lockfiles c567022","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/","text":"has-bigints Determine if the JS environment has BigInt support. Example var hasBigInts = require('has-bigints'); hasBigInts() === true; // if the environment has native BigInt support. Not polyfillable, not forgeable. Tests Simply clone the repo, npm install , and run npm test","title":"has-bigints Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/#has-bigints","text":"Determine if the JS environment has BigInt support.","title":"has-bigints"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/#example","text":"var hasBigInts = require('has-bigints'); hasBigInts() === true; // if the environment has native BigInt support. Not polyfillable, not forgeable.","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2022-04-19 Commits [actions] reuse common workflows a655b7f [actions] use node/install instead of node/run ; use codecov action 730a2e5 [readme] add github actions/codecov badges; update URLs 9a83788 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape b1edc52 [actions] update codecov uploader cbb1bd0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 8717e6d [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , safe-publish-latest , tape 5f70eab [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape a1446bc [meta] use prepublishOnly script for npm 7+ f2dd197 [actions] use checkout v3 1ba72f1 [Refactor] use a global variable to get the original BigInt instead of a global property a7ccfac [actions] skip npm ls on older nodes 62d31e7 v1.0.1 - 2020-12-13 Commits [Tests] use shared travis-ci configs 46a0d6b [Tests] migrate tests to Github Actions 91a38fa [meta] do not publish github action workflow files 69aacba [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 64e2c08 [Tests] run nyc on all tests; use tape runner 8009375 [actions] add automatic rebasing / merge commit blocking e599917 [actions] add \"Allow Edits\" workflow bd0126e [readme] remove travis badge 8e02a73 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , safe-publish-latest 95859f2 [Dev Deps] update auto-changelog , in-publish , tape 0588f41 [Dev Deps] update eslint , @ljharb/eslint-config , tape 5b024a6 [meta] add version scripts 4788d61 [actions] switch Automatic Rebase workflow to pull_request_target event be0e0de [Dev Deps] update auto-changelog ; add aud 13a8d1b [actions] fix action name f873d9a [meta] add funding field 1b51f49 [Dev Deps] update auto-changelog 2322461 [Tests] only audit prod deps aabdade v1.0.0 - 2019-08-10 Commits [Tests] add .travis.yml 9730412 Initial commit 65f7c38 [Tests] add tests e374a78 readme 5d39092 npm init 1be2e3d implementation b7bc812 [Tests] add linting 04533be [meta] create FUNDING.yml cf824a7 Only apps should have lockfiles 64e8242","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#v102-2022-04-19","text":"","title":"v1.0.2 - 2022-04-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#commits","text":"[actions] reuse common workflows a655b7f [actions] use node/install instead of node/run ; use codecov action 730a2e5 [readme] add github actions/codecov badges; update URLs 9a83788 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape b1edc52 [actions] update codecov uploader cbb1bd0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 8717e6d [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , safe-publish-latest , tape 5f70eab [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape a1446bc [meta] use prepublishOnly script for npm 7+ f2dd197 [actions] use checkout v3 1ba72f1 [Refactor] use a global variable to get the original BigInt instead of a global property a7ccfac [actions] skip npm ls on older nodes 62d31e7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#v101-2020-12-13","text":"","title":"v1.0.1 - 2020-12-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#commits_1","text":"[Tests] use shared travis-ci configs 46a0d6b [Tests] migrate tests to Github Actions 91a38fa [meta] do not publish github action workflow files 69aacba [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 64e2c08 [Tests] run nyc on all tests; use tape runner 8009375 [actions] add automatic rebasing / merge commit blocking e599917 [actions] add \"Allow Edits\" workflow bd0126e [readme] remove travis badge 8e02a73 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , safe-publish-latest 95859f2 [Dev Deps] update auto-changelog , in-publish , tape 0588f41 [Dev Deps] update eslint , @ljharb/eslint-config , tape 5b024a6 [meta] add version scripts 4788d61 [actions] switch Automatic Rebase workflow to pull_request_target event be0e0de [Dev Deps] update auto-changelog ; add aud 13a8d1b [actions] fix action name f873d9a [meta] add funding field 1b51f49 [Dev Deps] update auto-changelog 2322461 [Tests] only audit prod deps aabdade","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#v100-2019-08-10","text":"","title":"v1.0.0 - 2019-08-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-bigints/CHANGELOG/#commits_2","text":"[Tests] add .travis.yml 9730412 Initial commit 65f7c38 [Tests] add tests e374a78 readme 5d39092 npm init 1be2e3d implementation b7bc812 [Tests] add linting 04533be [meta] create FUNDING.yml cf824a7 Only apps should have lockfiles 64e8242","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/","text":"has-flag Check if argv has a specific flag Correctly stops looking after an -- argument terminator. Install $ npm install has-flag Usage // foo.js const hasFlag = require('has-flag'); hasFlag('unicorn'); //=> true hasFlag('--unicorn'); //=> true hasFlag('f'); //=> true hasFlag('-f'); //=> true hasFlag('foo=bar'); //=> true hasFlag('foo'); //=> false hasFlag('rainbow'); //=> false $ node foo.js -f --unicorn --foo=bar -- --rainbow API hasFlag(flag, [argv]) Returns a boolean for whether the flag exists. flag Type: string CLI flag to look for. The -- prefix is optional. argv Type: string[] Default: process.argv CLI arguments. License MIT \u00a9 Sindre Sorhus","title":"has-flag Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#has-flag","text":"Check if argv has a specific flag Correctly stops looking after an -- argument terminator.","title":"has-flag"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#install","text":"$ npm install has-flag","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#usage","text":"// foo.js const hasFlag = require('has-flag'); hasFlag('unicorn'); //=> true hasFlag('--unicorn'); //=> true hasFlag('f'); //=> true hasFlag('-f'); //=> true hasFlag('foo=bar'); //=> true hasFlag('foo'); //=> false hasFlag('rainbow'); //=> false $ node foo.js -f --unicorn --foo=bar -- --rainbow","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#hasflagflag-argv","text":"Returns a boolean for whether the flag exists.","title":"hasFlag(flag, [argv])"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#flag","text":"Type: string CLI flag to look for. The -- prefix is optional.","title":"flag"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#argv","text":"Type: string[] Default: process.argv CLI arguments.","title":"argv"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-flag/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/","text":"has-property-descriptors Does the environment have full property descriptor support? Handles IE 8's broken defineProperty/gOPD. Example var hasPropertyDescriptors = require('has-property-descriptors'); var assert = require('assert'); assert.equal(hasPropertyDescriptors(), true); // will be `false` in IE 6-8, and ES5 engines // Arrays can not have their length `[[Defined]]` in some engines assert.equal(hasPropertyDescriptors.hasArrayLengthDefineBug(), false); // will be `true` in Firefox 4-22, and node v0.6 Tests Simply clone the repo, npm install , and run npm test","title":"has-property-descriptors Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/#has-property-descriptors","text":"Does the environment have full property descriptor support? Handles IE 8's broken defineProperty/gOPD.","title":"has-property-descriptors"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/#example","text":"var hasPropertyDescriptors = require('has-property-descriptors'); var assert = require('assert'); assert.equal(hasPropertyDescriptors(), true); // will be `false` in IE 6-8, and ES5 engines // Arrays can not have their length `[[Defined]]` in some engines assert.equal(hasPropertyDescriptors.hasArrayLengthDefineBug(), false); // will be `true` in Firefox 4-22, and node v0.6","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-02-12 Commits [Refactor] use es-define-property f93a8c8 [Dev Deps] update aud , npmignore , tape 42b0c9d [Deps] update get-intrinsic 35e9b46 v1.0.1 - 2023-10-20 Commits [meta] use npmignore to autogenerate an npmignore file 5bbf4da [actions] update rebase action to use reusable workflow 3a5585b [Dev Deps] update @ljharb/eslint-config , aud , tape e5c1212 [Dev Deps] update aud , tape e942917 [Deps] update get-intrinsic f4a44ec [Deps] update get-intrinsic eeb275b v1.0.0 - 2022-04-14 Commits Initial implementation, tests 303559f Initial commit 3a7ca2d read me dd73dce npm init c1e6557 Only apps should have lockfiles e72f7c6","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#v102-2024-02-12","text":"","title":"v1.0.2 - 2024-02-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#commits","text":"[Refactor] use es-define-property f93a8c8 [Dev Deps] update aud , npmignore , tape 42b0c9d [Deps] update get-intrinsic 35e9b46","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#v101-2023-10-20","text":"","title":"v1.0.1 - 2023-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#commits_1","text":"[meta] use npmignore to autogenerate an npmignore file 5bbf4da [actions] update rebase action to use reusable workflow 3a5585b [Dev Deps] update @ljharb/eslint-config , aud , tape e5c1212 [Dev Deps] update aud , tape e942917 [Deps] update get-intrinsic f4a44ec [Deps] update get-intrinsic eeb275b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#v100-2022-04-14","text":"","title":"v1.0.0 - 2022-04-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-property-descriptors/CHANGELOG/#commits_2","text":"Initial implementation, tests 303559f Initial commit 3a7ca2d read me dd73dce npm init c1e6557 Only apps should have lockfiles e72f7c6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/","text":"has-proto Does this environment have the ability to set the [[Prototype]] of an object on creation with __proto__ ? Example var hasProto = require('has-proto'); var assert = require('assert'); assert.equal(typeof hasProto(), 'boolean'); Tests Simply clone the repo, npm install , and run npm test","title":"has-proto Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/#has-proto","text":"Does this environment have the ability to set the [[Prototype]] of an object on creation with __proto__ ?","title":"has-proto"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/#example","text":"var hasProto = require('has-proto'); var assert = require('assert'); assert.equal(typeof hasProto(), 'boolean');","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.3 - 2024-02-19 Commits [types] add missing declaration file 26ecade v1.0.2 - 2024-02-19 Commits add types 6435262 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape f16a5e4 [Refactor] tiny cleanup d1f1a4b [meta] add sideEffects flag e7ab1a6 v1.0.1 - 2022-12-21 Commits [meta] correct URLs and description ef34483 [patch] add an additional criteria e81959e [Dev Deps] update aud 2bec2c4 v1.0.0 - 2022-12-12 Commits Initial implementation, tests, readme 6886fea Initial commit 99129c8 npm init 2844ad8 Only apps should have lockfiles c65bc5e","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#v103-2024-02-19","text":"","title":"v1.0.3 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#commits","text":"[types] add missing declaration file 26ecade","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#v102-2024-02-19","text":"","title":"v1.0.2 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#commits_1","text":"add types 6435262 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape f16a5e4 [Refactor] tiny cleanup d1f1a4b [meta] add sideEffects flag e7ab1a6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#v101-2022-12-21","text":"","title":"v1.0.1 - 2022-12-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#commits_2","text":"[meta] correct URLs and description ef34483 [patch] add an additional criteria e81959e [Dev Deps] update aud 2bec2c4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#v100-2022-12-12","text":"","title":"v1.0.0 - 2022-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-proto/CHANGELOG/#commits_3","text":"Initial implementation, tests, readme 6886fea Initial commit 99129c8 npm init 2844ad8 Only apps should have lockfiles c65bc5e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/","text":"has-symbols Determine if the JS environment has Symbol support. Supports spec, or shams. Example var hasSymbols = require('has-symbols'); hasSymbols() === true; // if the environment has native Symbol support. Not polyfillable, not forgeable. var hasSymbolsKinda = require('has-symbols/shams'); hasSymbolsKinda() === true; // if the environment has a Symbol sham that mostly follows the spec. Supported Symbol shams get-own-property-symbols npm | github core-js npm | github Tests Simply clone the repo, npm install , and run npm test","title":"has-symbols Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/#has-symbols","text":"Determine if the JS environment has Symbol support. Supports spec, or shams.","title":"has-symbols"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/#example","text":"var hasSymbols = require('has-symbols'); hasSymbols() === true; // if the environment has native Symbol support. Not polyfillable, not forgeable. var hasSymbolsKinda = require('has-symbols/shams'); hasSymbolsKinda() === true; // if the environment has a Symbol sham that mostly follows the spec.","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/#supported-symbol-shams","text":"get-own-property-symbols npm | github core-js npm | github","title":"Supported Symbol shams"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.3 - 2022-03-01 Commits [actions] use node/install instead of node/run ; use codecov action 518b28f [meta] add bugs and homepage fields; reorder package.json c480b13 [actions] reuse common workflows 01d0ee0 [actions] update codecov uploader 6424ebe [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape dfa7e7f [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 0c8d436 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 9026554 [readme] add actions and codecov badges eaa9682 [Dev Deps] update eslint , tape bc7a3ba [Dev Deps] update eslint , auto-changelog 0ace00a [meta] use prepublishOnly script for npm 7+ 093f72b [Tests] test on all 16 minors 9b80d3d v1.0.2 - 2021-02-27 Fixed [Fix] use a universal way to get the original Symbol #11 Commits [Tests] migrate tests to Github Actions 90ae798 [meta] do not publish github action workflow files 29e60a1 [Tests] run nyc on all tests 8476b91 [readme] fix repo URLs, remove defunct badges 126288e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , core-js , get-own-property-symbols d84bdfa [Tests] fix linting errors 0df3070 [actions] add \"Allow Edits\" workflow 1e6bc29 [Dev Deps] update eslint , @ljharb/eslint-config , tape 36cea2a [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1278338 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1493254 [Dev Deps] update eslint , @ljharb/eslint-config , core-js b090bf2 [actions] switch Automatic Rebase workflow to pull_request_target event 4addb7a [Dev Deps] update auto-changelog , tape 81d0baf [Dev Deps] update auto-changelog ; add aud 1a4e561 [readme] remove unused testling URLs 3000941 [Tests] only audit prod deps 692e974 [Dev Deps] update @ljharb/eslint-config 51c946c v1.0.1 - 2019-11-16 Commits [Tests] use shared travis-ci configs ce396c9 [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v4.9 ; use nvm install-latest-npm 0690732 [meta] add auto-changelog 2163d0b [Dev Deps] update eslint , @ljharb/eslint-config , core-js , safe-publish-latest , tape 8e0951f [actions] add automatic rebasing / merge commit blocking b09cdb7 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , core-js , get-own-property-symbols , tape 1dd42cd [meta] create FUNDING.yml aa57a17 Only apps should have lockfiles a2d8bea [Tests] use npx aud instead of nsp or npm audit with hoops 9e96cb7 [meta] add funding field a0b32cf [Dev Deps] update safe-publish-latest cb9f0a5 v1.0.0 - 2016-09-19 Commits Tests. ecb6eb9 package.json 88a337c Initial commit 42e1e55 Initial implementation. 33f5cc6 read me 01f1170","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#v103-2022-03-01","text":"","title":"v1.0.3 - 2022-03-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#commits","text":"[actions] use node/install instead of node/run ; use codecov action 518b28f [meta] add bugs and homepage fields; reorder package.json c480b13 [actions] reuse common workflows 01d0ee0 [actions] update codecov uploader 6424ebe [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape dfa7e7f [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 0c8d436 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 9026554 [readme] add actions and codecov badges eaa9682 [Dev Deps] update eslint , tape bc7a3ba [Dev Deps] update eslint , auto-changelog 0ace00a [meta] use prepublishOnly script for npm 7+ 093f72b [Tests] test on all 16 minors 9b80d3d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#v102-2021-02-27","text":"","title":"v1.0.2 - 2021-02-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#fixed","text":"[Fix] use a universal way to get the original Symbol #11","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions 90ae798 [meta] do not publish github action workflow files 29e60a1 [Tests] run nyc on all tests 8476b91 [readme] fix repo URLs, remove defunct badges 126288e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , core-js , get-own-property-symbols d84bdfa [Tests] fix linting errors 0df3070 [actions] add \"Allow Edits\" workflow 1e6bc29 [Dev Deps] update eslint , @ljharb/eslint-config , tape 36cea2a [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1278338 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1493254 [Dev Deps] update eslint , @ljharb/eslint-config , core-js b090bf2 [actions] switch Automatic Rebase workflow to pull_request_target event 4addb7a [Dev Deps] update auto-changelog , tape 81d0baf [Dev Deps] update auto-changelog ; add aud 1a4e561 [readme] remove unused testling URLs 3000941 [Tests] only audit prod deps 692e974 [Dev Deps] update @ljharb/eslint-config 51c946c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#v101-2019-11-16","text":"","title":"v1.0.1 - 2019-11-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#commits_2","text":"[Tests] use shared travis-ci configs ce396c9 [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v4.9 ; use nvm install-latest-npm 0690732 [meta] add auto-changelog 2163d0b [Dev Deps] update eslint , @ljharb/eslint-config , core-js , safe-publish-latest , tape 8e0951f [actions] add automatic rebasing / merge commit blocking b09cdb7 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , core-js , get-own-property-symbols , tape 1dd42cd [meta] create FUNDING.yml aa57a17 Only apps should have lockfiles a2d8bea [Tests] use npx aud instead of nsp or npm audit with hoops 9e96cb7 [meta] add funding field a0b32cf [Dev Deps] update safe-publish-latest cb9f0a5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#v100-2016-09-19","text":"","title":"v1.0.0 - 2016-09-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-symbols/CHANGELOG/#commits_3","text":"Tests. ecb6eb9 package.json 88a337c Initial commit 42e1e55 Initial implementation. 33f5cc6 read me 01f1170","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/","text":"has-tostringtag Determine if the JS environment has Symbol.toStringTag support. Supports spec, or shams. Example var hasSymbolToStringTag = require('has-tostringtag'); hasSymbolToStringTag() === true; // if the environment has native Symbol.toStringTag support. Not polyfillable, not forgeable. var hasSymbolToStringTagKinda = require('has-tostringtag/shams'); hasSymbolToStringTagKinda() === true; // if the environment has a Symbol.toStringTag sham that mostly follows the spec. Supported Symbol shams get-own-property-symbols npm | github core-js npm | github Tests Simply clone the repo, npm install , and run npm test","title":"has-tostringtag Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/#has-tostringtag","text":"Determine if the JS environment has Symbol.toStringTag support. Supports spec, or shams.","title":"has-tostringtag"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/#example","text":"var hasSymbolToStringTag = require('has-tostringtag'); hasSymbolToStringTag() === true; // if the environment has native Symbol.toStringTag support. Not polyfillable, not forgeable. var hasSymbolToStringTagKinda = require('has-tostringtag/shams'); hasSymbolToStringTagKinda() === true; // if the environment has a Symbol.toStringTag sham that mostly follows the spec.","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/#supported-symbol-shams","text":"get-own-property-symbols npm | github core-js npm | github","title":"Supported Symbol shams"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-02-01 Fixed [Fix] move has-symbols back to prod deps #3 v1.0.1 - 2024-02-01 Commits [patch] add types 9276414 [meta] use npmignore to autogenerate an npmignore file 5c0dcd1 [actions] reuse common workflows dee9509 [actions] update codecov uploader b8cb3a0 [Tests] generate coverage be5b288 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 69a0827 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 4c9e210 [actions] update rebase action to use reusable workflow ca8dcd3 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape 07f3eaf [Deps] update has-symbols 999e009 [Tests] remove staging tests since they fail on modern node 9d9526b v1.0.0 - 2021-08-05 Commits Tests 6b6f573 Initial commit 2f8190e [meta] do not publish github action workflow files 6e08cc4 readme 94bed6c npm init be67840 Implementation c4914ec [meta] use auto-changelog 4aaf768 Only apps should have lockfiles bc4d99e [meta] add safe-publish-latest 6523c05","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#v102-2024-02-01","text":"","title":"v1.0.2 - 2024-02-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#fixed","text":"[Fix] move has-symbols back to prod deps #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#v101-2024-02-01","text":"","title":"v1.0.1 - 2024-02-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#commits","text":"[patch] add types 9276414 [meta] use npmignore to autogenerate an npmignore file 5c0dcd1 [actions] reuse common workflows dee9509 [actions] update codecov uploader b8cb3a0 [Tests] generate coverage be5b288 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 69a0827 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 4c9e210 [actions] update rebase action to use reusable workflow ca8dcd3 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape 07f3eaf [Deps] update has-symbols 999e009 [Tests] remove staging tests since they fail on modern node 9d9526b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#v100-2021-08-05","text":"","title":"v1.0.0 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/has-tostringtag/CHANGELOG/#commits_1","text":"Tests 6b6f573 Initial commit 2f8190e [meta] do not publish github action workflow files 6e08cc4 readme 94bed6c npm init be67840 Implementation c4914ec [meta] use auto-changelog 4aaf768 Only apps should have lockfiles bc4d99e [meta] add safe-publish-latest 6523c05","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/","text":"hasown A robust, ES3 compatible, \"has own property\" predicate. Example const assert = require('assert'); const hasOwn = require('hasown'); assert.equal(hasOwn({}, 'toString'), false); assert.equal(hasOwn([], 'length'), true); assert.equal(hasOwn({ a: 42 }, 'a'), true); Tests Simply clone the repo, npm install , and run npm test","title":"hasown Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/#hasown","text":"A robust, ES3 compatible, \"has own property\" predicate.","title":"hasown"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/#example","text":"const assert = require('assert'); const hasOwn = require('hasown'); assert.equal(hasOwn({}, 'toString'), false); assert.equal(hasOwn([], 'length'), true); assert.equal(hasOwn({ a: 42 }, 'a'), true);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.2 - 2024-03-10 Commits [types] use shared config 68e9d4d [actions] remove redundant finisher; use reusable workflow 241a68e [Tests] increase coverage 4125c0d [Tests] skip npm ls in old node due to TS 01b9282 [types] improve predicate type d340f85 [Dev Deps] update tape 70089fc [Tests] use @arethetypeswrong/cli 50b272c v2.0.1 - 2024-02-10 Commits [types] use a handwritten d.ts file; fix exported type 012b989 [Dev Deps] update @types/function-bind , @types/mock-property , @types/tape , aud , mock-property , npmignore , tape , typescript 977a56f [meta] add sideEffects flag 3a60b7b v2.0.0 - 2023-10-19 Commits revamped implementation, tests, readme 72bf8b3 [meta] revamp package.json 079775f Only apps should have lockfiles 6640e23 v1.0.1 - 2023-10-10 Commits Initial commit 8dbfde6","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#v202-2024-03-10","text":"","title":"v2.0.2 - 2024-03-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#commits","text":"[types] use shared config 68e9d4d [actions] remove redundant finisher; use reusable workflow 241a68e [Tests] increase coverage 4125c0d [Tests] skip npm ls in old node due to TS 01b9282 [types] improve predicate type d340f85 [Dev Deps] update tape 70089fc [Tests] use @arethetypeswrong/cli 50b272c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#v201-2024-02-10","text":"","title":"v2.0.1 - 2024-02-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#commits_1","text":"[types] use a handwritten d.ts file; fix exported type 012b989 [Dev Deps] update @types/function-bind , @types/mock-property , @types/tape , aud , mock-property , npmignore , tape , typescript 977a56f [meta] add sideEffects flag 3a60b7b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#v200-2023-10-19","text":"","title":"v2.0.0 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#commits_2","text":"revamped implementation, tests, readme 72bf8b3 [meta] revamp package.json 079775f Only apps should have lockfiles 6640e23","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#v101-2023-10-10","text":"","title":"v1.0.1 - 2023-10-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/hasown/CHANGELOG/#commits_3","text":"Initial commit 8dbfde6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/","text":"Linux OS X Windows Coverage Downloads ignore ignore is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore spec 2.22.1 . ignore is used by eslint, gitbook and many others . Pay ATTENTION that minimatch (which used by fstream-ignore ) does not follow the gitignore spec. To filter filenames according to a .gitignore file, I recommend this npm package, ignore . To parse an .npmignore file, you should use minimatch , because an .npmignore file is parsed by npm using minimatch and it does not work in the .gitignore way. Tested on ignore is fully tested, and has more than five hundreds of unit tests. Linux + Node: 0.8 - 7.x Windows + Node: 0.10 - 7.x , node < 0.10 is not tested due to the lack of support of appveyor. Actually, ignore does not rely on any versions of node specially. Since 4.0.0 , ignore will no longer support node < 6 by default, to use in node < 6, require('ignore/legacy') . For details, see CHANGELOG . Table Of Main Contents Usage Pathname Conventions See Also: glob-gitignore matches files using patterns and filters them according to gitignore rules. Upgrade Guide Install npm i ignore Usage import ignore from 'ignore' const ig = ignore().add(['.abc/*', '!.abc/d/']) Filter the given paths const paths = [ '.abc/a.js', // filtered out '.abc/d/e.js' // included ] ig.filter(paths) // ['.abc/d/e.js'] ig.ignores('.abc/a.js') // true As the filter function paths.filter(ig.createFilter()); // ['.abc/d/e.js'] Win32 paths will be handled ig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js']) // if the code above runs on windows, the result will be // ['.abc\\\\d\\\\e.js'] Why another ignore? ignore is a standalone module, and is much simpler so that it could easy work with other programs, unlike isaacs 's fstream-ignore which must work with the modules of the fstream family. ignore only contains utility methods to filter paths according to the specified ignore rules, so ignore never try to find out ignore rules by traversing directories or fetching from git configurations. ignore don't cares about sub-modules of git projects. Exactly according to gitignore man page , fixes some known matching issues of fstream-ignore, such as: ' /*.js ' should only match ' a.js ', but not ' abc/a.js '. ' **/foo ' should match ' foo ' anywhere. Prevent re-including a file if a parent directory of that file is excluded. Handle trailing whitespaces: 'a ' (one space) should not match 'a ' (two spaces). 'a \\ ' matches 'a ' All test cases are verified with the result of git check-ignore . Methods .add(pattern: string | Ignore): this .add(patterns: Array ): this pattern String | Ignore An ignore pattern string, or the Ignore instance patterns Array<String | Ignore> Array of ignore patterns. Adds a rule or several rules to the current manager. Returns this Notice that a line starting with '#' (hash) is treated as a comment. Put a backslash ( '\\' ) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename. ignore().add('#abc').ignores('#abc') // false ignore().add('\\\\#abc').ignores('#abc') // true pattern could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just ignore().add() the content of a ignore file: ignore() .add(fs.readFileSync(filenameOfGitignore).toString()) .filter(filenames) pattern could also be an ignore instance, so that we could easily inherit the rules of another Ignore instance. .addIgnoreFile(path) REMOVED in 3.x for now. To upgrade ignore@2.x up to 3.x , use import fs from 'fs' if (fs.existsSync(filename)) { ignore().add(fs.readFileSync(filename).toString()) } instead. .filter(paths: Array<Pathname>): Array<Pathname> type Pathname = string Filters the given array of pathnames, and returns the filtered array. paths Array.<Pathname> The array of pathname s to be filtered. Pathname Conventions: 1. Pathname should be a path.relative() d pathname Pathname should be a string that have been path.join() ed, or the return value of path.relative() to the current directory, // WRONG, an error will be thrown ig.ignores('./abc') // WRONG, for it will never happen, and an error will be thrown // If the gitignore rule locates at the root directory, // `'/abc'` should be changed to `'abc'`. // ``` // path.relative('/', '/abc') -> 'abc' // ``` ig.ignores('/abc') // WRONG, that it is an absolute path on Windows, an error will be thrown ig.ignores('C:\\\\abc') // Right ig.ignores('abc') // Right ig.ignores(path.join('./abc')) // path.join('./abc') -> 'abc' In other words, each Pathname here should be a relative path to the directory of the gitignore rules. Suppose the dir structure is: /path/to/your/repo |-- a | |-- a.js | |-- .b | |-- .c |-- .DS_store Then the paths might be like this: [ 'a/a.js' '.b', '.c/.DS_store' ] 2. filenames and dirnames node-ignore does NO fs.stat during path matching, so for the example below: // First, we add a ignore pattern to ignore a directory ig.add('config/') // `ig` does NOT know if 'config', in the real world, // is a normal file, directory or something. ig.ignores('config') // `ig` treats `config` as a file, so it returns `false` ig.ignores('config/') // returns `true` Specially for people who develop some library based on node-ignore , it is important to understand that. Usually, you could use glob with option.mark = true to fetch the structure of the current directory: import glob from 'glob' glob('**', { // Adds a / character to directory matches. mark: true }, (err, files) => { if (err) { return console.error(err) } let filtered = ignore().add(patterns).filter(files) console.log(filtered) }) .ignores(pathname: Pathname): boolean new in 3.2.0 Returns Boolean whether pathname should be ignored. ig.ignores('.abc/a.js') // true .createFilter() Creates a filter function which could filter an array of paths with Array.prototype.filter . Returns function(path) the filter function. .test(pathname: Pathname) since 5.0.0 Returns TestResult interface TestResult { ignored: boolean // true if the `pathname` is finally unignored by some negative pattern unignored: boolean } {ignored: true, unignored: false} : the pathname is ignored {ignored: false, unignored: true} : the pathname is unignored {ignored: false, unignored: false} : the pathname is never matched by any ignore rules. static ignore.isPathValid(pathname): boolean since 5.0.0 Check whether the pathname is an valid path.relative() d path according to the convention . This method is NOT used to check if an ignore pattern is valid. ignore.isPathValid('./foo') // false ignore(options) options.ignorecase since 4.0.0 Similar as the core.ignorecase option of git-config , node-ignore will be case insensitive if options.ignorecase is set to true (the default value), otherwise case sensitive. const ig = ignore({ ignorecase: false }) ig.add('*.png') ig.ignores('*.PNG') // false options.ignoreCase?: boolean since 5.2.0 Which is alternative to options.ignoreCase options.allowRelativePaths?: boolean since 5.2.0 This option brings backward compatibility with projects which based on ignore@4.x . If options.allowRelativePaths is true , ignore will not check whether the given path to be tested is path.relative() d . However, passing a relative path, such as './foo' or '../foo' , to test if it is ignored or not is not a good practise, which might lead to unexpected behavior ignore({ allowRelativePaths: true }).ignores('../foo/bar.js') // And it will not throw Upgrade Guide Upgrade 4.x -> 5.x Since 5.0.0 , if an invalid Pathname passed into ig.ignores() , an error will be thrown, unless options.allowRelative = true is passed to the Ignore factory. While ignore < 5.0.0 did not make sure what the return value was, as well as .ignores(pathname: Pathname): boolean .filter(pathnames: Array<Pathname>): Array<Pathname> .createFilter(): (pathname: Pathname) => boolean .test(pathname: Pathname): {ignored: boolean, unignored: boolean} See the convention here for details. If there are invalid pathnames, the conversion and filtration should be done by users. import {isPathValid} from 'ignore' // introduced in 5.0.0 const paths = [ // invalid ////////////////// '', false, '../foo', '.', ////////////////// // valid 'foo' ] .filter(isValidPath) ig.filter(paths) Upgrade 3.x -> 4.x Since 4.0.0 , ignore will no longer support node < 6, to use ignore in node < 6: var ignore = require('ignore/legacy') Upgrade 2.x -> 3.x All options of 2.x are unnecessary and removed, so just remove them. ignore() instance is no longer an EventEmitter , and all events are unnecessary and removed. .addIgnoreFile() is removed, see the .addIgnoreFile section for details. Collaborators @whitecolor Alex @SamyPesse Samy Pess\u00e9 @azproduction Mikhail Davydov @TrySound Bogdan Chadkin @JanMattner Jan Mattner @ntwb Stephen Edgar @kasperisager Kasper Isager @sandersn Nathan Shively-Sanders","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#ignore","text":"ignore is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore spec 2.22.1 . ignore is used by eslint, gitbook and many others . Pay ATTENTION that minimatch (which used by fstream-ignore ) does not follow the gitignore spec. To filter filenames according to a .gitignore file, I recommend this npm package, ignore . To parse an .npmignore file, you should use minimatch , because an .npmignore file is parsed by npm using minimatch and it does not work in the .gitignore way.","title":"ignore"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#tested-on","text":"ignore is fully tested, and has more than five hundreds of unit tests. Linux + Node: 0.8 - 7.x Windows + Node: 0.10 - 7.x , node < 0.10 is not tested due to the lack of support of appveyor. Actually, ignore does not rely on any versions of node specially. Since 4.0.0 , ignore will no longer support node < 6 by default, to use in node < 6, require('ignore/legacy') . For details, see CHANGELOG .","title":"Tested on"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#table-of-main-contents","text":"Usage Pathname Conventions See Also: glob-gitignore matches files using patterns and filters them according to gitignore rules. Upgrade Guide","title":"Table Of Main Contents"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#install","text":"npm i ignore","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#usage","text":"import ignore from 'ignore' const ig = ignore().add(['.abc/*', '!.abc/d/'])","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#filter-the-given-paths","text":"const paths = [ '.abc/a.js', // filtered out '.abc/d/e.js' // included ] ig.filter(paths) // ['.abc/d/e.js'] ig.ignores('.abc/a.js') // true","title":"Filter the given paths"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#as-the-filter-function","text":"paths.filter(ig.createFilter()); // ['.abc/d/e.js']","title":"As the filter function"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#win32-paths-will-be-handled","text":"ig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js']) // if the code above runs on windows, the result will be // ['.abc\\\\d\\\\e.js']","title":"Win32 paths will be handled"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#why-another-ignore","text":"ignore is a standalone module, and is much simpler so that it could easy work with other programs, unlike isaacs 's fstream-ignore which must work with the modules of the fstream family. ignore only contains utility methods to filter paths according to the specified ignore rules, so ignore never try to find out ignore rules by traversing directories or fetching from git configurations. ignore don't cares about sub-modules of git projects. Exactly according to gitignore man page , fixes some known matching issues of fstream-ignore, such as: ' /*.js ' should only match ' a.js ', but not ' abc/a.js '. ' **/foo ' should match ' foo ' anywhere. Prevent re-including a file if a parent directory of that file is excluded. Handle trailing whitespaces: 'a ' (one space) should not match 'a ' (two spaces). 'a \\ ' matches 'a ' All test cases are verified with the result of git check-ignore .","title":"Why another ignore?"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#methods","text":"","title":"Methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#addpattern-string-ignore-this","text":"","title":".add(pattern: string | Ignore): this"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#addpatterns-array-this","text":"pattern String | Ignore An ignore pattern string, or the Ignore instance patterns Array<String | Ignore> Array of ignore patterns. Adds a rule or several rules to the current manager. Returns this Notice that a line starting with '#' (hash) is treated as a comment. Put a backslash ( '\\' ) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename. ignore().add('#abc').ignores('#abc') // false ignore().add('\\\\#abc').ignores('#abc') // true pattern could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just ignore().add() the content of a ignore file: ignore() .add(fs.readFileSync(filenameOfGitignore).toString()) .filter(filenames) pattern could also be an ignore instance, so that we could easily inherit the rules of another Ignore instance.","title":".add(patterns: Array): this"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#addignorefilepath","text":"REMOVED in 3.x for now. To upgrade ignore@2.x up to 3.x , use import fs from 'fs' if (fs.existsSync(filename)) { ignore().add(fs.readFileSync(filename).toString()) } instead.","title":".addIgnoreFile(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#filterpaths-arraypathname-arraypathname","text":"type Pathname = string Filters the given array of pathnames, and returns the filtered array. paths Array.<Pathname> The array of pathname s to be filtered.","title":".filter(paths: Array&lt;Pathname&gt;): Array&lt;Pathname&gt;"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#pathname-conventions","text":"","title":"Pathname Conventions:"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#1-pathname-should-be-a-pathrelatived-pathname","text":"Pathname should be a string that have been path.join() ed, or the return value of path.relative() to the current directory, // WRONG, an error will be thrown ig.ignores('./abc') // WRONG, for it will never happen, and an error will be thrown // If the gitignore rule locates at the root directory, // `'/abc'` should be changed to `'abc'`. // ``` // path.relative('/', '/abc') -> 'abc' // ``` ig.ignores('/abc') // WRONG, that it is an absolute path on Windows, an error will be thrown ig.ignores('C:\\\\abc') // Right ig.ignores('abc') // Right ig.ignores(path.join('./abc')) // path.join('./abc') -> 'abc' In other words, each Pathname here should be a relative path to the directory of the gitignore rules. Suppose the dir structure is: /path/to/your/repo |-- a | |-- a.js | |-- .b | |-- .c |-- .DS_store Then the paths might be like this: [ 'a/a.js' '.b', '.c/.DS_store' ]","title":"1. Pathname should be a path.relative()d pathname"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#2-filenames-and-dirnames","text":"node-ignore does NO fs.stat during path matching, so for the example below: // First, we add a ignore pattern to ignore a directory ig.add('config/') // `ig` does NOT know if 'config', in the real world, // is a normal file, directory or something. ig.ignores('config') // `ig` treats `config` as a file, so it returns `false` ig.ignores('config/') // returns `true` Specially for people who develop some library based on node-ignore , it is important to understand that. Usually, you could use glob with option.mark = true to fetch the structure of the current directory: import glob from 'glob' glob('**', { // Adds a / character to directory matches. mark: true }, (err, files) => { if (err) { return console.error(err) } let filtered = ignore().add(patterns).filter(files) console.log(filtered) })","title":"2. filenames and dirnames"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#ignorespathname-pathname-boolean","text":"new in 3.2.0 Returns Boolean whether pathname should be ignored. ig.ignores('.abc/a.js') // true","title":".ignores(pathname: Pathname): boolean"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#createfilter","text":"Creates a filter function which could filter an array of paths with Array.prototype.filter . Returns function(path) the filter function.","title":".createFilter()"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#testpathname-pathname-since-500","text":"Returns TestResult interface TestResult { ignored: boolean // true if the `pathname` is finally unignored by some negative pattern unignored: boolean } {ignored: true, unignored: false} : the pathname is ignored {ignored: false, unignored: true} : the pathname is unignored {ignored: false, unignored: false} : the pathname is never matched by any ignore rules.","title":".test(pathname: Pathname) since 5.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#static-ignoreispathvalidpathname-boolean-since-500","text":"Check whether the pathname is an valid path.relative() d path according to the convention . This method is NOT used to check if an ignore pattern is valid. ignore.isPathValid('./foo') // false","title":"static ignore.isPathValid(pathname): boolean since 5.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#ignoreoptions","text":"","title":"ignore(options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#optionsignorecase-since-400","text":"Similar as the core.ignorecase option of git-config , node-ignore will be case insensitive if options.ignorecase is set to true (the default value), otherwise case sensitive. const ig = ignore({ ignorecase: false }) ig.add('*.png') ig.ignores('*.PNG') // false","title":"options.ignorecase since 4.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#optionsignorecase-boolean-since-520","text":"Which is alternative to options.ignoreCase","title":"options.ignoreCase?: boolean since 5.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#optionsallowrelativepaths-boolean-since-520","text":"This option brings backward compatibility with projects which based on ignore@4.x . If options.allowRelativePaths is true , ignore will not check whether the given path to be tested is path.relative() d . However, passing a relative path, such as './foo' or '../foo' , to test if it is ignored or not is not a good practise, which might lead to unexpected behavior ignore({ allowRelativePaths: true }).ignores('../foo/bar.js') // And it will not throw","title":"options.allowRelativePaths?: boolean since 5.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#upgrade-guide","text":"","title":"Upgrade Guide"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#upgrade-4x-5x","text":"Since 5.0.0 , if an invalid Pathname passed into ig.ignores() , an error will be thrown, unless options.allowRelative = true is passed to the Ignore factory. While ignore < 5.0.0 did not make sure what the return value was, as well as .ignores(pathname: Pathname): boolean .filter(pathnames: Array<Pathname>): Array<Pathname> .createFilter(): (pathname: Pathname) => boolean .test(pathname: Pathname): {ignored: boolean, unignored: boolean} See the convention here for details. If there are invalid pathnames, the conversion and filtration should be done by users. import {isPathValid} from 'ignore' // introduced in 5.0.0 const paths = [ // invalid ////////////////// '', false, '../foo', '.', ////////////////// // valid 'foo' ] .filter(isValidPath) ig.filter(paths)","title":"Upgrade 4.x -&gt; 5.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#upgrade-3x-4x","text":"Since 4.0.0 , ignore will no longer support node < 6, to use ignore in node < 6: var ignore = require('ignore/legacy')","title":"Upgrade 3.x -&gt; 4.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#upgrade-2x-3x","text":"All options of 2.x are unnecessary and removed, so just remove them. ignore() instance is no longer an EventEmitter , and all events are unnecessary and removed. .addIgnoreFile() is removed, see the .addIgnoreFile section for details.","title":"Upgrade 2.x -&gt; 3.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/ignore/#collaborators","text":"@whitecolor Alex @SamyPesse Samy Pess\u00e9 @azproduction Mikhail Davydov @TrySound Bogdan Chadkin @JanMattner Jan Mattner @ntwb Stephen Edgar @kasperisager Kasper Isager @sandersn Nathan Shively-Sanders","title":"Collaborators"},{"location":"_Disciplina/Code/my-react-app/node_modules/import-fresh/readme/","text":"import-fresh Import a module while bypassing the cache Useful for testing purposes when you need to freshly import a module. Install $ npm install import-fresh Usage // foo.js let i = 0; module.exports = () => ++i; const importFresh = require('import-fresh'); require('./foo')(); //=> 1 require('./foo')(); //=> 2 importFresh('./foo')(); //=> 1 importFresh('./foo')(); //=> 1 import-fresh for enterprise Available as part of the Tidelift Subscription. The maintainers of import-fresh and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more. Related clear-module - Clear a module from the import cache import-from - Import a module from a given path import-cwd - Import a module from the current working directory import-lazy - Import modules lazily","title":"import-fresh"},{"location":"_Disciplina/Code/my-react-app/node_modules/import-fresh/readme/#import-fresh","text":"Import a module while bypassing the cache Useful for testing purposes when you need to freshly import a module.","title":"import-fresh"},{"location":"_Disciplina/Code/my-react-app/node_modules/import-fresh/readme/#install","text":"$ npm install import-fresh","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/import-fresh/readme/#usage","text":"// foo.js let i = 0; module.exports = () => ++i; const importFresh = require('import-fresh'); require('./foo')(); //=> 1 require('./foo')(); //=> 2 importFresh('./foo')(); //=> 1 importFresh('./foo')(); //=> 1","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/import-fresh/readme/#import-fresh-for-enterprise","text":"Available as part of the Tidelift Subscription. The maintainers of import-fresh and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"import-fresh for enterprise"},{"location":"_Disciplina/Code/my-react-app/node_modules/import-fresh/readme/#related","text":"clear-module - Clear a module from the import cache import-from - Import a module from a given path import-cwd - Import a module from the current working directory import-lazy - Import modules lazily","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/","text":"iMurmurHash.js An incremental implementation of the MurmurHash3 (32-bit) hashing algorithm for JavaScript based on Gary Court's implementation with kazuyukitanimura's modifications . This version works significantly faster than the non-incremental version if you need to hash many small strings into a single hash, since string concatenation (to build the single string to pass the non-incremental version) is fairly costly. In one case tested, using the incremental version was about 50% faster than concatenating 5-10 strings and then hashing. Installation To use iMurmurHash in the browser, download the latest version and include it as a script on your site. <script type=\"text/javascript\" src=\"/scripts/imurmurhash.min.js\"></script> <script> // Your code here, access iMurmurHash using the global object MurmurHash3 </script> To use iMurmurHash in Node.js, install the module using NPM: npm install imurmurhash Then simply include it in your scripts: MurmurHash3 = require('imurmurhash'); Quick Example // Create the initial hash var hashState = MurmurHash3('string'); // Incrementally add text hashState.hash('more strings'); hashState.hash('even more strings'); // All calls can be chained if desired hashState.hash('and').hash('some').hash('more'); // Get a result hashState.result(); // returns 0xe4ccfe6b Functions MurmurHash3 ([string], [seed]) Get a hash state object, optionally initialized with the given string and seed . Seed must be a positive integer if provided. Calling this function without the new keyword will return a cached state object that has been reset. This is safe to use as long as the object is only used from a single thread and no other hashes are created while operating on this one. If this constraint cannot be met, you can use new to create a new state object. For example: // Use the cached object, calling the function again will return the same // object (but reset, so the current state would be lost) hashState = MurmurHash3(); ... // Create a new object that can be safely used however you wish. Calling the // function again will simply return a new state object, and no state loss // will occur, at the cost of creating more objects. hashState = new MurmurHash3(); Both methods can be mixed however you like if you have different use cases. MurmurHash3.prototype.hash (string) Incrementally add string to the hash. This can be called as many times as you want for the hash state object, including after a call to result() . Returns this so calls can be chained. MurmurHash3.prototype.result () Get the result of the hash as a 32-bit positive integer. This performs the tail and finalizer portions of the algorithm, but does not store the result in the state object. This means that it is perfectly safe to get results and then continue adding strings via hash . // Do the whole string at once MurmurHash3('this is a test string').result(); // 0x70529328 // Do part of the string, get a result, then the other part var m = MurmurHash3('this is a'); m.result(); // 0xbfc4f834 m.hash(' test string').result(); // 0x70529328 (same as above) MurmurHash3.prototype.reset ([seed]) Reset the state object for reuse, optionally using the given seed (defaults to 0 like the constructor). Returns this so calls can be chained. License (MIT) Copyright (c) 2013 Gary Court, Jens Taylor Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"iMurmurHash.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#imurmurhashjs","text":"An incremental implementation of the MurmurHash3 (32-bit) hashing algorithm for JavaScript based on Gary Court's implementation with kazuyukitanimura's modifications . This version works significantly faster than the non-incremental version if you need to hash many small strings into a single hash, since string concatenation (to build the single string to pass the non-incremental version) is fairly costly. In one case tested, using the incremental version was about 50% faster than concatenating 5-10 strings and then hashing.","title":"iMurmurHash.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#installation","text":"To use iMurmurHash in the browser, download the latest version and include it as a script on your site. <script type=\"text/javascript\" src=\"/scripts/imurmurhash.min.js\"></script> <script> // Your code here, access iMurmurHash using the global object MurmurHash3 </script> To use iMurmurHash in Node.js, install the module using NPM: npm install imurmurhash Then simply include it in your scripts: MurmurHash3 = require('imurmurhash');","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#quick-example","text":"// Create the initial hash var hashState = MurmurHash3('string'); // Incrementally add text hashState.hash('more strings'); hashState.hash('even more strings'); // All calls can be chained if desired hashState.hash('and').hash('some').hash('more'); // Get a result hashState.result(); // returns 0xe4ccfe6b","title":"Quick Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#functions","text":"","title":"Functions"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#murmurhash3-string-seed","text":"Get a hash state object, optionally initialized with the given string and seed . Seed must be a positive integer if provided. Calling this function without the new keyword will return a cached state object that has been reset. This is safe to use as long as the object is only used from a single thread and no other hashes are created while operating on this one. If this constraint cannot be met, you can use new to create a new state object. For example: // Use the cached object, calling the function again will return the same // object (but reset, so the current state would be lost) hashState = MurmurHash3(); ... // Create a new object that can be safely used however you wish. Calling the // function again will simply return a new state object, and no state loss // will occur, at the cost of creating more objects. hashState = new MurmurHash3(); Both methods can be mixed however you like if you have different use cases.","title":"MurmurHash3 ([string], [seed])"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#murmurhash3prototypehash-string","text":"Incrementally add string to the hash. This can be called as many times as you want for the hash state object, including after a call to result() . Returns this so calls can be chained.","title":"MurmurHash3.prototype.hash (string)"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#murmurhash3prototyperesult","text":"Get the result of the hash as a 32-bit positive integer. This performs the tail and finalizer portions of the algorithm, but does not store the result in the state object. This means that it is perfectly safe to get results and then continue adding strings via hash . // Do the whole string at once MurmurHash3('this is a test string').result(); // 0x70529328 // Do part of the string, get a result, then the other part var m = MurmurHash3('this is a'); m.result(); // 0xbfc4f834 m.hash(' test string').result(); // 0x70529328 (same as above)","title":"MurmurHash3.prototype.result ()"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#murmurhash3prototypereset-seed","text":"Reset the state object for reuse, optionally using the given seed (defaults to 0 like the constructor). Returns this so calls can be chained.","title":"MurmurHash3.prototype.reset ([seed])"},{"location":"_Disciplina/Code/my-react-app/node_modules/imurmurhash/#license-mit","text":"Copyright (c) 2013 Gary Court, Jens Taylor Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License (MIT)"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/","text":"internal-slot Truly private storage, akin to the JS spec\u2019s concept of internal slots. Uses a WeakMap when available; a Map when not; and a regular object in even older engines. Performance and garbage collection behavior will reflect the environment\u2019s capabilities accordingly. Example var SLOT = require('internal-slot'); var assert = require('assert'); var o = {}; assert.throws(function () { SLOT.assert(o, 'foo'); }); assert.equal(SLOT.has(o, 'foo'), false); assert.equal(SLOT.get(o, 'foo'), undefined); SLOT.set(o, 'foo', 42); assert.equal(SLOT.has(o, 'foo'), true); assert.equal(SLOT.get(o, 'foo'), 42); assert.doesNotThrow(function () { SLOT.assert(o, 'foo'); }); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"internal-slot Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/#internal-slot","text":"Truly private storage, akin to the JS spec\u2019s concept of internal slots. Uses a WeakMap when available; a Map when not; and a regular object in even older engines. Performance and garbage collection behavior will reflect the environment\u2019s capabilities accordingly.","title":"internal-slot"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/#example","text":"var SLOT = require('internal-slot'); var assert = require('assert'); var o = {}; assert.throws(function () { SLOT.assert(o, 'foo'); }); assert.equal(SLOT.has(o, 'foo'), false); assert.equal(SLOT.get(o, 'foo'), undefined); SLOT.set(o, 'foo', 42); assert.equal(SLOT.has(o, 'foo'), true); assert.equal(SLOT.get(o, 'foo'), 42); assert.doesNotThrow(function () { SLOT.assert(o, 'foo'); });","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. Dates are displayed in UTC. Generated by auto-changelog . v1.0.7 5 February 2024 [Dev Deps] update aud , npmignore , tape 89c88c1 [Refactor] use es-errors , so things that only need those do not need get-intrinsic b437631 v1.0.6 20 October 2023 [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape 4d568d2 [Refactor] use hasown instead of has f946e94 [Deps] update get-intrinsic 1bbc885 [meta] remove unused .eslintignore 6fdde1a v1.0.5 9 February 2023 [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape e427703 [Deps] update get-intrinsic aa652f0 [Fix] improve assertion message 8df86e3 v1.0.4 13 December 2022 [actions] reuse common workflows 82a1aee [meta] use npmignore to autogenerate an npmignore file 56f7e71 [actions] use node/install instead of node/run ; use codecov action e25ff67 [actions] update rebase action to use reusable workflow 227e81e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , foreach , object-inspect , tape fc9f319 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest , tape 0a72a0f [actions] update codecov uploader e2b993f [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 8f0ab80 [actions] update checkout action 8da4b91 [Dev Deps] update eslint , @ljharb/eslint-config , @safe-publish-latest , tape 7ab37aa [readme] add github actions/codecov badges 71234be [Fix] assert : throw on a nonexistent slot even when an object already has other slots 12580bd [Tests] use for-each instead of foreach 7229df0 [meta] use prepublishOnly script for npm 7+ 8728872 [Deps] update get-intrinsic 1b7088f [Deps] update get-intrinsic 063621e v1.0.3 26 January 2021 [Tests] use shared travis-ci configs 0ef2263 [Tests] migrate tests to Github Actions 6253915 [meta] do not publish github action workflow files ef94e55 [Tests] run nyc on all tests; use tape runner 917d6ca [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 8dcb6fe [actions] add \"Allow Edits\" workflow 7aa3e86 [Refactor] use get-intrinsic instead of es-abstract ; update side-channel 11ad17d [readme] remove travis badge 5b75452 [actions] switch Automatic Rebase workflow to pull_request_target event d531688 [Dev Deps] update @ljharb/eslint-config , tape c76fa91 [Dev Deps] update eslint , tape e733ccd [Dev Deps] update auto-changelog ; add aud df20bf5 [meta] fix autochangelog e89e6f1 [Tests] only audit prod deps 71317b9 [Deps] update es-abstract c17ccf4 [Dev Deps] update tape d81ae03 [Deps] update es-abstract b56303b [Deps] update es-abstract 9996d1c v1.0.2 20 December 2019 [Deps] update es-abstract , side-channel 5c9df03 [Dev Deps] update @ljharb/eslint-config , tape 7820f98 v1.0.1 1 December 2019 [Refactor] use side-channel package d38639f [actions] add automatic rebasing / merge commit blocking 74267e6 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest b042eef [Deps] update es-abstract 98cf4e8 v1.0.0 20 October 2019 Tests b50fa41 implementation c5a59f3 Initial commit 15ebe4d readme 382a3f5 npm init d5e7c97 [meta] add FUNDING.yml 685b608 [meta] add auto-changelog , safe-publish-latest f8fdf1c [Tests] add npm run lint baaaa09 Only apps should have lockfiles dfa7efa","title":"CHANGELOG"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. Dates are displayed in UTC. Generated by auto-changelog .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v107","text":"5 February 2024 [Dev Deps] update aud , npmignore , tape 89c88c1 [Refactor] use es-errors , so things that only need those do not need get-intrinsic b437631","title":"v1.0.7"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v106","text":"20 October 2023 [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape 4d568d2 [Refactor] use hasown instead of has f946e94 [Deps] update get-intrinsic 1bbc885 [meta] remove unused .eslintignore 6fdde1a","title":"v1.0.6"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v105","text":"9 February 2023 [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape e427703 [Deps] update get-intrinsic aa652f0 [Fix] improve assertion message 8df86e3","title":"v1.0.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v104","text":"13 December 2022 [actions] reuse common workflows 82a1aee [meta] use npmignore to autogenerate an npmignore file 56f7e71 [actions] use node/install instead of node/run ; use codecov action e25ff67 [actions] update rebase action to use reusable workflow 227e81e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , foreach , object-inspect , tape fc9f319 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest , tape 0a72a0f [actions] update codecov uploader e2b993f [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 8f0ab80 [actions] update checkout action 8da4b91 [Dev Deps] update eslint , @ljharb/eslint-config , @safe-publish-latest , tape 7ab37aa [readme] add github actions/codecov badges 71234be [Fix] assert : throw on a nonexistent slot even when an object already has other slots 12580bd [Tests] use for-each instead of foreach 7229df0 [meta] use prepublishOnly script for npm 7+ 8728872 [Deps] update get-intrinsic 1b7088f [Deps] update get-intrinsic 063621e","title":"v1.0.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v103","text":"26 January 2021 [Tests] use shared travis-ci configs 0ef2263 [Tests] migrate tests to Github Actions 6253915 [meta] do not publish github action workflow files ef94e55 [Tests] run nyc on all tests; use tape runner 917d6ca [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 8dcb6fe [actions] add \"Allow Edits\" workflow 7aa3e86 [Refactor] use get-intrinsic instead of es-abstract ; update side-channel 11ad17d [readme] remove travis badge 5b75452 [actions] switch Automatic Rebase workflow to pull_request_target event d531688 [Dev Deps] update @ljharb/eslint-config , tape c76fa91 [Dev Deps] update eslint , tape e733ccd [Dev Deps] update auto-changelog ; add aud df20bf5 [meta] fix autochangelog e89e6f1 [Tests] only audit prod deps 71317b9 [Deps] update es-abstract c17ccf4 [Dev Deps] update tape d81ae03 [Deps] update es-abstract b56303b [Deps] update es-abstract 9996d1c","title":"v1.0.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v102","text":"20 December 2019 [Deps] update es-abstract , side-channel 5c9df03 [Dev Deps] update @ljharb/eslint-config , tape 7820f98","title":"v1.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v101","text":"1 December 2019 [Refactor] use side-channel package d38639f [actions] add automatic rebasing / merge commit blocking 74267e6 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest b042eef [Deps] update es-abstract 98cf4e8","title":"v1.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/internal-slot/CHANGELOG/#v100","text":"20 October 2019 Tests b50fa41 implementation c5a59f3 Initial commit 15ebe4d readme 382a3f5 npm init d5e7c97 [meta] add FUNDING.yml 685b608 [meta] add auto-changelog , safe-publish-latest f8fdf1c [Tests] add npm run lint baaaa09 Only apps should have lockfiles dfa7efa","title":"v1.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/","text":"is-array-buffer Is this value a JS ArrayBuffer? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag. Example var assert = require('assert'); var isArrayBuffer = require('is-array-buffer'); assert(!isArrayBuffer(function () {})); assert(!isArrayBuffer(null)); assert(!isArrayBuffer(function* () { yield 42; return Infinity; }); assert(!isArrayBuffer(Symbol('foo'))); assert(!isArrayBuffer(1n)); assert(!isArrayBuffer(Object(1n))); assert(!isArrayBuffer(new Set())); assert(!isArrayBuffer(new WeakSet())); assert(!isArrayBuffer(new Map())); assert(!isArrayBuffer(new WeakMap())); assert(!isArrayBuffer(new WeakRef({}))); assert(!isArrayBuffer(new FinalizationRegistry(() => {}))); assert(!isArrayBuffer(new SharedArrayBuffer())); assert(isArrayBuffer(new ArrayBuffer())); class MyArrayBuffer extends ArrayBuffer {} assert(isArrayBuffer(new MyArrayBuffer())); Tests Simply clone the repo, npm install , and run npm test","title":"is-array-buffer Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/#is-array-buffer","text":"Is this value a JS ArrayBuffer? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag.","title":"is-array-buffer"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/#example","text":"var assert = require('assert'); var isArrayBuffer = require('is-array-buffer'); assert(!isArrayBuffer(function () {})); assert(!isArrayBuffer(null)); assert(!isArrayBuffer(function* () { yield 42; return Infinity; }); assert(!isArrayBuffer(Symbol('foo'))); assert(!isArrayBuffer(1n)); assert(!isArrayBuffer(Object(1n))); assert(!isArrayBuffer(new Set())); assert(!isArrayBuffer(new WeakSet())); assert(!isArrayBuffer(new Map())); assert(!isArrayBuffer(new WeakMap())); assert(!isArrayBuffer(new WeakRef({}))); assert(!isArrayBuffer(new FinalizationRegistry(() => {}))); assert(!isArrayBuffer(new SharedArrayBuffer())); assert(isArrayBuffer(new ArrayBuffer())); class MyArrayBuffer extends ArrayBuffer {} assert(isArrayBuffer(new MyArrayBuffer()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v3.0.4 - 2024-02-02 Commits [patch] add types 15fab4c v3.0.3 - 2024-02-02 Commits [Fix] TAs can take a DataView in node 0.8; use a simpler check 69a03f6 [Dev Deps] update aud , available-typed-arrays , npmignore , object-inspect , tape 53ca341 [Deps] update call-bind , get-intrinsic , is-typed-array bec883f [Dev Deps] update @ljharb/eslint-config , aud , tape 944d4ce [meta] add missing engines.node 0852be6 [Deps] update get-intrinsic b59c4af v3.0.2 - 2023-03-01 Commits [Fix] node 0.8: an object arg to a TA only throws a RangeError when it is an ArrayBuffer of an incompatible byte length d5108f6 [Dev Deps] update object-inspect , tape 400f456 [Deps] update get-intrinsic 133732e v3.0.1 - 2023-01-05 Commits [Fix] in node 0.8, TAs do not coerce Uint8Arrays to an ArrayBuffer properly e488763 [Dev Deps] update @ljharb/eslint-config , aud 8eebfa2 v3.0.0 - 2023-01-04 Commits [Breaking] replace package implementation b65f929 Initial implementation, tests, readme 06afa73 Initial commit 051813f npm init 946d3de [meta] use npmignore to autogenerate an npmignore file ca4c446 Only apps should have lockfiles be7d8eb docs: fix badge link 9ea7fb6 2.0.0 (Feb 12, 2021) Refactor in TypeScript. Drop the dist directory. Drop the UMD bundled file. Add a declaration file for TypeScript. 1.0.1 (Apr 1, 2018) Improve code style. 1.0.0 (Jul 25, 2017) Supports UMD, CommonJS and ES Module. 0.1.0 (Nov 28, 2015) Check if ArrayBuffer is defined first. 0.0.1 (Nov 11, 2015) Initial release.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#v304-2024-02-02","text":"","title":"v3.0.4 - 2024-02-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#commits","text":"[patch] add types 15fab4c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#v303-2024-02-02","text":"","title":"v3.0.3 - 2024-02-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#commits_1","text":"[Fix] TAs can take a DataView in node 0.8; use a simpler check 69a03f6 [Dev Deps] update aud , available-typed-arrays , npmignore , object-inspect , tape 53ca341 [Deps] update call-bind , get-intrinsic , is-typed-array bec883f [Dev Deps] update @ljharb/eslint-config , aud , tape 944d4ce [meta] add missing engines.node 0852be6 [Deps] update get-intrinsic b59c4af","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#v302-2023-03-01","text":"","title":"v3.0.2 - 2023-03-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#commits_2","text":"[Fix] node 0.8: an object arg to a TA only throws a RangeError when it is an ArrayBuffer of an incompatible byte length d5108f6 [Dev Deps] update object-inspect , tape 400f456 [Deps] update get-intrinsic 133732e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#v301-2023-01-05","text":"","title":"v3.0.1 - 2023-01-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#commits_3","text":"[Fix] in node 0.8, TAs do not coerce Uint8Arrays to an ArrayBuffer properly e488763 [Dev Deps] update @ljharb/eslint-config , aud 8eebfa2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#v300-2023-01-04","text":"","title":"v3.0.0 - 2023-01-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#commits_4","text":"[Breaking] replace package implementation b65f929 Initial implementation, tests, readme 06afa73 Initial commit 051813f npm init 946d3de [meta] use npmignore to autogenerate an npmignore file ca4c446 Only apps should have lockfiles be7d8eb docs: fix badge link 9ea7fb6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#200-feb-12-2021","text":"Refactor in TypeScript. Drop the dist directory. Drop the UMD bundled file. Add a declaration file for TypeScript.","title":"2.0.0 (Feb 12, 2021)"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#101-apr-1-2018","text":"Improve code style.","title":"1.0.1 (Apr 1, 2018)"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#100-jul-25-2017","text":"Supports UMD, CommonJS and ES Module.","title":"1.0.0 (Jul 25, 2017)"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#010-nov-28-2015","text":"Check if ArrayBuffer is defined first.","title":"0.1.0 (Nov 28, 2015)"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-array-buffer/CHANGELOG/#001-nov-11-2015","text":"Initial release.","title":"0.0.1 (Nov 11, 2015)"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/","text":"is-async-function Is this a native async function ? Example var isAsyncFunction = require('is-async-function'); assert(!isAsyncFunction(function () {})); assert(!isAsyncFunction(null)); assert(!isAsyncFunction(function* () { yield 42; return Infinity; })); assert(isAsyncFunction(async function () {})); Tests Simply clone the repo, npm install , and run npm test","title":"is-async-function Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/#is-async-function","text":"Is this a native async function ?","title":"is-async-function"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/#example","text":"var isAsyncFunction = require('is-async-function'); assert(!isAsyncFunction(function () {})); assert(!isAsyncFunction(null)); assert(!isAsyncFunction(function* () { yield 42; return Infinity; })); assert(isAsyncFunction(async function () {}));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.0 - 2022-04-11 Commits [Breaking] v2 implementation and tests d79a37e Initial commit 456defc npm init d35b611 Only apps should have lockfiles 5920874 v1.3.0 - 2020-01-15 Commits feat: update deps, ci, readme dbb52a7 chore(release): 1.3.0 972e26c v1.2.4 - 2020-01-15 Merged fix(src): remove unneeded condition #16 Fixed fix: update deps + the tests; close #17 #17 Commits chore: update broken badge links 2985e36 chore: add github funding file 377233a chore: all modules are stable for years b7db9f0 chore(release): 1.2.4 a9f441f fix: add npm funding field c05ef28 chore: drop testing on old Node versions c975f68 chore(ci): test on 6 only 106dcdd v1.2.3 - 2017-03-11 Commits fix(style): remove lazy-cache, and update boilerplate stuff abd32db fix(docs): regenerate readme 592f1b7 fix(package): add missing dependency 73f404d chore(release): 1.2.3 103cf28 fix(package): wrong version, because too fast update ;d 2e887f0 v1.2.2 - 2016-10-29 Fixed fix(docs): fixes and updates API docs #14 Commits chore(release): 1.2.2 9165f94 v1.2.1 - 2016-10-27 Fixed fix(non-strict): fix a bug in non-strict mode #13 Commits chore(release): 1.2.1 f4c7f02 v1.2.0 - 2016-10-27 Merged Revert \"Update arr-includes to version 2.0.0 \ud83d\ude80\" #12 chore(package): update arr-includes to version 2.0.0 #11 Commits feat(strict): introduce strict mode ef8526f docs(update): api docs 739eb54 chore(release): 1.2.0 3222afe v1.1.5 - 2016-09-21 Commits chore(tests): simplify tests be112bb Release v1.1.5 577d96c v1.1.4 - 2016-09-21 Fixed chore(package): update deps, use lazy-cache - closes #10 #10 Commits chore(package/tests): update to use mukla instead of assertit lib 83011b1 chore(package): update npm scripts, add coveralls/standard/nyc to devDeps 631acbd chore(gitignore): update gitignore 7f09f8f chore(editorconfig): update editorconfig 8bb8593 docs(readme): run verb to update readme cf15044 Release v1.1.4 41190e1 v1.1.3 - 2016-04-21 Merged chore(package): update is-match to version 0.4.1 #7 Commits use common-callback-names 37c253f Release v1.1.3 f212193 v1.1.2 - 2016-03-18 Commits cleanup and update metadata e09ab8b update docs 42920c6 Release v1.1.2 19d77d6 v1.1.1 - 2016-03-18 Commits run update 27b21bf add docs ab38f94 update docs 90654c9 refactor, allow passing custom array of argument names a1787c7 add related libs 868f423 Release v1.1.1 bc7d85e update description ce2e97b v1.1.0 - 2015-06-25 Commits Release v1.1.0 b3f3704 update metadata 95e6bc2 check also for done and next 6697d29 v1.0.0 - 2015-06-05 Commits :cat2: implement :star2: eaccc68 add keywords 55a5ffc Release v1.0.0 66eab5f refactor a7ce00d add test for when throw 60d0175 add related section 904acd8 simplify travis ee17273 Initial commit 7e914c1","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v200-2022-04-11","text":"","title":"v2.0.0 - 2022-04-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits","text":"[Breaking] v2 implementation and tests d79a37e Initial commit 456defc npm init d35b611 Only apps should have lockfiles 5920874","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v130-2020-01-15","text":"","title":"v1.3.0 - 2020-01-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_1","text":"feat: update deps, ci, readme dbb52a7 chore(release): 1.3.0 972e26c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v124-2020-01-15","text":"","title":"v1.2.4 - 2020-01-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#merged","text":"fix(src): remove unneeded condition #16","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#fixed","text":"fix: update deps + the tests; close #17 #17","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_2","text":"chore: update broken badge links 2985e36 chore: add github funding file 377233a chore: all modules are stable for years b7db9f0 chore(release): 1.2.4 a9f441f fix: add npm funding field c05ef28 chore: drop testing on old Node versions c975f68 chore(ci): test on 6 only 106dcdd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v123-2017-03-11","text":"","title":"v1.2.3 - 2017-03-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_3","text":"fix(style): remove lazy-cache, and update boilerplate stuff abd32db fix(docs): regenerate readme 592f1b7 fix(package): add missing dependency 73f404d chore(release): 1.2.3 103cf28 fix(package): wrong version, because too fast update ;d 2e887f0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v122-2016-10-29","text":"","title":"v1.2.2 - 2016-10-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#fixed_1","text":"fix(docs): fixes and updates API docs #14","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_4","text":"chore(release): 1.2.2 9165f94","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v121-2016-10-27","text":"","title":"v1.2.1 - 2016-10-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#fixed_2","text":"fix(non-strict): fix a bug in non-strict mode #13","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_5","text":"chore(release): 1.2.1 f4c7f02","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v120-2016-10-27","text":"","title":"v1.2.0 - 2016-10-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#merged_1","text":"Revert \"Update arr-includes to version 2.0.0 \ud83d\ude80\" #12 chore(package): update arr-includes to version 2.0.0 #11","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_6","text":"feat(strict): introduce strict mode ef8526f docs(update): api docs 739eb54 chore(release): 1.2.0 3222afe","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v115-2016-09-21","text":"","title":"v1.1.5 - 2016-09-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_7","text":"chore(tests): simplify tests be112bb Release v1.1.5 577d96c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v114-2016-09-21","text":"","title":"v1.1.4 - 2016-09-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#fixed_3","text":"chore(package): update deps, use lazy-cache - closes #10 #10","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_8","text":"chore(package/tests): update to use mukla instead of assertit lib 83011b1 chore(package): update npm scripts, add coveralls/standard/nyc to devDeps 631acbd chore(gitignore): update gitignore 7f09f8f chore(editorconfig): update editorconfig 8bb8593 docs(readme): run verb to update readme cf15044 Release v1.1.4 41190e1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v113-2016-04-21","text":"","title":"v1.1.3 - 2016-04-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#merged_2","text":"chore(package): update is-match to version 0.4.1 #7","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_9","text":"use common-callback-names 37c253f Release v1.1.3 f212193","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v112-2016-03-18","text":"","title":"v1.1.2 - 2016-03-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_10","text":"cleanup and update metadata e09ab8b update docs 42920c6 Release v1.1.2 19d77d6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v111-2016-03-18","text":"","title":"v1.1.1 - 2016-03-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_11","text":"run update 27b21bf add docs ab38f94 update docs 90654c9 refactor, allow passing custom array of argument names a1787c7 add related libs 868f423 Release v1.1.1 bc7d85e update description ce2e97b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v110-2015-06-25","text":"","title":"v1.1.0 - 2015-06-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_12","text":"Release v1.1.0 b3f3704 update metadata 95e6bc2 check also for done and next 6697d29","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#v100-2015-06-05","text":"","title":"v1.0.0 - 2015-06-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-async-function/CHANGELOG/#commits_13","text":":cat2: implement :star2: eaccc68 add keywords 55a5ffc Release v1.0.0 66eab5f refactor a7ce00d add test for when throw 60d0175 add related section 904acd8 simplify travis ee17273 Initial commit 7e914c1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/","text":"is-bigint Is this an ES BigInt value? Example var isBigInt = require('is-bigint'); assert(!isBigInt(function () {})); assert(!isBigInt(null)); assert(!isBigInt(function* () { yield 42; return Infinity; }); assert(!isBigInt(Symbol('foo'))); assert(isBigInt(1n)); assert(isBigInt(Object(1n))); Tests Simply clone the repo, npm install , and run npm test","title":"is-bigint Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/#is-bigint","text":"Is this an ES BigInt value?","title":"is-bigint"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/#example","text":"var isBigInt = require('is-bigint'); assert(!isBigInt(function () {})); assert(!isBigInt(null)); assert(!isBigInt(function* () { yield 42; return Infinity; }); assert(!isBigInt(Symbol('foo'))); assert(isBigInt(1n)); assert(isBigInt(Object(1n)));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.4 - 2021-08-11 Commits [eslint] remove unnecessary eslintrc file 7220aa5 [readme] add github actions/codecov badges 053a071 [Deps] add has-bigints as a runtime dependency 0fc3c9d [Dev Deps] update tape 145f11d v1.0.3 - 2021-08-06 Commits [Tests] use has-tostringtag for easier checking of Symbol.toStringTag 3b44080 [Dev Deps] update auto-changelog , eslint , object-inspect , tape e4d4a6c [Fix] use has-bigints for more robust BigInt detection 7bb9d7a v1.0.2 - 2021-05-04 Commits [meta] do not publish github action workflow files 276d677 [actions] use node/install instead of node/run ; use codecov action cea7fb6 [readme] fix repo URLs; remove travis badge c8e7c36 [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , object-inspect , tape 32f3d90 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , tape c2f20f5 [meta] remove unneeded token; update checkout action 94e46e9 [meta] use prepublishOnly script for npm 7+ 3e663ec v1.0.1 - 2020-11-30 Commits [Tests] use shared travis-ci configs 28f1211 [Tests] migrate tests to Github Actions 0998c64 [meta] add auto-changelog 2352de6 [Tests] run nyc on all tests 9c16a9a [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , tape 4cd0edd [actions] add automatic rebasing / merge commit blocking f0f4b91 [actions] add \"Allow Edits\" workflow 7f4f46e [meta] create FUNDING.yml 2d0cb9a [Dev Deps] update eslint , @ljharb/eslint-config , aud 0ee110e [Dev Deps] update eslint , @ljharb/eslint-config , has-symbols , object-inspect , tape 5bb7f3a [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape d3d67d0 [Dev Deps] update auto-changelog , tape 54e270f [Dev Deps] update @ljharb/eslint-config , tape d82bfe7 [Dev Deps] update auto-changelog ; add aud 9c34bd1 [Tests] add missing posttest script 0690bd9 [meta] add funding field 7ca36d0 [actions] switch Automatic Rebase workflow to pull_request_target event 5ffa8da [Dev Deps] update eslint 8512c2f [Tests] only audit prod deps f2147dc [readme] fix header d6eff75 v1.0.0 - 2018-09-20 Commits [Tests] add tests 847f12a Initial commit b53f3c6 readme 66c15fe Implementation c2c0974 package.json 98b174c Only apps should have lockfiles a77c74b","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#v104-2021-08-11","text":"","title":"v1.0.4 - 2021-08-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#commits","text":"[eslint] remove unnecessary eslintrc file 7220aa5 [readme] add github actions/codecov badges 053a071 [Deps] add has-bigints as a runtime dependency 0fc3c9d [Dev Deps] update tape 145f11d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#v103-2021-08-06","text":"","title":"v1.0.3 - 2021-08-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#commits_1","text":"[Tests] use has-tostringtag for easier checking of Symbol.toStringTag 3b44080 [Dev Deps] update auto-changelog , eslint , object-inspect , tape e4d4a6c [Fix] use has-bigints for more robust BigInt detection 7bb9d7a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#v102-2021-05-04","text":"","title":"v1.0.2 - 2021-05-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#commits_2","text":"[meta] do not publish github action workflow files 276d677 [actions] use node/install instead of node/run ; use codecov action cea7fb6 [readme] fix repo URLs; remove travis badge c8e7c36 [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , object-inspect , tape 32f3d90 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , tape c2f20f5 [meta] remove unneeded token; update checkout action 94e46e9 [meta] use prepublishOnly script for npm 7+ 3e663ec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#v101-2020-11-30","text":"","title":"v1.0.1 - 2020-11-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#commits_3","text":"[Tests] use shared travis-ci configs 28f1211 [Tests] migrate tests to Github Actions 0998c64 [meta] add auto-changelog 2352de6 [Tests] run nyc on all tests 9c16a9a [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , tape 4cd0edd [actions] add automatic rebasing / merge commit blocking f0f4b91 [actions] add \"Allow Edits\" workflow 7f4f46e [meta] create FUNDING.yml 2d0cb9a [Dev Deps] update eslint , @ljharb/eslint-config , aud 0ee110e [Dev Deps] update eslint , @ljharb/eslint-config , has-symbols , object-inspect , tape 5bb7f3a [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape d3d67d0 [Dev Deps] update auto-changelog , tape 54e270f [Dev Deps] update @ljharb/eslint-config , tape d82bfe7 [Dev Deps] update auto-changelog ; add aud 9c34bd1 [Tests] add missing posttest script 0690bd9 [meta] add funding field 7ca36d0 [actions] switch Automatic Rebase workflow to pull_request_target event 5ffa8da [Dev Deps] update eslint 8512c2f [Tests] only audit prod deps f2147dc [readme] fix header d6eff75","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#v100-2018-09-20","text":"","title":"v1.0.0 - 2018-09-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-bigint/CHANGELOG/#commits_4","text":"[Tests] add tests 847f12a Initial commit b53f3c6 readme 66c15fe Implementation c2c0974 package.json 98b174c Only apps should have lockfiles a77c74b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/","text":"is-boolean-object Is this value a JS Boolean? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isBoolean = require('is-boolean-object'); var assert = require('assert'); assert.notOk(isBoolean(undefined)); assert.notOk(isBoolean(null)); assert.notOk(isBoolean('foo')); assert.notOk(isBoolean(function () {})); assert.notOk(isBoolean([])); assert.notOk(isBoolean({})); assert.notOk(isBoolean(/a/g)); assert.notOk(isBoolean(new RegExp('a', 'g'))); assert.notOk(isBoolean(new Date())); assert.notOk(isBoolean(42)); assert.notOk(isBoolean(NaN)); assert.notOk(isBoolean(Infinity)); assert.ok(isBoolean(new Boolean(42))); assert.ok(isBoolean(false)); assert.ok(isBoolean(Object(false))); assert.ok(isBoolean(true)); assert.ok(isBoolean(Object(true))); Tests Simply clone the repo, npm install , and run npm test","title":"is-boolean-object Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/#is-boolean-object","text":"Is this value a JS Boolean? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-boolean-object"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/#example","text":"var isBoolean = require('is-boolean-object'); var assert = require('assert'); assert.notOk(isBoolean(undefined)); assert.notOk(isBoolean(null)); assert.notOk(isBoolean('foo')); assert.notOk(isBoolean(function () {})); assert.notOk(isBoolean([])); assert.notOk(isBoolean({})); assert.notOk(isBoolean(/a/g)); assert.notOk(isBoolean(new RegExp('a', 'g'))); assert.notOk(isBoolean(new Date())); assert.notOk(isBoolean(42)); assert.notOk(isBoolean(NaN)); assert.notOk(isBoolean(Infinity)); assert.ok(isBoolean(new Boolean(42))); assert.ok(isBoolean(false)); assert.ok(isBoolean(Object(false))); assert.ok(isBoolean(true)); assert.ok(isBoolean(Object(true)));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.2 - 2021-08-05 Commits [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 6d319ea [Dev Deps] update auto-changelog , core-js , eslint , tape 4f85bef v1.1.1 - 2021-05-07 Commits [actions] use node/install instead of node/run ; use codecov action 7201c41 [Tests] run tests with core-js as well 9590e61 [meta] do not publish github action workflow files 341472b [readme] update repo URLs; remove travis badge 9fdbbc6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1cd35c9 [readme] add actions and codecov badges 03769fe [Dev Deps] update eslint , @ljharb/eslint-config , tape db6598c [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed e0b8a9f [readme] remove defunct testling badge 986a621 [meta] use prepublishOnly script for npm 7+ 7bb3b29 [Deps] update call-bind 3af6a71 [meta] do not publish corejs test file d911f03 [actions] update workflows 9bb3d90 v1.1.0 - 2020-12-05 Commits [Tests] migrate tests to Github Actions 6cdb652 [Tests] run nyc on all tests 9a33076 [Tests] add .editorconfig bb401c0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 5cb2405 [Robustness] use call-bind to avoid a dependency on .call 76d87ae [actions] add \"Allow Edits\" workflow 337206a [Dev Deps] update eslint , @ljharb/eslint-config , tape 11f0481 [Dev Deps] update eslint , @ljharb/eslint-config , tape b9602c8 [Dev Deps] update auto-changelog , tape ; add aud 999e9e2 [actions] switch Automatic Rebase workflow to pull_request_target event bbb6728 v1.0.1 - 2019-12-18 Commits [Tests] use shared travis-ci configs a1778b8 Update eslint ; use my personal shared eslint config. 2c42c50 [Tests] remove jscs 3807025 [Tests] up to node v8.4 , v7.10 , v6.11 , v5.12 , v4.8 ; improve matrix; newer npm breaks in older node; improve scripts. a02b986 [Dev Deps] update eslint , @ljharb/eslint-config , is , jscs , nsp , semver , tape d9030a9 Update eslint , nsp a1b6388 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ; use nvm install-latest-npm 17a0fd3 [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 0b1818f [meta] remove unused Makefile and associated utilities 33dc0ae Update covert , jscs , eslint , semver 7e513c1 [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 992b849 [meta] add auto-changelog 63d71b8 Update tape , eslint , semver 76aea69 Update tape , jscs , eslint , @ljharb/eslint-config a6cbec0 [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape ; add safe-publish-latest 7cf6bb0 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest 57d713c [actions] add automatic rebasing / merge commit blocking f7a2bdb [meta] create FUNDING.yml 9765e73 [Dev Deps] update eslint , @ljharb/eslint-config , is , replace , semver , tape 5c16b56 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 5717aad [Dev Deps] update is , jscs , nsp , eslint , @ljharb/eslint-config , semver 80b924d [Dev Deps] update jscs 2e5479e Test up to io.js v2.2 93379a4 [Tests] remove nsp ; use npm audit ; allow to fail for now 36ae30a [Tests] up to io.js v3.3 , node v4.1 ef76976 [Tests] use npx aud instead of nsp or npm audit with hoops a1182bd [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 4f79b47 [Tests] up to node v10.3 5e96464 [Dev Deps] update eslint , nsp , semver , tape e1eb3fa Only apps should have lockfiles. c7f301f [meta] add funding field fad0366 [Dev Deps] update eslint , @ljharb/eslint-config 80d39d9 [Tests] use eclint instead of editorconfig-tools 980e91b [Dev Deps] Update tape , eslint 9960830 Test up to io.js v3.0 a3c3cd0 [Dev Deps] update tape 217fbd6 [Tests] only audit prod deps 89284ee [Performance] only use toStringTag code path when the value has that property 2863bc5 [Dev Deps] update replace 53e72a5 [Enhancement] slight optimization for null a90a3c4 [Dev Deps] update tape 9377bd5 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 3085530 Test on io.js v2.4 8af335c Test on io.js v2.3 1eb3424 v1.0.0 - 2015-04-28 Commits Dotfiles 6b9b998 make release d5e50b3 package.json 117676a Read me ef327a7 Initial commit 2346886 Tests 67211f8 Implementation 2d88bd6","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#v112-2021-08-05","text":"","title":"v1.1.2 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#commits","text":"[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 6d319ea [Dev Deps] update auto-changelog , core-js , eslint , tape 4f85bef","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#v111-2021-05-07","text":"","title":"v1.1.1 - 2021-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#commits_1","text":"[actions] use node/install instead of node/run ; use codecov action 7201c41 [Tests] run tests with core-js as well 9590e61 [meta] do not publish github action workflow files 341472b [readme] update repo URLs; remove travis badge 9fdbbc6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1cd35c9 [readme] add actions and codecov badges 03769fe [Dev Deps] update eslint , @ljharb/eslint-config , tape db6598c [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed e0b8a9f [readme] remove defunct testling badge 986a621 [meta] use prepublishOnly script for npm 7+ 7bb3b29 [Deps] update call-bind 3af6a71 [meta] do not publish corejs test file d911f03 [actions] update workflows 9bb3d90","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#v110-2020-12-05","text":"","title":"v1.1.0 - 2020-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions 6cdb652 [Tests] run nyc on all tests 9a33076 [Tests] add .editorconfig bb401c0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 5cb2405 [Robustness] use call-bind to avoid a dependency on .call 76d87ae [actions] add \"Allow Edits\" workflow 337206a [Dev Deps] update eslint , @ljharb/eslint-config , tape 11f0481 [Dev Deps] update eslint , @ljharb/eslint-config , tape b9602c8 [Dev Deps] update auto-changelog , tape ; add aud 999e9e2 [actions] switch Automatic Rebase workflow to pull_request_target event bbb6728","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#v101-2019-12-18","text":"","title":"v1.0.1 - 2019-12-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#commits_3","text":"[Tests] use shared travis-ci configs a1778b8 Update eslint ; use my personal shared eslint config. 2c42c50 [Tests] remove jscs 3807025 [Tests] up to node v8.4 , v7.10 , v6.11 , v5.12 , v4.8 ; improve matrix; newer npm breaks in older node; improve scripts. a02b986 [Dev Deps] update eslint , @ljharb/eslint-config , is , jscs , nsp , semver , tape d9030a9 Update eslint , nsp a1b6388 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ; use nvm install-latest-npm 17a0fd3 [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 0b1818f [meta] remove unused Makefile and associated utilities 33dc0ae Update covert , jscs , eslint , semver 7e513c1 [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 992b849 [meta] add auto-changelog 63d71b8 Update tape , eslint , semver 76aea69 Update tape , jscs , eslint , @ljharb/eslint-config a6cbec0 [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape ; add safe-publish-latest 7cf6bb0 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest 57d713c [actions] add automatic rebasing / merge commit blocking f7a2bdb [meta] create FUNDING.yml 9765e73 [Dev Deps] update eslint , @ljharb/eslint-config , is , replace , semver , tape 5c16b56 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 5717aad [Dev Deps] update is , jscs , nsp , eslint , @ljharb/eslint-config , semver 80b924d [Dev Deps] update jscs 2e5479e Test up to io.js v2.2 93379a4 [Tests] remove nsp ; use npm audit ; allow to fail for now 36ae30a [Tests] up to io.js v3.3 , node v4.1 ef76976 [Tests] use npx aud instead of nsp or npm audit with hoops a1182bd [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 4f79b47 [Tests] up to node v10.3 5e96464 [Dev Deps] update eslint , nsp , semver , tape e1eb3fa Only apps should have lockfiles. c7f301f [meta] add funding field fad0366 [Dev Deps] update eslint , @ljharb/eslint-config 80d39d9 [Tests] use eclint instead of editorconfig-tools 980e91b [Dev Deps] Update tape , eslint 9960830 Test up to io.js v3.0 a3c3cd0 [Dev Deps] update tape 217fbd6 [Tests] only audit prod deps 89284ee [Performance] only use toStringTag code path when the value has that property 2863bc5 [Dev Deps] update replace 53e72a5 [Enhancement] slight optimization for null a90a3c4 [Dev Deps] update tape 9377bd5 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 3085530 Test on io.js v2.4 8af335c Test on io.js v2.3 1eb3424","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#v100-2015-04-28","text":"","title":"v1.0.0 - 2015-04-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-boolean-object/CHANGELOG/#commits_4","text":"Dotfiles 6b9b998 make release d5e50b3 package.json 117676a Read me ef327a7 Initial commit 2346886 Tests 67211f8 Implementation 2d88bd6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/","text":"is-callable Is this JS value callable? Works with Functions and GeneratorFunctions, despite ES6 @@toStringTag. Supported engines Automatically tested in every minor version of node. Manually tested in: - Safari: v4 - v15 (4, 5, 5.1, 6.0.5, 6.2, 7.1, 8, 9.1.3, 10.1.2, 11.1.2, 12.1, 13.1.2, 14.1.2, 15.3, 15.6.1) - Note: Safari 9 has class , but Function.prototype.toString hides that progeny and makes them look like functions, so class constructors will be reported by this package as callable, when they are not in fact callable. - Chrome: v15 - v81, v83 - v106 (every integer version) - Note: This includes Edge v80+ and Opera v15+, which matches Chrome - Firefox: v3, v3.6, v4 - v105 (every integer version) - Note: v45 - v54 has class , but Function.prototype.toString hides that progeny and makes them look like functions, so class constructors will be reported by this package as callable, when they are not in fact callable. - Note: in v42 - v63, Function.prototype.toString throws on HTML element constructors, or a Proxy to a function - Note: in v20 - v35, HTML element constructors are not callable, despite having typeof function . - Note: in v19, document.all is not callable. - IE: v6 - v11 (every integer version - Opera: v11.1, v11.5, v11.6, v12.1, v12.14, v12.15, v12.16, v15+ v15+ matches Chrome Example var isCallable = require('is-callable'); var assert = require('assert'); assert.notOk(isCallable(undefined)); assert.notOk(isCallable(null)); assert.notOk(isCallable(false)); assert.notOk(isCallable(true)); assert.notOk(isCallable([])); assert.notOk(isCallable({})); assert.notOk(isCallable(/a/g)); assert.notOk(isCallable(new RegExp('a', 'g'))); assert.notOk(isCallable(new Date())); assert.notOk(isCallable(42)); assert.notOk(isCallable(NaN)); assert.notOk(isCallable(Infinity)); assert.notOk(isCallable(new Number(42))); assert.notOk(isCallable('foo')); assert.notOk(isCallable(Object('foo'))); assert.ok(isCallable(function () {})); assert.ok(isCallable(function* () {})); assert.ok(isCallable(x => x * x)); Install Install with npm install is-callable Tests Simply clone the repo, npm install , and run npm test","title":"is-callable Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/#is-callable","text":"Is this JS value callable? Works with Functions and GeneratorFunctions, despite ES6 @@toStringTag.","title":"is-callable"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/#supported-engines","text":"Automatically tested in every minor version of node. Manually tested in: - Safari: v4 - v15 (4, 5, 5.1, 6.0.5, 6.2, 7.1, 8, 9.1.3, 10.1.2, 11.1.2, 12.1, 13.1.2, 14.1.2, 15.3, 15.6.1) - Note: Safari 9 has class , but Function.prototype.toString hides that progeny and makes them look like functions, so class constructors will be reported by this package as callable, when they are not in fact callable. - Chrome: v15 - v81, v83 - v106 (every integer version) - Note: This includes Edge v80+ and Opera v15+, which matches Chrome - Firefox: v3, v3.6, v4 - v105 (every integer version) - Note: v45 - v54 has class , but Function.prototype.toString hides that progeny and makes them look like functions, so class constructors will be reported by this package as callable, when they are not in fact callable. - Note: in v42 - v63, Function.prototype.toString throws on HTML element constructors, or a Proxy to a function - Note: in v20 - v35, HTML element constructors are not callable, despite having typeof function . - Note: in v19, document.all is not callable. - IE: v6 - v11 (every integer version - Opera: v11.1, v11.5, v11.6, v12.1, v12.14, v12.15, v12.16, v15+ v15+ matches Chrome","title":"Supported engines"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/#example","text":"var isCallable = require('is-callable'); var assert = require('assert'); assert.notOk(isCallable(undefined)); assert.notOk(isCallable(null)); assert.notOk(isCallable(false)); assert.notOk(isCallable(true)); assert.notOk(isCallable([])); assert.notOk(isCallable({})); assert.notOk(isCallable(/a/g)); assert.notOk(isCallable(new RegExp('a', 'g'))); assert.notOk(isCallable(new Date())); assert.notOk(isCallable(42)); assert.notOk(isCallable(NaN)); assert.notOk(isCallable(Infinity)); assert.notOk(isCallable(new Number(42))); assert.notOk(isCallable('foo')); assert.notOk(isCallable(Object('foo'))); assert.ok(isCallable(function () {})); assert.ok(isCallable(function* () {})); assert.ok(isCallable(x => x * x));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/#install","text":"Install with npm install is-callable","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.7 - 2022-09-23 Commits [Fix] recognize document.all in IE 6-10 06c1db2 [Tests] improve logic for FF 20-35 0f7d9b9 [Fix] handle document.all in FF 27 (and +, probably) 696c661 [Tests] fix proxy tests in FF 42-63 985df0d [readme] update tested browsers 389e919 [Fix] detect document.all in Opera 12.16 b9f1022 [Fix] HTML elements: properly report as callable in Opera 12.16 17391fe [Tests] fix inverted logic in FF3 test 056ebd4 v1.2.6 - 2022-09-14 Commits [Fix] work for document.all in Firefox 3 and IE 6-8 015132a [Test] skip function toString check for nullish values 8698116 [readme] add \"supported engines\" section 0442207 [Tests] skip one of the fixture objects in FF 3.6 a501141 [Tests] allow class constructor tests to fail in FF v45 - v54, which has undetectable classes b12e4a4 [Fix] Safari 4: regexes should not be considered callable 4b732ff [Fix] properly recognize document.all in Safari 4 3193735 v1.2.5 - 2022-09-11 Commits [actions] reuse common workflows 5bb4b32 [meta] better eccheck command b9bd597 [meta] use npmignore to autogenerate an npmignore file 3192d38 [Fix] for HTML constructors, always use tryFunctionObject even in pre-toStringTag browsers 3076ea2 [Dev Deps] update eslint , @ljharb/eslint-config , available-typed-arrays , object-inspect , safe-publish-latest , tape 8986746 [meta] add auto-changelog 7dda9d0 [Fix] properly report document.all da90b2b [actions] update codecov uploader c8f847c [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 899ae00 [Dev Deps] update eslint , @ljharb/eslint-config , es-value-fixtures , object-inspect , tape 344e913 [meta] remove greenkeeper config 737dce5 [meta] npmignore coverage output 680a883 1.2.4 / 2021-08-05 [Fix] use has-tostringtag approach to behave correctly in the presence of symbol shams [readme] fix repo URLs [readme] add actions and codecov badges [readme] remove defunct badges [meta] ignore eclint checking coverage output [meta] use prepublishOnly script for npm 7+ [actions] use node/install instead of node/run ; use codecov action [actions] remove unused workflow file [Tests] run nyc on all tests; use tape runner [Tests] use available-typed-arrays , for-each , has-symbols , object-inspect [Dev Deps] update available-typed-arrays , eslint , @ljharb/eslint-config , aud , object-inspect , tape 1.2.3 / 2021-01-31 [Fix] document.all is callable (do not use document.all !) [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape [Tests] migrate tests to Github Actions [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event 1.2.2 / 2020-09-21 [Fix] include actual fix from 579179e [Dev Deps] update eslint 1.2.1 / 2020-09-09 [Fix] phantomjs\u2018 Reflect.apply does not throw properly on a bad array-like [Dev Deps] update eslint , @ljharb/eslint-config [meta] fix eclint error 1.2.0 / 2020-06-02 [New] use Reflect.apply \u2011based callability detection [readme] add install instructions (#55) [meta] only run aud on prod deps [Dev Deps] update eslint , @ljharb/eslint-config , tape , make-arrow-function , make-generator-function ; add aud , safe-publish-latest , make-async-function [Tests] add tests for function proxies (#53, #25) 1.1.5 / 2019-12-18 [meta] remove unused Makefile and associated utilities [meta] add funding field; add FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , semver , tape , covert , rimraf [Tests] use shared travis configs [Tests] use eccheck over editorconfig-tools [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs [actions] add automatic rebasing / merge commit blocking 1.1.4 / 2018-07-02 [Fix] improve class and arrow function detection (#30, #31) [Tests] on all latest node minors; improve matrix [Dev Deps] update all dev deps 1.1.3 / 2016-02-27 [Fix] ensure \u201cclass \u201c doesn\u2019t screw up \u201cclass\u201d detection [Tests] up to node v5.7 , v4.3 [Dev Deps] update to eslint v2, @ljharb/eslint-config , jscs 1.1.2 / 2016-01-15 [Fix] Make sure comments don\u2019t screw up \u201cclass\u201d detection (#4) [Tests] up to node v5.3 [Tests] Add parallelshell , run both --es-staging and stock tests at once [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config [Refactor] convert isNonES6ClassFn into isES6ClassFn 1.1.1 / 2015-11-30 [Fix] do not throw when a non-function has a function in its [[Prototype]] (#2) [Dev Deps] update tape , eslint , @ljharb/eslint-config , jscs , nsp , semver [Tests] up to node v5.1 [Tests] no longer allow node 0.8 to fail. [Tests] fix npm upgrades in older nodes 1.1.0 / 2015-10-02 [Fix] Some browsers report TypedArray constructors as typeof object [New] return false for \"class\" constructors, when possible. [Tests] up to io.js v3.3 , node v4.1 [Dev Deps] update eslint , editorconfig-tools , nsp , tape , semver , jscs , covert , make-arrow-function [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG 1.0.4 / 2015-01-30 If @@toStringTag is not present, use the old-school Object#toString test. 1.0.3 / 2015-01-29 Add tests to ensure arrow functions are callable. Refactor to aid optimization of non-try/catch code. 1.0.2 / 2015-01-29 Fix broken package.json 1.0.1 / 2015-01-29 Add early exit for typeof not \"function\" 1.0.0 / 2015-01-29 Initial release.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#v127-2022-09-23","text":"","title":"v1.2.7 - 2022-09-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#commits","text":"[Fix] recognize document.all in IE 6-10 06c1db2 [Tests] improve logic for FF 20-35 0f7d9b9 [Fix] handle document.all in FF 27 (and +, probably) 696c661 [Tests] fix proxy tests in FF 42-63 985df0d [readme] update tested browsers 389e919 [Fix] detect document.all in Opera 12.16 b9f1022 [Fix] HTML elements: properly report as callable in Opera 12.16 17391fe [Tests] fix inverted logic in FF3 test 056ebd4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#v126-2022-09-14","text":"","title":"v1.2.6 - 2022-09-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#commits_1","text":"[Fix] work for document.all in Firefox 3 and IE 6-8 015132a [Test] skip function toString check for nullish values 8698116 [readme] add \"supported engines\" section 0442207 [Tests] skip one of the fixture objects in FF 3.6 a501141 [Tests] allow class constructor tests to fail in FF v45 - v54, which has undetectable classes b12e4a4 [Fix] Safari 4: regexes should not be considered callable 4b732ff [Fix] properly recognize document.all in Safari 4 3193735","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#v125-2022-09-11","text":"","title":"v1.2.5 - 2022-09-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#commits_2","text":"[actions] reuse common workflows 5bb4b32 [meta] better eccheck command b9bd597 [meta] use npmignore to autogenerate an npmignore file 3192d38 [Fix] for HTML constructors, always use tryFunctionObject even in pre-toStringTag browsers 3076ea2 [Dev Deps] update eslint , @ljharb/eslint-config , available-typed-arrays , object-inspect , safe-publish-latest , tape 8986746 [meta] add auto-changelog 7dda9d0 [Fix] properly report document.all da90b2b [actions] update codecov uploader c8f847c [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 899ae00 [Dev Deps] update eslint , @ljharb/eslint-config , es-value-fixtures , object-inspect , tape 344e913 [meta] remove greenkeeper config 737dce5 [meta] npmignore coverage output 680a883","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#124-2021-08-05","text":"[Fix] use has-tostringtag approach to behave correctly in the presence of symbol shams [readme] fix repo URLs [readme] add actions and codecov badges [readme] remove defunct badges [meta] ignore eclint checking coverage output [meta] use prepublishOnly script for npm 7+ [actions] use node/install instead of node/run ; use codecov action [actions] remove unused workflow file [Tests] run nyc on all tests; use tape runner [Tests] use available-typed-arrays , for-each , has-symbols , object-inspect [Dev Deps] update available-typed-arrays , eslint , @ljharb/eslint-config , aud , object-inspect , tape","title":"1.2.4 / 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#123-2021-01-31","text":"[Fix] document.all is callable (do not use document.all !) [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape [Tests] migrate tests to Github Actions [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event","title":"1.2.3 / 2021-01-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#122-2020-09-21","text":"[Fix] include actual fix from 579179e [Dev Deps] update eslint","title":"1.2.2 / 2020-09-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#121-2020-09-09","text":"[Fix] phantomjs\u2018 Reflect.apply does not throw properly on a bad array-like [Dev Deps] update eslint , @ljharb/eslint-config [meta] fix eclint error","title":"1.2.1 / 2020-09-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#120-2020-06-02","text":"[New] use Reflect.apply \u2011based callability detection [readme] add install instructions (#55) [meta] only run aud on prod deps [Dev Deps] update eslint , @ljharb/eslint-config , tape , make-arrow-function , make-generator-function ; add aud , safe-publish-latest , make-async-function [Tests] add tests for function proxies (#53, #25)","title":"1.2.0 / 2020-06-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#115-2019-12-18","text":"[meta] remove unused Makefile and associated utilities [meta] add funding field; add FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , semver , tape , covert , rimraf [Tests] use shared travis configs [Tests] use eccheck over editorconfig-tools [Tests] use npx aud instead of nsp or npm audit with hoops [Tests] remove jscs [actions] add automatic rebasing / merge commit blocking","title":"1.1.5 / 2019-12-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#114-2018-07-02","text":"[Fix] improve class and arrow function detection (#30, #31) [Tests] on all latest node minors; improve matrix [Dev Deps] update all dev deps","title":"1.1.4 / 2018-07-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#113-2016-02-27","text":"[Fix] ensure \u201cclass \u201c doesn\u2019t screw up \u201cclass\u201d detection [Tests] up to node v5.7 , v4.3 [Dev Deps] update to eslint v2, @ljharb/eslint-config , jscs","title":"1.1.3 / 2016-02-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#112-2016-01-15","text":"[Fix] Make sure comments don\u2019t screw up \u201cclass\u201d detection (#4) [Tests] up to node v5.3 [Tests] Add parallelshell , run both --es-staging and stock tests at once [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config [Refactor] convert isNonES6ClassFn into isES6ClassFn","title":"1.1.2 / 2016-01-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#111-2015-11-30","text":"[Fix] do not throw when a non-function has a function in its [[Prototype]] (#2) [Dev Deps] update tape , eslint , @ljharb/eslint-config , jscs , nsp , semver [Tests] up to node v5.1 [Tests] no longer allow node 0.8 to fail. [Tests] fix npm upgrades in older nodes","title":"1.1.1 / 2015-11-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#110-2015-10-02","text":"[Fix] Some browsers report TypedArray constructors as typeof object [New] return false for \"class\" constructors, when possible. [Tests] up to io.js v3.3 , node v4.1 [Dev Deps] update eslint , editorconfig-tools , nsp , tape , semver , jscs , covert , make-arrow-function [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG","title":"1.1.0 / 2015-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#104-2015-01-30","text":"If @@toStringTag is not present, use the old-school Object#toString test.","title":"1.0.4 / 2015-01-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#103-2015-01-29","text":"Add tests to ensure arrow functions are callable. Refactor to aid optimization of non-try/catch code.","title":"1.0.3 / 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#102-2015-01-29","text":"Fix broken package.json","title":"1.0.2 / 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#101-2015-01-29","text":"Add early exit for typeof not \"function\"","title":"1.0.1 / 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-callable/CHANGELOG/#100-2015-01-29","text":"Initial release.","title":"1.0.0 / 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/","text":"is-core-module Is this specifier a node.js core module? Optionally provide a node version to check; defaults to the current node version. Example var isCore = require('is-core-module'); var assert = require('assert'); assert(isCore('fs')); assert(!isCore('butts')); Tests Clone the repo, npm install , and run npm test","title":"is-core-module Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/#is-core-module","text":"Is this specifier a node.js core module? Optionally provide a node version to check; defaults to the current node version.","title":"is-core-module"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/#example","text":"var isCore = require('is-core-module'); var assert = require('assert'); assert(isCore('fs')); assert(!isCore('butts'));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/#tests","text":"Clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.15.1 - 2024-08-21 Commits [Tests] add process.getBuiltinModule tests 28c7791 [Fix] test/mock_loader is no longer exposed as of v22.7 68b08b0 [Tests] replace aud with npm audit 32f8060 [Dev Deps] update mock-property f7d3c8f [Dev Deps] add missing peer dep eaee885 v2.15.0 - 2024-07-17 Commits [New] add node:sea 2819fb3 v2.14.0 - 2024-06-20 Commits [Dev Deps] update @ljharb/eslint-config , aud , mock-property , npmignore , tape 0e43200 [meta] add missing engines.node 4ea3af8 [New] add test/mock_loader e9fbd29 [Deps] update hasown 57f1940 v2.13.1 - 2023-10-20 Commits [Refactor] use hasown instead of has 0e52096 [Dev Deps] update mock-property , tape 8736b35 v2.13.0 - 2023-08-05 Commits [Dev Deps] update @ljharb/eslint-config , aud , semver , tape c75b263 [New] node:test/reporters and wasi / node:wasi are in v18.17 d76cbf8 v2.12.1 - 2023-05-16 Commits [Fix] test/reporters now requires the node: prefix as of v20.2 12183d0 v2.12.0 - 2023-04-10 Commits [actions] update rebase action to use reusable workflow c0a7251 [Dev Deps] update @ljharb/eslint-config , aud , tape 9ae8b7f [New] test/reporters added in v19.9, wasi added in v20 9d5341a [Dev Deps] add missing in-publish dep 5980245 v2.11.0 - 2022-10-18 Commits [meta] use npmignore to autogenerate an npmignore file 3360011 [Dev Deps] update aud , tape 651c6b0 [New] inspector/promises and node:inspector/promises is now available in node 19 22d332f v2.10.0 - 2022-08-03 Commits [New] node:test is now available in node ^16.17 e8fd36e [Tests] improve skip message c014a4c v2.9.0 - 2022-04-19 Commits [New] add node:test , in node 18+ f853eca [Tests] use mock-property 03b3644 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 7c0e2d0 [meta] simplify \"exports\" d6ed201 v2.8.1 - 2022-01-05 Commits [actions] reuse common workflows cd2cf9b [Fix] update node 0.4 results 062195d [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 0790b62 [Dev Deps] update eslint , @ljharb/eslint-config , tape 7d139a6 [Tests] run nyc in tests-only , not test 780e8a0 v2.8.0 - 2021-10-14 Commits [actions] update codecov uploader 0cfe94e [New] add readline/promises to node v17+ 4f78c30 [Tests] node ^14.18 supports node: prefixes for CJS 43e2f17 v2.7.0 - 2021-09-27 Commits [New] node v14.18 added node: -prefixed core modules to require 6d943ab [Tests] add coverage for Object.prototype pollution c6baf5f [Dev Deps] update @ljharb/eslint-config 6717f00 [eslint] fix linter warning 594c10b [meta] add sideEffects flag c32cfa5 v2.6.0 - 2021-08-17 Commits [Dev Deps] update eslint , tape 6cc928f [New] add stream/consumers to node &gt;= 16.7 a1a423e [Refactor] Remove duplicated && operand 86faea7 [Tests] include prereleases a4da7a6 v2.5.0 - 2021-07-12 Commits [Dev Deps] update auto-changelog , eslint 6334cc9 [New] add stream/web to node v16.5+ 17ac59b v2.4.0 - 2021-05-09 Commits [readme] add actions and codecov badges 82b7faa [Dev Deps] update @ljharb/eslint-config , aud 8096868 [Dev Deps] update eslint 6726824 [New] add diagnostics_channel to node ^14.17 86c6563 [meta] fix prepublish script 697a01e v2.3.0 - 2021-04-24 Commits [meta] do not publish github action workflow files 060d4bb [New] add support for node: prefix, in node 16+ 7341223 [actions] use node/install instead of node/run ; use codecov action 016269a [patch] remove unneeded .0 in version ranges cb466a6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape c9f9c39 [actions] update workflows 3ee4a89 [Dev Deps] update eslint , @ljharb/eslint-config dee4fed [Dev Deps] update eslint , @ljharb/eslint-config 7d046ba [meta] use prepublishOnly script for npm 7+ 149e677 [readme] remove travis badge 903b51d v2.2.0 - 2020-11-26 Commits [Tests] migrate tests to Github Actions c919f57 [patch] core.json : %s/ /\\t/g db3f685 [Tests] run nyc on all tests b2f925f [Dev Deps] update eslint , @ljharb/eslint-config , aud ; add safe-publish-latest 89f02a2 [New] add path/posix , path/win32 , util/types 77f94f1 v2.1.0 - 2020-11-04 Commits [Dev Deps] update eslint 5e0034e [New] Add diagnostics_channel c2d83d0 v2.0.0 - 2020-09-29 Commits v2 implementation 865aeb5 Only apps should have lockfiles 5a5e660 Initial commit for v2 5a51524 Tests 116eae4 [meta] add auto-changelog c24388b [actions] add \"Automatic Rebase\" and \"require allow edits\" actions 34292db [Tests] add npm run lint 4f9eeee [readme] fix travis badges, https all URLs e516a73 [meta] create FUNDING.yml 1aabebc [Fix] domain : domain landed sometime > v0.7.7 and <= v0.7.12 2df7d37 [Fix] sys : worked in 0.6, not 0.7, and 0.8+ a75c134 v1.0.2 - 2014-09-28 Commits simpler 66fe90f v1.0.1 - 2014-09-28 Commits remove stupid f21f906 update readme 1eff0ec v1.0.0 - 2014-09-28 Commits init 48e5e76","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2151-2024-08-21","text":"","title":"v2.15.1 - 2024-08-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits","text":"[Tests] add process.getBuiltinModule tests 28c7791 [Fix] test/mock_loader is no longer exposed as of v22.7 68b08b0 [Tests] replace aud with npm audit 32f8060 [Dev Deps] update mock-property f7d3c8f [Dev Deps] add missing peer dep eaee885","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2150-2024-07-17","text":"","title":"v2.15.0 - 2024-07-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_1","text":"[New] add node:sea 2819fb3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2140-2024-06-20","text":"","title":"v2.14.0 - 2024-06-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_2","text":"[Dev Deps] update @ljharb/eslint-config , aud , mock-property , npmignore , tape 0e43200 [meta] add missing engines.node 4ea3af8 [New] add test/mock_loader e9fbd29 [Deps] update hasown 57f1940","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2131-2023-10-20","text":"","title":"v2.13.1 - 2023-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_3","text":"[Refactor] use hasown instead of has 0e52096 [Dev Deps] update mock-property , tape 8736b35","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2130-2023-08-05","text":"","title":"v2.13.0 - 2023-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_4","text":"[Dev Deps] update @ljharb/eslint-config , aud , semver , tape c75b263 [New] node:test/reporters and wasi / node:wasi are in v18.17 d76cbf8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2121-2023-05-16","text":"","title":"v2.12.1 - 2023-05-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_5","text":"[Fix] test/reporters now requires the node: prefix as of v20.2 12183d0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2120-2023-04-10","text":"","title":"v2.12.0 - 2023-04-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_6","text":"[actions] update rebase action to use reusable workflow c0a7251 [Dev Deps] update @ljharb/eslint-config , aud , tape 9ae8b7f [New] test/reporters added in v19.9, wasi added in v20 9d5341a [Dev Deps] add missing in-publish dep 5980245","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2110-2022-10-18","text":"","title":"v2.11.0 - 2022-10-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_7","text":"[meta] use npmignore to autogenerate an npmignore file 3360011 [Dev Deps] update aud , tape 651c6b0 [New] inspector/promises and node:inspector/promises is now available in node 19 22d332f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v2100-2022-08-03","text":"","title":"v2.10.0 - 2022-08-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_8","text":"[New] node:test is now available in node ^16.17 e8fd36e [Tests] improve skip message c014a4c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v290-2022-04-19","text":"","title":"v2.9.0 - 2022-04-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_9","text":"[New] add node:test , in node 18+ f853eca [Tests] use mock-property 03b3644 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 7c0e2d0 [meta] simplify \"exports\" d6ed201","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v281-2022-01-05","text":"","title":"v2.8.1 - 2022-01-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_10","text":"[actions] reuse common workflows cd2cf9b [Fix] update node 0.4 results 062195d [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 0790b62 [Dev Deps] update eslint , @ljharb/eslint-config , tape 7d139a6 [Tests] run nyc in tests-only , not test 780e8a0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v280-2021-10-14","text":"","title":"v2.8.0 - 2021-10-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_11","text":"[actions] update codecov uploader 0cfe94e [New] add readline/promises to node v17+ 4f78c30 [Tests] node ^14.18 supports node: prefixes for CJS 43e2f17","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v270-2021-09-27","text":"","title":"v2.7.0 - 2021-09-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_12","text":"[New] node v14.18 added node: -prefixed core modules to require 6d943ab [Tests] add coverage for Object.prototype pollution c6baf5f [Dev Deps] update @ljharb/eslint-config 6717f00 [eslint] fix linter warning 594c10b [meta] add sideEffects flag c32cfa5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v260-2021-08-17","text":"","title":"v2.6.0 - 2021-08-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_13","text":"[Dev Deps] update eslint , tape 6cc928f [New] add stream/consumers to node &gt;= 16.7 a1a423e [Refactor] Remove duplicated && operand 86faea7 [Tests] include prereleases a4da7a6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v250-2021-07-12","text":"","title":"v2.5.0 - 2021-07-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_14","text":"[Dev Deps] update auto-changelog , eslint 6334cc9 [New] add stream/web to node v16.5+ 17ac59b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v240-2021-05-09","text":"","title":"v2.4.0 - 2021-05-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_15","text":"[readme] add actions and codecov badges 82b7faa [Dev Deps] update @ljharb/eslint-config , aud 8096868 [Dev Deps] update eslint 6726824 [New] add diagnostics_channel to node ^14.17 86c6563 [meta] fix prepublish script 697a01e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v230-2021-04-24","text":"","title":"v2.3.0 - 2021-04-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_16","text":"[meta] do not publish github action workflow files 060d4bb [New] add support for node: prefix, in node 16+ 7341223 [actions] use node/install instead of node/run ; use codecov action 016269a [patch] remove unneeded .0 in version ranges cb466a6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape c9f9c39 [actions] update workflows 3ee4a89 [Dev Deps] update eslint , @ljharb/eslint-config dee4fed [Dev Deps] update eslint , @ljharb/eslint-config 7d046ba [meta] use prepublishOnly script for npm 7+ 149e677 [readme] remove travis badge 903b51d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v220-2020-11-26","text":"","title":"v2.2.0 - 2020-11-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_17","text":"[Tests] migrate tests to Github Actions c919f57 [patch] core.json : %s/ /\\t/g db3f685 [Tests] run nyc on all tests b2f925f [Dev Deps] update eslint , @ljharb/eslint-config , aud ; add safe-publish-latest 89f02a2 [New] add path/posix , path/win32 , util/types 77f94f1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v210-2020-11-04","text":"","title":"v2.1.0 - 2020-11-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_18","text":"[Dev Deps] update eslint 5e0034e [New] Add diagnostics_channel c2d83d0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v200-2020-09-29","text":"","title":"v2.0.0 - 2020-09-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_19","text":"v2 implementation 865aeb5 Only apps should have lockfiles 5a5e660 Initial commit for v2 5a51524 Tests 116eae4 [meta] add auto-changelog c24388b [actions] add \"Automatic Rebase\" and \"require allow edits\" actions 34292db [Tests] add npm run lint 4f9eeee [readme] fix travis badges, https all URLs e516a73 [meta] create FUNDING.yml 1aabebc [Fix] domain : domain landed sometime > v0.7.7 and <= v0.7.12 2df7d37 [Fix] sys : worked in 0.6, not 0.7, and 0.8+ a75c134","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v102-2014-09-28","text":"","title":"v1.0.2 - 2014-09-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_20","text":"simpler 66fe90f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v101-2014-09-28","text":"","title":"v1.0.1 - 2014-09-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_21","text":"remove stupid f21f906 update readme 1eff0ec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#v100-2014-09-28","text":"","title":"v1.0.0 - 2014-09-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-core-module/CHANGELOG/#commits_22","text":"init 48e5e76","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/","text":"is-data-view Is this value a JS DataView? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag. Example var isDataView = require('is-data-view'); var assert = require('assert'); assert.equal(false, isDataView(undefined)); assert.equal(false, isDataView(null)); assert.equal(false, isDataView(false)); assert.equal(false, isDataView(true)); assert.equal(false, isDataView([])); assert.equal(false, isDataView({})); assert.equal(false, isDataView(/a/g)); assert.equal(false, isDataView(new RegExp('a', 'g'))); assert.equal(false, isDataView(new Date())); assert.equal(false, isDataView(42)); assert.equal(false, isDataView(NaN)); assert.equal(false, isDataView(Infinity)); assert.equal(false, isDataView(new Number(42))); assert.equal(false, isDataView('foo')); assert.equal(false, isDataView(Object('foo'))); assert.equal(false, isDataView(function () {})); assert.equal(false, isDataView(function* () {})); assert.equal(false, isDataView(x => x * x)); assert.equal(false, isDataView([])); assert.equal(false, isDataView(new Int8Array())); assert.equal(false, isDataView(new Uint8Array())); assert.equal(false, isDataView(new Uint8ClampedArray())); assert.equal(false, isDataView(new Int16Array())); assert.equal(false, isDataView(new Uint16Array())); assert.equal(false, isDataView(new Int32Array())); assert.equal(false, isDataView(new Uint32Array())); assert.equal(false, isDataView(new Float32Array())); assert.equal(false, isDataView(new Float64Array())); assert.equal(false, isDataView(new BigInt64Array())); assert.equal(false, isDataView(new BigUint64Array())); assert.ok(isDataView(new DataView(new ArrayBuffer(0)))); Tests Simply clone the repo, npm install , and run npm test","title":"is-data-view Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/#is-data-view","text":"Is this value a JS DataView? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag.","title":"is-data-view"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/#example","text":"var isDataView = require('is-data-view'); var assert = require('assert'); assert.equal(false, isDataView(undefined)); assert.equal(false, isDataView(null)); assert.equal(false, isDataView(false)); assert.equal(false, isDataView(true)); assert.equal(false, isDataView([])); assert.equal(false, isDataView({})); assert.equal(false, isDataView(/a/g)); assert.equal(false, isDataView(new RegExp('a', 'g'))); assert.equal(false, isDataView(new Date())); assert.equal(false, isDataView(42)); assert.equal(false, isDataView(NaN)); assert.equal(false, isDataView(Infinity)); assert.equal(false, isDataView(new Number(42))); assert.equal(false, isDataView('foo')); assert.equal(false, isDataView(Object('foo'))); assert.equal(false, isDataView(function () {})); assert.equal(false, isDataView(function* () {})); assert.equal(false, isDataView(x => x * x)); assert.equal(false, isDataView([])); assert.equal(false, isDataView(new Int8Array())); assert.equal(false, isDataView(new Uint8Array())); assert.equal(false, isDataView(new Uint8ClampedArray())); assert.equal(false, isDataView(new Int16Array())); assert.equal(false, isDataView(new Uint16Array())); assert.equal(false, isDataView(new Int32Array())); assert.equal(false, isDataView(new Uint32Array())); assert.equal(false, isDataView(new Float32Array())); assert.equal(false, isDataView(new Float64Array())); assert.equal(false, isDataView(new BigInt64Array())); assert.equal(false, isDataView(new BigUint64Array())); assert.ok(isDataView(new DataView(new ArrayBuffer(0))));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-02-02 Commits [patch] add types c2728ef [Dev Deps] update aud , available-typed-arrays , has-tostringtag , npmignore , object-inspect , tape e7f9ebc [Deps] update is-typed-array 2ca9333 v1.0.0 - 2024-01-31 Commits Initial implementation, tests, readme 6f7e424 Initial commit 4b7ea57 npm init 25130e2 Only apps should have lockfiles 18cde47","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/CHANGELOG/#v101-2024-02-02","text":"","title":"v1.0.1 - 2024-02-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/CHANGELOG/#commits","text":"[patch] add types c2728ef [Dev Deps] update aud , available-typed-arrays , has-tostringtag , npmignore , object-inspect , tape e7f9ebc [Deps] update is-typed-array 2ca9333","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/CHANGELOG/#v100-2024-01-31","text":"","title":"v1.0.0 - 2024-01-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-data-view/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme 6f7e424 Initial commit 4b7ea57 npm init 25130e2 Only apps should have lockfiles 18cde47","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/","text":"is-date-object Is this value a JS Date object? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isDate = require('is-date-object'); var assert = require('assert'); assert.notOk(isDate(undefined)); assert.notOk(isDate(null)); assert.notOk(isDate(false)); assert.notOk(isDate(true)); assert.notOk(isDate(42)); assert.notOk(isDate('foo')); assert.notOk(isDate(function () {})); assert.notOk(isDate([])); assert.notOk(isDate({})); assert.notOk(isDate(/a/g)); assert.notOk(isDate(new RegExp('a', 'g'))); assert.ok(isDate(new Date())); Tests Simply clone the repo, npm install , and run npm test","title":"is-date-object Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/#is-date-object","text":"Is this value a JS Date object? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-date-object"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/#example","text":"var isDate = require('is-date-object'); var assert = require('assert'); assert.notOk(isDate(undefined)); assert.notOk(isDate(null)); assert.notOk(isDate(false)); assert.notOk(isDate(true)); assert.notOk(isDate(42)); assert.notOk(isDate('foo')); assert.notOk(isDate(function () {})); assert.notOk(isDate([])); assert.notOk(isDate({})); assert.notOk(isDate(/a/g)); assert.notOk(isDate(new RegExp('a', 'g'))); assert.ok(isDate(new Date()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.5 - 2021-08-05 Commits [meta] remove .jscs.json 31c731c [Fix] use has-tostringtag to behave correctly in the presence of symbol shams 17a6df4 [Dev Deps] update eslint , auto-changelog , tape 79db3af v1.0.4 - 2021-05-07 Commits [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 8943a4a [readme] make all URLs https 1d4d6cd [Dev Deps] update eslint a7abeaa v1.0.3 - 2021-05-05 Commits [Tests] migrate tests to Github Actions 023504f [readme] add actions and codecov badges e63305f [meta] do not publish github action workflow files 017d906 [Tests] run nyc on all tests 0376b6f [readme] fix repo URLs; remove defunct badges 1c148c6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape c7a3f54 [actions] add \"Allow Edits\" workflow e79b5b2 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape da28980 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 5cabae9 [readme] add actions and codecov badges 33dfb88 [Dev Deps] update eslint , @ljharb/eslint-config , tape 745eb04 [Dev Deps] update eslint , @ljharb/eslint-config , tape 466c62b [actions] use checkout v2; remove unneeded env ff87a16 [Dev Deps] update auto-changelog , tape 93188f5 [meta] use prepublishOnly script for npm 7+ 1d0e3ea [actions] update workflows 4d1a235 [Dev Deps] update auto-changelog ; add aud 67be59a [actions] switch Automatic Rebase workflow to pull_request_target event a6661c2 [Tests] only audit prod deps dd4a47f v1.0.2 - 2019-12-18 Commits [Tests] use shared travis-ci configs 8a378b8 [Tests] on all node minors; use nvm install-latest-npm ; fix scripts; improve matrix 6e97a21 [Dev Deps] update eslint , @ljharb/eslint-config , is , jscs , nsp , semver , tape 8472b90 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ae73e38 [meta] add auto-changelog 82f8f47 [meta] remove unused Makefile and associated utilities 788a2cd [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 b9caf7c [Tests] up to node v12.4 , v11.15 , v10.15 , v8.15 , v6.17 ; use nvm install-latest-npm cda0abc [Tests] up to node v12.10 , v10.16 , v8.16 49bc482 [Dev Deps] update eslint , @ljharb/eslint-config , semver , tape ; add safe-publish-latest f77fec4 [actions] add automatic rebasing / merge commit blocking 68605fc [meta] create FUNDING.yml 4f82d88 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 3cbf28a [Dev Deps] update eslint , @ljharb/eslint-config@ , is , semver , tape abf9fb0 [Tests] switch from nsp to npm audit 6543c7d [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape ba5d2d7 [Dev Deps] update eslint , nsp , semver , tape c1e3525 [Tests] use npx aud instead of nsp or npm audit with hoops 14e4824 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest 68ead64 [Dev Deps] update eslint , semver , tape , semver [ f55453f`](https://github.com/inspect-js/is-date-object/commit/f55453f200903277465d7e9307a9c49120a4f419) Only apps should have lockfiles 6c848eb [Tests] remove jscs 3fd3a62 [Dev Deps] update eslint , tape 77d3130 [meta] add funding field 9ef6d58 v1.0.1 - 2015-09-27 Commits Update tape , semver , eslint ; use my personal shared eslint config. 731aa13 Update is , tape , covert , jscs , editorconfig-tools , nsp , eslint , semver 53e43a6 Update eslint d2fc304 Update tape , jscs , eslint , @ljharb/eslint-config c9568df Test on latest node and io.js versions. a21d537 Update nsp , eslint , semver 9e1d908 Update covert , jscs , eslint , semver f198f6b [Dev Deps] update tape , jscs , eslint ab9bdbb If @@toStringTag is not present, use the old-school Object#toString test. c03afce [Dev Deps] update jscs , nsp , tape , eslint , @ljharb/eslint-config 9d94ccb [Dev Deps] update is , eslint , @ljharb/eslint-config , semver 35cbff7 Test up to io.js v2.3 be5d11e [Tests] on io.js v3.3 , up to node v4.1 20221a3 [Tests] up to io.js v3.2 7009b4a Test on io.js v2.1 68b29b1 Remove editorconfig-tools 8d3972c [Dev Deps] update tape 204945d Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 7bff214 Test on io.js v2.5 92f7bd6 Test on io.js v2.4 ebb34bf Fix tests for faked @@toStringTag 3b9c26c Test on io.js v3.0 5eedf4b v1.0.0 - 2015-01-28 Commits Dotfiles. 5b6a929 make release e8d40ce package.json a107259 Read me eb92695 Initial commit 4fc7755 Tests. b6f432f Implementation. dd0fd96","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#v105-2021-08-05","text":"","title":"v1.0.5 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#commits","text":"[meta] remove .jscs.json 31c731c [Fix] use has-tostringtag to behave correctly in the presence of symbol shams 17a6df4 [Dev Deps] update eslint , auto-changelog , tape 79db3af","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#v104-2021-05-07","text":"","title":"v1.0.4 - 2021-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#commits_1","text":"[Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 8943a4a [readme] make all URLs https 1d4d6cd [Dev Deps] update eslint a7abeaa","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#v103-2021-05-05","text":"","title":"v1.0.3 - 2021-05-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions 023504f [readme] add actions and codecov badges e63305f [meta] do not publish github action workflow files 017d906 [Tests] run nyc on all tests 0376b6f [readme] fix repo URLs; remove defunct badges 1c148c6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape c7a3f54 [actions] add \"Allow Edits\" workflow e79b5b2 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape da28980 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 5cabae9 [readme] add actions and codecov badges 33dfb88 [Dev Deps] update eslint , @ljharb/eslint-config , tape 745eb04 [Dev Deps] update eslint , @ljharb/eslint-config , tape 466c62b [actions] use checkout v2; remove unneeded env ff87a16 [Dev Deps] update auto-changelog , tape 93188f5 [meta] use prepublishOnly script for npm 7+ 1d0e3ea [actions] update workflows 4d1a235 [Dev Deps] update auto-changelog ; add aud 67be59a [actions] switch Automatic Rebase workflow to pull_request_target event a6661c2 [Tests] only audit prod deps dd4a47f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#v102-2019-12-18","text":"","title":"v1.0.2 - 2019-12-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#commits_3","text":"[Tests] use shared travis-ci configs 8a378b8 [Tests] on all node minors; use nvm install-latest-npm ; fix scripts; improve matrix 6e97a21 [Dev Deps] update eslint , @ljharb/eslint-config , is , jscs , nsp , semver , tape 8472b90 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ae73e38 [meta] add auto-changelog 82f8f47 [meta] remove unused Makefile and associated utilities 788a2cd [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 b9caf7c [Tests] up to node v12.4 , v11.15 , v10.15 , v8.15 , v6.17 ; use nvm install-latest-npm cda0abc [Tests] up to node v12.10 , v10.16 , v8.16 49bc482 [Dev Deps] update eslint , @ljharb/eslint-config , semver , tape ; add safe-publish-latest f77fec4 [actions] add automatic rebasing / merge commit blocking 68605fc [meta] create FUNDING.yml 4f82d88 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 3cbf28a [Dev Deps] update eslint , @ljharb/eslint-config@ , is , semver , tape abf9fb0 [Tests] switch from nsp to npm audit 6543c7d [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape ba5d2d7 [Dev Deps] update eslint , nsp , semver , tape c1e3525 [Tests] use npx aud instead of nsp or npm audit with hoops 14e4824 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest 68ead64 [Dev Deps] update eslint , semver , tape , semver [ f55453f`](https://github.com/inspect-js/is-date-object/commit/f55453f200903277465d7e9307a9c49120a4f419) Only apps should have lockfiles 6c848eb [Tests] remove jscs 3fd3a62 [Dev Deps] update eslint , tape 77d3130 [meta] add funding field 9ef6d58","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#v101-2015-09-27","text":"","title":"v1.0.1 - 2015-09-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#commits_4","text":"Update tape , semver , eslint ; use my personal shared eslint config. 731aa13 Update is , tape , covert , jscs , editorconfig-tools , nsp , eslint , semver 53e43a6 Update eslint d2fc304 Update tape , jscs , eslint , @ljharb/eslint-config c9568df Test on latest node and io.js versions. a21d537 Update nsp , eslint , semver 9e1d908 Update covert , jscs , eslint , semver f198f6b [Dev Deps] update tape , jscs , eslint ab9bdbb If @@toStringTag is not present, use the old-school Object#toString test. c03afce [Dev Deps] update jscs , nsp , tape , eslint , @ljharb/eslint-config 9d94ccb [Dev Deps] update is , eslint , @ljharb/eslint-config , semver 35cbff7 Test up to io.js v2.3 be5d11e [Tests] on io.js v3.3 , up to node v4.1 20221a3 [Tests] up to io.js v3.2 7009b4a Test on io.js v2.1 68b29b1 Remove editorconfig-tools 8d3972c [Dev Deps] update tape 204945d Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 7bff214 Test on io.js v2.5 92f7bd6 Test on io.js v2.4 ebb34bf Fix tests for faked @@toStringTag 3b9c26c Test on io.js v3.0 5eedf4b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#v100-2015-01-28","text":"","title":"v1.0.0 - 2015-01-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-date-object/CHANGELOG/#commits_5","text":"Dotfiles. 5b6a929 make release e8d40ce package.json a107259 Read me eb92695 Initial commit 4fc7755 Tests. b6f432f Implementation. dd0fd96","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/","text":"is-extglob Returns true if a string has an extglob. Install Install with npm : $ npm install --save is-extglob Usage var isExtglob = require('is-extglob'); True isExtglob('?(abc)'); isExtglob('@(abc)'); isExtglob('!(abc)'); isExtglob('*(abc)'); isExtglob('+(abc)'); False Escaped extglobs: isExtglob('\\\\?(abc)'); isExtglob('\\\\@(abc)'); isExtglob('\\\\!(abc)'); isExtglob('\\\\*(abc)'); isExtglob('\\\\+(abc)'); Everything else... isExtglob('foo.js'); isExtglob('!foo.js'); isExtglob('*.js'); isExtglob('**/abc.js'); isExtglob('abc/*.js'); isExtglob('abc/(aaa|bbb).js'); isExtglob('abc/[a-z].js'); isExtglob('abc/{a,b}.js'); isExtglob('abc/?.js'); isExtglob('abc.js'); isExtglob('abc/def/ghi.js'); History v2.0 Adds support for escaping. Escaped exglobs no longer return true. About Related projects has-glob : Returns true if an array has a glob pattern. | homepage is-glob : Returns true if the given string looks like a glob pattern or an extglob pattern\u2026 more | homepage micromatch : Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage Contributing Pull requests and stars are always welcome. For bugs and feature requests, please create an issue . Building docs (This document was generated by verb-generate-readme (a verb generator), please don't edit the readme directly. Any changes to the readme must be made in .verb.md .) To generate the readme and API documentation with verb : $ npm install -g verb verb-generate-readme && verb Running tests Install dev dependencies: $ npm install -d && npm test Author Jon Schlinkert github/jonschlinkert twitter/jonschlinkert License Copyright \u00a9 2016, Jon Schlinkert . Released under the MIT license . This file was generated by verb-generate-readme , v0.1.31, on October 12, 2016.","title":"is-extglob NPM version NPM downloads Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#is-extglob","text":"Returns true if a string has an extglob.","title":"is-extglob"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#install","text":"Install with npm : $ npm install --save is-extglob","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#usage","text":"var isExtglob = require('is-extglob'); True isExtglob('?(abc)'); isExtglob('@(abc)'); isExtglob('!(abc)'); isExtglob('*(abc)'); isExtglob('+(abc)'); False Escaped extglobs: isExtglob('\\\\?(abc)'); isExtglob('\\\\@(abc)'); isExtglob('\\\\!(abc)'); isExtglob('\\\\*(abc)'); isExtglob('\\\\+(abc)'); Everything else... isExtglob('foo.js'); isExtglob('!foo.js'); isExtglob('*.js'); isExtglob('**/abc.js'); isExtglob('abc/*.js'); isExtglob('abc/(aaa|bbb).js'); isExtglob('abc/[a-z].js'); isExtglob('abc/{a,b}.js'); isExtglob('abc/?.js'); isExtglob('abc.js'); isExtglob('abc/def/ghi.js');","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#history","text":"v2.0 Adds support for escaping. Escaped exglobs no longer return true.","title":"History"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#about","text":"","title":"About"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#related-projects","text":"has-glob : Returns true if an array has a glob pattern. | homepage is-glob : Returns true if the given string looks like a glob pattern or an extglob pattern\u2026 more | homepage micromatch : Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | homepage","title":"Related projects"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#contributing","text":"Pull requests and stars are always welcome. For bugs and feature requests, please create an issue .","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#building-docs","text":"(This document was generated by verb-generate-readme (a verb generator), please don't edit the readme directly. Any changes to the readme must be made in .verb.md .) To generate the readme and API documentation with verb : $ npm install -g verb verb-generate-readme && verb","title":"Building docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#running-tests","text":"Install dev dependencies: $ npm install -d && npm test","title":"Running tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#author","text":"Jon Schlinkert github/jonschlinkert twitter/jonschlinkert","title":"Author"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-extglob/#license","text":"Copyright \u00a9 2016, Jon Schlinkert . Released under the MIT license . This file was generated by verb-generate-readme , v0.1.31, on October 12, 2016.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/","text":"is-finalizationregistry Is this value a JS FinalizationRegistry? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isFinalizationRegistry = require('is-finalizationregistry'); assert(!isFinalizationRegistry(function () {})); assert(!isFinalizationRegistry(null)); assert(!isFinalizationRegistry(function* () { yield 42; return Infinity; }); assert(!isFinalizationRegistry(Symbol('foo'))); assert(!isFinalizationRegistry(1n)); assert(!isFinalizationRegistry(Object(1n))); assert(!isFinalizationRegistry(new Set())); assert(!isFinalizationRegistry(new WeakSet())); assert(!isFinalizationRegistry(new Map())); assert(!isFinalizationRegistry(new WeakMap())); assert(!isFinalizationRegistry(new WeakRef({}))); assert(isFinalizationRegistry(new FinalizationRegistry(function () {}))); class MyFinalizationRegistry extends FinalizationRegistry {} assert(isFinalizationRegistry(new MyFinalizationRegistry(function () {}))); Tests Simply clone the repo, npm install , and run npm test","title":"is-finalizationregistry Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/#is-finalizationregistry","text":"Is this value a JS FinalizationRegistry? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-finalizationregistry"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/#example","text":"var isFinalizationRegistry = require('is-finalizationregistry'); assert(!isFinalizationRegistry(function () {})); assert(!isFinalizationRegistry(null)); assert(!isFinalizationRegistry(function* () { yield 42; return Infinity; }); assert(!isFinalizationRegistry(Symbol('foo'))); assert(!isFinalizationRegistry(1n)); assert(!isFinalizationRegistry(Object(1n))); assert(!isFinalizationRegistry(new Set())); assert(!isFinalizationRegistry(new WeakSet())); assert(!isFinalizationRegistry(new Map())); assert(!isFinalizationRegistry(new WeakMap())); assert(!isFinalizationRegistry(new WeakRef({}))); assert(isFinalizationRegistry(new FinalizationRegistry(function () {}))); class MyFinalizationRegistry extends FinalizationRegistry {} assert(isFinalizationRegistry(new MyFinalizationRegistry(function () {})));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2021-10-05 Commits [meta] do not publish Github Actions workflows 5509e8c [actions] use node/install instead of node/run ; use codecov action b566204 [readme] fix markdown 02602dd [Fix] use call-bind and obviate missing es-abstract dep 9d71846 [readme] add actions and codecov badges 75381a7 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , tape 7a0f9d8 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 962689f [Dev Deps] update eslint , @ljharb/eslint-config , tape 762ebf2 [meta] add safe-publish-latest ; use prepublishOnly script for npm 7+ fe0b226 v1.0.1 - 2020-12-04 Commits [Tests] migrate tests to Github Actions b697250 [Tests] run nyc on all tests 9091806 [actions] add \"Allow Edits\" workflow 5d8c4f5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect 3af34c1 [actions] switch Automatic Rebase workflow to pull_request_target event d0720ff [readme] remove travis badge 2757b27 [meta] add package.json to exports c680142 v1.0.0 - 2020-08-02 Commits Initial commit 094a595 readme 38d75fd Tests 1052cd2 npm init 307016d Implementation 48df57a [meta] add auto-changelog cd1c8e1 [actions] add automatic rebasing / merge commit blocking d6c9220 [meta] add \"funding\"; create FUNDING.yml 0e74e10 [Tests] add npm run lint edb8d13 [Tests] use shared travis-ci configs 8eb7a3a Only apps should have lockfiles 566b021","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#v102-2021-10-05","text":"","title":"v1.0.2 - 2021-10-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#commits","text":"[meta] do not publish Github Actions workflows 5509e8c [actions] use node/install instead of node/run ; use codecov action b566204 [readme] fix markdown 02602dd [Fix] use call-bind and obviate missing es-abstract dep 9d71846 [readme] add actions and codecov badges 75381a7 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , tape 7a0f9d8 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 962689f [Dev Deps] update eslint , @ljharb/eslint-config , tape 762ebf2 [meta] add safe-publish-latest ; use prepublishOnly script for npm 7+ fe0b226","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#v101-2020-12-04","text":"","title":"v1.0.1 - 2020-12-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions b697250 [Tests] run nyc on all tests 9091806 [actions] add \"Allow Edits\" workflow 5d8c4f5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect 3af34c1 [actions] switch Automatic Rebase workflow to pull_request_target event d0720ff [readme] remove travis badge 2757b27 [meta] add package.json to exports c680142","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#v100-2020-08-02","text":"","title":"v1.0.0 - 2020-08-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-finalizationregistry/CHANGELOG/#commits_2","text":"Initial commit 094a595 readme 38d75fd Tests 1052cd2 npm init 307016d Implementation 48df57a [meta] add auto-changelog cd1c8e1 [actions] add automatic rebasing / merge commit blocking d6c9220 [meta] add \"funding\"; create FUNDING.yml 0e74e10 [Tests] add npm run lint edb8d13 [Tests] use shared travis-ci configs 8eb7a3a Only apps should have lockfiles 566b021","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/","text":"is-generator-function Is this a native generator function? Example var isGeneratorFunction = require('is-generator-function'); assert(!isGeneratorFunction(function () {})); assert(!isGeneratorFunction(null)); assert(isGeneratorFunction(function* () { yield 42; return Infinity; })); Tests Simply clone the repo, npm install , and run npm test","title":"is-generator-function Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/#is-generator-function","text":"Is this a native generator function?","title":"is-generator-function"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/#example","text":"var isGeneratorFunction = require('is-generator-function'); assert(!isGeneratorFunction(function () {})); assert(!isGeneratorFunction(null)); assert(isGeneratorFunction(function* () { yield 42; return Infinity; }));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.10 - 2021-08-05 Commits [Dev Deps] update eslint , auto-changelog , core-js , tape 63cd935 [Fix] use has-tostringtag to behave correctly in the presence of symbol shams 8c3fe76 [Dev Deps] unpin core-js v3 ebf2885 v1.0.9 - 2021-05-05 Fixed [Fix] avoid calling Function until absolutely necessary #41 Commits [actions] use node/install instead of node/run ; use codecov action 612862b [meta] do not publish github action workflow files c13855d [readme] fix repo URLs; remove travis badge bd11a2a [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 23f54d4 [readme] add actions and codecov badges 9e759ef [Dev Deps] update eslint , @ljharb/eslint-config , tape 6305f8d [meta] remove explicit audit level config db4391c [meta] use prepublishOnly script for npm 7+ 82c5b18 [Dev Deps] pin core-js v3 to < v3.9 5f6cc2a [Tests] avoid running harmony tests on node 16+ c41526b [actions] update workflows a348c5d v1.0.8 - 2020-12-02 Fixed [Refactor] improve performance in non-toStringTag envs #9 Commits [Tests] use shared travis-ci configs 98c84ec [Tests] migrate tests to Github Actions 52ea2e2 [meta] add auto-changelog a31c8d9 [Tests] remove jscs c30694e [meta] remove unused Makefile and associated utilities 23a8dd7 [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 9711495 [Dev Deps] update eslint , @ljharb/eslint-config , tape , make-generator-function ; add safe-publish-latest 3afb4d0 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 f1e9b0f [Tests] up to node v11.13 , v10.15 , v8.15 , v6.17 433ca64 [Tests] run nyc on all tests 84d8e18 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ec51a9f [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape 180fb0d [actions] add automatic rebasing / merge commit blocking 7e0f94b [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape , replace , semver , core-js 75768b3 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , replace , semver , tape d6413cd [actions] add \"Allow Edits\" workflow e73fec7 [Dev Deps] update core-js , eslint , nsp , semver , tape 6746c73 [Tests] switch from nsp to npm audit ; allow it to fail for now 301aa25 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog d978937 Revert \"[Refactor] improve performance in non-toStringTag envs\" 3892c18 [Tests] test on both core-js 3 and 2 fac5447 [Tests] use npx aud instead of npm audit with hoops e12897f [meta] add funding field 60711d1 [Fix] Object.getPrototypeOf does not exist in all engines 7484531 [Dev Deps] update auto-changelog , tape fe92b74 [Dev Deps] update eslint , tape 2f16f77 [Dev Deps] update core-js , replace c67825a [Tests] on node v10.1 b00dbcc [actions] update rebase action to use checkout v2 85c7947 [actions] switch Automatic Rebase workflow to pull_request_target event d2fd827 [Dev Deps] update @ljharb/eslint-config 791766e v1.0.7 - 2017-12-27 Fixed [Tests] run tests with uglify-register #16 Exclude testling.html from npm package. #8 Commits [Tests] up to node v8.4 ; use nvm install-latest-npm to ensure new npm doesn\u2019t break old node; remove osx builds 365004b [Tests] up to node v9.2 , v8.9 , v6.12 ; pin included builds to LTS 33916ea [Dev Deps] update core-js , eslint , nsp b4ce014 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , nsp , semver , tape e4b499f [Tests] up to node v7.4 , v4.7 ce642b6 Only apps should have lockfiles. ea4dfb1 [Tests] on node v9.3 307d9c1 fix: example code missing ) after argument list 05f62c7 [Tests] update uglify-register 7376bec [Dev Deps] update eslint c3f5895 v1.0.6 - 2016-12-20 Fixed [Fix] fix is-generator-function in an env without native generators, with core-js. #33 Commits [Tests] fix linting errors. 9d12cdb v1.0.5 - 2016-12-19 Commits Update tape , semver , eslint ; use my personal shared eslint config. 3a1192c Add npm run eslint ae191b6 [Tests] improve test matrix 0d0837f [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config , semver , nsp 6523655 Update jscs , tape , semver c185388 Update eslint 9959dbc Update tape , jscs , eslint , @ljharb/eslint-config 5945497 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 1754eae Update eslint , semver , nsp a40f7af Update covert , jscs , eslint , semver f7c3504 [Fix] account for Safari 10 which reports the wrong toString on generator functions. 3a3a52b [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config , semver , nsp aaab6c3 [Dev Deps] update jscs e24641c [Tests] up to io.js v3.3 , node v4.1 c43c5ad Add npm run security via nsp 24256ca Test up to io.js v2.3 730233f [Tests] use pretest/posttest for linting/security 3e6b860 [Refactor] remove useless Object#toString check. 9d4d7ac [Dev Deps] Update tape , eslint 34673b8 Test up to io.js v2.1 1e91585 Test on two latest io.js versions. 8702608 Test on iojs-v1.5 and iojs-v1.6 c74935e Latest node now supports generators. beb3bfe [Dev Deps] update tape c6e6587 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 0039875 Test on io.js v2.5 0017408 Test on io.js v2.4 bc013e2 Test on io.js v3.0 e195030 v1.0.4 - 2015-03-03 Fixed Add support for detecting concise generator methods. #2 Commits All grade A-supported node / iojs versions now ship with an npm that understands ^ . 6562e80 Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 592f768 Test on latest io.js edca329 Forgot to add replace in 209fac444b4bd90eaa8df279457c4a15e6bba6d2 3ebfb38 Update semver c21baa5 Update jscs 71a68f4 Update tape 32c03cf v1.0.3 - 2015-01-31 Commits make release 209fac4 Run tests against a faked @@toStringTag c9ba1ea Add sudo: false to speed up travis-ci tests. a4b41e1 Bail out early when typeof is not \"function\" a62e7a5 v1.0.2 - 2015-01-20 Commits Update tape , jscs 354d343 Update jscs e0b6203 Fix tests in newer v8 (and io.js) 36f0545 v1.0.1 - 2014-12-14 Commits Use my standard jscs.json file. 7624ca3 Use make-generator-function instead of a local module. 9234a57 Adding license and downloads badges 9463b6a Using single quotes exclusively. 4b4d71f Use SVG badges instead of PNG eaaaf41 Updating jscs. 780758e Update tape , jscs 6b8f959 Update tape , jscs 6e1334d Lock covert to v1.0.0. 3dd5c74 Updating tape 99f61a3 Updating jscs 171d96d Updating jscs 847795e Updating jscs cad09d8 Updating covert 8617860 Adding an .nvmrc file. 1fa3ea4 v1.0.0 - 2014-08-09 Commits Adding npm run lint ed9cf0a Make sure old and unstable nodes don't break Travis 80a7ee7 Updating tape d5f141f Fix npm upgrading on node 0.8 2ee0f08 Updating dependencies accf688 Updating covert 38d22e6 Updating tape 49c1f00 Updating tape 75cb7df Updating tape 4142cc0 Better code coverage 1831d64 v0.0.0 - 2014-02-09 Commits Tests. f46e936 package.json 189db32 Initial commit 8096cee README. 9eda97f Implementation. c5c3a8d Adding Travis CI 9a6503e","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v1010-2021-08-05","text":"","title":"v1.0.10 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits","text":"[Dev Deps] update eslint , auto-changelog , core-js , tape 63cd935 [Fix] use has-tostringtag to behave correctly in the presence of symbol shams 8c3fe76 [Dev Deps] unpin core-js v3 ebf2885","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v109-2021-05-05","text":"","title":"v1.0.9 - 2021-05-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#fixed","text":"[Fix] avoid calling Function until absolutely necessary #41","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_1","text":"[actions] use node/install instead of node/run ; use codecov action 612862b [meta] do not publish github action workflow files c13855d [readme] fix repo URLs; remove travis badge bd11a2a [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 23f54d4 [readme] add actions and codecov badges 9e759ef [Dev Deps] update eslint , @ljharb/eslint-config , tape 6305f8d [meta] remove explicit audit level config db4391c [meta] use prepublishOnly script for npm 7+ 82c5b18 [Dev Deps] pin core-js v3 to < v3.9 5f6cc2a [Tests] avoid running harmony tests on node 16+ c41526b [actions] update workflows a348c5d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v108-2020-12-02","text":"","title":"v1.0.8 - 2020-12-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#fixed_1","text":"[Refactor] improve performance in non-toStringTag envs #9","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_2","text":"[Tests] use shared travis-ci configs 98c84ec [Tests] migrate tests to Github Actions 52ea2e2 [meta] add auto-changelog a31c8d9 [Tests] remove jscs c30694e [meta] remove unused Makefile and associated utilities 23a8dd7 [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 9711495 [Dev Deps] update eslint , @ljharb/eslint-config , tape , make-generator-function ; add safe-publish-latest 3afb4d0 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 f1e9b0f [Tests] up to node v11.13 , v10.15 , v8.15 , v6.17 433ca64 [Tests] run nyc on all tests 84d8e18 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ec51a9f [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape 180fb0d [actions] add automatic rebasing / merge commit blocking 7e0f94b [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape , replace , semver , core-js 75768b3 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , replace , semver , tape d6413cd [actions] add \"Allow Edits\" workflow e73fec7 [Dev Deps] update core-js , eslint , nsp , semver , tape 6746c73 [Tests] switch from nsp to npm audit ; allow it to fail for now 301aa25 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog d978937 Revert \"[Refactor] improve performance in non-toStringTag envs\" 3892c18 [Tests] test on both core-js 3 and 2 fac5447 [Tests] use npx aud instead of npm audit with hoops e12897f [meta] add funding field 60711d1 [Fix] Object.getPrototypeOf does not exist in all engines 7484531 [Dev Deps] update auto-changelog , tape fe92b74 [Dev Deps] update eslint , tape 2f16f77 [Dev Deps] update core-js , replace c67825a [Tests] on node v10.1 b00dbcc [actions] update rebase action to use checkout v2 85c7947 [actions] switch Automatic Rebase workflow to pull_request_target event d2fd827 [Dev Deps] update @ljharb/eslint-config 791766e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v107-2017-12-27","text":"","title":"v1.0.7 - 2017-12-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#fixed_2","text":"[Tests] run tests with uglify-register #16 Exclude testling.html from npm package. #8","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_3","text":"[Tests] up to node v8.4 ; use nvm install-latest-npm to ensure new npm doesn\u2019t break old node; remove osx builds 365004b [Tests] up to node v9.2 , v8.9 , v6.12 ; pin included builds to LTS 33916ea [Dev Deps] update core-js , eslint , nsp b4ce014 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , nsp , semver , tape e4b499f [Tests] up to node v7.4 , v4.7 ce642b6 Only apps should have lockfiles. ea4dfb1 [Tests] on node v9.3 307d9c1 fix: example code missing ) after argument list 05f62c7 [Tests] update uglify-register 7376bec [Dev Deps] update eslint c3f5895","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v106-2016-12-20","text":"","title":"v1.0.6 - 2016-12-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#fixed_3","text":"[Fix] fix is-generator-function in an env without native generators, with core-js. #33","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_4","text":"[Tests] fix linting errors. 9d12cdb","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v105-2016-12-19","text":"","title":"v1.0.5 - 2016-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_5","text":"Update tape , semver , eslint ; use my personal shared eslint config. 3a1192c Add npm run eslint ae191b6 [Tests] improve test matrix 0d0837f [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config , semver , nsp 6523655 Update jscs , tape , semver c185388 Update eslint 9959dbc Update tape , jscs , eslint , @ljharb/eslint-config 5945497 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config 1754eae Update eslint , semver , nsp a40f7af Update covert , jscs , eslint , semver f7c3504 [Fix] account for Safari 10 which reports the wrong toString on generator functions. 3a3a52b [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config , semver , nsp aaab6c3 [Dev Deps] update jscs e24641c [Tests] up to io.js v3.3 , node v4.1 c43c5ad Add npm run security via nsp 24256ca Test up to io.js v2.3 730233f [Tests] use pretest/posttest for linting/security 3e6b860 [Refactor] remove useless Object#toString check. 9d4d7ac [Dev Deps] Update tape , eslint 34673b8 Test up to io.js v2.1 1e91585 Test on two latest io.js versions. 8702608 Test on iojs-v1.5 and iojs-v1.6 c74935e Latest node now supports generators. beb3bfe [Dev Deps] update tape c6e6587 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 0039875 Test on io.js v2.5 0017408 Test on io.js v2.4 bc013e2 Test on io.js v3.0 e195030","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v104-2015-03-03","text":"","title":"v1.0.4 - 2015-03-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#fixed_4","text":"Add support for detecting concise generator methods. #2","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_6","text":"All grade A-supported node / iojs versions now ship with an npm that understands ^ . 6562e80 Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 592f768 Test on latest io.js edca329 Forgot to add replace in 209fac444b4bd90eaa8df279457c4a15e6bba6d2 3ebfb38 Update semver c21baa5 Update jscs 71a68f4 Update tape 32c03cf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v103-2015-01-31","text":"","title":"v1.0.3 - 2015-01-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_7","text":"make release 209fac4 Run tests against a faked @@toStringTag c9ba1ea Add sudo: false to speed up travis-ci tests. a4b41e1 Bail out early when typeof is not \"function\" a62e7a5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v102-2015-01-20","text":"","title":"v1.0.2 - 2015-01-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_8","text":"Update tape , jscs 354d343 Update jscs e0b6203 Fix tests in newer v8 (and io.js) 36f0545","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v101-2014-12-14","text":"","title":"v1.0.1 - 2014-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_9","text":"Use my standard jscs.json file. 7624ca3 Use make-generator-function instead of a local module. 9234a57 Adding license and downloads badges 9463b6a Using single quotes exclusively. 4b4d71f Use SVG badges instead of PNG eaaaf41 Updating jscs. 780758e Update tape , jscs 6b8f959 Update tape , jscs 6e1334d Lock covert to v1.0.0. 3dd5c74 Updating tape 99f61a3 Updating jscs 171d96d Updating jscs 847795e Updating jscs cad09d8 Updating covert 8617860 Adding an .nvmrc file. 1fa3ea4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v100-2014-08-09","text":"","title":"v1.0.0 - 2014-08-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_10","text":"Adding npm run lint ed9cf0a Make sure old and unstable nodes don't break Travis 80a7ee7 Updating tape d5f141f Fix npm upgrading on node 0.8 2ee0f08 Updating dependencies accf688 Updating covert 38d22e6 Updating tape 49c1f00 Updating tape 75cb7df Updating tape 4142cc0 Better code coverage 1831d64","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#v000-2014-02-09","text":"","title":"v0.0.0 - 2014-02-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-generator-function/CHANGELOG/#commits_11","text":"Tests. f46e936 package.json 189db32 Initial commit 8096cee README. 9eda97f Implementation. c5c3a8d Adding Travis CI 9a6503e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/","text":"is-glob Returns true if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your :heart: and support. Install Install with npm : $ npm install --save is-glob You might also be interested in is-valid-glob and has-glob . Usage var isGlob = require('is-glob'); Default behavior True Patterns that have glob characters or regex patterns will return true : isGlob('!foo.js'); isGlob('*.js'); isGlob('**/abc.js'); isGlob('abc/*.js'); isGlob('abc/(aaa|bbb).js'); isGlob('abc/[a-z].js'); isGlob('abc/{a,b}.js'); //=> true Extglobs isGlob('abc/@(a).js'); isGlob('abc/!(a).js'); isGlob('abc/+(a).js'); isGlob('abc/*(a).js'); isGlob('abc/?(a).js'); //=> true False Escaped globs or extglobs return false : isGlob('abc/\\\\@(a).js'); isGlob('abc/\\\\!(a).js'); isGlob('abc/\\\\+(a).js'); isGlob('abc/\\\\*(a).js'); isGlob('abc/\\\\?(a).js'); isGlob('\\\\!foo.js'); isGlob('\\\\*.js'); isGlob('\\\\*\\\\*/abc.js'); isGlob('abc/\\\\*.js'); isGlob('abc/\\\\(aaa|bbb).js'); isGlob('abc/\\\\[a-z].js'); isGlob('abc/\\\\{a,b}.js'); //=> false Patterns that do not have glob patterns return false : isGlob('abc.js'); isGlob('abc/def/ghi.js'); isGlob('foo.js'); isGlob('abc/@.js'); isGlob('abc/+.js'); isGlob('abc/?.js'); isGlob(); isGlob(null); //=> false Arrays are also false (If you want to check if an array has a glob pattern, use has-glob ): isGlob(['**/*.js']); isGlob(['foo.js']); //=> false Option strict When options.strict === false the behavior is less strict in determining if a pattern is a glob. Meaning that some patterns that would return false may return true . This is done so that matching libraries like micromatch have a chance at determining if the pattern is a glob or not. True Patterns that have glob characters or regex patterns will return true : isGlob('!foo.js', {strict: false}); isGlob('*.js', {strict: false}); isGlob('**/abc.js', {strict: false}); isGlob('abc/*.js', {strict: false}); isGlob('abc/(aaa|bbb).js', {strict: false}); isGlob('abc/[a-z].js', {strict: false}); isGlob('abc/{a,b}.js', {strict: false}); //=> true Extglobs isGlob('abc/@(a).js', {strict: false}); isGlob('abc/!(a).js', {strict: false}); isGlob('abc/+(a).js', {strict: false}); isGlob('abc/*(a).js', {strict: false}); isGlob('abc/?(a).js', {strict: false}); //=> true False Escaped globs or extglobs return false : isGlob('\\\\!foo.js', {strict: false}); isGlob('\\\\*.js', {strict: false}); isGlob('\\\\*\\\\*/abc.js', {strict: false}); isGlob('abc/\\\\*.js', {strict: false}); isGlob('abc/\\\\(aaa|bbb).js', {strict: false}); isGlob('abc/\\\\[a-z].js', {strict: false}); isGlob('abc/\\\\{a,b}.js', {strict: false}); //=> false About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Related projects You might also be interested in these projects: assemble : Get the rocks out of your socks! Assemble makes you fast at creating web projects\u2026 more | homepage base : Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | homepage update : Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 more | homepage verb : Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used\u2026 more | homepage Contributors Commits Contributor 47 jonschlinkert 5 doowb 1 phated 1 danhper 1 paulmillr Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile License Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on March 27, 2019.","title":"is-glob NPM version NPM monthly downloads NPM total downloads Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#is-glob","text":"Returns true if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your :heart: and support.","title":"is-glob"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#install","text":"Install with npm : $ npm install --save is-glob You might also be interested in is-valid-glob and has-glob .","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#usage","text":"var isGlob = require('is-glob');","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#default-behavior","text":"True Patterns that have glob characters or regex patterns will return true : isGlob('!foo.js'); isGlob('*.js'); isGlob('**/abc.js'); isGlob('abc/*.js'); isGlob('abc/(aaa|bbb).js'); isGlob('abc/[a-z].js'); isGlob('abc/{a,b}.js'); //=> true Extglobs isGlob('abc/@(a).js'); isGlob('abc/!(a).js'); isGlob('abc/+(a).js'); isGlob('abc/*(a).js'); isGlob('abc/?(a).js'); //=> true False Escaped globs or extglobs return false : isGlob('abc/\\\\@(a).js'); isGlob('abc/\\\\!(a).js'); isGlob('abc/\\\\+(a).js'); isGlob('abc/\\\\*(a).js'); isGlob('abc/\\\\?(a).js'); isGlob('\\\\!foo.js'); isGlob('\\\\*.js'); isGlob('\\\\*\\\\*/abc.js'); isGlob('abc/\\\\*.js'); isGlob('abc/\\\\(aaa|bbb).js'); isGlob('abc/\\\\[a-z].js'); isGlob('abc/\\\\{a,b}.js'); //=> false Patterns that do not have glob patterns return false : isGlob('abc.js'); isGlob('abc/def/ghi.js'); isGlob('foo.js'); isGlob('abc/@.js'); isGlob('abc/+.js'); isGlob('abc/?.js'); isGlob(); isGlob(null); //=> false Arrays are also false (If you want to check if an array has a glob pattern, use has-glob ): isGlob(['**/*.js']); isGlob(['foo.js']); //=> false","title":"Default behavior"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#option-strict","text":"When options.strict === false the behavior is less strict in determining if a pattern is a glob. Meaning that some patterns that would return false may return true . This is done so that matching libraries like micromatch have a chance at determining if the pattern is a glob or not. True Patterns that have glob characters or regex patterns will return true : isGlob('!foo.js', {strict: false}); isGlob('*.js', {strict: false}); isGlob('**/abc.js', {strict: false}); isGlob('abc/*.js', {strict: false}); isGlob('abc/(aaa|bbb).js', {strict: false}); isGlob('abc/[a-z].js', {strict: false}); isGlob('abc/{a,b}.js', {strict: false}); //=> true Extglobs isGlob('abc/@(a).js', {strict: false}); isGlob('abc/!(a).js', {strict: false}); isGlob('abc/+(a).js', {strict: false}); isGlob('abc/*(a).js', {strict: false}); isGlob('abc/?(a).js', {strict: false}); //=> true False Escaped globs or extglobs return false : isGlob('\\\\!foo.js', {strict: false}); isGlob('\\\\*.js', {strict: false}); isGlob('\\\\*\\\\*/abc.js', {strict: false}); isGlob('abc/\\\\*.js', {strict: false}); isGlob('abc/\\\\(aaa|bbb).js', {strict: false}); isGlob('abc/\\\\[a-z].js', {strict: false}); isGlob('abc/\\\\{a,b}.js', {strict: false}); //=> false","title":"Option strict"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#related-projects","text":"You might also be interested in these projects: assemble : Get the rocks out of your socks! Assemble makes you fast at creating web projects\u2026 more | homepage base : Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | homepage update : Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 more | homepage verb : Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used\u2026 more | homepage","title":"Related projects"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#contributors","text":"Commits Contributor 47 jonschlinkert 5 doowb 1 phated 1 danhper 1 paulmillr","title":"Contributors"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile","title":"Author"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-glob/#license","text":"Copyright \u00a9 2019, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on March 27, 2019.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/","text":"is-map Is this value a JS Map? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isMap = require('is-map'); assert(!isMap(function () {})); assert(!isMap(null)); assert(!isMap(function* () { yield 42; return Infinity; }); assert(!isMap(Symbol('foo'))); assert(!isMap(1n)); assert(!isMap(Object(1n))); assert(!isMap(new Set())); assert(!isMap(new WeakSet())); assert(!isMap(new WeakMap())); assert(isMap(new Map())); class MyMap extends Map {} assert(isMap(new MyMap())); Tests Simply clone the repo, npm install , and run npm test","title":"is-map Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/#is-map","text":"Is this value a JS Map? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-map"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/#example","text":"var isMap = require('is-map'); assert(!isMap(function () {})); assert(!isMap(null)); assert(!isMap(function* () { yield 42; return Infinity; }); assert(!isMap(Symbol('foo'))); assert(!isMap(1n)); assert(!isMap(Object(1n))); assert(!isMap(new Set())); assert(!isMap(new WeakSet())); assert(!isMap(new WeakMap())); assert(isMap(new Map())); class MyMap extends Map {} assert(isMap(new MyMap()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.3 - 2024-03-08 Commits [actions] reuse common workflows ce10d0f [meta] use npmignore to autogenerate an npmignore file e07e23a add types cd13cfb [actions] use node/install instead of node/run ; use codecov action 1e055f9 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 12d125e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape adfb18e [actions] remove redundant finisher c5511b7 [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , npmignore , object-inspect , tape b2c7d67 [actions] update rebase action to use reusable workflow bbad644 [actions] update codecov uploader 8f57f98 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , es5-shim , object-inspect , tape d330ff4 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 454e31c [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape b43283d [readme] add actions and codecov badges 0fc119e [Dev Deps] update eslint , object-inspect e2311f8 [meta] add missing engines.node 9bddaf2 [meta] use prepublishOnly script for npm 7+ d3b7661 [Dev Deps] update safe-publish-latest 00d7b69 [meta] add sideEffects flag bab4457 v2.0.2 - 2020-12-13 Commits [Tests] migrate tests to Github Actions 349a036 [meta] do not publish github action workflow files f473ae7 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape 12dbda3 [Tests] run nyc on all tests; use tape runner; add core-js tests b280737 [actions] add \"Allow Edits\" workflow d8dcf17 [readme] remove travis badge eab86f9 [Dev Deps] update eslint , @ljharb/eslint-config , tape 9c87af5 [actions] switch Automatic Rease workflow to pull_request_tarbget event 71647b8 [Dev Deps] update es5-shim , tape 3a91230 [Dev Deps] update auto-changelog ; add aud d3cd3da [Tests] only audit prod deps 83ef327 [meta] normalize line endings 81a9eec v2.0.1 - 2019-12-17 Fixed [Refactor] avoid top-level return, because babel and webpack are broken #5 #4 #3 #78 #7 #12 Commits [actions] add automatic rebasing / merge commit blocking 743f29f [Dev Deps] update eslint , @ljharb/eslint-config , tape 8ced854 v2.0.0 - 2019-11-12 Commits Initial commit 38592bc Tests ca54632 readme 9ad8bb6 implementation 03e1dbc npm init d05ce8b [meta] add funding field; create FUNDING.yml 2d56b4e [meta] add safe-publish-latest , auto-changelog 2ebecb5 [Tests] add npm run lint ddc3e32 [Tests] use shared travis-ci configs 69f6d9c Only apps should have lockfiles 408cccd [Tests] add npx aud in posttest 5eadb02 v1.0.1 - 2015-07-02 Commits small tweaks 2bd7622 Add related section to readme 3231e74 Update license info in readme.md 3a03b38 editorconfig: indent yml using 2 spaces d724177 v1.0.0 - 2015-02-18 Commits init 73b9f38","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#v203-2024-03-08","text":"","title":"v2.0.3 - 2024-03-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#commits","text":"[actions] reuse common workflows ce10d0f [meta] use npmignore to autogenerate an npmignore file e07e23a add types cd13cfb [actions] use node/install instead of node/run ; use codecov action 1e055f9 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 12d125e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape adfb18e [actions] remove redundant finisher c5511b7 [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , npmignore , object-inspect , tape b2c7d67 [actions] update rebase action to use reusable workflow bbad644 [actions] update codecov uploader 8f57f98 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , es5-shim , object-inspect , tape d330ff4 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 454e31c [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape b43283d [readme] add actions and codecov badges 0fc119e [Dev Deps] update eslint , object-inspect e2311f8 [meta] add missing engines.node 9bddaf2 [meta] use prepublishOnly script for npm 7+ d3b7661 [Dev Deps] update safe-publish-latest 00d7b69 [meta] add sideEffects flag bab4457","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#v202-2020-12-13","text":"","title":"v2.0.2 - 2020-12-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions 349a036 [meta] do not publish github action workflow files f473ae7 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape 12dbda3 [Tests] run nyc on all tests; use tape runner; add core-js tests b280737 [actions] add \"Allow Edits\" workflow d8dcf17 [readme] remove travis badge eab86f9 [Dev Deps] update eslint , @ljharb/eslint-config , tape 9c87af5 [actions] switch Automatic Rease workflow to pull_request_tarbget event 71647b8 [Dev Deps] update es5-shim , tape 3a91230 [Dev Deps] update auto-changelog ; add aud d3cd3da [Tests] only audit prod deps 83ef327 [meta] normalize line endings 81a9eec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#v201-2019-12-17","text":"","title":"v2.0.1 - 2019-12-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#fixed","text":"[Refactor] avoid top-level return, because babel and webpack are broken #5 #4 #3 #78 #7 #12","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#commits_2","text":"[actions] add automatic rebasing / merge commit blocking 743f29f [Dev Deps] update eslint , @ljharb/eslint-config , tape 8ced854","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#v200-2019-11-12","text":"","title":"v2.0.0 - 2019-11-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#commits_3","text":"Initial commit 38592bc Tests ca54632 readme 9ad8bb6 implementation 03e1dbc npm init d05ce8b [meta] add funding field; create FUNDING.yml 2d56b4e [meta] add safe-publish-latest , auto-changelog 2ebecb5 [Tests] add npm run lint ddc3e32 [Tests] use shared travis-ci configs 69f6d9c Only apps should have lockfiles 408cccd [Tests] add npx aud in posttest 5eadb02","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#v101-2015-07-02","text":"","title":"v1.0.1 - 2015-07-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#commits_4","text":"small tweaks 2bd7622 Add related section to readme 3231e74 Update license info in readme.md 3a03b38 editorconfig: indent yml using 2 spaces d724177","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#v100-2015-02-18","text":"","title":"v1.0.0 - 2015-02-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-map/CHANGELOG/#commits_5","text":"init 73b9f38","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/","text":"is-negative-zero Is this value negative zero? === will lie to you. Example var isNegativeZero = require('is-negative-zero'); var assert = require('assert'); assert.notOk(isNegativeZero(undefined)); assert.notOk(isNegativeZero(null)); assert.notOk(isNegativeZero(false)); assert.notOk(isNegativeZero(true)); assert.notOk(isNegativeZero(0)); assert.notOk(isNegativeZero(42)); assert.notOk(isNegativeZero(Infinity)); assert.notOk(isNegativeZero(-Infinity)); assert.notOk(isNegativeZero(NaN)); assert.notOk(isNegativeZero('foo')); assert.notOk(isNegativeZero(function () {})); assert.notOk(isNegativeZero([])); assert.notOk(isNegativeZero({})); assert.ok(isNegativeZero(-0)); Tests Simply clone the repo, npm install , and run npm test","title":"is-negative-zero Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/#is-negative-zero","text":"Is this value negative zero? === will lie to you.","title":"is-negative-zero"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/#example","text":"var isNegativeZero = require('is-negative-zero'); var assert = require('assert'); assert.notOk(isNegativeZero(undefined)); assert.notOk(isNegativeZero(null)); assert.notOk(isNegativeZero(false)); assert.notOk(isNegativeZero(true)); assert.notOk(isNegativeZero(0)); assert.notOk(isNegativeZero(42)); assert.notOk(isNegativeZero(Infinity)); assert.notOk(isNegativeZero(-Infinity)); assert.notOk(isNegativeZero(NaN)); assert.notOk(isNegativeZero('foo')); assert.notOk(isNegativeZero(function () {})); assert.notOk(isNegativeZero([])); assert.notOk(isNegativeZero({})); assert.ok(isNegativeZero(-0));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.3 - 2024-02-19 Commits add types e28f0d5 [meta] use npmignore to autogenerate an npmignore file f68ec13 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 70abff7 [actions] update rebase action to use reusable workflow 6e1356e [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape c00d4ab [meta] add sideEffects flag 9c45539 v2.0.2 - 2021-12-10 Commits [actions] reuse common workflows ece923d [actions] use node/install instead of node/run ; use codecov action 3a26f43 [meta] do not publish workflow files 2cea0c2 [readme] add github actions/codecov badges; update URLs 0c0be3e [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape a93d16e [meta] create FUNDING.yml b4f425e [actions] update codecov uploader 7999db3 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , safe-publish-latest , tape 140e4d9 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 23a8b6d [readme] add actions and codecov badges fe92126 [readme] fix repo URLs 50c428e [Dev Deps] update eslint , @ljharb/eslint-config , tape 688155f [meta] use prepublishOnly script for npm 7+ 83171f9 [actions] update workflows e9823db v2.0.1 - 2020-12-04 Commits [Tests] use shared travis-ci configs 5b92482 [Tests] up to node v11.7 , v10.15 , v9.11 , v8.15 , v7.10 , v6.16 , v5.12 , v4.9 ; use nvm install-latest-npm ; fix test scripts 0f5d2f8 [Tests] migrate tests to Github Actions b80f05a [Tests] remove jscs 7ccaf41 [meta] add missing changelog 992bdde [readme] fix repo URLs; remove defunct badges 80fd18d [Tests] run nyc on all tests df26f14 Update tape , jscs , eslint , @ljharb/eslint-config d7723aa [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 9fdaabe [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape f07eeb2 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config bd5c751 [actions] add automatic rebasing / merge commit blocking 5666a91 [meta] add auto-changelog f70fb2b [actions] add \"Allow Edits\" workflow 2b040a8 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add safe-publish-latest 09e2e53 [Tests] use npm audit instead of nsp 7df2669 [Tests] up to io.js v3.3 , node v4.1 4ff97c5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 9e8cb7b [Dev Deps] update jscs , eslint , @ljharb/eslint-config , nsp 70b9888 [Dev Deps] update jscs 59d0c42 Add npm run security eb418ed [Dev Deps] update eslint , @ljharb/eslint-config , tape 86a758d Only apps should have lockfiles a0ab621 [Tests] use npx aud instead of nsp or npm audit with hoops 5c51349 [meta] add funding field 1d0b2f4 [actions] switch Automatic Rebase workflow to pull_request_target event 9b12367 [Dev Deps] update auto-changelog , tape 6d98b8d [Dev Deps] Update tape , eslint a258cdb [Dev Deps] update auto-changelog ; add aud 2ca2afb Test up to io.js v3.0 1254ae8 [Dev Deps] update auto-changelog 4b54722 [Tests] only audit prod deps 86d298b [Dev Deps] update tape 3a47e27 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 128d9bd v2.0.0 - 2015-07-24 Commits Update tape , eslint ; use my personal shared eslint config. 648d002 Add npm run eslint 5a52d80 Using my standard jscs.json file 5a667d9 Adding npm run lint 9a85ed9 Update tape , covert , jscs c6cd3a6 Update eslint e9c9b6e Test on latest io.js 2f7c8a9 Adding license and downloads badges 717087a Remove Number type coercion. 481295d Test up to io.js v2.1 139a84a Update eslint 2f5fbfb Update eslint 53cb4c5 Test on io.js v2.2 98a1824 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 772d6cd Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 3e6147e Use SVG badges instead of PNG d986cb4 Update tape , jscs 9f9d7e7 Update jscs 079eaf6 Update tape , jscs cffe3fc Update tape , jscs 3a16616 Use consistent quotes 9509a81 Test on io.js v2.4 a9150a3 Test on io.js v2.3 36d7acf Lock covert to v1.0.0. 29d8917 Updating jscs fe09c8a Updating jscs 5877bc7 Running linter as part of tests 9e77756 Updating covert 520a695 v1.0.0 - 2014-08-08 Commits Updating tape 31d1942 Updating tape e7143bf v0.1.1 - 2014-05-13 Merged Simplify code #1 Commits Adding a trailing newline 61fb37f v0.1.0 - 2014-05-13 Commits Make sure old and unstable nodes don't break Travis f627215 Updating deps b502f48 Oops, negative numbers were negative zero! 746cb97 Updating covert 99ef4ed Updating tape ee9cfc2 Testing on node 0.6 again 6a9bf0a v0.0.0 - 2014-01-19 Commits package.json 8411d92 read me 5c8bf3c Initial commit c06f7dc Tests. 5c554d4 Travis CI 334d000 Implementation. 4ef4491","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v203-2024-02-19","text":"","title":"v2.0.3 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits","text":"add types e28f0d5 [meta] use npmignore to autogenerate an npmignore file f68ec13 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 70abff7 [actions] update rebase action to use reusable workflow 6e1356e [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape c00d4ab [meta] add sideEffects flag 9c45539","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v202-2021-12-10","text":"","title":"v2.0.2 - 2021-12-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_1","text":"[actions] reuse common workflows ece923d [actions] use node/install instead of node/run ; use codecov action 3a26f43 [meta] do not publish workflow files 2cea0c2 [readme] add github actions/codecov badges; update URLs 0c0be3e [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape a93d16e [meta] create FUNDING.yml b4f425e [actions] update codecov uploader 7999db3 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , safe-publish-latest , tape 140e4d9 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 23a8b6d [readme] add actions and codecov badges fe92126 [readme] fix repo URLs 50c428e [Dev Deps] update eslint , @ljharb/eslint-config , tape 688155f [meta] use prepublishOnly script for npm 7+ 83171f9 [actions] update workflows e9823db","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v201-2020-12-04","text":"","title":"v2.0.1 - 2020-12-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_2","text":"[Tests] use shared travis-ci configs 5b92482 [Tests] up to node v11.7 , v10.15 , v9.11 , v8.15 , v7.10 , v6.16 , v5.12 , v4.9 ; use nvm install-latest-npm ; fix test scripts 0f5d2f8 [Tests] migrate tests to Github Actions b80f05a [Tests] remove jscs 7ccaf41 [meta] add missing changelog 992bdde [readme] fix repo URLs; remove defunct badges 80fd18d [Tests] run nyc on all tests df26f14 Update tape , jscs , eslint , @ljharb/eslint-config d7723aa [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 9fdaabe [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape f07eeb2 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config bd5c751 [actions] add automatic rebasing / merge commit blocking 5666a91 [meta] add auto-changelog f70fb2b [actions] add \"Allow Edits\" workflow 2b040a8 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add safe-publish-latest 09e2e53 [Tests] use npm audit instead of nsp 7df2669 [Tests] up to io.js v3.3 , node v4.1 4ff97c5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 9e8cb7b [Dev Deps] update jscs , eslint , @ljharb/eslint-config , nsp 70b9888 [Dev Deps] update jscs 59d0c42 Add npm run security eb418ed [Dev Deps] update eslint , @ljharb/eslint-config , tape 86a758d Only apps should have lockfiles a0ab621 [Tests] use npx aud instead of nsp or npm audit with hoops 5c51349 [meta] add funding field 1d0b2f4 [actions] switch Automatic Rebase workflow to pull_request_target event 9b12367 [Dev Deps] update auto-changelog , tape 6d98b8d [Dev Deps] Update tape , eslint a258cdb [Dev Deps] update auto-changelog ; add aud 2ca2afb Test up to io.js v3.0 1254ae8 [Dev Deps] update auto-changelog 4b54722 [Tests] only audit prod deps 86d298b [Dev Deps] update tape 3a47e27 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 128d9bd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v200-2015-07-24","text":"","title":"v2.0.0 - 2015-07-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_3","text":"Update tape , eslint ; use my personal shared eslint config. 648d002 Add npm run eslint 5a52d80 Using my standard jscs.json file 5a667d9 Adding npm run lint 9a85ed9 Update tape , covert , jscs c6cd3a6 Update eslint e9c9b6e Test on latest io.js 2f7c8a9 Adding license and downloads badges 717087a Remove Number type coercion. 481295d Test up to io.js v2.1 139a84a Update eslint 2f5fbfb Update eslint 53cb4c5 Test on io.js v2.2 98a1824 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 772d6cd Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. 3e6147e Use SVG badges instead of PNG d986cb4 Update tape , jscs 9f9d7e7 Update jscs 079eaf6 Update tape , jscs cffe3fc Update tape , jscs 3a16616 Use consistent quotes 9509a81 Test on io.js v2.4 a9150a3 Test on io.js v2.3 36d7acf Lock covert to v1.0.0. 29d8917 Updating jscs fe09c8a Updating jscs 5877bc7 Running linter as part of tests 9e77756 Updating covert 520a695","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v100-2014-08-08","text":"","title":"v1.0.0 - 2014-08-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_4","text":"Updating tape 31d1942 Updating tape e7143bf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v011-2014-05-13","text":"","title":"v0.1.1 - 2014-05-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#merged","text":"Simplify code #1","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_5","text":"Adding a trailing newline 61fb37f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v010-2014-05-13","text":"","title":"v0.1.0 - 2014-05-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_6","text":"Make sure old and unstable nodes don't break Travis f627215 Updating deps b502f48 Oops, negative numbers were negative zero! 746cb97 Updating covert 99ef4ed Updating tape ee9cfc2 Testing on node 0.6 again 6a9bf0a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#v000-2014-01-19","text":"","title":"v0.0.0 - 2014-01-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-negative-zero/CHANGELOG/#commits_7","text":"package.json 8411d92 read me 5c8bf3c Initial commit c06f7dc Tests. 5c554d4 Travis CI 334d000 Implementation. 4ef4491","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/","text":"is-number-object Is this value a JS Number object? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isNumber = require('is-number-object'); var assert = require('assert'); assert.notOk(isNumber(undefined)); assert.notOk(isNumber(null)); assert.notOk(isNumber(false)); assert.notOk(isNumber(true)); assert.notOk(isNumber('foo')); assert.notOk(isNumber(function () {})); assert.notOk(isNumber([])); assert.notOk(isNumber({})); assert.notOk(isNumber(/a/g)); assert.notOk(isNumber(new RegExp('a', 'g'))); assert.notOk(isNumber(new Date())); assert.ok(isNumber(42)); assert.ok(isNumber(NaN)); assert.ok(isNumber(Infinity)); assert.ok(isNumber(new Number(42))); Tests Simply clone the repo, npm install , and run npm test","title":"is-number-object Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/#is-number-object","text":"Is this value a JS Number object? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-number-object"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/#example","text":"var isNumber = require('is-number-object'); var assert = require('assert'); assert.notOk(isNumber(undefined)); assert.notOk(isNumber(null)); assert.notOk(isNumber(false)); assert.notOk(isNumber(true)); assert.notOk(isNumber('foo')); assert.notOk(isNumber(function () {})); assert.notOk(isNumber([])); assert.notOk(isNumber({})); assert.notOk(isNumber(/a/g)); assert.notOk(isNumber(new RegExp('a', 'g'))); assert.notOk(isNumber(new Date())); assert.ok(isNumber(42)); assert.ok(isNumber(NaN)); assert.ok(isNumber(Infinity)); assert.ok(isNumber(new Number(42)));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.7 - 2022-04-01 Commits [actions] reuse common workflows 8f9a1b0 [meta] better eccheck command 9dc8dff [Dev Deps] update eslint , @ljharb/eslint-config , core-js , safe-publish-latest , tape c50ecbf [actions] update codecov uploader f1a2560 [Dev Deps] update eslint , @ljharb/eslint-config , aud , core-js , tape 4b06ace [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , core-js , tape 3dc0e8b [meta] add bugs / homepage package.json fields d7e0bcf v1.0.6 - 2021-08-05 Commits [Tests] run tests with core-js as well 5177312 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams ca2b31d [Dev Deps] update auto-changelog , core-js , eslint , tape 50950f9 v1.0.5 - 2021-05-07 Commits [Tests] migrate tests to Github Actions 9666737 [actions] use node/install instead of node/run ; use codecov action 7815ce2 [meta] do not publish github action workflow files 80ccb75 [Tests] run nyc on all tests c9ffb74 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 7e84161 [readme] add actions and codecov badges 0c5ec7a [actions] add Require Allow Edits workflow dd0fb74 [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , tape 2d36f80 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 77d3140 [Dev Deps] update eslint , @ljharb/eslint-config , tape 75d4abf [Dev Deps] update eslint , @ljharb/eslint-config , tape 0c2a917 [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 8b6ebc4 [Dev Deps] update auto-changelog , tape ; add aud 62045fc [actions] use checkout v2; remove unneeded env d48cd06 [meta] use prepublishOnly script for npm 7+ 827ab0d [actions] switch Automatic Rebase workflow to pull_request_target event bfed500 [meta] remove explicit audit level config ce23e5e [meta] gitignore coverage output f1ad981 v1.0.4 - 2019-12-18 Commits [Tests] use shared travis-ci configs 792b5aa [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v5.12 , v4.9 ; use nvm install-latest-npm dc66db7 Update eslint , tape , semver ; use my personal shared eslint config 7660fed [Tests] remove jscs f1fee97 [meta] add auto-changelog 4b1c225 [meta] remove unused Makefile and associated utilities 379b979 Update covert , jscs , eslint , semver 16d2af8 [Dev Deps] update eslint , @ljharb/eslint-config , covert , is , replace , semver , tape 21c0f04 Update is , tape , covert , jscs , editorconfig-tools , nsp , eslint , semver . Add replace . Use ^ instead of ~ . 19d6ee3 Update eslint d32754b [Dev Deps] update eslint , @ljharb/eslint-config , replace 1df8165 Update tape , jscs , eslint , @ljharb/eslint-config 675372b [readme] clean up readme; remove testling; fix repo URLs 80e29c4 [Tests] up to node v12.7 , v10.16 , v8.16 287a968 Test on latest iojs and node versions. 11c98a2 [actions] add automatic rebasing / merge commit blocking 022d026 [meta] create FUNDING.yml 7f52710 [Dev Deps] update is , jscs , nsp , eslint , @ljharb/eslint-config , semver bc8cd50 [Tests] use npx aud instead of nsp or npm audit with hoops 1f9200b [Tests] up to node v12.11 706d50a [Dev Deps] update jscs e3591a4 [Tests] up to io.js v3.3 , node v4.1 baf4ee7 Update nsp , eslint 61b18d5 Update eslint , semver 52e61bd [Dev Deps] update eslint , @ljharb/eslint-config , has-symbols ; add safe-publish-latest 79db7f6 Only apps should have lockfiles 677b9b4 Test on io.js v2.2 e8a38b2 [meta] add funding field 85315e7 [Dev Deps] update eslint , tape f3581aa [Tests] use eclint instead of editorconfig-tools 7b53680 [Dev Deps] update semver , tape d6b524a [Dev Deps] Update tape , eslint be19203 Test up to io.js v2.1 feb7ba6 Test up to io.js v3.0 7be1f0a [Dev Deps] update tape d9a2318 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. a6cd411 Test on io.js v2.4 46c2e7f Test on io.js v2.3 9c344b0 Fix tests for faked @@toStringTag f8c446e v1.0.3 - 2015-01-29 Commits If @@toStringTag is not present, use the old-school Object#toString test. 9b2a4df v1.0.2 - 2015-01-29 Commits Improve optimizability of the non-try/catch part. 7e6be2f Fix package.json 4f2ebea v1.0.1 - 2015-01-29 Commits Use Object() instead of new Number() 1aaa746 Add early exits for typeof number, or typeof not \"object\". eae4337 v1.0.0 - 2015-01-28 Commits Dotfiles. 9c74e3e make release a99e5ae package.json 4fed9ef Read me c91d6ba Initial commit 629fb96 Tests. a39de62 Implementation. aedd91e","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v107-2022-04-01","text":"","title":"v1.0.7 - 2022-04-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits","text":"[actions] reuse common workflows 8f9a1b0 [meta] better eccheck command 9dc8dff [Dev Deps] update eslint , @ljharb/eslint-config , core-js , safe-publish-latest , tape c50ecbf [actions] update codecov uploader f1a2560 [Dev Deps] update eslint , @ljharb/eslint-config , aud , core-js , tape 4b06ace [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , core-js , tape 3dc0e8b [meta] add bugs / homepage package.json fields d7e0bcf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v106-2021-08-05","text":"","title":"v1.0.6 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_1","text":"[Tests] run tests with core-js as well 5177312 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams ca2b31d [Dev Deps] update auto-changelog , core-js , eslint , tape 50950f9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v105-2021-05-07","text":"","title":"v1.0.5 - 2021-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions 9666737 [actions] use node/install instead of node/run ; use codecov action 7815ce2 [meta] do not publish github action workflow files 80ccb75 [Tests] run nyc on all tests c9ffb74 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 7e84161 [readme] add actions and codecov badges 0c5ec7a [actions] add Require Allow Edits workflow dd0fb74 [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , tape 2d36f80 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 77d3140 [Dev Deps] update eslint , @ljharb/eslint-config , tape 75d4abf [Dev Deps] update eslint , @ljharb/eslint-config , tape 0c2a917 [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 8b6ebc4 [Dev Deps] update auto-changelog , tape ; add aud 62045fc [actions] use checkout v2; remove unneeded env d48cd06 [meta] use prepublishOnly script for npm 7+ 827ab0d [actions] switch Automatic Rebase workflow to pull_request_target event bfed500 [meta] remove explicit audit level config ce23e5e [meta] gitignore coverage output f1ad981","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v104-2019-12-18","text":"","title":"v1.0.4 - 2019-12-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_3","text":"[Tests] use shared travis-ci configs 792b5aa [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v5.12 , v4.9 ; use nvm install-latest-npm dc66db7 Update eslint , tape , semver ; use my personal shared eslint config 7660fed [Tests] remove jscs f1fee97 [meta] add auto-changelog 4b1c225 [meta] remove unused Makefile and associated utilities 379b979 Update covert , jscs , eslint , semver 16d2af8 [Dev Deps] update eslint , @ljharb/eslint-config , covert , is , replace , semver , tape 21c0f04 Update is , tape , covert , jscs , editorconfig-tools , nsp , eslint , semver . Add replace . Use ^ instead of ~ . 19d6ee3 Update eslint d32754b [Dev Deps] update eslint , @ljharb/eslint-config , replace 1df8165 Update tape , jscs , eslint , @ljharb/eslint-config 675372b [readme] clean up readme; remove testling; fix repo URLs 80e29c4 [Tests] up to node v12.7 , v10.16 , v8.16 287a968 Test on latest iojs and node versions. 11c98a2 [actions] add automatic rebasing / merge commit blocking 022d026 [meta] create FUNDING.yml 7f52710 [Dev Deps] update is , jscs , nsp , eslint , @ljharb/eslint-config , semver bc8cd50 [Tests] use npx aud instead of nsp or npm audit with hoops 1f9200b [Tests] up to node v12.11 706d50a [Dev Deps] update jscs e3591a4 [Tests] up to io.js v3.3 , node v4.1 baf4ee7 Update nsp , eslint 61b18d5 Update eslint , semver 52e61bd [Dev Deps] update eslint , @ljharb/eslint-config , has-symbols ; add safe-publish-latest 79db7f6 Only apps should have lockfiles 677b9b4 Test on io.js v2.2 e8a38b2 [meta] add funding field 85315e7 [Dev Deps] update eslint , tape f3581aa [Tests] use eclint instead of editorconfig-tools 7b53680 [Dev Deps] update semver , tape d6b524a [Dev Deps] Update tape , eslint be19203 Test up to io.js v2.1 feb7ba6 Test up to io.js v3.0 7be1f0a [Dev Deps] update tape d9a2318 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. a6cd411 Test on io.js v2.4 46c2e7f Test on io.js v2.3 9c344b0 Fix tests for faked @@toStringTag f8c446e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v103-2015-01-29","text":"","title":"v1.0.3 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_4","text":"If @@toStringTag is not present, use the old-school Object#toString test. 9b2a4df","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v102-2015-01-29","text":"","title":"v1.0.2 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_5","text":"Improve optimizability of the non-try/catch part. 7e6be2f Fix package.json 4f2ebea","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v101-2015-01-29","text":"","title":"v1.0.1 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_6","text":"Use Object() instead of new Number() 1aaa746 Add early exits for typeof number, or typeof not \"object\". eae4337","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#v100-2015-01-28","text":"","title":"v1.0.0 - 2015-01-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-number-object/CHANGELOG/#commits_7","text":"Dotfiles. 9c74e3e make release a99e5ae package.json 4fed9ef Read me c91d6ba Initial commit 629fb96 Tests. a39de62 Implementation. aedd91e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/","text":"is-regex Is this value a JS regex? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isRegex = require('is-regex'); var assert = require('assert'); assert.notOk(isRegex(undefined)); assert.notOk(isRegex(null)); assert.notOk(isRegex(false)); assert.notOk(isRegex(true)); assert.notOk(isRegex(42)); assert.notOk(isRegex('foo')); assert.notOk(isRegex(function () {})); assert.notOk(isRegex([])); assert.notOk(isRegex({})); assert.ok(isRegex(/a/g)); assert.ok(isRegex(new RegExp('a', 'g'))); Tests Simply clone the repo, npm install , and run npm test","title":"is-regex Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/#is-regex","text":"Is this value a JS regex? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-regex"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/#example","text":"var isRegex = require('is-regex'); var assert = require('assert'); assert.notOk(isRegex(undefined)); assert.notOk(isRegex(null)); assert.notOk(isRegex(false)); assert.notOk(isRegex(true)); assert.notOk(isRegex(42)); assert.notOk(isRegex('foo')); assert.notOk(isRegex(function () {})); assert.notOk(isRegex([])); assert.notOk(isRegex({})); assert.ok(isRegex(/a/g)); assert.ok(isRegex(new RegExp('a', 'g')));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.4 - 2021-08-05 Commits [Dev Deps] update auto-changelog , core-js , eslint , tape 4b17cad [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 2dad4af v1.1.3 - 2021-05-07 Commits [actions] use node/install instead of node/run ; use codecov action c681ab9 [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed ca019fd [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 605a66f [readme] add actions and codecov badges 8d7c6f0 [meta] use prepublishOnly script for npm 7+ 8e50e91 [Deps] update has-symbols 4742c81 v1.1.2 - 2021-02-01 Commits [Tests] migrate tests to Github Actions cc1686e [readme] fix repo URLs; remove travis badge d1d1da6 [meta] do not publish github action workflow files 9f84b99 [Tests] run nyc on all tests c37aab9 [Robustness] use call-bind fbb61bf [actions] add \"Allow Edits\" workflow 9022b53 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog d60f28f [Dev Deps] update eslint , @ljharb/eslint-config , tape 2c35c43 [actions] switch Automatic Rebase workflow to pull_request_target event 1009e25 [meta] gitignore coverage output 3b5fa9e [actions] update workflows 1843ef6 v1.1.1 - 2020-08-03 Commits [Performance] Re-add lastIndex check to improve performance d8495cd [Dev Deps] update auto-changelog , eslint 778fa6b v1.1.0 - 2020-06-03 Commits [New] use badStringifier \u2011based RegExp detection 31eff67 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape fc91458 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add safe-publish-latest d43ed83 [Dev Deps] update auto-changelog , tape ; add aud 56647d1 [meta] only run aud on prod deps e0865b8 v1.0.5 - 2019-12-15 Commits [Tests] use shared travis-ci configs af728b2 [Tests] remove jscs 1b8cfe8 [meta] add auto-changelog c3131d8 [Tests] up to node v8.1 , v7.10 , v6.11 , v4.8 ; newer npm fails on older nodes 660b658 [Tests] up to node v9.3 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS 7c25218 [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 fa95547 [meta] remove unused Makefile and associated utilities 9fd2a29 [Tests] up to node v11.3 , v10.14 , v8.14 , v6.15 7f2ac41 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 6fa2b0f [Dev Deps] update eslint , @ljharb/eslint-config 697e1de [actions] add automatic rebasing / merge commit blocking ad86dc9 [Dev Deps] update eslint , @ljharb/eslint-config , jscs , nsp , replace , semver , tape 5c99c8e [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape bb63686 [Dev Deps] update eslint , @ljharb/eslint-config@ , replace , semver , tape ddf3670 [Dev Deps] update tape , nsp , eslint , @ljharb/eslint-config e7b5a62 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape c803db5 [Tests] switch from nsp to npm audit b7239be [Dev Deps] update eslint , nsp , semver , tape 347ee6c Only apps should have lockfiles. 3866575 [Tests] use npx aud instead of nsp or npm audit with hoops d099a39 [meta] add funding field 741aecd [Tests] use eclint instead of editorconfig-tools bc6aa75 [Tests] on node v10.1 262226f [Dev Deps] update eslint 31fd719 [Deps] update has e9e25a3 [Dev Deps] update replace aeeb968 [Tests] set audit level 2a6290e [Tests] remove nsp fc74c2b v1.0.4 - 2017-02-18 Fixed [Fix] ensure that lastIndex is not mutated #3 Commits Update eslint , tape , semver ; use my personal shared eslint config c4a41c3 [Tests] on all node minors; improve test matrix 58d7508 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 7290076 Update covert , jscs , eslint , semver dabc729 Update eslint a946b05 Update tape , jscs , eslint , @ljharb/eslint-config 1744dde [Refactor] when try/catch is needed, bail early if the value lacks an own lastIndex data property. 288ad93 Update editorconfig-tools , eslint , semver , replace 4d895c6 Update eslint , tape , semver f387f03 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 55e480f [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver 89d9528 [Dev Deps] update jscs eb222a8 [Tests] up to io.js v3.3 , node v4.1 c65429c Update nsp , eslint c60fbd8 Update eslint , semver 6a62116 [Tests] on node v7.5 , v4.7 e764651 Test up to io.js v2.1 3bf326a Test on the latest io.js versions. 693d047 [Refactor] use an early return instead of a ternary. 31eaca2 Test on io.js v2.2 c18c55a Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. a1c237d [Dev Deps] update eslint , @ljharb/eslint-config aa3ea0f [Dev Deps] update eslint , @ljharb/eslint-config d97831d [Dev Deps] Update tape , eslint 95e6def Update eslint , nsp 3844c93 Update tape , jscs 0d6dac8 Fix tests for faked @@toStringTag 2ebef9f Test up to io.js v3.0 ec1d2d4 [Refactor] bail earlier when the value is falsy. a9e333e [Dev Deps] update tape 8cdcaae Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 281c4ef Test on io.js v2.4 4d54c68 Test on io.js v2.3 23170f5 Test on iojs-v1.6 4487ad0 v1.0.3 - 2015-01-29 Commits Update npm run scripts. dc528dd Add toStringTag tests. f48a83a If @@toStringTag is not present, use the old-school Object#toString test. 50b0ffd v1.0.2 - 2015-01-29 Commits make release a1de7ec Improve optimization by separating the try/catch, and bailing out early when not typeof \"object\". 5ab7632 v1.0.1 - 2015-01-28 Commits Using my standard jscs.json file 1f1733a Adding npm run lint 51ea70f Use RegExp#exec to test if something is a regex, which works even with ES6 @@toStringTag. 042c8c7 Adding license and downloads badges 366d619 Use SVG badges instead of PNG 6a32e4f Update tape , jscs f1b9462 Update jscs 1bff23f Update tape , jscs c22ea2e Update tape , jscs b0479db Use consistent quotes 1a6e347 Make travis builds faster. 090a4ea Update tape 7d76129 Lock covert to v1.0.0. 9a90b03 Updating tape bfbc7f5 Updating jscs 13ad511 Updating jscs cda1945 Updating jscs de96c99 Running linter as part of tests 2cb6567 Updating covert a56ae74 Updating tape ffe47f7 v1.0.0 - 2014-05-19 Commits Make sure old and unstable nodes don't break Travis 05da747 toString is a reserved var name in old Opera 885c48c Updating deps 2ca0e79 Updating tape. 9678435 Updating covert c3bb898 Updating tape 7811708 Testing on node 0.6 again dec36ae Run code coverage as part of tests e6f4ebe v0.0.0 - 2014-01-15 Commits package.json aa60d43 read me 861e944 Initial commit d0cdd71 Tests. b533f74 Implementation. 3c9a8c0 Travis CI 742c440","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v114-2021-08-05","text":"","title":"v1.1.4 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits","text":"[Dev Deps] update auto-changelog , core-js , eslint , tape 4b17cad [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 2dad4af","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v113-2021-05-07","text":"","title":"v1.1.3 - 2021-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_1","text":"[actions] use node/install instead of node/run ; use codecov action c681ab9 [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed ca019fd [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 605a66f [readme] add actions and codecov badges 8d7c6f0 [meta] use prepublishOnly script for npm 7+ 8e50e91 [Deps] update has-symbols 4742c81","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v112-2021-02-01","text":"","title":"v1.1.2 - 2021-02-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions cc1686e [readme] fix repo URLs; remove travis badge d1d1da6 [meta] do not publish github action workflow files 9f84b99 [Tests] run nyc on all tests c37aab9 [Robustness] use call-bind fbb61bf [actions] add \"Allow Edits\" workflow 9022b53 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog d60f28f [Dev Deps] update eslint , @ljharb/eslint-config , tape 2c35c43 [actions] switch Automatic Rebase workflow to pull_request_target event 1009e25 [meta] gitignore coverage output 3b5fa9e [actions] update workflows 1843ef6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v111-2020-08-03","text":"","title":"v1.1.1 - 2020-08-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_3","text":"[Performance] Re-add lastIndex check to improve performance d8495cd [Dev Deps] update auto-changelog , eslint 778fa6b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v110-2020-06-03","text":"","title":"v1.1.0 - 2020-06-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_4","text":"[New] use badStringifier \u2011based RegExp detection 31eff67 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape fc91458 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add safe-publish-latest d43ed83 [Dev Deps] update auto-changelog , tape ; add aud 56647d1 [meta] only run aud on prod deps e0865b8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v105-2019-12-15","text":"","title":"v1.0.5 - 2019-12-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_5","text":"[Tests] use shared travis-ci configs af728b2 [Tests] remove jscs 1b8cfe8 [meta] add auto-changelog c3131d8 [Tests] up to node v8.1 , v7.10 , v6.11 , v4.8 ; newer npm fails on older nodes 660b658 [Tests] up to node v9.3 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS 7c25218 [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 fa95547 [meta] remove unused Makefile and associated utilities 9fd2a29 [Tests] up to node v11.3 , v10.14 , v8.14 , v6.15 7f2ac41 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 6fa2b0f [Dev Deps] update eslint , @ljharb/eslint-config 697e1de [actions] add automatic rebasing / merge commit blocking ad86dc9 [Dev Deps] update eslint , @ljharb/eslint-config , jscs , nsp , replace , semver , tape 5c99c8e [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape bb63686 [Dev Deps] update eslint , @ljharb/eslint-config@ , replace , semver , tape ddf3670 [Dev Deps] update tape , nsp , eslint , @ljharb/eslint-config e7b5a62 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape c803db5 [Tests] switch from nsp to npm audit b7239be [Dev Deps] update eslint , nsp , semver , tape 347ee6c Only apps should have lockfiles. 3866575 [Tests] use npx aud instead of nsp or npm audit with hoops d099a39 [meta] add funding field 741aecd [Tests] use eclint instead of editorconfig-tools bc6aa75 [Tests] on node v10.1 262226f [Dev Deps] update eslint 31fd719 [Deps] update has e9e25a3 [Dev Deps] update replace aeeb968 [Tests] set audit level 2a6290e [Tests] remove nsp fc74c2b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v104-2017-02-18","text":"","title":"v1.0.4 - 2017-02-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#fixed","text":"[Fix] ensure that lastIndex is not mutated #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_6","text":"Update eslint , tape , semver ; use my personal shared eslint config c4a41c3 [Tests] on all node minors; improve test matrix 58d7508 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 7290076 Update covert , jscs , eslint , semver dabc729 Update eslint a946b05 Update tape , jscs , eslint , @ljharb/eslint-config 1744dde [Refactor] when try/catch is needed, bail early if the value lacks an own lastIndex data property. 288ad93 Update editorconfig-tools , eslint , semver , replace 4d895c6 Update eslint , tape , semver f387f03 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 55e480f [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config , semver 89d9528 [Dev Deps] update jscs eb222a8 [Tests] up to io.js v3.3 , node v4.1 c65429c Update nsp , eslint c60fbd8 Update eslint , semver 6a62116 [Tests] on node v7.5 , v4.7 e764651 Test up to io.js v2.1 3bf326a Test on the latest io.js versions. 693d047 [Refactor] use an early return instead of a ternary. 31eaca2 Test on io.js v2.2 c18c55a Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. a1c237d [Dev Deps] update eslint , @ljharb/eslint-config aa3ea0f [Dev Deps] update eslint , @ljharb/eslint-config d97831d [Dev Deps] Update tape , eslint 95e6def Update eslint , nsp 3844c93 Update tape , jscs 0d6dac8 Fix tests for faked @@toStringTag 2ebef9f Test up to io.js v3.0 ec1d2d4 [Refactor] bail earlier when the value is falsy. a9e333e [Dev Deps] update tape 8cdcaae Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 281c4ef Test on io.js v2.4 4d54c68 Test on io.js v2.3 23170f5 Test on iojs-v1.6 4487ad0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v103-2015-01-29","text":"","title":"v1.0.3 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_7","text":"Update npm run scripts. dc528dd Add toStringTag tests. f48a83a If @@toStringTag is not present, use the old-school Object#toString test. 50b0ffd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v102-2015-01-29","text":"","title":"v1.0.2 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_8","text":"make release a1de7ec Improve optimization by separating the try/catch, and bailing out early when not typeof \"object\". 5ab7632","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v101-2015-01-28","text":"","title":"v1.0.1 - 2015-01-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_9","text":"Using my standard jscs.json file 1f1733a Adding npm run lint 51ea70f Use RegExp#exec to test if something is a regex, which works even with ES6 @@toStringTag. 042c8c7 Adding license and downloads badges 366d619 Use SVG badges instead of PNG 6a32e4f Update tape , jscs f1b9462 Update jscs 1bff23f Update tape , jscs c22ea2e Update tape , jscs b0479db Use consistent quotes 1a6e347 Make travis builds faster. 090a4ea Update tape 7d76129 Lock covert to v1.0.0. 9a90b03 Updating tape bfbc7f5 Updating jscs 13ad511 Updating jscs cda1945 Updating jscs de96c99 Running linter as part of tests 2cb6567 Updating covert a56ae74 Updating tape ffe47f7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v100-2014-05-19","text":"","title":"v1.0.0 - 2014-05-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_10","text":"Make sure old and unstable nodes don't break Travis 05da747 toString is a reserved var name in old Opera 885c48c Updating deps 2ca0e79 Updating tape. 9678435 Updating covert c3bb898 Updating tape 7811708 Testing on node 0.6 again dec36ae Run code coverage as part of tests e6f4ebe","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#v000-2014-01-15","text":"","title":"v0.0.0 - 2014-01-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-regex/CHANGELOG/#commits_11","text":"package.json aa60d43 read me 861e944 Initial commit d0cdd71 Tests. b533f74 Implementation. 3c9a8c0 Travis CI 742c440","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/","text":"is-set Is this value a JS Set? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isSet = require('is-set'); assert(!isSet(function () {})); assert(!isSet(null)); assert(!isSet(function* () { yield 42; return Infinity; }); assert(!isSet(Symbol('foo'))); assert(!isSet(1n)); assert(!isSet(Object(1n))); assert(!isSet(new Map())); assert(!isSet(new WeakSet())); assert(!isSet(new WeakMap())); assert(isSet(new Set())); class MySet extends Set {} assert(isSet(new MySet())); Tests Simply clone the repo, npm install , and run npm test","title":"is-set Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/#is-set","text":"Is this value a JS Set? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-set"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/#example","text":"var isSet = require('is-set'); assert(!isSet(function () {})); assert(!isSet(null)); assert(!isSet(function* () { yield 42; return Infinity; }); assert(!isSet(Symbol('foo'))); assert(!isSet(1n)); assert(!isSet(Object(1n))); assert(!isSet(new Map())); assert(!isSet(new WeakSet())); assert(!isSet(new WeakMap())); assert(isSet(new Set())); class MySet extends Set {} assert(isSet(new MySet()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.3 - 2024-03-08 Commits [actions] reuse common workflows 9d26ac6 [actions] use node/install instead of node/run ; use codecov action 3c91325 add types 8fcc646 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 91caa24 [readme] update URLs 130e57b [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape 4d75ee2 [actions] remove redundant finisher 052fdce [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , core-js , es5-shim , object-inspect , safe-publish-latest , tape eb31797 [actions] update rebase action to use reusable workflow 8c478ba [actions] update codecov uploader a0dac6b [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , object-inspect , tape 28d75a3 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 7b2a4a7 [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape 20ce047 [readme] add actions and codecov badges e6e1796 [meta] add missing engines.node 9ed19af [meta] use prepublishOnly script for npm 7+ 618f861 [readme] remove dead badges 76e890e [meta] add sideEffects flag e21859b v2.0.2 - 2020-12-13 Commits [Tests] migrate tests to Github Actions 10a1a86 [meta] do not publish github action workflow files 9611423 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape 7d4d9b3 [Tests] run nyc on all tests dff5fb6 [actions] add \"Allow Edits\" workflow 6bed76a [readme] remove travis badge ee9e740 [Tests] add core-js tests 9ef1b4e [Dev Deps] update eslint , @ljharb/eslint-config , tape 5661354 [actions] switch Automatic Rebase workflow to pull_request_target event 2cea69e [Dev Deps] update es5-shim , tape 9e24b51 [Dev Deps] update auto-changelog ; add aud 69ae556 Fix typo in README.md, Map -> Set 5fe826a [Tests] only audit prod deps c7c67f6 [meta] normalize line endings 6ef4ebd v2.0.1 - 2019-12-17 Fixed [Refactor] avoid top-level return, because babel and webpack are broken #5 #4 #3 #78 #7 #12 Commits [actions] add automatic rebasing / merge commit blocking db358ba [Dev Deps] update eslint , @ljharb/eslint-config , tape 13e5083 v2.0.0 - 2019-11-12 Commits Initial commit 0299bc8 Tests dec24eb readme 9b16e7f implementation 3da6156 npm init 89fdc8b [meta] add funding field; create FUNDING.yml 77f2be9 [meta] add safe-publish-latest , auto-changelog cef1b4c [Tests] add npm run lint 2a8284c [Tests] use shared travis-ci configs d2e342f Only apps should have lockfiles 624072b [Tests] add npx aud in posttest 214247c v1.0.0 - 2015-02-18 Commits init 2f11646","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#v203-2024-03-08","text":"","title":"v2.0.3 - 2024-03-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#commits","text":"[actions] reuse common workflows 9d26ac6 [actions] use node/install instead of node/run ; use codecov action 3c91325 add types 8fcc646 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 91caa24 [readme] update URLs 130e57b [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape 4d75ee2 [actions] remove redundant finisher 052fdce [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , core-js , es5-shim , object-inspect , safe-publish-latest , tape eb31797 [actions] update rebase action to use reusable workflow 8c478ba [actions] update codecov uploader a0dac6b [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , object-inspect , tape 28d75a3 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 7b2a4a7 [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape 20ce047 [readme] add actions and codecov badges e6e1796 [meta] add missing engines.node 9ed19af [meta] use prepublishOnly script for npm 7+ 618f861 [readme] remove dead badges 76e890e [meta] add sideEffects flag e21859b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#v202-2020-12-13","text":"","title":"v2.0.2 - 2020-12-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions 10a1a86 [meta] do not publish github action workflow files 9611423 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape 7d4d9b3 [Tests] run nyc on all tests dff5fb6 [actions] add \"Allow Edits\" workflow 6bed76a [readme] remove travis badge ee9e740 [Tests] add core-js tests 9ef1b4e [Dev Deps] update eslint , @ljharb/eslint-config , tape 5661354 [actions] switch Automatic Rebase workflow to pull_request_target event 2cea69e [Dev Deps] update es5-shim , tape 9e24b51 [Dev Deps] update auto-changelog ; add aud 69ae556 Fix typo in README.md, Map -> Set 5fe826a [Tests] only audit prod deps c7c67f6 [meta] normalize line endings 6ef4ebd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#v201-2019-12-17","text":"","title":"v2.0.1 - 2019-12-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#fixed","text":"[Refactor] avoid top-level return, because babel and webpack are broken #5 #4 #3 #78 #7 #12","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#commits_2","text":"[actions] add automatic rebasing / merge commit blocking db358ba [Dev Deps] update eslint , @ljharb/eslint-config , tape 13e5083","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#v200-2019-11-12","text":"","title":"v2.0.0 - 2019-11-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#commits_3","text":"Initial commit 0299bc8 Tests dec24eb readme 9b16e7f implementation 3da6156 npm init 89fdc8b [meta] add funding field; create FUNDING.yml 77f2be9 [meta] add safe-publish-latest , auto-changelog cef1b4c [Tests] add npm run lint 2a8284c [Tests] use shared travis-ci configs d2e342f Only apps should have lockfiles 624072b [Tests] add npx aud in posttest 214247c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#v100-2015-02-18","text":"","title":"v1.0.0 - 2015-02-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-set/CHANGELOG/#commits_4","text":"init 2f11646","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/","text":"is-shared-array-buffer Is this value a JS SharedArrayBuffer? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag. Example var assert = require('assert'); var isSharedArrayBuffer = require('is-shared-array-buffer'); assert(!isSharedArrayBuffer(function () {})); assert(!isSharedArrayBuffer(null)); assert(!isSharedArrayBuffer(function* () { yield 42; return Infinity; }); assert(!isSharedArrayBuffer(Symbol('foo'))); assert(!isSharedArrayBuffer(1n)); assert(!isSharedArrayBuffer(Object(1n))); assert(!isSharedArrayBuffer(new Set())); assert(!isSharedArrayBuffer(new WeakSet())); assert(!isSharedArrayBuffer(new Map())); assert(!isSharedArrayBuffer(new WeakMap())); assert(!isSharedArrayBuffer(new WeakRef({}))); assert(!isSharedArrayBuffer(new FinalizationRegistry(() => {}))); assert(!isSharedArrayBuffer(new ArrayBuffer())); assert(isSharedArrayBuffer(new SharedArrayBuffer())); class MySharedArrayBuffer extends SharedArrayBuffer {} assert(isSharedArrayBuffer(new MySharedArrayBuffer())); Tests Simply clone the repo, npm install , and run npm test","title":"is-shared-array-buffer Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/#is-shared-array-buffer","text":"Is this value a JS SharedArrayBuffer? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag.","title":"is-shared-array-buffer"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/#example","text":"var assert = require('assert'); var isSharedArrayBuffer = require('is-shared-array-buffer'); assert(!isSharedArrayBuffer(function () {})); assert(!isSharedArrayBuffer(null)); assert(!isSharedArrayBuffer(function* () { yield 42; return Infinity; }); assert(!isSharedArrayBuffer(Symbol('foo'))); assert(!isSharedArrayBuffer(1n)); assert(!isSharedArrayBuffer(Object(1n))); assert(!isSharedArrayBuffer(new Set())); assert(!isSharedArrayBuffer(new WeakSet())); assert(!isSharedArrayBuffer(new Map())); assert(!isSharedArrayBuffer(new WeakMap())); assert(!isSharedArrayBuffer(new WeakRef({}))); assert(!isSharedArrayBuffer(new FinalizationRegistry(() => {}))); assert(!isSharedArrayBuffer(new ArrayBuffer())); assert(isSharedArrayBuffer(new SharedArrayBuffer())); class MySharedArrayBuffer extends SharedArrayBuffer {} assert(isSharedArrayBuffer(new MySharedArrayBuffer()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.3 - 2024-02-20 Commits [meta] use npmignore to autogenerate an npmignore file c4131f5 add types 41cb419 [actions] skip ls check on node < 10; remove redundant finisher 2655b01 [Dev Deps] update @ljharb/eslint-config , aud , available-typed-arrays , npmignore , object-inspect , tape 5917f9a [Tests] add tests that TypedArrays are not SABs 823dd7a [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-value-fixtures , object-inspect , tape 6701ad4 [actions] update rebase action to use reusable workflow b5119f0 [Dev Deps] update @ljharb/eslint-config , aud 38a6d72 [meta] add missing engines.node aac97e1 [readme] remove dead badges 07c452d [Deps] update call-bind b8576fe [meta] add sideEffects flag 3e6730e v1.0.2 - 2022-04-01 Commits [actions] reuse common workflows 48d01e6 [actions] use node/install instead of node/run ; use codecov action 7b0e12a [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 8d57a8e [readme] update URLs dca4d27 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 2a7bb99 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest , tape 389c6db [actions] update codecov uploader b9661f9 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect f99cd48 [readme] add actions and codecov badges 9515ed2 [Fix] add missing call-bind dependency cff5358 [meta] add safe-publish-latest ; use prepublishOnly script for npm 7+ ba0b719 v1.0.1 - 2021-03-04 Commits [readme] fix repo URLs 37c38f3 v1.0.0 - 2021-03-04 Commits [Tests] add tests 9c7b806 Initial commit 4e65c5e [meta] do not publish github action workflow files ac3693d readme 7a984d0 npm init a586c99 [actions] add automatic rebasing / merge commit blocking 184fe62 Implementation 207e26d [meta] create FUNDING.yml ; add \"funding\" field 3cad3fc [meta] add auto-changelog 31f1f2c [Tests] add npm run lint 2e5146e Only apps should have lockfiles 7b2adfa","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#v103-2024-02-20","text":"","title":"v1.0.3 - 2024-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#commits","text":"[meta] use npmignore to autogenerate an npmignore file c4131f5 add types 41cb419 [actions] skip ls check on node < 10; remove redundant finisher 2655b01 [Dev Deps] update @ljharb/eslint-config , aud , available-typed-arrays , npmignore , object-inspect , tape 5917f9a [Tests] add tests that TypedArrays are not SABs 823dd7a [Dev Deps] update eslint , @ljharb/eslint-config , aud , es-value-fixtures , object-inspect , tape 6701ad4 [actions] update rebase action to use reusable workflow b5119f0 [Dev Deps] update @ljharb/eslint-config , aud 38a6d72 [meta] add missing engines.node aac97e1 [readme] remove dead badges 07c452d [Deps] update call-bind b8576fe [meta] add sideEffects flag 3e6730e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#v102-2022-04-01","text":"","title":"v1.0.2 - 2022-04-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#commits_1","text":"[actions] reuse common workflows 48d01e6 [actions] use node/install instead of node/run ; use codecov action 7b0e12a [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 8d57a8e [readme] update URLs dca4d27 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 2a7bb99 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest , tape 389c6db [actions] update codecov uploader b9661f9 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect f99cd48 [readme] add actions and codecov badges 9515ed2 [Fix] add missing call-bind dependency cff5358 [meta] add safe-publish-latest ; use prepublishOnly script for npm 7+ ba0b719","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#v101-2021-03-04","text":"","title":"v1.0.1 - 2021-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#commits_2","text":"[readme] fix repo URLs 37c38f3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#v100-2021-03-04","text":"","title":"v1.0.0 - 2021-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-shared-array-buffer/CHANGELOG/#commits_3","text":"[Tests] add tests 9c7b806 Initial commit 4e65c5e [meta] do not publish github action workflow files ac3693d readme 7a984d0 npm init a586c99 [actions] add automatic rebasing / merge commit blocking 184fe62 Implementation 207e26d [meta] create FUNDING.yml ; add \"funding\" field 3cad3fc [meta] add auto-changelog 31f1f2c [Tests] add npm run lint 2e5146e Only apps should have lockfiles 7b2adfa","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/","text":"is-string Is this value a JS String object or primitive? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isString = require('is-string'); var assert = require('assert'); assert.notOk(isString(undefined)); assert.notOk(isString(null)); assert.notOk(isString(false)); assert.notOk(isString(true)); assert.notOk(isString(function () {})); assert.notOk(isString([])); assert.notOk(isString({})); assert.notOk(isString(/a/g)); assert.notOk(isString(new RegExp('a', 'g'))); assert.notOk(isString(new Date())); assert.notOk(isString(42)); assert.notOk(isString(NaN)); assert.notOk(isString(Infinity)); assert.notOk(isString(new Number(42))); assert.ok(isString('foo')); assert.ok(isString(Object('foo'))); Tests Simply clone the repo, npm install , and run npm test","title":"is-string Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/#is-string","text":"Is this value a JS String object or primitive? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-string"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/#example","text":"var isString = require('is-string'); var assert = require('assert'); assert.notOk(isString(undefined)); assert.notOk(isString(null)); assert.notOk(isString(false)); assert.notOk(isString(true)); assert.notOk(isString(function () {})); assert.notOk(isString([])); assert.notOk(isString({})); assert.notOk(isString(/a/g)); assert.notOk(isString(new RegExp('a', 'g'))); assert.notOk(isString(new Date())); assert.notOk(isString(42)); assert.notOk(isString(NaN)); assert.notOk(isString(Infinity)); assert.notOk(isString(new Number(42))); assert.ok(isString('foo')); assert.ok(isString(Object('foo')));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . Generated by auto-changelog . v1.0.7 - 2021-08-05 Commits [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams d973ffd [Dev Deps] update auto-changelog , core-js , eslint , tape 4bfaabf v1.0.6 - 2021-05-07 Commits [Tests] migrate tests to Github Actions c7790c8 [actions] use node/install instead of node/run ; use codecov action 1e52bbd [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 83337eb [meta] do not publish github action workflow files b25aea2 [readme] update badges 759ccd9 [Tests] run nyc on all tests dc02f70 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , tape ; add aud a0f76fa [actions] add \"Allow Edits\" workflow 9ec3902 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 57fbe21 [Dev Deps] update eslint , @ljharb/eslint-config , tape 191e55f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 1ea2b81 [Dev Deps] update eslint , @ljharb/eslint-config , tape 105d1b9 [Dev Deps] update auto-changelog , tape ; add aud 114cfad [meta] use prepublishOnly script for npm 7+ fc38f26 [meta] gitignore coverage output 3419127 [actions] update rebase action to use checkout v2 334eca0 [actions] switch Automatic Rebase workflow to pull_request_target event 7a332e9 [meta] remove explicit audit level config 04630b1 v1.0.5 - 2019-12-18 Commits [Tests] use shared travis-ci configs 4121d6b [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v5.12 , v4.9 ; use nvm install-latest-npm e7a3e89 Update eslint , tape , semver ; use my personal shared eslint config 6c380a7 [Tests] remove jscs 3d49592 Update is , tape , covert , jscs , editorconfig-tools , eslint , nsp , semver . cc6983d [meta] add auto-changelog b857897 [meta] remove unused Makefile and associated utilities 3f0f51c [Dev Deps] update eslint , @ljharb/eslint-config , is , covert , tape , semver 9d4a95e Update eslint e861b4b Update tape , jscs , eslint , @ljharb/eslint-config 172e2dd Test on node and io.js latest. fd426cd [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest 23bdf83 [actions] add automatic rebasing / merge commit blocking 96153c0 [meta] create FUNDING.yml 66ae246 [Dev Deps] update is , jscs , nsp , eslint , @ljharb/eslint-config , semver 817361a [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , semver , tape fc35d3f [Dev Deps] update jscs 886767e [Tests] use npx aud instead of nsp or npm audit with hoops 3410922 [Tests] up to io.js v3.3 , node v4.1 4d6c73b Update nsp , eslint b11de49 Update eslint , semver 0777977 Only apps should have lockfiles 78b49ff [meta] add funding field 81328a6 [Dev Deps] update eslint , tape fc9a225 [Tests] use eclint instead of editorconfig-tools 59c2c61 [Dev Deps] Update tape , eslint a429816 Test on io.js v2.2 08b476e Test up to io.js v3.0 22637ef [meta] add safe-publish-latest 20ccb48 [Dev Deps] update tape 06b58a0 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. ea7cf84 Test on io.js v2.4 66ec3ea Test on io.js v2.3 ca6e796 Fix tests for faked @@toStringTag 3cce832 v1.0.4 - 2015-01-29 Commits If @@toStringTag is not present, use the old-school Object#toString test. 30675ec v1.0.3 - 2015-01-29 Commits Refactor to aid optimization of non-try/catch code. 9b2772a v1.0.2 - 2015-01-29 Commits Fix broken package.json dc921d3 v1.0.1 - 2015-01-29 Commits Fix eslint config. c4e05bd Add early exits for typeof \"string\", or typeof not \"object\". 82f41d3 v1.0.0 - 2015-01-29 Commits Dotfiles. 45bc9dd make release 23707f5 package.json 575ad81 Read me 3f67c9a Initial commit 2c26a7a Tests. 38c987b Implementation. 0471d59","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . Generated by auto-changelog .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v107-2021-08-05","text":"","title":"v1.0.7 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits","text":"[Refactor] use has-tostringtag to behave correctly in the presence of symbol shams d973ffd [Dev Deps] update auto-changelog , core-js , eslint , tape 4bfaabf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v106-2021-05-07","text":"","title":"v1.0.6 - 2021-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions c7790c8 [actions] use node/install instead of node/run ; use codecov action 1e52bbd [Fix] do not use Object.prototype.toString when Symbol.toStringTag is shammed 83337eb [meta] do not publish github action workflow files b25aea2 [readme] update badges 759ccd9 [Tests] run nyc on all tests dc02f70 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , tape ; add aud a0f76fa [actions] add \"Allow Edits\" workflow 9ec3902 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 57fbe21 [Dev Deps] update eslint , @ljharb/eslint-config , tape 191e55f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 1ea2b81 [Dev Deps] update eslint , @ljharb/eslint-config , tape 105d1b9 [Dev Deps] update auto-changelog , tape ; add aud 114cfad [meta] use prepublishOnly script for npm 7+ fc38f26 [meta] gitignore coverage output 3419127 [actions] update rebase action to use checkout v2 334eca0 [actions] switch Automatic Rebase workflow to pull_request_target event 7a332e9 [meta] remove explicit audit level config 04630b1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v105-2019-12-18","text":"","title":"v1.0.5 - 2019-12-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_2","text":"[Tests] use shared travis-ci configs 4121d6b [Tests] up to node v12.4 , v11.15 , v10.15 , v9.11 , v8.15 , v7.10 , v6.17 , v5.12 , v4.9 ; use nvm install-latest-npm e7a3e89 Update eslint , tape , semver ; use my personal shared eslint config 6c380a7 [Tests] remove jscs 3d49592 Update is , tape , covert , jscs , editorconfig-tools , eslint , nsp , semver . cc6983d [meta] add auto-changelog b857897 [meta] remove unused Makefile and associated utilities 3f0f51c [Dev Deps] update eslint , @ljharb/eslint-config , is , covert , tape , semver 9d4a95e Update eslint e861b4b Update tape , jscs , eslint , @ljharb/eslint-config 172e2dd Test on node and io.js latest. fd426cd [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest 23bdf83 [actions] add automatic rebasing / merge commit blocking 96153c0 [meta] create FUNDING.yml 66ae246 [Dev Deps] update is , jscs , nsp , eslint , @ljharb/eslint-config , semver 817361a [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , semver , tape fc35d3f [Dev Deps] update jscs 886767e [Tests] use npx aud instead of nsp or npm audit with hoops 3410922 [Tests] up to io.js v3.3 , node v4.1 4d6c73b Update nsp , eslint b11de49 Update eslint , semver 0777977 Only apps should have lockfiles 78b49ff [meta] add funding field 81328a6 [Dev Deps] update eslint , tape fc9a225 [Tests] use eclint instead of editorconfig-tools 59c2c61 [Dev Deps] Update tape , eslint a429816 Test on io.js v2.2 08b476e Test up to io.js v3.0 22637ef [meta] add safe-publish-latest 20ccb48 [Dev Deps] update tape 06b58a0 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. ea7cf84 Test on io.js v2.4 66ec3ea Test on io.js v2.3 ca6e796 Fix tests for faked @@toStringTag 3cce832","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v104-2015-01-29","text":"","title":"v1.0.4 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_3","text":"If @@toStringTag is not present, use the old-school Object#toString test. 30675ec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v103-2015-01-29","text":"","title":"v1.0.3 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_4","text":"Refactor to aid optimization of non-try/catch code. 9b2772a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v102-2015-01-29","text":"","title":"v1.0.2 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_5","text":"Fix broken package.json dc921d3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v101-2015-01-29","text":"","title":"v1.0.1 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_6","text":"Fix eslint config. c4e05bd Add early exits for typeof \"string\", or typeof not \"object\". 82f41d3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#v100-2015-01-29","text":"","title":"v1.0.0 - 2015-01-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-string/CHANGELOG/#commits_7","text":"Dotfiles. 45bc9dd make release 23707f5 package.json 575ad81 Read me 3f67c9a Initial commit 2c26a7a Tests. 38c987b Implementation. 0471d59","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/","text":"is-symbol Is this an ES6 Symbol value? Example var isSymbol = require('is-symbol'); assert(!isSymbol(function () {})); assert(!isSymbol(null)); assert(!isSymbol(function* () { yield 42; return Infinity; }); assert(isSymbol(Symbol.iterator)); assert(isSymbol(Symbol('foo'))); assert(isSymbol(Symbol.for('foo'))); assert(isSymbol(Object(Symbol('foo')))); Tests Simply clone the repo, npm install , and run npm test","title":"is-symbol Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/#is-symbol","text":"Is this an ES6 Symbol value?","title":"is-symbol"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/#example","text":"var isSymbol = require('is-symbol'); assert(!isSymbol(function () {})); assert(!isSymbol(null)); assert(!isSymbol(function* () { yield 42; return Infinity; }); assert(isSymbol(Symbol.iterator)); assert(isSymbol(Symbol('foo'))); assert(isSymbol(Symbol.for('foo'))); assert(isSymbol(Object(Symbol('foo'))));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.4 - 2021-05-08 Commits [Tests] migrate tests to Github Actions 997d43c [actions] use node/install instead of node/run ; use codecov action fe0ccb7 [meta] remove unused Makefile and associated utilities 3ab2748 [meta] do not publish github action workflow files f20fafe [Tests] run nyc on all tests 5c332fc [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c5a58a8 [readme] fix repo URLs; remove travis badge bcd9258 [actions] add \"Allow Edits\" workflow 33ae2d3 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape e53def0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect ae36504 [readme] add actions and codecov badges aae7f09 [Dev Deps] update eslint , @ljharb/eslint-config , tape d993fae [Dev Deps] update eslint , @ljharb/eslint-config , tape 51808a5 [Dev Deps] update auto-changelog , tape c90040f [Dev Deps] update eslint , tape 9fee159 [meta] use prepublishOnly script for npm 7+ b166afc [meta] gitignore coverage output 4a0fe3a [actions] update workflows fbcbc9e [Dev Deps] update auto-changelog ; add aud e66ab98 [Deps] update has-symbols 6ce7de5 [actions] update rebase action to use checkout v2 1173c79 [actions] switch Automatic Rebase workflow to pull_request_target event 94a6348 [Tests] only audit prod deps 0692681 [meta] do not publish .nvmrc file ed47833 v1.0.3 - 2019-11-20 Commits [Tests] use shared travis-ci configs 034afdd [Tests] remove jscs 0c026a0 [meta] add auto-changelog 9a1776b [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 23a6db4 [Tests] up to node v11.7 , v10.15 , v8.15 , v6.16 892d92e [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , semver , tape c2e6d6a [readme] fix repo URLs 655c288 [actions] add automatic rebasing / merge commit blocking 97b1229 [meta] add FUNDING.yml 94c64a3 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape , semver 71ab543 [Dev Deps] update eslint , @ljharb/eslint-config , semver , tape c6212f9 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , object-inspect 91bc802 [Tests] use npx aud instead of nsp or npm audit with hoops 8cbe69c [Tests] use npm audit instead of nsp 741b51d [meta] add funding field 65b58d1 [Deps] update has-symbols 9cb5b2a v1.0.2 - 2018-09-20 Commits Update eslint , tape , semver ; use my personal shared eslint config e86aaea [Tests] on all node minors; improve test matrix 50bc07f [Dev Deps] update tape , jscs , nsp , semver , eslint , @ljharb/eslint-config 45e17bd [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ; use nvm install-latest-npm 44402cb [Tests] up to node v8.1 , v7.10 , v6.11 , v4.8 ; improve matrix; old npm breaks on newer nodes 9047c23 Update tape , covert , jscs , semver d57d1ce Add npm run eslint 0d75a66 Update eslint 042fb3a [Refactor] use has-symbols and object-inspect 129bc68 [Tests] up to node v10.11 , v8.12 c1822e8 Update tape , jscs , eslint , @ljharb/eslint-config 089d2cf [Tests] up to node v8.4 ; newer npm breaks on older node 05ce701 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 241e6a6 Test on latest node and io.js versions. 5c8d5de [Dev Deps] update eslint , @ljharb/eslint-config , nsp , semver , tape 06047bf [Dev Deps] update jscs , nsp , semver , eslint , @ljharb/eslint-config 9d25dd7 [Tests] up to io.js v3.3 , node v4.1 ce173bd Update nsp , eslint 29e5214 Update semver , eslint 53be884 [Dev Deps] update eslint , nsp , semver , tape 3bd149c [Dev Deps] update jscs 69b4231 Test up to io.js v2.1 0b61ac7 [Dev Deps] update tape 5e1b200 Only apps should have lockfiles. a191ff5 [Dev Deps] update nsp , eslint , @ljharb/eslint-config 97c87ef Test on io.js v2.2 42560e4 [Dev Deps] Update tape , eslint 149b2f2 [Tests] fix test messages 28bd1ed Test up to io.js v3.0 c0dcc98 node now supports Symbols now. d1853ad [Dev Deps] update tape f7a6575 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. aae9c6a Test on io.js v2.4 ab8f449 Test on io.js v2.3 58ce871 v1.0.1 - 2015-01-26 Commits Correct package description. f4d15b9 v1.0.0 - 2015-01-24 Commits Dotfiles. 5d9a744 Tests. 8af5663 make release 6293446 package.json 7d4082c Initial commit cbb179f Read me. 099a775 Implementation. cb51248","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#v104-2021-05-08","text":"","title":"v1.0.4 - 2021-05-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#commits","text":"[Tests] migrate tests to Github Actions 997d43c [actions] use node/install instead of node/run ; use codecov action fe0ccb7 [meta] remove unused Makefile and associated utilities 3ab2748 [meta] do not publish github action workflow files f20fafe [Tests] run nyc on all tests 5c332fc [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c5a58a8 [readme] fix repo URLs; remove travis badge bcd9258 [actions] add \"Allow Edits\" workflow 33ae2d3 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape e53def0 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect ae36504 [readme] add actions and codecov badges aae7f09 [Dev Deps] update eslint , @ljharb/eslint-config , tape d993fae [Dev Deps] update eslint , @ljharb/eslint-config , tape 51808a5 [Dev Deps] update auto-changelog , tape c90040f [Dev Deps] update eslint , tape 9fee159 [meta] use prepublishOnly script for npm 7+ b166afc [meta] gitignore coverage output 4a0fe3a [actions] update workflows fbcbc9e [Dev Deps] update auto-changelog ; add aud e66ab98 [Deps] update has-symbols 6ce7de5 [actions] update rebase action to use checkout v2 1173c79 [actions] switch Automatic Rebase workflow to pull_request_target event 94a6348 [Tests] only audit prod deps 0692681 [meta] do not publish .nvmrc file ed47833","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#v103-2019-11-20","text":"","title":"v1.0.3 - 2019-11-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#commits_1","text":"[Tests] use shared travis-ci configs 034afdd [Tests] remove jscs 0c026a0 [meta] add auto-changelog 9a1776b [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 23a6db4 [Tests] up to node v11.7 , v10.15 , v8.15 , v6.16 892d92e [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , semver , tape c2e6d6a [readme] fix repo URLs 655c288 [actions] add automatic rebasing / merge commit blocking 97b1229 [meta] add FUNDING.yml 94c64a3 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape , semver 71ab543 [Dev Deps] update eslint , @ljharb/eslint-config , semver , tape c6212f9 [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , object-inspect 91bc802 [Tests] use npx aud instead of nsp or npm audit with hoops 8cbe69c [Tests] use npm audit instead of nsp 741b51d [meta] add funding field 65b58d1 [Deps] update has-symbols 9cb5b2a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#v102-2018-09-20","text":"","title":"v1.0.2 - 2018-09-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#commits_2","text":"Update eslint , tape , semver ; use my personal shared eslint config e86aaea [Tests] on all node minors; improve test matrix 50bc07f [Dev Deps] update tape , jscs , nsp , semver , eslint , @ljharb/eslint-config 45e17bd [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ; use nvm install-latest-npm 44402cb [Tests] up to node v8.1 , v7.10 , v6.11 , v4.8 ; improve matrix; old npm breaks on newer nodes 9047c23 Update tape , covert , jscs , semver d57d1ce Add npm run eslint 0d75a66 Update eslint 042fb3a [Refactor] use has-symbols and object-inspect 129bc68 [Tests] up to node v10.11 , v8.12 c1822e8 Update tape , jscs , eslint , @ljharb/eslint-config 089d2cf [Tests] up to node v8.4 ; newer npm breaks on older node 05ce701 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 241e6a6 Test on latest node and io.js versions. 5c8d5de [Dev Deps] update eslint , @ljharb/eslint-config , nsp , semver , tape 06047bf [Dev Deps] update jscs , nsp , semver , eslint , @ljharb/eslint-config 9d25dd7 [Tests] up to io.js v3.3 , node v4.1 ce173bd Update nsp , eslint 29e5214 Update semver , eslint 53be884 [Dev Deps] update eslint , nsp , semver , tape 3bd149c [Dev Deps] update jscs 69b4231 Test up to io.js v2.1 0b61ac7 [Dev Deps] update tape 5e1b200 Only apps should have lockfiles. a191ff5 [Dev Deps] update nsp , eslint , @ljharb/eslint-config 97c87ef Test on io.js v2.2 42560e4 [Dev Deps] Update tape , eslint 149b2f2 [Tests] fix test messages 28bd1ed Test up to io.js v3.0 c0dcc98 node now supports Symbols now. d1853ad [Dev Deps] update tape f7a6575 Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. aae9c6a Test on io.js v2.4 ab8f449 Test on io.js v2.3 58ce871","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#v101-2015-01-26","text":"","title":"v1.0.1 - 2015-01-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#commits_3","text":"Correct package description. f4d15b9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#v100-2015-01-24","text":"","title":"v1.0.0 - 2015-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-symbol/CHANGELOG/#commits_4","text":"Dotfiles. 5d9a744 Tests. 8af5663 make release 6293446 package.json 7d4082c Initial commit cbb179f Read me. 099a775 Implementation. cb51248","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/","text":"is-typed-array [![dependency status][5]][6] [![dev dependency status][7]][8] Is this value a JS Typed Array? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag. Example var isTypedArray = require('is-typed-array'); var assert = require('assert'); assert.equal(false, isTypedArray(undefined)); assert.equal(false, isTypedArray(null)); assert.equal(false, isTypedArray(false)); assert.equal(false, isTypedArray(true)); assert.equal(false, isTypedArray([])); assert.equal(false, isTypedArray({})); assert.equal(false, isTypedArray(/a/g)); assert.equal(false, isTypedArray(new RegExp('a', 'g'))); assert.equal(false, isTypedArray(new Date())); assert.equal(false, isTypedArray(42)); assert.equal(false, isTypedArray(NaN)); assert.equal(false, isTypedArray(Infinity)); assert.equal(false, isTypedArray(new Number(42))); assert.equal(false, isTypedArray('foo')); assert.equal(false, isTypedArray(Object('foo'))); assert.equal(false, isTypedArray(function () {})); assert.equal(false, isTypedArray(function* () {})); assert.equal(false, isTypedArray(x => x * x)); assert.equal(false, isTypedArray([])); assert.ok(isTypedArray(new Int8Array())); assert.ok(isTypedArray(new Uint8Array())); assert.ok(isTypedArray(new Uint8ClampedArray())); assert.ok(isTypedArray(new Int16Array())); assert.ok(isTypedArray(new Uint16Array())); assert.ok(isTypedArray(new Int32Array())); assert.ok(isTypedArray(new Uint32Array())); assert.ok(isTypedArray(new Float32Array())); assert.ok(isTypedArray(new Float64Array())); assert.ok(isTypedArray(new BigInt64Array())); assert.ok(isTypedArray(new BigUint64Array())); Tests Simply clone the repo, npm install , and run npm test","title":"is-typed-array Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/#is-typed-array","text":"[![dependency status][5]][6] [![dev dependency status][7]][8] Is this value a JS Typed Array? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and despite ES6 Symbol.toStringTag.","title":"is-typed-array"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/#example","text":"var isTypedArray = require('is-typed-array'); var assert = require('assert'); assert.equal(false, isTypedArray(undefined)); assert.equal(false, isTypedArray(null)); assert.equal(false, isTypedArray(false)); assert.equal(false, isTypedArray(true)); assert.equal(false, isTypedArray([])); assert.equal(false, isTypedArray({})); assert.equal(false, isTypedArray(/a/g)); assert.equal(false, isTypedArray(new RegExp('a', 'g'))); assert.equal(false, isTypedArray(new Date())); assert.equal(false, isTypedArray(42)); assert.equal(false, isTypedArray(NaN)); assert.equal(false, isTypedArray(Infinity)); assert.equal(false, isTypedArray(new Number(42))); assert.equal(false, isTypedArray('foo')); assert.equal(false, isTypedArray(Object('foo'))); assert.equal(false, isTypedArray(function () {})); assert.equal(false, isTypedArray(function* () {})); assert.equal(false, isTypedArray(x => x * x)); assert.equal(false, isTypedArray([])); assert.ok(isTypedArray(new Int8Array())); assert.ok(isTypedArray(new Uint8Array())); assert.ok(isTypedArray(new Uint8ClampedArray())); assert.ok(isTypedArray(new Int16Array())); assert.ok(isTypedArray(new Uint16Array())); assert.ok(isTypedArray(new Int32Array())); assert.ok(isTypedArray(new Uint32Array())); assert.ok(isTypedArray(new Float32Array())); assert.ok(isTypedArray(new Float64Array())); assert.ok(isTypedArray(new BigInt64Array())); assert.ok(isTypedArray(new BigUint64Array()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.13 - 2024-02-01 Commits [patch] add types 8a8a679 [Dev Deps] update aud , has-tostringtag , npmignore , object-inspect , tape 8146b60 [actions] optimize finishers 34f875a [Deps] update which-typed-array 19c974f [meta] add sideEffects flag 0b68e5e v1.1.12 - 2023-07-17 Commits [Refactor] use which-typed-array for all internals 7619405 v1.1.11 - 2023-07-17 Commits [Fix] node &lt; v0.6 lacks proper Object toString behavior c94b90d [Robustness] use call-bind 573b00b [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape c88c2d4 v1.1.10 - 2022-11-02 Commits [meta] add auto-changelog cf6d86b [actions] update rebase action to use reusable workflow 8da51a5 [Dev Deps] update aud , is-callable , object-inspect , tape 554e3de [Refactor] use gopd instead of an es-abstract helper [ cdaa465`](https://github.com/inspect-js/is-typed-array/commit/cdaa465d5f94bfc9e32475e31209e1c2458a9603) [Deps] update es-abstract 677ae4b 1.1.9 / 2022-05-13 [Refactor] use foreach instead of for-each [readme] markdown URL cleanup [Deps] update es-abstract [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape [actions] reuse common workflows [actions] update codecov uploader 1.1.8 / 2021-08-30 [Refactor] use globalThis if available (#53) [Deps] update available-typed-arrays [Dev Deps] update @ljharb/eslint-config 1.1.7 / 2021-08-07 [Fix] if Symbol.toStringTag exists but is not present, use Object.prototype.toString [Dev Deps] update is-callable , tape 1.1.6 / 2021-08-05 [Fix] use has-tostringtag to behave correctly in the presence of symbol shams [readme] add actions and codecov badges [meta] use prepublishOnly script for npm 7+ [Deps] update available-typed-arrays , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape [actions] use node/install instead of node/run ; use codecov action 1.1.5 / 2021-02-14 [meta] do not publish github action workflow files or nyc output [Deps] update call-bind , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , aud , is-callable , tape 1.1.4 / 2020-12-05 [readme] fix repo URLs, remove defunct badges [Deps] update available-typed-arrays , es-abstract ; use call-bind where applicable [meta] gitignore nyc output [meta] only audit prod deps [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , make-arrow-function , make-generator-function , object-inspect , tape ; add aud [Tests] migrate tests to Github Actions [Tests] run nyc on all tests 1.1.3 / 2020-01-24 [Refactor] use es-abstract \u2019s callBound , available-typed-arrays , has-symbols 1.1.2 / 2020-01-20 [Fix] in envs without Symbol.toStringTag, dc8a8cc made arrays return true [Tests] add evalmd to prelint 1.1.1 / 2020-01-18 [Robustness] don\u2019t rely on Array.prototype.indexOf existing [meta] remove unused Makefile and associated utilities [meta] add funding field; create FUNDING.yml [actions] add automatic rebasing / merge commit blocking [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , replace , semver , tape ; add safe-publish-latest [Tests] use shared travis-ci configs [Tests] use npx aud instead of nsp or npm audit with hoops 1.1.0 / 2019-02-16 [New] add BigInt64Array and BigUint64Array [Refactor] use an array instead of an object for storing Typed Array names [meta] ignore test.html [Tests] up to node v11.10 , v10.15 , v8.15 , v7.10 , v6.16 , v5.10 , v4.9 [Tests] remove jscs [Tests] use npm audit instead of nsp [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , tape , replace , semver [Dev Deps] remove unused eccheck script + dep 1.0.4 / 2016-03-19 [Fix] Symbol.toStringTag is on the super- [[Prototype]] of Float32Array, not the [[Prototype]] (#3) [Tests] up to node v5.9 , v4.4 [Tests] use pretest/posttest for linting/security [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver , is-callable 1.0.3 / 2015-10-13 [Deps] Add missing foreach dependency (#1) 1.0.2 / 2015-10-05 [Deps] Remove unneeded \"isarray\" dependency [Dev Deps] update eslint , @ljharb/eslint-config 1.0.1 / 2015-10-02 Rerelease: avoid instanceof and the constructor property; work cross-realm; work with Symbol.toStringTag. 1.0.0 / 2015-05-06 Initial release.","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#v1113-2024-02-01","text":"","title":"v1.1.13 - 2024-02-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#commits","text":"[patch] add types 8a8a679 [Dev Deps] update aud , has-tostringtag , npmignore , object-inspect , tape 8146b60 [actions] optimize finishers 34f875a [Deps] update which-typed-array 19c974f [meta] add sideEffects flag 0b68e5e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#v1112-2023-07-17","text":"","title":"v1.1.12 - 2023-07-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#commits_1","text":"[Refactor] use which-typed-array for all internals 7619405","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#v1111-2023-07-17","text":"","title":"v1.1.11 - 2023-07-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#commits_2","text":"[Fix] node &lt; v0.6 lacks proper Object toString behavior c94b90d [Robustness] use call-bind 573b00b [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape c88c2d4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#v1110-2022-11-02","text":"","title":"v1.1.10 - 2022-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#commits_3","text":"[meta] add auto-changelog cf6d86b [actions] update rebase action to use reusable workflow 8da51a5 [Dev Deps] update aud , is-callable , object-inspect , tape 554e3de [Refactor] use gopd instead of an es-abstract helper [ cdaa465`](https://github.com/inspect-js/is-typed-array/commit/cdaa465d5f94bfc9e32475e31209e1c2458a9603) [Deps] update es-abstract 677ae4b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#119-2022-05-13","text":"[Refactor] use foreach instead of for-each [readme] markdown URL cleanup [Deps] update es-abstract [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape [actions] reuse common workflows [actions] update codecov uploader","title":"1.1.9 / 2022-05-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#118-2021-08-30","text":"[Refactor] use globalThis if available (#53) [Deps] update available-typed-arrays [Dev Deps] update @ljharb/eslint-config","title":"1.1.8 / 2021-08-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#117-2021-08-07","text":"[Fix] if Symbol.toStringTag exists but is not present, use Object.prototype.toString [Dev Deps] update is-callable , tape","title":"1.1.7 / 2021-08-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#116-2021-08-05","text":"[Fix] use has-tostringtag to behave correctly in the presence of symbol shams [readme] add actions and codecov badges [meta] use prepublishOnly script for npm 7+ [Deps] update available-typed-arrays , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape [actions] use node/install instead of node/run ; use codecov action","title":"1.1.6 / 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#115-2021-02-14","text":"[meta] do not publish github action workflow files or nyc output [Deps] update call-bind , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , aud , is-callable , tape","title":"1.1.5 / 2021-02-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#114-2020-12-05","text":"[readme] fix repo URLs, remove defunct badges [Deps] update available-typed-arrays , es-abstract ; use call-bind where applicable [meta] gitignore nyc output [meta] only audit prod deps [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , make-arrow-function , make-generator-function , object-inspect , tape ; add aud [Tests] migrate tests to Github Actions [Tests] run nyc on all tests","title":"1.1.4 / 2020-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#113-2020-01-24","text":"[Refactor] use es-abstract \u2019s callBound , available-typed-arrays , has-symbols","title":"1.1.3 / 2020-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#112-2020-01-20","text":"[Fix] in envs without Symbol.toStringTag, dc8a8cc made arrays return true [Tests] add evalmd to prelint","title":"1.1.2 / 2020-01-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#111-2020-01-18","text":"[Robustness] don\u2019t rely on Array.prototype.indexOf existing [meta] remove unused Makefile and associated utilities [meta] add funding field; create FUNDING.yml [actions] add automatic rebasing / merge commit blocking [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , replace , semver , tape ; add safe-publish-latest [Tests] use shared travis-ci configs [Tests] use npx aud instead of nsp or npm audit with hoops","title":"1.1.1 / 2020-01-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#110-2019-02-16","text":"[New] add BigInt64Array and BigUint64Array [Refactor] use an array instead of an object for storing Typed Array names [meta] ignore test.html [Tests] up to node v11.10 , v10.15 , v8.15 , v7.10 , v6.16 , v5.10 , v4.9 [Tests] remove jscs [Tests] use npm audit instead of nsp [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , tape , replace , semver [Dev Deps] remove unused eccheck script + dep","title":"1.1.0 / 2019-02-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#104-2016-03-19","text":"[Fix] Symbol.toStringTag is on the super- [[Prototype]] of Float32Array, not the [[Prototype]] (#3) [Tests] up to node v5.9 , v4.4 [Tests] use pretest/posttest for linting/security [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver , is-callable","title":"1.0.4 / 2016-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#103-2015-10-13","text":"[Deps] Add missing foreach dependency (#1)","title":"1.0.3 / 2015-10-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#102-2015-10-05","text":"[Deps] Remove unneeded \"isarray\" dependency [Dev Deps] update eslint , @ljharb/eslint-config","title":"1.0.2 / 2015-10-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#101-2015-10-02","text":"Rerelease: avoid instanceof and the constructor property; work cross-realm; work with Symbol.toStringTag.","title":"1.0.1 / 2015-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-typed-array/CHANGELOG/#100-2015-05-06","text":"Initial release.","title":"1.0.0 / 2015-05-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/","text":"is-weakmap Is this value a JS WeakMap? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isWeakMap = require('is-weakmap'); assert(!isWeakMap(function () {})); assert(!isWeakMap(null)); assert(!isWeakMap(function* () { yield 42; return Infinity; }); assert(!isWeakMap(Symbol('foo'))); assert(!isWeakMap(1n)); assert(!isWeakMap(Object(1n))); assert(!isWeakMap(new Set())); assert(!isWeakMap(new WeakSet())); assert(!isWeakMap(new Map())); assert(isWeakMap(new WeakMap())); class MyWeakMap extends WeakMap {} assert(isWeakMap(new MyWeakMap())); Tests Simply clone the repo, npm install , and run npm test","title":"is-weakmap Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/#is-weakmap","text":"Is this value a JS WeakMap? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-weakmap"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/#example","text":"var isWeakMap = require('is-weakmap'); assert(!isWeakMap(function () {})); assert(!isWeakMap(null)); assert(!isWeakMap(function* () { yield 42; return Infinity; }); assert(!isWeakMap(Symbol('foo'))); assert(!isWeakMap(1n)); assert(!isWeakMap(Object(1n))); assert(!isWeakMap(new Set())); assert(!isWeakMap(new WeakSet())); assert(!isWeakMap(new Map())); assert(isWeakMap(new WeakMap())); class MyWeakMap extends WeakMap {} assert(isWeakMap(new MyWeakMap()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.2 - 2024-03-08 Commits [actions] reuse common workflows 0af1292 [Tests] migrate tests to Github Actions f35679b [actions] use node/install instead of node/run ; use codecov action cd2f0fa add types 6e28e6a [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape 95815ce [readme] update URLs 2c4eb0b [Tests] run nyc on all tests; use tape runner 0a45b37 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape ffe9459 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape c3c2f11 [actions] remove redundant finisher afa4018 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , core-js , es5-shim , object-inspect , safe-publish-latest , tape 3f22fc1 [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , npmignore , object-inspect , tape 84ba754 [actions] update rebase action to use reusable workflow def85cb [actions] update codecov uploader 659031e [actions] add \"Allow Edits\" workflow a916e89 [readme] remove travis badge 01d0c7d [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape ad90d06 [meta] use npmignore to autogenerate an npmignore file 8b0b44f [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape 9d8a683 [Tests] add core-js tests 8ba8d2b [readme] add actions and codecov badges 49769ce [Dev Deps] update eslint , @ljharb/eslint-config , tape 377dfac [actions] switch Automatic Rease workflow to pull_request_target event 00f8c17 [Dev Deps] update es5-shim , tape 3a82ee8 [meta] add missing engines.node 3671b4f [meta] use prepublishOnly script for npm 7+ 2a5d5ea [Dev Deps] update auto-changelog ; add aud 595583b [readme] remove dead badges 4d6cb2c [Tests] run all tests on npm test 9da2487 [Tests] only audit prod deps 2f9281a [meta] add sideEffects flag b9c8797 v2.0.1 - 2019-12-17 Fixed [Refactor] avoid top-level return, because babel and webpack are broken #79 #78 #7 #12 Commits [actions] add automatic rebasing / merge commit blocking 4fa3010 [Dev Deps] update eslint , @ljharb/eslint-config , tape 44bafb6 v2.0.0 - 2019-11-12 Commits Initial commit 6e9bd4a Tests 61985dd implementation 67b468d readme b0ed982 npm init 54a1f81 [meta] add funding field; create FUNDING.yml 74579bc [meta] add safe-publish-latest , auto-changelog 9495b13 [Tests] add npm run lint 4d4657d [Tests] use shared travis-ci configs 1db25d5 Only apps should have lockfiles f6b0152 [Tests] add npx aud in posttest 35dce96 v1.0.1 - 2015-08-31 Commits Add XO 180fb3e tweaks b0d7b30 Add related section to readme 5644247 v1.0.0 - 2015-02-18 Commits init 837063d","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#v202-2024-03-08","text":"","title":"v2.0.2 - 2024-03-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#commits","text":"[actions] reuse common workflows 0af1292 [Tests] migrate tests to Github Actions f35679b [actions] use node/install instead of node/run ; use codecov action cd2f0fa add types 6e28e6a [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape 95815ce [readme] update URLs 2c4eb0b [Tests] run nyc on all tests; use tape runner 0a45b37 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape ffe9459 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape c3c2f11 [actions] remove redundant finisher afa4018 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , core-js , es5-shim , object-inspect , safe-publish-latest , tape 3f22fc1 [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , npmignore , object-inspect , tape 84ba754 [actions] update rebase action to use reusable workflow def85cb [actions] update codecov uploader 659031e [actions] add \"Allow Edits\" workflow a916e89 [readme] remove travis badge 01d0c7d [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape ad90d06 [meta] use npmignore to autogenerate an npmignore file 8b0b44f [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape 9d8a683 [Tests] add core-js tests 8ba8d2b [readme] add actions and codecov badges 49769ce [Dev Deps] update eslint , @ljharb/eslint-config , tape 377dfac [actions] switch Automatic Rease workflow to pull_request_target event 00f8c17 [Dev Deps] update es5-shim , tape 3a82ee8 [meta] add missing engines.node 3671b4f [meta] use prepublishOnly script for npm 7+ 2a5d5ea [Dev Deps] update auto-changelog ; add aud 595583b [readme] remove dead badges 4d6cb2c [Tests] run all tests on npm test 9da2487 [Tests] only audit prod deps 2f9281a [meta] add sideEffects flag b9c8797","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#v201-2019-12-17","text":"","title":"v2.0.1 - 2019-12-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#fixed","text":"[Refactor] avoid top-level return, because babel and webpack are broken #79 #78 #7 #12","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#commits_1","text":"[actions] add automatic rebasing / merge commit blocking 4fa3010 [Dev Deps] update eslint , @ljharb/eslint-config , tape 44bafb6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#v200-2019-11-12","text":"","title":"v2.0.0 - 2019-11-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#commits_2","text":"Initial commit 6e9bd4a Tests 61985dd implementation 67b468d readme b0ed982 npm init 54a1f81 [meta] add funding field; create FUNDING.yml 74579bc [meta] add safe-publish-latest , auto-changelog 9495b13 [Tests] add npm run lint 4d4657d [Tests] use shared travis-ci configs 1db25d5 Only apps should have lockfiles f6b0152 [Tests] add npx aud in posttest 35dce96","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#v101-2015-08-31","text":"","title":"v1.0.1 - 2015-08-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#commits_3","text":"Add XO 180fb3e tweaks b0d7b30 Add related section to readme 5644247","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#v100-2015-02-18","text":"","title":"v1.0.0 - 2015-02-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakmap/CHANGELOG/#commits_4","text":"init 837063d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/","text":"is-weakref [![npm badge][11]][1] Is this value a JS WeakRef? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isWeakRef = require('is-weakref'); assert(!isWeakRef(function () {})); assert(!isWeakRef(null)); assert(!isWeakRef(function* () { yield 42; return Infinity; }); assert(!isWeakRef(Symbol('foo'))); assert(!isWeakRef(1n)); assert(!isWeakRef(Object(1n))); assert(!isWeakRef(new Set())); assert(!isWeakRef(new WeakSet())); assert(!isWeakRef(new Map())); assert(!isWeakRef(new WeakMap())); assert(isWeakRef(new WeakRef({}))); class MyWeakRef extends WeakRef {} assert(isWeakRef(new MyWeakRef({}))); Tests Simply clone the repo, npm install , and run npm test","title":"is-weakref Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/#is-weakref","text":"[![npm badge][11]][1] Is this value a JS WeakRef? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-weakref"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/#example","text":"var isWeakRef = require('is-weakref'); assert(!isWeakRef(function () {})); assert(!isWeakRef(null)); assert(!isWeakRef(function* () { yield 42; return Infinity; }); assert(!isWeakRef(Symbol('foo'))); assert(!isWeakRef(1n)); assert(!isWeakRef(Object(1n))); assert(!isWeakRef(new Set())); assert(!isWeakRef(new WeakSet())); assert(!isWeakRef(new Map())); assert(!isWeakRef(new WeakMap())); assert(isWeakRef(new WeakRef({}))); class MyWeakRef extends WeakRef {} assert(isWeakRef(new MyWeakRef({})));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2021-12-10 Commits [actions] reuse common workflows 2375b1f [meta] do not publish workflow files 4c1be42 [actions] use node/install instead of node/run ; use codecov action 7ec78ce [readme] update URLs 6306f09 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 7a1601e [readme] add actions and codecov badges 67ecd14 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest , tape 1a5013b [actions] update codecov uploader b57b037 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape da49017 [meta] simplify \"exports\" 9b88835 [Dev Deps] update eslint , @ljharb/eslint-config , tape c7e77f4 [Dev Deps] update eslint 417b29e [meta] add safe-publish-latest ; use prepublishOnly script for npm 7+ b1b99f4 [Deps] update call-bind aea342e [actions] update workflows 786c2d3 v1.0.1 - 2020-12-04 Commits [Tests] migrate tests to Github Actions 05b4faa [Tests] run nyc on all tests 8df2e4b [actions] add \"Allow Edits\" workflow 4a716b8 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect be23cf3 [Refactor] use call-bind instead of es-abstract a933a96 [actions] switch Automatic Rebase workflow to pull_request_target event 4473ed2 [readme] remove travis badge bd3bfcd v1.0.0 - 2020-08-01 Commits Initial commit dd86394 readme f4defca Tests 13d8139 npm init 55a2bb7 Implementation 1ec84e3 [meta] add auto-changelog ab9ce44 [actions] add automatic rebasing / merge commit blocking 3d3f4d5 [meta] add \"funding\"; create FUNDING.yml f35ef3d [Tests] add npm run lint af2123d [Tests] use shared travis-ci configs 042b4de Only apps should have lockfiles fcae604","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#v102-2021-12-10","text":"","title":"v1.0.2 - 2021-12-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#commits","text":"[actions] reuse common workflows 2375b1f [meta] do not publish workflow files 4c1be42 [actions] use node/install instead of node/run ; use codecov action 7ec78ce [readme] update URLs 6306f09 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape 7a1601e [readme] add actions and codecov badges 67ecd14 [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , object-inspect , safe-publish-latest , tape 1a5013b [actions] update codecov uploader b57b037 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape da49017 [meta] simplify \"exports\" 9b88835 [Dev Deps] update eslint , @ljharb/eslint-config , tape c7e77f4 [Dev Deps] update eslint 417b29e [meta] add safe-publish-latest ; use prepublishOnly script for npm 7+ b1b99f4 [Deps] update call-bind aea342e [actions] update workflows 786c2d3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#v101-2020-12-04","text":"","title":"v1.0.1 - 2020-12-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#commits_1","text":"[Tests] migrate tests to Github Actions 05b4faa [Tests] run nyc on all tests 8df2e4b [actions] add \"Allow Edits\" workflow 4a716b8 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect be23cf3 [Refactor] use call-bind instead of es-abstract a933a96 [actions] switch Automatic Rebase workflow to pull_request_target event 4473ed2 [readme] remove travis badge bd3bfcd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#v100-2020-08-01","text":"","title":"v1.0.0 - 2020-08-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakref/CHANGELOG/#commits_2","text":"Initial commit dd86394 readme f4defca Tests 13d8139 npm init 55a2bb7 Implementation 1ec84e3 [meta] add auto-changelog ab9ce44 [actions] add automatic rebasing / merge commit blocking 3d3f4d5 [meta] add \"funding\"; create FUNDING.yml f35ef3d [Tests] add npm run lint af2123d [Tests] use shared travis-ci configs 042b4de Only apps should have lockfiles fcae604","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/","text":"is-weakset Is this value a JS WeakSet? This module works cross-realm/iframe, and despite ES6 @@toStringTag. Example var isWeakSet = require('is-weakset'); assert(!isWeakSet(function () {})); assert(!isWeakSet(null)); assert(!isWeakSet(function* () { yield 42; return Infinity; }); assert(!isWeakSet(Symbol('foo'))); assert(!isWeakSet(1n)); assert(!isWeakSet(Object(1n))); assert(!isWeakSet(new Set())); assert(!isWeakSet(new WeakMap())); assert(!isWeakSet(new Map())); assert(isWeakSet(new WeakSet())); class MyWeakSet extends WeakSet {} assert(isWeakSet(new MyWeakSet())); Tests Simply clone the repo, npm install , and run npm test","title":"is-weakset Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/#is-weakset","text":"Is this value a JS WeakSet? This module works cross-realm/iframe, and despite ES6 @@toStringTag.","title":"is-weakset"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/#example","text":"var isWeakSet = require('is-weakset'); assert(!isWeakSet(function () {})); assert(!isWeakSet(null)); assert(!isWeakSet(function* () { yield 42; return Infinity; }); assert(!isWeakSet(Symbol('foo'))); assert(!isWeakSet(1n)); assert(!isWeakSet(Object(1n))); assert(!isWeakSet(new Set())); assert(!isWeakSet(new WeakMap())); assert(!isWeakSet(new Map())); assert(isWeakSet(new WeakSet())); class MyWeakSet extends WeakSet {} assert(isWeakSet(new MyWeakSet()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.3 - 2024-03-08 Commits [meta] use npmignore to autogenerate an npmignore file e70d6aa add types c9bbc35 [readme] remove dead badges fb443f6 [actions] remove redundant finisher eb292cc [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape 49d0c35 [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , npmignore , object-inspect , tape 6ec0a57 [actions] update rebase action to use reusable workflow d996166 [Deps] update call-bind , get-intrinsic e207da3 [meta] add missing engines.node 4d9dd14 [Deps] update get-intrinsic cf796dd [meta] add sideEffects flag c88a25d v2.0.2 - 2021-12-12 Commits [actions] reuse common workflows a8f7c7f [Tests] migrate tests to Github Actions f38af72 [Refactor] use call-bind and get-intrinsic to be more robust 5102e7e [meta] do not publish github action workflow files 6ac6e8e [actions] use node/install instead of node/run ; use codecov action 304af52 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape b82fb5f [Tests] run nyc on all tests; use tape runner 89e2611 [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , object-inspect , safe-publish-latest , tape 42b0bdc [actions] update codecov uploader 112697a [actions] add \"Allow Edits\" workflow 1af6ffe [readme] remove travis badge dff769b [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 4494ced [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape a2c11c6 [Tests] add core-js tests cd619e9 [readme] add actions and codecov badges d3cbefe [Dev Deps] update eslint , @ljharb/eslint-config , tape 3d54035 [Dev Deps] update auto-changelog , eslint a80fb4a [actions] switch Automatic Rease workflow to pull_request_target event b3b8aee [Dev Deps] update es5-shim , tape 5ba5ca8 [meta] use prepublishOnly script for npm 7+ b4f7636 [Dev Deps] update auto-changelog ; add aud 2ccd594 [Fix] when WeakSet lacks a has , return false 53a2cbc [Tests] only audit prod deps f74aaf5 [meta] normalize line endings 31f60a6 v2.0.1 - 2019-12-17 Fixed [Refactor] avoid top-level return, because babel and webpack are broken #79 #78 #7 #12 Commits [actions] add automatic rebasing / merge commit blocking d85eb2c [Dev Deps] update eslint , @ljharb/eslint-config 790128b [Dev Deps] update tape e4bda71 v2.0.0 - 2019-11-12 Commits Initial commit 095ce1f Tests 2e8f26d implementation acae1ef readme 344db89 npm init e318679 [meta] add funding field; create FUNDING.yml a1e9277 [meta] add safe-publish-latest , auto-changelog 066a08c [Tests] add npm run lint 6af0730 [Tests] use shared travis-ci configs a44f4ec Only apps should have lockfiles 11e4115 [Tests] add npx aud in posttest 53ceba1 v1.0.1 - 2015-06-03 Commits Tweaks cb3a689 Add related section to readme 7c2766b v1.0.0 - 2015-02-18 Commits init 579f442","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#v203-2024-03-08","text":"","title":"v2.0.3 - 2024-03-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#commits","text":"[meta] use npmignore to autogenerate an npmignore file e70d6aa add types c9bbc35 [readme] remove dead badges fb443f6 [actions] remove redundant finisher eb292cc [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape 49d0c35 [Dev Deps] update @ljharb/eslint-config , aud , es6-shim , npmignore , object-inspect , tape 6ec0a57 [actions] update rebase action to use reusable workflow d996166 [Deps] update call-bind , get-intrinsic e207da3 [meta] add missing engines.node 4d9dd14 [Deps] update get-intrinsic cf796dd [meta] add sideEffects flag c88a25d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#v202-2021-12-12","text":"","title":"v2.0.2 - 2021-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#commits_1","text":"[actions] reuse common workflows a8f7c7f [Tests] migrate tests to Github Actions f38af72 [Refactor] use call-bind and get-intrinsic to be more robust 5102e7e [meta] do not publish github action workflow files 6ac6e8e [actions] use node/install instead of node/run ; use codecov action 304af52 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es6-shim , object-inspect , tape b82fb5f [Tests] run nyc on all tests; use tape runner 89e2611 [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , object-inspect , safe-publish-latest , tape 42b0bdc [actions] update codecov uploader 112697a [actions] add \"Allow Edits\" workflow 1af6ffe [readme] remove travis badge dff769b [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 4494ced [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , tape a2c11c6 [Tests] add core-js tests cd619e9 [readme] add actions and codecov badges d3cbefe [Dev Deps] update eslint , @ljharb/eslint-config , tape 3d54035 [Dev Deps] update auto-changelog , eslint a80fb4a [actions] switch Automatic Rease workflow to pull_request_target event b3b8aee [Dev Deps] update es5-shim , tape 5ba5ca8 [meta] use prepublishOnly script for npm 7+ b4f7636 [Dev Deps] update auto-changelog ; add aud 2ccd594 [Fix] when WeakSet lacks a has , return false 53a2cbc [Tests] only audit prod deps f74aaf5 [meta] normalize line endings 31f60a6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#v201-2019-12-17","text":"","title":"v2.0.1 - 2019-12-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#fixed","text":"[Refactor] avoid top-level return, because babel and webpack are broken #79 #78 #7 #12","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#commits_2","text":"[actions] add automatic rebasing / merge commit blocking d85eb2c [Dev Deps] update eslint , @ljharb/eslint-config 790128b [Dev Deps] update tape e4bda71","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#v200-2019-11-12","text":"","title":"v2.0.0 - 2019-11-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#commits_3","text":"Initial commit 095ce1f Tests 2e8f26d implementation acae1ef readme 344db89 npm init e318679 [meta] add funding field; create FUNDING.yml a1e9277 [meta] add safe-publish-latest , auto-changelog 066a08c [Tests] add npm run lint 6af0730 [Tests] use shared travis-ci configs a44f4ec Only apps should have lockfiles 11e4115 [Tests] add npx aud in posttest 53ceba1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#v101-2015-06-03","text":"","title":"v1.0.1 - 2015-06-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#commits_4","text":"Tweaks cb3a689 Add related section to readme 7c2766b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#v100-2015-02-18","text":"","title":"v1.0.0 - 2015-02-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/is-weakset/CHANGELOG/#commits_5","text":"init 579f442","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/isarray/","text":"isarray Array#isArray for older browsers and deprecated Node.js versions. Just use Array.isArray directly , unless you need to support those older versions. Usage var isArray = require('isarray'); console.log(isArray([])); // => true console.log(isArray({})); // => false Installation With npm do $ npm install isarray Then bundle for the browser with browserify . Sponsors This module is proudly supported by my Sponsors ! Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon . Not sure how much of my modules you're using? Try feross/thanks !","title":"isarray"},{"location":"_Disciplina/Code/my-react-app/node_modules/isarray/#isarray","text":"Array#isArray for older browsers and deprecated Node.js versions. Just use Array.isArray directly , unless you need to support those older versions.","title":"isarray"},{"location":"_Disciplina/Code/my-react-app/node_modules/isarray/#usage","text":"var isArray = require('isarray'); console.log(isArray([])); // => true console.log(isArray({})); // => false","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/isarray/#installation","text":"With npm do $ npm install isarray Then bundle for the browser with browserify .","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/isarray/#sponsors","text":"This module is proudly supported by my Sponsors ! Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my Patreon . Not sure how much of my modules you're using? Try feross/thanks !","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/","text":"isexe Minimal module to check if a file is executable, and a normal file. Uses fs.stat and tests against the PATHEXT environment variable on Windows. USAGE var isexe = require('isexe') isexe('some-file-name', function (err, isExe) { if (err) { console.error('probably file does not exist or something', err) } else if (isExe) { console.error('this thing can be run') } else { console.error('cannot be run') } }) // same thing but synchronous, throws errors var isExe = isexe.sync('some-file-name') // treat errors as just \"not executable\" isexe('maybe-missing-file', { ignoreErrors: true }, callback) var isExe = isexe.sync('maybe-missing-file', { ignoreErrors: true }) API isexe(path, [options], [callback]) Check if the path is executable. If no callback provided, and a global Promise object is available, then a Promise will be returned. Will raise whatever errors may be raised by fs.stat , unless options.ignoreErrors is set to true. isexe.sync(path, [options]) Same as isexe but returns the value and throws any errors raised. Options ignoreErrors Treat all errors as \"no, this is not executable\", but don't raise them. uid Number to use as the user id gid Number to use as the group id pathExt List of path extensions to use instead of PATHEXT environment variable on Windows.","title":"isexe"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/#isexe","text":"Minimal module to check if a file is executable, and a normal file. Uses fs.stat and tests against the PATHEXT environment variable on Windows.","title":"isexe"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/#usage","text":"var isexe = require('isexe') isexe('some-file-name', function (err, isExe) { if (err) { console.error('probably file does not exist or something', err) } else if (isExe) { console.error('this thing can be run') } else { console.error('cannot be run') } }) // same thing but synchronous, throws errors var isExe = isexe.sync('some-file-name') // treat errors as just \"not executable\" isexe('maybe-missing-file', { ignoreErrors: true }, callback) var isExe = isexe.sync('maybe-missing-file', { ignoreErrors: true })","title":"USAGE"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/#isexepath-options-callback","text":"Check if the path is executable. If no callback provided, and a global Promise object is available, then a Promise will be returned. Will raise whatever errors may be raised by fs.stat , unless options.ignoreErrors is set to true.","title":"isexe(path, [options], [callback])"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/#isexesyncpath-options","text":"Same as isexe but returns the value and throws any errors raised.","title":"isexe.sync(path, [options])"},{"location":"_Disciplina/Code/my-react-app/node_modules/isexe/#options","text":"ignoreErrors Treat all errors as \"no, this is not executable\", but don't raise them. uid Number to use as the user id gid Number to use as the group id pathExt List of path extensions to use instead of PATHEXT environment variable on Windows.","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/","text":"iterator.prototype Iterator.prototype , or a shared object to use. Usage var iterProto = require('iterator.prototype'); var assert = require('assert'); assert.equal(Object.getPrototypeOf(Object.getPrototypeOf([].keys())), iterProto);","title":"iterator.prototype Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/#iteratorprototype","text":"Iterator.prototype , or a shared object to use.","title":"iterator.prototype"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/#usage","text":"var iterProto = require('iterator.prototype'); var assert = require('assert'); assert.equal(Object.getPrototypeOf(Object.getPrototypeOf([].keys())), iterProto);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.2 - 2023-09-13 Commits [Fix] properly name Iterator.prototype[Symbol.iterator] method 42ddaf7 [Deps] update define-properties , reflect.getprototypeof 8b06aec v1.1.1 - 2023-08-30 Commits [Fix] stop mutating node 4+ Iterator.prototype with Symbol.toStringTag 74e9560 [Dev Deps] update @ljharb/eslint-config , aud , tape 63fd269 [Deps] update define-properties , get-intrinsic ef73f0e v1.1.0 - 2022-12-09 Commits [New] define Symbol.toStringTag d3f94aa v1.0.1 - 2022-12-09 Commits [meta] fix repo URLs 670823e [Fix] move has-symbols to a runtime dep 1b15df1 v1.0.0 - 2022-12-05 Commits Initial implementation, tests, readme 2db7663 Initial commit 5c97994 npm init 0c61e07 [meta] add auto-changelog 8df6001 [meta] use npmignore to autogenerate an npmignore file d173afc Only apps should have lockfiles 0fde03f","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#v112-2023-09-13","text":"","title":"v1.1.2 - 2023-09-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#commits","text":"[Fix] properly name Iterator.prototype[Symbol.iterator] method 42ddaf7 [Deps] update define-properties , reflect.getprototypeof 8b06aec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#v111-2023-08-30","text":"","title":"v1.1.1 - 2023-08-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#commits_1","text":"[Fix] stop mutating node 4+ Iterator.prototype with Symbol.toStringTag 74e9560 [Dev Deps] update @ljharb/eslint-config , aud , tape 63fd269 [Deps] update define-properties , get-intrinsic ef73f0e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#v110-2022-12-09","text":"","title":"v1.1.0 - 2022-12-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#commits_2","text":"[New] define Symbol.toStringTag d3f94aa","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#v101-2022-12-09","text":"","title":"v1.0.1 - 2022-12-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#commits_3","text":"[meta] fix repo URLs 670823e [Fix] move has-symbols to a runtime dep 1b15df1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#v100-2022-12-05","text":"","title":"v1.0.0 - 2022-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/iterator.prototype/CHANGELOG/#commits_4","text":"Initial implementation, tests, readme 2db7663 Initial commit 5c97994 npm init 0c61e07 [meta] add auto-changelog 8df6001 [meta] use npmignore to autogenerate an npmignore file d173afc Only apps should have lockfiles 0fde03f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/","text":"Overview A regex that tokenizes JavaScript. var jsTokens = require(\"js-tokens\").default var jsString = \"var foo=opts.foo;\\n...\" jsString.match(jsTokens) // [\"var\", \" \", \"foo\", \"=\", \"opts\", \".\", \"foo\", \";\", \"\\n\", ...] Installation npm install js-tokens import jsTokens from \"js-tokens\" // or: var jsTokens = require(\"js-tokens\").default Usage jsTokens A regex with the g flag that matches JavaScript tokens. The regex always matches, even invalid JavaScript and the empty string. The next match is always directly after the previous. var token = matchToToken(match) import {matchToToken} from \"js-tokens\" // or: var matchToToken = require(\"js-tokens\").matchToToken Takes a match returned by jsTokens.exec(string) , and returns a {type: String, value: String} object. The following types are available: string comment regex number name punctuator whitespace invalid Multi-line comments and strings also have a closed property indicating if the token was closed or not (see below). Comments and strings both come in several flavors. To distinguish them, check if the token starts with // , /* , ' , \" or ` . Names are ECMAScript IdentifierNames, that is, including both identifiers and keywords. You may use is-keyword-js to tell them apart. Whitespace includes both line terminators and other whitespace. ECMAScript support The intention is to always support the latest ECMAScript version whose feature set has been finalized. If adding support for a newer version requires changes, a new version with a major verion bump will be released. Currently, ECMAScript 2018 is supported. Invalid code handling Unterminated strings are still matched as strings. JavaScript strings cannot contain (unescaped) newlines, so unterminated strings simply end at the end of the line. Unterminated template strings can contain unescaped newlines, though, so they go on to the end of input. Unterminated multi-line comments are also still matched as comments. They simply go on to the end of the input. Unterminated regex literals are likely matched as division and whatever is inside the regex. Invalid ASCII characters have their own capturing group. Invalid non-ASCII characters are treated as names, to simplify the matching of names (except unicode spaces which are treated as whitespace). Note: See also the ES2018 section. Regex literals may contain invalid regex syntax. They are still matched as regex literals. They may also contain repeated regex flags, to keep the regex simple. Strings may contain invalid escape sequences. Limitations Tokenizing JavaScript using regexes\u2014in fact, one single regex \u2014won\u2019t be perfect. But that\u2019s not the point either. You may compare jsTokens with esprima by using esprima-compare.js . See npm run esprima-compare ! Template string interpolation Template strings are matched as single tokens, from the starting ` to the ending ` , including interpolations (whose tokens are not matched individually). Matching template string interpolations requires recursive balancing of { and } \u2014something that JavaScript regexes cannot do. Only one level of nesting is supported. Division and regex literals collision Consider this example: var g = 9.82 var number = bar / 2/g var regex = / 2/g A human can easily understand that in the number line we\u2019re dealing with division, and in the regex line we\u2019re dealing with a regex literal. How come? Because humans can look at the whole code to put the / characters in context. A JavaScript regex cannot. It only sees forwards. (Well, ES2018 regexes can also look backwards. See the ES2018 section). When the jsTokens regex scans throught the above, it will see the following at the end of both the number and regex rows: / 2/g It is then impossible to know if that is a regex literal, or part of an expression dealing with division. Here is a similar case: foo /= 2/g foo(/= 2/g) The first line divides the foo variable with 2/g . The second line calls the foo function with the regex literal /= 2/g . Again, since jsTokens only sees forwards, it cannot tell the two cases apart. There are some cases where we can tell division and regex literals apart, though. First off, we have the simple cases where there\u2019s only one slash in the line: var foo = 2/g foo /= 2 Regex literals cannot contain newlines, so the above cases are correctly identified as division. Things are only problematic when there are more than one non-comment slash in a single line. Secondly, not every character is a valid regex flag. var number = bar / 2/e The above example is also correctly identified as division, because e is not a valid regex flag. I initially wanted to future-proof by allowing [a-zA-Z]* (any letter) as flags, but it is not worth it since it increases the amount of ambigous cases. So only the standard g , m , i , y and u flags are allowed. This means that the above example will be identified as division as long as you don\u2019t rename the e variable to some permutation of gmiyus 1 to 6 characters long. Lastly, we can look forward for information. If the token following what looks like a regex literal is not valid after a regex literal, but is valid in a division expression, then the regex literal is treated as division instead. For example, a flagless regex cannot be followed by a string, number or name, but all of those three can be the denominator of a division. Generally, if what looks like a regex literal is followed by an operator, the regex literal is treated as division instead. This is because regexes are seldomly used with operators (such as + , * , && and == ), but division could likely be part of such an expression. Please consult the regex source and the test cases for precise information on when regex or division is matched (should you need to know). In short, you could sum it up as: If the end of a statement looks like a regex literal (even if it isn\u2019t), it will be treated as one. Otherwise it should work as expected (if you write sane code). ES2018 ES2018 added some nice regex improvements to the language. Unicode property escapes should allow telling names and invalid non-ASCII characters apart without blowing up the regex size. Lookbehind assertions should allow matching telling division and regex literals apart in more cases. Named capture groups might simplify some things. These things would be nice to do, but are not critical. They probably have to wait until the oldest maintained Node.js LTS release supports those features. License MIT .","title":"Overview Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#overview","text":"A regex that tokenizes JavaScript. var jsTokens = require(\"js-tokens\").default var jsString = \"var foo=opts.foo;\\n...\" jsString.match(jsTokens) // [\"var\", \" \", \"foo\", \"=\", \"opts\", \".\", \"foo\", \";\", \"\\n\", ...]","title":"Overview"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#installation","text":"npm install js-tokens import jsTokens from \"js-tokens\" // or: var jsTokens = require(\"js-tokens\").default","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#usage","text":"","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#jstokens","text":"A regex with the g flag that matches JavaScript tokens. The regex always matches, even invalid JavaScript and the empty string. The next match is always directly after the previous.","title":"jsTokens"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#var-token-matchtotokenmatch","text":"import {matchToToken} from \"js-tokens\" // or: var matchToToken = require(\"js-tokens\").matchToToken Takes a match returned by jsTokens.exec(string) , and returns a {type: String, value: String} object. The following types are available: string comment regex number name punctuator whitespace invalid Multi-line comments and strings also have a closed property indicating if the token was closed or not (see below). Comments and strings both come in several flavors. To distinguish them, check if the token starts with // , /* , ' , \" or ` . Names are ECMAScript IdentifierNames, that is, including both identifiers and keywords. You may use is-keyword-js to tell them apart. Whitespace includes both line terminators and other whitespace.","title":"var token = matchToToken(match)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#ecmascript-support","text":"The intention is to always support the latest ECMAScript version whose feature set has been finalized. If adding support for a newer version requires changes, a new version with a major verion bump will be released. Currently, ECMAScript 2018 is supported.","title":"ECMAScript support"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#invalid-code-handling","text":"Unterminated strings are still matched as strings. JavaScript strings cannot contain (unescaped) newlines, so unterminated strings simply end at the end of the line. Unterminated template strings can contain unescaped newlines, though, so they go on to the end of input. Unterminated multi-line comments are also still matched as comments. They simply go on to the end of the input. Unterminated regex literals are likely matched as division and whatever is inside the regex. Invalid ASCII characters have their own capturing group. Invalid non-ASCII characters are treated as names, to simplify the matching of names (except unicode spaces which are treated as whitespace). Note: See also the ES2018 section. Regex literals may contain invalid regex syntax. They are still matched as regex literals. They may also contain repeated regex flags, to keep the regex simple. Strings may contain invalid escape sequences.","title":"Invalid code handling"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#limitations","text":"Tokenizing JavaScript using regexes\u2014in fact, one single regex \u2014won\u2019t be perfect. But that\u2019s not the point either. You may compare jsTokens with esprima by using esprima-compare.js . See npm run esprima-compare !","title":"Limitations"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#template-string-interpolation","text":"Template strings are matched as single tokens, from the starting ` to the ending ` , including interpolations (whose tokens are not matched individually). Matching template string interpolations requires recursive balancing of { and } \u2014something that JavaScript regexes cannot do. Only one level of nesting is supported.","title":"Template string interpolation"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#division-and-regex-literals-collision","text":"Consider this example: var g = 9.82 var number = bar / 2/g var regex = / 2/g A human can easily understand that in the number line we\u2019re dealing with division, and in the regex line we\u2019re dealing with a regex literal. How come? Because humans can look at the whole code to put the / characters in context. A JavaScript regex cannot. It only sees forwards. (Well, ES2018 regexes can also look backwards. See the ES2018 section). When the jsTokens regex scans throught the above, it will see the following at the end of both the number and regex rows: / 2/g It is then impossible to know if that is a regex literal, or part of an expression dealing with division. Here is a similar case: foo /= 2/g foo(/= 2/g) The first line divides the foo variable with 2/g . The second line calls the foo function with the regex literal /= 2/g . Again, since jsTokens only sees forwards, it cannot tell the two cases apart. There are some cases where we can tell division and regex literals apart, though. First off, we have the simple cases where there\u2019s only one slash in the line: var foo = 2/g foo /= 2 Regex literals cannot contain newlines, so the above cases are correctly identified as division. Things are only problematic when there are more than one non-comment slash in a single line. Secondly, not every character is a valid regex flag. var number = bar / 2/e The above example is also correctly identified as division, because e is not a valid regex flag. I initially wanted to future-proof by allowing [a-zA-Z]* (any letter) as flags, but it is not worth it since it increases the amount of ambigous cases. So only the standard g , m , i , y and u flags are allowed. This means that the above example will be identified as division as long as you don\u2019t rename the e variable to some permutation of gmiyus 1 to 6 characters long. Lastly, we can look forward for information. If the token following what looks like a regex literal is not valid after a regex literal, but is valid in a division expression, then the regex literal is treated as division instead. For example, a flagless regex cannot be followed by a string, number or name, but all of those three can be the denominator of a division. Generally, if what looks like a regex literal is followed by an operator, the regex literal is treated as division instead. This is because regexes are seldomly used with operators (such as + , * , && and == ), but division could likely be part of such an expression. Please consult the regex source and the test cases for precise information on when regex or division is matched (should you need to know). In short, you could sum it up as: If the end of a statement looks like a regex literal (even if it isn\u2019t), it will be treated as one. Otherwise it should work as expected (if you write sane code).","title":"Division and regex literals collision"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#es2018","text":"ES2018 added some nice regex improvements to the language. Unicode property escapes should allow telling names and invalid non-ASCII characters apart without blowing up the regex size. Lookbehind assertions should allow matching telling division and regex literals apart in more cases. Named capture groups might simplify some things. These things would be nice to do, but are not critical. They probably have to wait until the oldest maintained Node.js LTS release supports those features.","title":"ES2018"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/#license","text":"MIT .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/","text":"Version 4.0.0 (2018-01-28) Added: Support for ES2018. The only change needed was recognizing the s regex flag. Changed: All tokens returned by the matchToToken function now have a closed property. It is set to undefined for the tokens where \u201cclosed\u201d doesn\u2019t make sense. This means that all tokens objects have the same shape, which might improve performance. These are the breaking changes: '/a/s'.match(jsTokens) no longer returns ['/', 'a', '/', 's'] , but ['/a/s'] . (There are of course other variations of this.) Code that rely on some token objects not having the closed property could now behave differently. Version 3.0.2 (2017-06-28) No code changes. Just updates to the readme. Version 3.0.1 (2017-01-30) Fixed: ES2015 unicode escapes with more than 6 hex digits are now matched correctly. Version 3.0.0 (2017-01-11) This release contains one breaking change, that should improve performance in V8 : So how can you, as a JavaScript developer, ensure that your RegExps are fast? If you are not interested in hooking into RegExp internals, make sure that neither the RegExp instance, nor its prototype is modified in order to get the best performance: js var re = /./g; re.exec(''); // Fast path. re.new_property = 'slow'; This module used to export a single regex, with .matchToToken bolted on, just like in the above example. This release changes the exports of the module to avoid this issue. Before: import jsTokens from \"js-tokens\" // or: var jsTokens = require(\"js-tokens\") var matchToToken = jsTokens.matchToToken After: import jsTokens, {matchToToken} from \"js-tokens\" // or: var jsTokens = require(\"js-tokens\").default var matchToToken = require(\"js-tokens\").matchToToken Version 2.0.0 (2016-06-19) Added: Support for ES2016. In other words, support for the ** exponentiation operator. These are the breaking changes: '**'.match(jsTokens) no longer returns ['*', '*'] , but ['**'] . '**='.match(jsTokens) no longer returns ['*', '*='] , but ['**='] . Version 1.0.3 (2016-03-27) Improved: Made the regex ever so slightly smaller. Updated: The readme. Version 1.0.2 (2015-10-18) Improved: Limited npm package contents for a smaller download. Thanks to @zertosh! Version 1.0.1 (2015-06-20) Fixed: Declared an undeclared variable. Version 1.0.0 (2015-02-26) Changed: Merged the 'operator' and 'punctuation' types into 'punctuator'. That type is now equivalent to the Punctuator token in the ECMAScript specification. (Backwards-incompatible change.) Fixed: A - followed by a number is now correctly matched as a punctuator followed by a number. It used to be matched as just a number, but there is no such thing as negative number literals. (Possibly backwards-incompatible change.) Version 0.4.1 (2015-02-21) Added: Support for the regex u flag. Version 0.4.0 (2015-02-21) Improved: jsTokens.matchToToken performance. Added: Support for octal and binary number literals. Added: Support for template strings. Version 0.3.1 (2015-01-06) Fixed: Support for unicode spaces. They used to be allowed in names (which is very confusing), and some unicode newlines were wrongly allowed in strings and regexes. Version 0.3.0 (2014-12-19) Changed: The jsTokens.names array has been replaced with the jsTokens.matchToToken function. The capturing groups of jsTokens are no longer part of the public API; instead use said function. See this gist for an example. (Backwards-incompatible change.) Changed: The empty string is now considered an \u201cinvalid\u201d token, instead an \u201cempty\u201d token (its own group). (Backwards-incompatible change.) Removed: component support. (Backwards-incompatible change.) Version 0.2.0 (2014-06-19) Changed: Match ES6 function arrows ( => ) as an operator, instead of its own category (\u201cfunctionArrow\u201d), for simplicity. (Backwards-incompatible change.) Added: ES6 splats ( ... ) are now matched as an operator (instead of three punctuations). (Backwards-incompatible change.) Version 0.1.0 (2014-03-08) Initial release.","title":"CHANGELOG"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-400-2018-01-28","text":"Added: Support for ES2018. The only change needed was recognizing the s regex flag. Changed: All tokens returned by the matchToToken function now have a closed property. It is set to undefined for the tokens where \u201cclosed\u201d doesn\u2019t make sense. This means that all tokens objects have the same shape, which might improve performance. These are the breaking changes: '/a/s'.match(jsTokens) no longer returns ['/', 'a', '/', 's'] , but ['/a/s'] . (There are of course other variations of this.) Code that rely on some token objects not having the closed property could now behave differently.","title":"Version 4.0.0 (2018-01-28)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-302-2017-06-28","text":"No code changes. Just updates to the readme.","title":"Version 3.0.2 (2017-06-28)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-301-2017-01-30","text":"Fixed: ES2015 unicode escapes with more than 6 hex digits are now matched correctly.","title":"Version 3.0.1 (2017-01-30)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-300-2017-01-11","text":"This release contains one breaking change, that should improve performance in V8 : So how can you, as a JavaScript developer, ensure that your RegExps are fast? If you are not interested in hooking into RegExp internals, make sure that neither the RegExp instance, nor its prototype is modified in order to get the best performance: js var re = /./g; re.exec(''); // Fast path. re.new_property = 'slow'; This module used to export a single regex, with .matchToToken bolted on, just like in the above example. This release changes the exports of the module to avoid this issue. Before: import jsTokens from \"js-tokens\" // or: var jsTokens = require(\"js-tokens\") var matchToToken = jsTokens.matchToToken After: import jsTokens, {matchToToken} from \"js-tokens\" // or: var jsTokens = require(\"js-tokens\").default var matchToToken = require(\"js-tokens\").matchToToken","title":"Version 3.0.0 (2017-01-11)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-200-2016-06-19","text":"Added: Support for ES2016. In other words, support for the ** exponentiation operator. These are the breaking changes: '**'.match(jsTokens) no longer returns ['*', '*'] , but ['**'] . '**='.match(jsTokens) no longer returns ['*', '*='] , but ['**='] .","title":"Version 2.0.0 (2016-06-19)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-103-2016-03-27","text":"Improved: Made the regex ever so slightly smaller. Updated: The readme.","title":"Version 1.0.3 (2016-03-27)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-102-2015-10-18","text":"Improved: Limited npm package contents for a smaller download. Thanks to @zertosh!","title":"Version 1.0.2 (2015-10-18)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-101-2015-06-20","text":"Fixed: Declared an undeclared variable.","title":"Version 1.0.1 (2015-06-20)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-100-2015-02-26","text":"Changed: Merged the 'operator' and 'punctuation' types into 'punctuator'. That type is now equivalent to the Punctuator token in the ECMAScript specification. (Backwards-incompatible change.) Fixed: A - followed by a number is now correctly matched as a punctuator followed by a number. It used to be matched as just a number, but there is no such thing as negative number literals. (Possibly backwards-incompatible change.)","title":"Version 1.0.0 (2015-02-26)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-041-2015-02-21","text":"Added: Support for the regex u flag.","title":"Version 0.4.1 (2015-02-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-040-2015-02-21","text":"Improved: jsTokens.matchToToken performance. Added: Support for octal and binary number literals. Added: Support for template strings.","title":"Version 0.4.0 (2015-02-21)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-031-2015-01-06","text":"Fixed: Support for unicode spaces. They used to be allowed in names (which is very confusing), and some unicode newlines were wrongly allowed in strings and regexes.","title":"Version 0.3.1 (2015-01-06)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-030-2014-12-19","text":"Changed: The jsTokens.names array has been replaced with the jsTokens.matchToToken function. The capturing groups of jsTokens are no longer part of the public API; instead use said function. See this gist for an example. (Backwards-incompatible change.) Changed: The empty string is now considered an \u201cinvalid\u201d token, instead an \u201cempty\u201d token (its own group). (Backwards-incompatible change.) Removed: component support. (Backwards-incompatible change.)","title":"Version 0.3.0 (2014-12-19)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-020-2014-06-19","text":"Changed: Match ES6 function arrows ( => ) as an operator, instead of its own category (\u201cfunctionArrow\u201d), for simplicity. (Backwards-incompatible change.) Added: ES6 splats ( ... ) are now matched as an operator (instead of three punctuations). (Backwards-incompatible change.)","title":"Version 0.2.0 (2014-06-19)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-tokens/CHANGELOG/#version-010-2014-03-08","text":"Initial release.","title":"Version 0.1.0 (2014-03-08)"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/","text":"JS-YAML - YAML 1.2 parser / writer for JavaScript Online Demo This is an implementation of YAML , a human-friendly data serialization language. Started as PyYAML port, it was completely rewritten from scratch. Now it's very fast, and supports 1.2 spec. Installation YAML module for node.js npm install js-yaml CLI executable If you want to inspect your YAML files from CLI, install js-yaml globally: npm install -g js-yaml Usage usage: js-yaml [-h] [-v] [-c] [-t] file Positional arguments: file File with YAML document(s) Optional arguments: -h, --help Show this help message and exit. -v, --version Show program's version number and exit. -c, --compact Display errors in compact mode -t, --trace Show stack trace on error API Here we cover the most 'useful' methods. If you need advanced details (creating your own tags), see examples for more info. const yaml = require('js-yaml'); const fs = require('fs'); // Get document, or throw exception on error try { const doc = yaml.load(fs.readFileSync('/home/ixti/example.yml', 'utf8')); console.log(doc); } catch (e) { console.log(e); } load (string [ , options ]) Parses string as single YAML document. Returns either a plain object, a string, a number, null or undefined , or throws YAMLException on error. By default, does not support regexps, functions and undefined. options: filename (default: null) - string to be used as a file path in error/warning messages. onWarning (default: null) - function to call on warning messages. Loader will call this function with an instance of YAMLException for each warning. schema (default: DEFAULT_SCHEMA ) - specifies a schema to use. FAILSAFE_SCHEMA - only strings, arrays and plain objects: http://www.yaml.org/spec/1.2/spec.html#id2802346 JSON_SCHEMA - all JSON-supported types: http://www.yaml.org/spec/1.2/spec.html#id2803231 CORE_SCHEMA - same as JSON_SCHEMA : http://www.yaml.org/spec/1.2/spec.html#id2804923 DEFAULT_SCHEMA - all supported YAML types. json (default: false) - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error. NOTE: This function does not understand multi-document sources, it throws exception on those. NOTE: JS-YAML does not support schema-specific tag resolution restrictions. So, the JSON schema is not as strictly defined in the YAML specification. It allows numbers in any notation, use Null and NULL as null , etc. The core schema also has no such restrictions. It allows binary notation for integers. loadAll (string [, iterator] [, options ]) Same as load() , but understands multi-document sources. Applies iterator to each document if specified, or returns array of documents. const yaml = require('js-yaml'); yaml.loadAll(data, function (doc) { console.log(doc); }); dump (object [ , options ]) Serializes object as a YAML document. Uses DEFAULT_SCHEMA , so it will throw an exception if you try to dump regexps or functions. However, you can disable exceptions by setting the skipInvalid option to true . options: indent (default: 2) - indentation width to use (in spaces). noArrayIndent (default: false) - when true, will not add an indentation level to array elements skipInvalid (default: false) - do not throw on invalid types (like function in the safe schema) and skip pairs and single values with such types. flowLevel (default: -1) - specifies level of nesting, when to switch from block to flow style for collections. -1 means block style everwhere styles - \"tag\" => \"style\" map. Each tag may have own set of styles. schema (default: DEFAULT_SCHEMA ) specifies a schema to use. sortKeys (default: false ) - if true , sort keys when dumping YAML. If a function, use the function to sort the keys. lineWidth (default: 80 ) - set max line width. Set -1 for unlimited width. noRefs (default: false ) - if true , don't convert duplicate objects into references noCompatMode (default: false ) - if true don't try to be compatible with older yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1 condenseFlow (default: false ) - if true flow sequences will be condensed, omitting the space between a, b . Eg. '[a,b]' , and omitting the space between key: value and quoting the key. Eg. '{\"a\":b}' Can be useful when using yaml for pretty URL query params as spaces are %-encoded. quotingType ( ' or \" , default: ' ) - strings will be quoted using this quoting style. If you specify single quotes, double quotes will still be used for non-printable characters. forceQuotes (default: false ) - if true , all non-key strings will be quoted even if they normally don't need to. replacer - callback function (key, value) called recursively on each key/value in source object (see replacer docs for JSON.stringify ). The following table show availlable styles (e.g. \"canonical\", \"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml output is shown on the right side after => (default setting) or -> : !!null \"canonical\" -> \"~\" \"lowercase\" => \"null\" \"uppercase\" -> \"NULL\" \"camelcase\" -> \"Null\" !!int \"binary\" -> \"0b1\", \"0b101010\", \"0b1110001111010\" \"octal\" -> \"0o1\", \"0o52\", \"0o16172\" \"decimal\" => \"1\", \"42\", \"7290\" \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\" !!bool \"lowercase\" => \"true\", \"false\" \"uppercase\" -> \"TRUE\", \"FALSE\" \"camelcase\" -> \"True\", \"False\" !!float \"lowercase\" => \".nan\", '.inf' \"uppercase\" -> \".NAN\", '.INF' \"camelcase\" -> \".NaN\", '.Inf' Example: dump(object, { 'styles': { '!!null': 'canonical' // dump null as ~ }, 'sortKeys': true // sort object keys }); Supported YAML types The list of standard YAML tags and corresponding JavaScript types. See also YAML tag discussion and YAML types repository . !!null '' # null !!bool 'yes' # bool !!int '3...' # number !!float '3.14...' # number !!binary '...base64...' # buffer !!timestamp 'YYYY-...' # date !!omap [ ... ] # array of key-value pairs !!pairs [ ... ] # array or array pairs !!set { ... } # array of objects with given keys and null values !!str '...' # string !!seq [ ... ] # array !!map { ... } # object JavaScript-specific tags See js-yaml-js-types for extra types. Caveats Note, that you use arrays or objects as key in JS-YAML. JS does not allow objects or arrays as keys, and stringifies (by calling toString() method) them at the moment of adding them. --- ? [ foo, bar ] : - baz ? { foo: bar } : - baz - baz { \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] } Also, reading of properties on implicit block mapping keys is not supported yet. So, the following YAML document cannot be loaded. &anchor foo: foo: bar *anchor: duplicate key baz: bat *anchor: duplicate key js-yaml for enterprise Available as part of the Tidelift Subscription The maintainers of js-yaml and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"JS-YAML - YAML 1.2 parser / writer for JavaScript"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#js-yaml-yaml-12-parser-writer-for-javascript","text":"Online Demo This is an implementation of YAML , a human-friendly data serialization language. Started as PyYAML port, it was completely rewritten from scratch. Now it's very fast, and supports 1.2 spec.","title":"JS-YAML - YAML 1.2 parser / writer for JavaScript"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#installation","text":"","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#yaml-module-for-nodejs","text":"npm install js-yaml","title":"YAML module for node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#cli-executable","text":"If you want to inspect your YAML files from CLI, install js-yaml globally: npm install -g js-yaml","title":"CLI executable"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#usage","text":"usage: js-yaml [-h] [-v] [-c] [-t] file Positional arguments: file File with YAML document(s) Optional arguments: -h, --help Show this help message and exit. -v, --version Show program's version number and exit. -c, --compact Display errors in compact mode -t, --trace Show stack trace on error","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#api","text":"Here we cover the most 'useful' methods. If you need advanced details (creating your own tags), see examples for more info. const yaml = require('js-yaml'); const fs = require('fs'); // Get document, or throw exception on error try { const doc = yaml.load(fs.readFileSync('/home/ixti/example.yml', 'utf8')); console.log(doc); } catch (e) { console.log(e); }","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#load-string-options","text":"Parses string as single YAML document. Returns either a plain object, a string, a number, null or undefined , or throws YAMLException on error. By default, does not support regexps, functions and undefined. options: filename (default: null) - string to be used as a file path in error/warning messages. onWarning (default: null) - function to call on warning messages. Loader will call this function with an instance of YAMLException for each warning. schema (default: DEFAULT_SCHEMA ) - specifies a schema to use. FAILSAFE_SCHEMA - only strings, arrays and plain objects: http://www.yaml.org/spec/1.2/spec.html#id2802346 JSON_SCHEMA - all JSON-supported types: http://www.yaml.org/spec/1.2/spec.html#id2803231 CORE_SCHEMA - same as JSON_SCHEMA : http://www.yaml.org/spec/1.2/spec.html#id2804923 DEFAULT_SCHEMA - all supported YAML types. json (default: false) - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error. NOTE: This function does not understand multi-document sources, it throws exception on those. NOTE: JS-YAML does not support schema-specific tag resolution restrictions. So, the JSON schema is not as strictly defined in the YAML specification. It allows numbers in any notation, use Null and NULL as null , etc. The core schema also has no such restrictions. It allows binary notation for integers.","title":"load (string [ , options ])"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#loadall-string-iterator-options","text":"Same as load() , but understands multi-document sources. Applies iterator to each document if specified, or returns array of documents. const yaml = require('js-yaml'); yaml.loadAll(data, function (doc) { console.log(doc); });","title":"loadAll (string [, iterator] [, options ])"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#dump-object-options","text":"Serializes object as a YAML document. Uses DEFAULT_SCHEMA , so it will throw an exception if you try to dump regexps or functions. However, you can disable exceptions by setting the skipInvalid option to true . options: indent (default: 2) - indentation width to use (in spaces). noArrayIndent (default: false) - when true, will not add an indentation level to array elements skipInvalid (default: false) - do not throw on invalid types (like function in the safe schema) and skip pairs and single values with such types. flowLevel (default: -1) - specifies level of nesting, when to switch from block to flow style for collections. -1 means block style everwhere styles - \"tag\" => \"style\" map. Each tag may have own set of styles. schema (default: DEFAULT_SCHEMA ) specifies a schema to use. sortKeys (default: false ) - if true , sort keys when dumping YAML. If a function, use the function to sort the keys. lineWidth (default: 80 ) - set max line width. Set -1 for unlimited width. noRefs (default: false ) - if true , don't convert duplicate objects into references noCompatMode (default: false ) - if true don't try to be compatible with older yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1 condenseFlow (default: false ) - if true flow sequences will be condensed, omitting the space between a, b . Eg. '[a,b]' , and omitting the space between key: value and quoting the key. Eg. '{\"a\":b}' Can be useful when using yaml for pretty URL query params as spaces are %-encoded. quotingType ( ' or \" , default: ' ) - strings will be quoted using this quoting style. If you specify single quotes, double quotes will still be used for non-printable characters. forceQuotes (default: false ) - if true , all non-key strings will be quoted even if they normally don't need to. replacer - callback function (key, value) called recursively on each key/value in source object (see replacer docs for JSON.stringify ). The following table show availlable styles (e.g. \"canonical\", \"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml output is shown on the right side after => (default setting) or -> : !!null \"canonical\" -> \"~\" \"lowercase\" => \"null\" \"uppercase\" -> \"NULL\" \"camelcase\" -> \"Null\" !!int \"binary\" -> \"0b1\", \"0b101010\", \"0b1110001111010\" \"octal\" -> \"0o1\", \"0o52\", \"0o16172\" \"decimal\" => \"1\", \"42\", \"7290\" \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\" !!bool \"lowercase\" => \"true\", \"false\" \"uppercase\" -> \"TRUE\", \"FALSE\" \"camelcase\" -> \"True\", \"False\" !!float \"lowercase\" => \".nan\", '.inf' \"uppercase\" -> \".NAN\", '.INF' \"camelcase\" -> \".NaN\", '.Inf' Example: dump(object, { 'styles': { '!!null': 'canonical' // dump null as ~ }, 'sortKeys': true // sort object keys });","title":"dump (object [ , options ])"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#supported-yaml-types","text":"The list of standard YAML tags and corresponding JavaScript types. See also YAML tag discussion and YAML types repository . !!null '' # null !!bool 'yes' # bool !!int '3...' # number !!float '3.14...' # number !!binary '...base64...' # buffer !!timestamp 'YYYY-...' # date !!omap [ ... ] # array of key-value pairs !!pairs [ ... ] # array or array pairs !!set { ... } # array of objects with given keys and null values !!str '...' # string !!seq [ ... ] # array !!map { ... } # object JavaScript-specific tags See js-yaml-js-types for extra types.","title":"Supported YAML types"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#caveats","text":"Note, that you use arrays or objects as key in JS-YAML. JS does not allow objects or arrays as keys, and stringifies (by calling toString() method) them at the moment of adding them. --- ? [ foo, bar ] : - baz ? { foo: bar } : - baz - baz { \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] } Also, reading of properties on implicit block mapping keys is not supported yet. So, the following YAML document cannot be loaded. &anchor foo: foo: bar *anchor: duplicate key baz: bat *anchor: duplicate key","title":"Caveats"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/#js-yaml-for-enterprise","text":"Available as part of the Tidelift Subscription The maintainers of js-yaml and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","title":"js-yaml for enterprise"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 4.1.0 - 2021-04-15 Added Types are now exported as yaml.types.XXX . Every type now has options property with original arguments kept as they were (see yaml.types.int.options as an example). Changed Schema.extend() now keeps old type order in case of conflicts (e.g. Schema.extend([ a, b, c ]).extend([ b, a, d ]) is now ordered as abcd instead of cbad ). 4.0.0 - 2021-01-03 Changed Check migration guide to see details for all breaking changes. Breaking: \"unsafe\" tags !!js/function , !!js/regexp , !!js/undefined are moved to js-yaml-js-types package. Breaking: removed safe* functions. Use load , loadAll , dump instead which are all now safe by default. yaml.DEFAULT_SAFE_SCHEMA and yaml.DEFAULT_FULL_SCHEMA are removed, use yaml.DEFAULT_SCHEMA instead. yaml.Schema.create(schema, tags) is removed, use schema.extend(tags) instead. !!binary now always mapped to Uint8Array on load. Reduced nesting of /lib folder. Parse numbers according to YAML 1.2 instead of YAML 1.1 ( 01234 is now decimal, 0o1234 is octal, 1:23 is parsed as string instead of base60). dump() no longer quotes : , [ , ] , ( , ) except when necessary, #470, #557. Line and column in exceptions are now formatted as (X:Y) instead of at line X, column Y (also present in compact format), #332. Code snippet created in exceptions now contains multiple lines with line numbers. dump() now serializes undefined as null in collections and removes keys with undefined in mappings, #571. dump() with skipInvalid=true now serializes invalid items in collections as null. Custom tags starting with ! are now dumped as !tag instead of !<!tag> , #576. Custom tags starting with tag:yaml.org,2002: are now shorthanded using !! , #258. Added Added .mjs (es modules) support. Added quotingType and forceQuotes options for dumper to configure string literal style, #290, #529. Added styles: { '!!null': 'empty' } option for dumper (serializes { foo: null } as \" foo: \"), #570. Added replacer option (similar to option in JSON.stringify), #339. Custom Tag can now handle all tags or multiple tags with the same prefix, #385. Fixed Astral characters are no longer encoded by dump() , #587. \"duplicate mapping key\" exception now points at the correct column, #452. Extra commas in flow collections (e.g. [foo,,bar] ) now throw an exception instead of producing null, #321. __proto__ key no longer overrides object prototype, #164. Removed bower.json . Tags are now url-decoded in load() and url-encoded in dump() (previously usage of custom non-ascii tags may have led to invalid YAML that can't be parsed). Anchors now work correctly with empty nodes, #301. Fix incorrect parsing of invalid block mapping syntax, #418. Throw an error if block sequence/mapping indent contains a tab, #80. [3.14.1] - 2020-12-07 Security Fix possible code execution in (already unsafe) .load() (in &anchor). 3.14.0 - 2020-05-22 Changed Support safe/loadAll(input, options) variant of call. CI: drop outdated nodejs versions. Dev deps bump. Fixed Quote = in plain scalars #519. Check the node type for !<?> tag in case user manually specifies it. Verify that there are no null-bytes in input. Fix wrong quote position when writing condensed flow, #526. 3.13.1 - 2019-04-05 Security Fix possible code execution in (already unsafe) .load() , #480. 3.13.0 - 2019-03-20 Security Security fix: safeLoad() can hang when arrays with nested refs used as key. Now throws exception for nested arrays. #475. 3.12.2 - 2019-02-26 Fixed Fix noArrayIndent option for root level, #468. 3.12.1 - 2019-01-05 Added Added noArrayIndent option, #432. 3.12.0 - 2018-06-02 Changed Support arrow functions without a block statement, #421. 3.11.0 - 2018-03-05 Added Add arrow functions suport for !!js/function . Fixed Fix dump in bin/octal/hex formats for negative integers, #399. 3.10.0 - 2017-09-10 Fixed Fix condenseFlow output (quote keys for sure, instead of spaces), #371, #370. Dump astrals as codepoints instead of surrogate pair, #368. 3.9.1 - 2017-07-08 Fixed Ensure stack is present for custom errors in node 7.+, #351. 3.9.0 - 2017-07-08 Added Add condenseFlow option (to create pretty URL query params), #346. Fixed Support array return from safeLoadAll/loadAll, #350. 3.8.4 - 2017-05-08 Fixed Dumper: prevent space after dash for arrays that wrap, #343. 3.8.3 - 2017-04-05 Fixed Should not allow numbers to begin and end with underscore, #335. 3.8.2 - 2017-03-02 Fixed Fix !!float 123 (integers) parse, #333. Don't allow leading zeros in floats (except 0, 0.xxx). Allow positive exponent without sign in floats. 3.8.1 - 2017-02-07 Changed Maintenance: update browserified build. 3.8.0 - 2017-02-07 Fixed Fix reported position for duplicated mapping key errors. Now points to block start instead of block end. (#243, thanks to @shockey). 3.7.0 - 2016-11-12 Added Support polymorphism for tags (#300, thanks to @monken). Fixed Fix parsing of quotes followed by newlines (#304, thanks to @dplepage). 3.6.1 - 2016-05-11 Fixed Fix output cut on a pipe, #286. 3.6.0 - 2016-04-16 Fixed Dumper rewrite, fix multiple bugs with trailing \\n . Big thanks to @aepsilon! Loader: fix leading/trailing newlines in block scalars, @aepsilon. 3.5.5 - 2016-03-17 Fixed Date parse fix: don't allow dates with on digit in month and day, #268. 3.5.4 - 2016-03-09 Added noCompatMode for dumper, to disable quoting YAML 1.1 values. 3.5.3 - 2016-02-11 Changed Maintenance release. 3.5.2 - 2016-01-11 Changed Maintenance: missed comma in bower config. 3.5.1 - 2016-01-11 Changed Removed inherit dependency, #239. Better browserify workaround for esprima load. Demo rewrite. 3.5.0 - 2016-01-10 Fixed Dumper. Fold strings only, #217. Dumper. norefs option, to clone linked objects, #229. Loader. Throw a warning for duplicate keys, #166. Improved browserify support (mark esprima & Buffer excluded). 3.4.6 - 2015-11-26 Changed Use standalone inherit to keep browserified files clear. 3.4.5 - 2015-11-23 Added Added lineWidth option to dumper. 3.4.4 - 2015-11-21 Fixed Fixed floats dump (missed dot for scientific format), #220. Allow non-printable characters inside quoted scalars, #192. 3.4.3 - 2015-10-10 Changed Maintenance release - deps bump (esprima, argparse). 3.4.2 - 2015-09-09 Fixed Fixed serialization of duplicated entries in sequences, #205. Thanks to @vogelsgesang. 3.4.1 - 2015-09-05 Fixed Fixed stacktrace handling in generated errors, for browsers (FF/IE). 3.4.0 - 2015-08-23 Changed Don't throw on warnings anymore. Use onWarning option to catch. Throw error on unknown tags (was warning before). Reworked internals of error class. Fixed Fixed multiline keys dump, #197. Thanks to @tcr. Fixed heading line breaks in some scalars (regression). 3.3.1 - 2015-05-13 Added Added .sortKeys dumper option, thanks to @rjmunro. Fixed Fixed astral characters support, #191. 3.3.0 - 2015-04-26 Changed Significantly improved long strings formatting in dumper, thanks to @isaacs. Strip BOM if exists. 3.2.7 - 2015-02-19 Changed Maintenance release. Updated dependencies. HISTORY.md -> CHANGELOG.md 3.2.6 - 2015-02-07 Fixed Fixed encoding of UTF-16 surrogate pairs. (e.g. \"\\U0001F431\" CAT FACE). Fixed demo dates dump (#113, thanks to @Hypercubed). 3.2.5 - 2014-12-28 Fixed Fixed resolving of all built-in types on empty nodes. Fixed invalid warning on empty lines within quoted scalars and flow collections. Fixed bug: Tag on an empty node didn't resolve in some cases. 3.2.4 - 2014-12-19 Fixed Fixed resolving of !!null tag on an empty node. 3.2.3 - 2014-11-08 Fixed Implemented dumping of objects with circular and cross references. Partially fixed aliasing of constructed objects. (see issue #141 for details) 3.2.2 - 2014-09-07 Fixed Fixed infinite loop on unindented block scalars. Rewritten base64 encode/decode in binary type, to keep code licence clear. 3.2.1 - 2014-08-24 Fixed Nothig new. Just fix npm publish error. 3.2.0 - 2014-08-24 Added Added input piping support to CLI. Fixed Fixed typo, that could cause hand on initial indent (#139). 3.1.0 - 2014-07-07 Changed 1.5x-2x speed boost. Removed deprecated require('xxx.yml') support. Significant code cleanup and refactoring. Internal API changed. If you used custom types - see updated examples. Others are not affected. Even if the input string has no trailing line break character, it will be parsed as if it has one. Added benchmark scripts. Moved bower files to /dist folder Bugfixes. 3.0.2 - 2014-02-27 Fixed Fixed bug: \"constructor\" string parsed as null . 3.0.1 - 2013-12-22 Fixed Fixed parsing of literal scalars. (issue #108) Prevented adding unnecessary spaces in object dumps. (issue #68) Fixed dumping of objects with very long (> 1024 in length) keys. 3.0.0 - 2013-12-16 Changed Refactored code. Changed API for custom types. Removed output colors in CLI, dump json by default. Removed big dependencies from browser version (esprima, buffer). Load esprima manually, if !!js/function needed. !!bin now returns Array in browser AMD support. Don't quote dumped strings because of - & ? (if not first char). Deprecated loading yaml files via require() , as not recommended behaviour for node. 2.1.3 - 2013-10-16 Fixed Fix wrong loading of empty block scalars. 2.1.2 - 2013-10-07 Fixed Fix unwanted line breaks in folded scalars. 2.1.1 - 2013-10-02 Fixed Dumper now respects deprecated booleans syntax from YAML 1.0/1.1 Fixed reader bug in JSON-like sequences/mappings. 2.1.0 - 2013-06-05 Added Add standard YAML schemas: Failsafe ( FAILSAFE_SCHEMA ), JSON ( JSON_SCHEMA ) and Core ( CORE_SCHEMA ). Add skipInvalid dumper option. Changed Rename DEFAULT_SCHEMA to DEFAULT_FULL_SCHEMA and SAFE_SCHEMA to DEFAULT_SAFE_SCHEMA . Use safeLoad for require extension. Fixed Bug fix: export NIL constant from the public interface. 2.0.5 - 2013-04-26 Security Close security issue in !!js/function constructor. Big thanks to @nealpoole for security audit. 2.0.4 - 2013-04-08 Changed Updated .npmignore to reduce package size 2.0.3 - 2013-02-26 Fixed Fixed dumping of empty arrays ans objects. ([] and {} instead of null) 2.0.2 - 2013-02-15 Fixed Fixed input validation: tabs are printable characters. 2.0.1 - 2013-02-09 Fixed Fixed error, when options not passed to function cass 2.0.0 - 2013-02-09 Changed Full rewrite. New architecture. Fast one-stage parsing. Changed custom types API. Added YAML dumper. 1.0.3 - 2012-11-05 Fixed Fixed utf-8 files loading. 1.0.2 - 2012-08-02 Fixed Pull out hand-written shims. Use ES5-Shims for old browsers support. See #44. Fix timstamps incorectly parsed in local time when no time part specified. 1.0.1 - 2012-07-07 Fixed Fixes TypeError: 'undefined' is not an object under Safari. Thanks Phuong. Fix timestamps incorrectly parsed in local time. Thanks @caolan. Closes #46. 1.0.0 - 2012-07-01 Changed y , yes , n , no , on , off are not converted to Booleans anymore. Fixes #42. require(filename) now returns a single document and throws an Error if file contains more than one document. CLI was merged back from js-yaml.bin 0.3.7 - 2012-02-28 Fixed Fix export of addConstructor() . Closes #39. 0.3.6 - 2012-02-22 Changed Removed AMD parts - too buggy to use. Need help to rewrite from scratch Fixed Removed YUI compressor warning (renamed double variable). Closes #40. 0.3.5 - 2012-01-10 Fixed Workagound for .npmignore fuckup under windows. Thanks to airportyh. 0.3.4 - 2011-12-24 Fixed Fixes str[] for oldIEs support. Adds better has change support for browserified demo. improves compact output of Error. Closes #33. 0.3.3 - 2011-12-20 Added adds compact stringification of Errors. Changed jsyaml executable moved to separate module. 0.3.2 - 2011-12-16 Added Added jsyaml executable. Added !!js/function support. Closes #12. Fixed Fixes ug with block style scalars. Closes #26. All sources are passing JSLint now. Fixes bug in Safari. Closes #28. Fixes bug in Opers. Closes #29. Improves browser support. Closes #20. 0.3.1 - 2011-11-18 Added Added AMD support for browserified version. Added permalinks for online demo YAML snippets. Now we have YPaste service, lol. Added !!js/regexp and !!js/undefined types. Partially solves #12. Changed Wrapped browserified js-yaml into closure. Fixed Fixed the resolvement of non-specific tags. Closes #17. Fixed !!set mapping. Fixed month parse in dates. Closes #19. 0.3.0 - 2011-11-09 Added Added browserified version. Closes #13. Added live demo of browserified version. Ported some of the PyYAML tests. See #14. Fixed Removed JS.Class dependency. Closes #3. Fixed timestamp bug when fraction was given. 0.2.2 - 2011-11-06 Fixed Fixed crash on docs without ---. Closes #8. Fixed multiline string parse Fixed tests/comments for using array as key 0.2.1 - 2011-11-02 Fixed Fixed short file read (<4k). Closes #9. 0.2.0 - 2011-11-02 Changed First public release","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#410-2021-04-15","text":"","title":"4.1.0 - 2021-04-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added","text":"Types are now exported as yaml.types.XXX . Every type now has options property with original arguments kept as they were (see yaml.types.int.options as an example).","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed","text":"Schema.extend() now keeps old type order in case of conflicts (e.g. Schema.extend([ a, b, c ]).extend([ b, a, d ]) is now ordered as abcd instead of cbad ).","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#400-2021-01-03","text":"","title":"4.0.0 - 2021-01-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_1","text":"Check migration guide to see details for all breaking changes. Breaking: \"unsafe\" tags !!js/function , !!js/regexp , !!js/undefined are moved to js-yaml-js-types package. Breaking: removed safe* functions. Use load , loadAll , dump instead which are all now safe by default. yaml.DEFAULT_SAFE_SCHEMA and yaml.DEFAULT_FULL_SCHEMA are removed, use yaml.DEFAULT_SCHEMA instead. yaml.Schema.create(schema, tags) is removed, use schema.extend(tags) instead. !!binary now always mapped to Uint8Array on load. Reduced nesting of /lib folder. Parse numbers according to YAML 1.2 instead of YAML 1.1 ( 01234 is now decimal, 0o1234 is octal, 1:23 is parsed as string instead of base60). dump() no longer quotes : , [ , ] , ( , ) except when necessary, #470, #557. Line and column in exceptions are now formatted as (X:Y) instead of at line X, column Y (also present in compact format), #332. Code snippet created in exceptions now contains multiple lines with line numbers. dump() now serializes undefined as null in collections and removes keys with undefined in mappings, #571. dump() with skipInvalid=true now serializes invalid items in collections as null. Custom tags starting with ! are now dumped as !tag instead of !<!tag> , #576. Custom tags starting with tag:yaml.org,2002: are now shorthanded using !! , #258.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_1","text":"Added .mjs (es modules) support. Added quotingType and forceQuotes options for dumper to configure string literal style, #290, #529. Added styles: { '!!null': 'empty' } option for dumper (serializes { foo: null } as \" foo: \"), #570. Added replacer option (similar to option in JSON.stringify), #339. Custom Tag can now handle all tags or multiple tags with the same prefix, #385.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed","text":"Astral characters are no longer encoded by dump() , #587. \"duplicate mapping key\" exception now points at the correct column, #452. Extra commas in flow collections (e.g. [foo,,bar] ) now throw an exception instead of producing null, #321. __proto__ key no longer overrides object prototype, #164. Removed bower.json . Tags are now url-decoded in load() and url-encoded in dump() (previously usage of custom non-ascii tags may have led to invalid YAML that can't be parsed). Anchors now work correctly with empty nodes, #301. Fix incorrect parsing of invalid block mapping syntax, #418. Throw an error if block sequence/mapping indent contains a tab, #80.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3141-2020-12-07","text":"","title":"[3.14.1] - 2020-12-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#security","text":"Fix possible code execution in (already unsafe) .load() (in &anchor).","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3140-2020-05-22","text":"","title":"3.14.0 - 2020-05-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_2","text":"Support safe/loadAll(input, options) variant of call. CI: drop outdated nodejs versions. Dev deps bump.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_1","text":"Quote = in plain scalars #519. Check the node type for !<?> tag in case user manually specifies it. Verify that there are no null-bytes in input. Fix wrong quote position when writing condensed flow, #526.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3131-2019-04-05","text":"","title":"3.13.1 - 2019-04-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#security_1","text":"Fix possible code execution in (already unsafe) .load() , #480.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3130-2019-03-20","text":"","title":"3.13.0 - 2019-03-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#security_2","text":"Security fix: safeLoad() can hang when arrays with nested refs used as key. Now throws exception for nested arrays. #475.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3122-2019-02-26","text":"","title":"3.12.2 - 2019-02-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_2","text":"Fix noArrayIndent option for root level, #468.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3121-2019-01-05","text":"","title":"3.12.1 - 2019-01-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_2","text":"Added noArrayIndent option, #432.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3120-2018-06-02","text":"","title":"3.12.0 - 2018-06-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_3","text":"Support arrow functions without a block statement, #421.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3110-2018-03-05","text":"","title":"3.11.0 - 2018-03-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_3","text":"Add arrow functions suport for !!js/function .","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_3","text":"Fix dump in bin/octal/hex formats for negative integers, #399.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#3100-2017-09-10","text":"","title":"3.10.0 - 2017-09-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_4","text":"Fix condenseFlow output (quote keys for sure, instead of spaces), #371, #370. Dump astrals as codepoints instead of surrogate pair, #368.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#391-2017-07-08","text":"","title":"3.9.1 - 2017-07-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_5","text":"Ensure stack is present for custom errors in node 7.+, #351.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#390-2017-07-08","text":"","title":"3.9.0 - 2017-07-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_4","text":"Add condenseFlow option (to create pretty URL query params), #346.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_6","text":"Support array return from safeLoadAll/loadAll, #350.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#384-2017-05-08","text":"","title":"3.8.4 - 2017-05-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_7","text":"Dumper: prevent space after dash for arrays that wrap, #343.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#383-2017-04-05","text":"","title":"3.8.3 - 2017-04-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_8","text":"Should not allow numbers to begin and end with underscore, #335.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#382-2017-03-02","text":"","title":"3.8.2 - 2017-03-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_9","text":"Fix !!float 123 (integers) parse, #333. Don't allow leading zeros in floats (except 0, 0.xxx). Allow positive exponent without sign in floats.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#381-2017-02-07","text":"","title":"3.8.1 - 2017-02-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_4","text":"Maintenance: update browserified build.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#380-2017-02-07","text":"","title":"3.8.0 - 2017-02-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_10","text":"Fix reported position for duplicated mapping key errors. Now points to block start instead of block end. (#243, thanks to @shockey).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#370-2016-11-12","text":"","title":"3.7.0 - 2016-11-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_5","text":"Support polymorphism for tags (#300, thanks to @monken).","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_11","text":"Fix parsing of quotes followed by newlines (#304, thanks to @dplepage).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#361-2016-05-11","text":"","title":"3.6.1 - 2016-05-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_12","text":"Fix output cut on a pipe, #286.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#360-2016-04-16","text":"","title":"3.6.0 - 2016-04-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_13","text":"Dumper rewrite, fix multiple bugs with trailing \\n . Big thanks to @aepsilon! Loader: fix leading/trailing newlines in block scalars, @aepsilon.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#355-2016-03-17","text":"","title":"3.5.5 - 2016-03-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_14","text":"Date parse fix: don't allow dates with on digit in month and day, #268.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#354-2016-03-09","text":"","title":"3.5.4 - 2016-03-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_6","text":"noCompatMode for dumper, to disable quoting YAML 1.1 values.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#353-2016-02-11","text":"","title":"3.5.3 - 2016-02-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_5","text":"Maintenance release.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#352-2016-01-11","text":"","title":"3.5.2 - 2016-01-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_6","text":"Maintenance: missed comma in bower config.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#351-2016-01-11","text":"","title":"3.5.1 - 2016-01-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_7","text":"Removed inherit dependency, #239. Better browserify workaround for esprima load. Demo rewrite.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#350-2016-01-10","text":"","title":"3.5.0 - 2016-01-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_15","text":"Dumper. Fold strings only, #217. Dumper. norefs option, to clone linked objects, #229. Loader. Throw a warning for duplicate keys, #166. Improved browserify support (mark esprima & Buffer excluded).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#346-2015-11-26","text":"","title":"3.4.6 - 2015-11-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_8","text":"Use standalone inherit to keep browserified files clear.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#345-2015-11-23","text":"","title":"3.4.5 - 2015-11-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_7","text":"Added lineWidth option to dumper.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#344-2015-11-21","text":"","title":"3.4.4 - 2015-11-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_16","text":"Fixed floats dump (missed dot for scientific format), #220. Allow non-printable characters inside quoted scalars, #192.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#343-2015-10-10","text":"","title":"3.4.3 - 2015-10-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_9","text":"Maintenance release - deps bump (esprima, argparse).","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#342-2015-09-09","text":"","title":"3.4.2 - 2015-09-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_17","text":"Fixed serialization of duplicated entries in sequences, #205. Thanks to @vogelsgesang.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#341-2015-09-05","text":"","title":"3.4.1 - 2015-09-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_18","text":"Fixed stacktrace handling in generated errors, for browsers (FF/IE).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#340-2015-08-23","text":"","title":"3.4.0 - 2015-08-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_10","text":"Don't throw on warnings anymore. Use onWarning option to catch. Throw error on unknown tags (was warning before). Reworked internals of error class.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_19","text":"Fixed multiline keys dump, #197. Thanks to @tcr. Fixed heading line breaks in some scalars (regression).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#331-2015-05-13","text":"","title":"3.3.1 - 2015-05-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_8","text":"Added .sortKeys dumper option, thanks to @rjmunro.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_20","text":"Fixed astral characters support, #191.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#330-2015-04-26","text":"","title":"3.3.0 - 2015-04-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_11","text":"Significantly improved long strings formatting in dumper, thanks to @isaacs. Strip BOM if exists.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#327-2015-02-19","text":"","title":"3.2.7 - 2015-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_12","text":"Maintenance release. Updated dependencies. HISTORY.md -> CHANGELOG.md","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#326-2015-02-07","text":"","title":"3.2.6 - 2015-02-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_21","text":"Fixed encoding of UTF-16 surrogate pairs. (e.g. \"\\U0001F431\" CAT FACE). Fixed demo dates dump (#113, thanks to @Hypercubed).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#325-2014-12-28","text":"","title":"3.2.5 - 2014-12-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_22","text":"Fixed resolving of all built-in types on empty nodes. Fixed invalid warning on empty lines within quoted scalars and flow collections. Fixed bug: Tag on an empty node didn't resolve in some cases.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#324-2014-12-19","text":"","title":"3.2.4 - 2014-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_23","text":"Fixed resolving of !!null tag on an empty node.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#323-2014-11-08","text":"","title":"3.2.3 - 2014-11-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_24","text":"Implemented dumping of objects with circular and cross references. Partially fixed aliasing of constructed objects. (see issue #141 for details)","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#322-2014-09-07","text":"","title":"3.2.2 - 2014-09-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_25","text":"Fixed infinite loop on unindented block scalars. Rewritten base64 encode/decode in binary type, to keep code licence clear.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#321-2014-08-24","text":"","title":"3.2.1 - 2014-08-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_26","text":"Nothig new. Just fix npm publish error.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#320-2014-08-24","text":"","title":"3.2.0 - 2014-08-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_9","text":"Added input piping support to CLI.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_27","text":"Fixed typo, that could cause hand on initial indent (#139).","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#310-2014-07-07","text":"","title":"3.1.0 - 2014-07-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_13","text":"1.5x-2x speed boost. Removed deprecated require('xxx.yml') support. Significant code cleanup and refactoring. Internal API changed. If you used custom types - see updated examples. Others are not affected. Even if the input string has no trailing line break character, it will be parsed as if it has one. Added benchmark scripts. Moved bower files to /dist folder Bugfixes.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#302-2014-02-27","text":"","title":"3.0.2 - 2014-02-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_28","text":"Fixed bug: \"constructor\" string parsed as null .","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#301-2013-12-22","text":"","title":"3.0.1 - 2013-12-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_29","text":"Fixed parsing of literal scalars. (issue #108) Prevented adding unnecessary spaces in object dumps. (issue #68) Fixed dumping of objects with very long (> 1024 in length) keys.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#300-2013-12-16","text":"","title":"3.0.0 - 2013-12-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_14","text":"Refactored code. Changed API for custom types. Removed output colors in CLI, dump json by default. Removed big dependencies from browser version (esprima, buffer). Load esprima manually, if !!js/function needed. !!bin now returns Array in browser AMD support. Don't quote dumped strings because of - & ? (if not first char). Deprecated loading yaml files via require() , as not recommended behaviour for node.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#213-2013-10-16","text":"","title":"2.1.3 - 2013-10-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_30","text":"Fix wrong loading of empty block scalars.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#212-2013-10-07","text":"","title":"2.1.2 - 2013-10-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_31","text":"Fix unwanted line breaks in folded scalars.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#211-2013-10-02","text":"","title":"2.1.1 - 2013-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_32","text":"Dumper now respects deprecated booleans syntax from YAML 1.0/1.1 Fixed reader bug in JSON-like sequences/mappings.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#210-2013-06-05","text":"","title":"2.1.0 - 2013-06-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_10","text":"Add standard YAML schemas: Failsafe ( FAILSAFE_SCHEMA ), JSON ( JSON_SCHEMA ) and Core ( CORE_SCHEMA ). Add skipInvalid dumper option.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_15","text":"Rename DEFAULT_SCHEMA to DEFAULT_FULL_SCHEMA and SAFE_SCHEMA to DEFAULT_SAFE_SCHEMA . Use safeLoad for require extension.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_33","text":"Bug fix: export NIL constant from the public interface.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#205-2013-04-26","text":"","title":"2.0.5 - 2013-04-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#security_3","text":"Close security issue in !!js/function constructor. Big thanks to @nealpoole for security audit.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#204-2013-04-08","text":"","title":"2.0.4 - 2013-04-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_16","text":"Updated .npmignore to reduce package size","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#203-2013-02-26","text":"","title":"2.0.3 - 2013-02-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_34","text":"Fixed dumping of empty arrays ans objects. ([] and {} instead of null)","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#202-2013-02-15","text":"","title":"2.0.2 - 2013-02-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_35","text":"Fixed input validation: tabs are printable characters.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#201-2013-02-09","text":"","title":"2.0.1 - 2013-02-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_36","text":"Fixed error, when options not passed to function cass","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#200-2013-02-09","text":"","title":"2.0.0 - 2013-02-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_17","text":"Full rewrite. New architecture. Fast one-stage parsing. Changed custom types API. Added YAML dumper.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#103-2012-11-05","text":"","title":"1.0.3 - 2012-11-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_37","text":"Fixed utf-8 files loading.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#102-2012-08-02","text":"","title":"1.0.2 - 2012-08-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_38","text":"Pull out hand-written shims. Use ES5-Shims for old browsers support. See #44. Fix timstamps incorectly parsed in local time when no time part specified.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#101-2012-07-07","text":"","title":"1.0.1 - 2012-07-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_39","text":"Fixes TypeError: 'undefined' is not an object under Safari. Thanks Phuong. Fix timestamps incorrectly parsed in local time. Thanks @caolan. Closes #46.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#100-2012-07-01","text":"","title":"1.0.0 - 2012-07-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_18","text":"y , yes , n , no , on , off are not converted to Booleans anymore. Fixes #42. require(filename) now returns a single document and throws an Error if file contains more than one document. CLI was merged back from js-yaml.bin","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#037-2012-02-28","text":"","title":"0.3.7 - 2012-02-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_40","text":"Fix export of addConstructor() . Closes #39.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#036-2012-02-22","text":"","title":"0.3.6 - 2012-02-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_19","text":"Removed AMD parts - too buggy to use. Need help to rewrite from scratch","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_41","text":"Removed YUI compressor warning (renamed double variable). Closes #40.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#035-2012-01-10","text":"","title":"0.3.5 - 2012-01-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_42","text":"Workagound for .npmignore fuckup under windows. Thanks to airportyh.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#034-2011-12-24","text":"","title":"0.3.4 - 2011-12-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_43","text":"Fixes str[] for oldIEs support. Adds better has change support for browserified demo. improves compact output of Error. Closes #33.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#033-2011-12-20","text":"","title":"0.3.3 - 2011-12-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_11","text":"adds compact stringification of Errors.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_20","text":"jsyaml executable moved to separate module.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#032-2011-12-16","text":"","title":"0.3.2 - 2011-12-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_12","text":"Added jsyaml executable. Added !!js/function support. Closes #12.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_44","text":"Fixes ug with block style scalars. Closes #26. All sources are passing JSLint now. Fixes bug in Safari. Closes #28. Fixes bug in Opers. Closes #29. Improves browser support. Closes #20.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#031-2011-11-18","text":"","title":"0.3.1 - 2011-11-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_13","text":"Added AMD support for browserified version. Added permalinks for online demo YAML snippets. Now we have YPaste service, lol. Added !!js/regexp and !!js/undefined types. Partially solves #12.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_21","text":"Wrapped browserified js-yaml into closure.","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_45","text":"Fixed the resolvement of non-specific tags. Closes #17. Fixed !!set mapping. Fixed month parse in dates. Closes #19.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#030-2011-11-09","text":"","title":"0.3.0 - 2011-11-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#added_14","text":"Added browserified version. Closes #13. Added live demo of browserified version. Ported some of the PyYAML tests. See #14.","title":"Added"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_46","text":"Removed JS.Class dependency. Closes #3. Fixed timestamp bug when fraction was given.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#022-2011-11-06","text":"","title":"0.2.2 - 2011-11-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_47","text":"Fixed crash on docs without ---. Closes #8. Fixed multiline string parse Fixed tests/comments for using array as key","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#021-2011-11-02","text":"","title":"0.2.1 - 2011-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#fixed_48","text":"Fixed short file read (<4k). Closes #9.","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#020-2011-11-02","text":"","title":"0.2.0 - 2011-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/js-yaml/CHANGELOG/#changed_22","text":"First public release","title":"Changed"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/","text":"jsesc Given some data, jsesc returns a stringified representation of that data. jsesc is similar to JSON.stringify() except: it outputs JavaScript instead of JSON by default , enabling support for data structures like ES6 maps and sets; it offers many options to customize the output; its output is ASCII-safe by default , thanks to its use of escape sequences where needed. For any input, jsesc generates the shortest possible valid printable-ASCII-only output. Here\u2019s an online demo. jsesc\u2019s output can be used instead of JSON.stringify \u2019s to avoid mojibake and other encoding issues, or even to avoid errors when passing JSON-formatted data (which may contain U+2028 LINE SEPARATOR, U+2029 PARAGRAPH SEPARATOR, or lone surrogates ) to a JavaScript parser or an UTF-8 encoder. Installation Via npm : npm install jsesc In Node.js : const jsesc = require('jsesc'); API jsesc(value, options) This function takes a value and returns an escaped version of the value where any characters that are not printable ASCII symbols are escaped using the shortest possible (but valid) escape sequences for use in JavaScript strings . The first supported value type is strings: jsesc('Ich \u2665 B\u00fccher'); // \u2192 'Ich \\\\u2665 B\\\\xFCcher' jsesc('foo \ud834\udf06 bar'); // \u2192 'foo \\\\uD834\\\\uDF06 bar' Instead of a string, the value can also be an array, an object, a map, a set, or a buffer. In such cases, jsesc returns a stringified version of the value where any characters that are not printable ASCII symbols are escaped in the same way. // Escaping an array jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ]); // \u2192 '[\\'Ich \\\\u2665 B\\\\xFCcher\\',\\'foo \\\\uD834\\\\uDF06 bar\\']' // Escaping an object jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }); // \u2192 '{\\'Ich \\\\u2665 B\\\\xFCcher\\':\\'foo \\\\uD834\\\\uDF06 bar\\'}' The optional options argument accepts an object with the following options: quotes The default value for the quotes option is 'single' . This means that any occurrences of ' in the input string are escaped as \\' , so that the output can be used in a string literal wrapped in single quotes. jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.'); // \u2192 'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.' jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'single' }); // \u2192 '`Lorem` ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.' // \u2192 \"`Lorem` ipsum \\\"dolor\\\" sit \\\\'amet\\\\' etc.\" If you want to use the output as part of a string literal wrapped in double quotes, set the quotes option to 'double' . jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'double' }); // \u2192 '`Lorem` ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.' // \u2192 \"`Lorem` ipsum \\\\\\\"dolor\\\\\\\" sit 'amet' etc.\" If you want to use the output as part of a template literal (i.e. wrapped in backticks), set the quotes option to 'backtick' . jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'backtick' }); // \u2192 '\\\\`Lorem\\\\` ipsum \"dolor\" sit \\'amet\\' etc.' // \u2192 \"\\\\`Lorem\\\\` ipsum \\\"dolor\\\" sit 'amet' etc.\" // \u2192 `\\\\\\`Lorem\\\\\\` ipsum \"dolor\" sit 'amet' etc.` This setting also affects the output for arrays and objects: jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'quotes': 'double' }); // \u2192 '{\"Ich \\\\u2665 B\\\\xFCcher\":\"foo \\\\uD834\\\\uDF06 bar\"}' jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], { 'quotes': 'double' }); // \u2192 '[\"Ich \\\\u2665 B\\\\xFCcher\",\"foo \\\\uD834\\\\uDF06 bar\"]' numbers The default value for the numbers option is 'decimal' . This means that any numeric values are represented using decimal integer literals. Other valid options are binary , octal , and hexadecimal , which result in binary integer literals, octal integer literals, and hexadecimal integer literals, respectively. jsesc(42, { 'numbers': 'binary' }); // \u2192 '0b101010' jsesc(42, { 'numbers': 'octal' }); // \u2192 '0o52' jsesc(42, { 'numbers': 'decimal' }); // \u2192 '42' jsesc(42, { 'numbers': 'hexadecimal' }); // \u2192 '0x2A' wrap The wrap option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, the output is a valid JavaScript string literal wrapped in quotes. The type of quotes can be specified through the quotes setting. jsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'single', 'wrap': true }); // \u2192 '\\'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.\\'' // \u2192 \"\\'Lorem ipsum \\\"dolor\\\" sit \\\\\\'amet\\\\\\' etc.\\'\" jsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'double', 'wrap': true }); // \u2192 '\"Lorem ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.\"' // \u2192 \"\\\"Lorem ipsum \\\\\\\"dolor\\\\\\\" sit \\'amet\\' etc.\\\"\" es6 The es6 option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, any astral Unicode symbols in the input are escaped using ECMAScript 6 Unicode code point escape sequences instead of using separate escape sequences for each surrogate half. If backwards compatibility with ES5 environments is a concern, don\u2019t enable this setting. If the json setting is enabled, the value for the es6 setting is ignored (as if it was false ). // By default, the `es6` option is disabled: jsesc('foo \ud834\udf06 bar \ud83d\udca9 baz'); // \u2192 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz' // To explicitly disable it: jsesc('foo \ud834\udf06 bar \ud83d\udca9 baz', { 'es6': false }); // \u2192 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz' // To enable it: jsesc('foo \ud834\udf06 bar \ud83d\udca9 baz', { 'es6': true }); // \u2192 'foo \\\\u{1D306} bar \\\\u{1F4A9} baz' escapeEverything The escapeEverything option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, all the symbols in the output are escaped \u2014 even printable ASCII symbols. jsesc('lolwat\"foo\\'bar', { 'escapeEverything': true }); // \u2192 '\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\\\'\\\\x62\\\\x61\\\\x72' // \u2192 \"\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\'\\\\x62\\\\x61\\\\x72\" This setting also affects the output for string literals within arrays and objects. minimal The minimal option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, only a limited set of symbols in the output are escaped: U+0000 \\0 U+0008 \\b U+0009 \\t U+000A \\n U+000C \\f U+000D \\r U+005C \\\\ U+2028 \\u2028 U+2029 \\u2029 whatever symbol is being used for wrapping string literals (based on the quotes option ) lone surrogates Note: with this option enabled, jsesc output is no longer guaranteed to be ASCII-safe. jsesc('foo\\u2029bar\\nbaz\u00a9qux\ud834\udf06flops', { 'minimal': false }); // \u2192 'foo\\\\u2029bar\\\\nbaz\u00a9qux\ud834\udf06flops' isScriptContext The isScriptContext option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, occurrences of </script and </style in the output are escaped as <\\/script and <\\/style , and <!-- is escaped as \\x3C!-- (or \\u003C!-- when the json option is enabled). This setting is useful when jsesc\u2019s output ends up as part of a <script> or <style> element in an HTML document. jsesc('foo</script>bar', { 'isScriptContext': true }); // \u2192 'foo<\\\\/script>bar' compact The compact option takes a boolean value ( true or false ), and defaults to true (enabled). When enabled, the output for arrays and objects is as compact as possible; it\u2019s not formatted nicely. jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': true // this is the default }); // \u2192 '{\\'Ich \\u2665 B\\xFCcher\\':\\'foo \\uD834\\uDF06 bar\\'}' jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': false }); // \u2192 '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}' jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], { 'compact': false }); // \u2192 '[\\n\\t\\'Ich \\u2665 B\\xFCcher\\',\\n\\t\\'foo \\uD834\\uDF06 bar\\'\\n]' This setting has no effect on the output for strings. indent The indent option takes a string value, and defaults to '\\t' . When the compact setting is disabled ( false ), the value of the indent option is used to format the output for arrays and objects. jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': false, 'indent': '\\t' // this is the default }); // \u2192 '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}' jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': false, 'indent': ' ' }); // \u2192 '{\\n \\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}' jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], { 'compact': false, 'indent': ' ' }); // \u2192 '[\\n \\'Ich \\u2665 B\\xFCcher\\',\\n\\ t\\'foo \\uD834\\uDF06 bar\\'\\n]' This setting has no effect on the output for strings. indentLevel The indentLevel option takes a numeric value, and defaults to 0 . It represents the current indentation level, i.e. the number of times the value of the indent option is repeated. jsesc(['a', 'b', 'c'], { 'compact': false, 'indentLevel': 1 }); // \u2192 '[\\n\\t\\t\\'a\\',\\n\\t\\t\\'b\\',\\n\\t\\t\\'c\\'\\n\\t]' jsesc(['a', 'b', 'c'], { 'compact': false, 'indentLevel': 2 }); // \u2192 '[\\n\\t\\t\\t\\'a\\',\\n\\t\\t\\t\\'b\\',\\n\\t\\t\\t\\'c\\'\\n\\t\\t]' json The json option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, the output is valid JSON. Hexadecimal character escape sequences and the \\v or \\0 escape sequences are not used. Setting json: true implies quotes: 'double', wrap: true, es6: false , although these values can still be overridden if needed \u2014 but in such cases, the output won\u2019t be valid JSON anymore. jsesc('foo\\x00bar\\xFF\\uFFFDbaz', { 'json': true }); // \u2192 '\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"' jsesc({ 'foo\\x00bar\\xFF\\uFFFDbaz': 'foo\\x00bar\\xFF\\uFFFDbaz' }, { 'json': true }); // \u2192 '{\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\":\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"}' jsesc([ 'foo\\x00bar\\xFF\\uFFFDbaz', 'foo\\x00bar\\xFF\\uFFFDbaz' ], { 'json': true }); // \u2192 '[\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\",\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"]' // Values that are acceptable in JSON but aren\u2019t strings, arrays, or object // literals can\u2019t be escaped, so they\u2019ll just be preserved: jsesc([ 'foo\\x00bar', [1, '\u00a9', { 'foo': true, 'qux': null }], 42 ], { 'json': true }); // \u2192 '[\"foo\\\\u0000bar\",[1,\"\\\\u00A9\",{\"foo\":true,\"qux\":null}],42]' // Values that aren\u2019t allowed in JSON are run through `JSON.stringify()`: jsesc([ undefined, -Infinity ], { 'json': true }); // \u2192 '[null,null]' Note: Using this option on objects or arrays that contain non-string values relies on JSON.stringify() . For legacy environments like IE \u2264 7, use a JSON polyfill . lowercaseHex The lowercaseHex option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, any alphabetical hexadecimal digits in escape sequences as well as any hexadecimal integer literals (see the numbers option ) in the output are in lowercase. jsesc('Ich \u2665 B\u00fccher', { 'lowercaseHex': true }); // \u2192 'Ich \\\\u2665 B\\\\xfccher' // ^^ jsesc(42, { 'numbers': 'hexadecimal', 'lowercaseHex': true }); // \u2192 '0x2a' // ^^ jsesc.version A string representing the semantic version number. Using the jsesc binary To use the jsesc binary in your shell, simply install jsesc globally using npm: npm install -g jsesc After that you\u2019re able to escape strings from the command line: $ jsesc 'f\u00f6o \u2665 b\u00e5r \ud834\udf06 baz' f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz To escape arrays or objects containing string values, use the -o / --object option: $ jsesc --object '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }' {'f\\xF6o':'\\u2665','b\\xE5r':'\\uD834\\uDF06 baz'} To prettify the output in such cases, use the -p / --pretty option: $ jsesc --pretty '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }' { 'f\\xF6o': '\\u2665', 'b\\xE5r': '\\uD834\\uDF06 baz' } For valid JSON output, use the -j / --json option: $ jsesc --json --pretty '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }' { \"f\\u00F6o\": \"\\u2665\", \"b\\u00E5r\": \"\\uD834\\uDF06 baz\" } Read a local JSON file, escape any non-ASCII symbols, and save the result to a new file: $ jsesc --json --object < data-raw.json > data-escaped.json Or do the same with an online JSON file: $ curl -sL \"http://git.io/aorKgQ\" | jsesc --json --object > data-escaped.json See jsesc --help for the full list of options. Support As of v3.0.0, jsesc supports Node.js v6+ only. Older versions (up to jsesc v1.3.0) support Chrome 27, Firefox 3, Safari 4, Opera 10, IE 6, Node.js v6.0.0, Narwhal 0.3.2, RingoJS 0.8-0.11, PhantomJS 1.9.0, and Rhino 1.7RC4. Note: Using the json option on objects or arrays that contain non-string values relies on JSON.parse() . For legacy environments like IE \u2264 7, use a JSON polyfill . Author Mathias Bynens License This library is available under the MIT license.","title":"jsesc Build status Code coverage status"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#jsesc","text":"Given some data, jsesc returns a stringified representation of that data. jsesc is similar to JSON.stringify() except: it outputs JavaScript instead of JSON by default , enabling support for data structures like ES6 maps and sets; it offers many options to customize the output; its output is ASCII-safe by default , thanks to its use of escape sequences where needed. For any input, jsesc generates the shortest possible valid printable-ASCII-only output. Here\u2019s an online demo. jsesc\u2019s output can be used instead of JSON.stringify \u2019s to avoid mojibake and other encoding issues, or even to avoid errors when passing JSON-formatted data (which may contain U+2028 LINE SEPARATOR, U+2029 PARAGRAPH SEPARATOR, or lone surrogates ) to a JavaScript parser or an UTF-8 encoder.","title":"jsesc"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#installation","text":"Via npm : npm install jsesc In Node.js : const jsesc = require('jsesc');","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#jsescvalue-options","text":"This function takes a value and returns an escaped version of the value where any characters that are not printable ASCII symbols are escaped using the shortest possible (but valid) escape sequences for use in JavaScript strings . The first supported value type is strings: jsesc('Ich \u2665 B\u00fccher'); // \u2192 'Ich \\\\u2665 B\\\\xFCcher' jsesc('foo \ud834\udf06 bar'); // \u2192 'foo \\\\uD834\\\\uDF06 bar' Instead of a string, the value can also be an array, an object, a map, a set, or a buffer. In such cases, jsesc returns a stringified version of the value where any characters that are not printable ASCII symbols are escaped in the same way. // Escaping an array jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ]); // \u2192 '[\\'Ich \\\\u2665 B\\\\xFCcher\\',\\'foo \\\\uD834\\\\uDF06 bar\\']' // Escaping an object jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }); // \u2192 '{\\'Ich \\\\u2665 B\\\\xFCcher\\':\\'foo \\\\uD834\\\\uDF06 bar\\'}' The optional options argument accepts an object with the following options:","title":"jsesc(value, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#quotes","text":"The default value for the quotes option is 'single' . This means that any occurrences of ' in the input string are escaped as \\' , so that the output can be used in a string literal wrapped in single quotes. jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.'); // \u2192 'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.' jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'single' }); // \u2192 '`Lorem` ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.' // \u2192 \"`Lorem` ipsum \\\"dolor\\\" sit \\\\'amet\\\\' etc.\" If you want to use the output as part of a string literal wrapped in double quotes, set the quotes option to 'double' . jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'double' }); // \u2192 '`Lorem` ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.' // \u2192 \"`Lorem` ipsum \\\\\\\"dolor\\\\\\\" sit 'amet' etc.\" If you want to use the output as part of a template literal (i.e. wrapped in backticks), set the quotes option to 'backtick' . jsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'backtick' }); // \u2192 '\\\\`Lorem\\\\` ipsum \"dolor\" sit \\'amet\\' etc.' // \u2192 \"\\\\`Lorem\\\\` ipsum \\\"dolor\\\" sit 'amet' etc.\" // \u2192 `\\\\\\`Lorem\\\\\\` ipsum \"dolor\" sit 'amet' etc.` This setting also affects the output for arrays and objects: jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'quotes': 'double' }); // \u2192 '{\"Ich \\\\u2665 B\\\\xFCcher\":\"foo \\\\uD834\\\\uDF06 bar\"}' jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], { 'quotes': 'double' }); // \u2192 '[\"Ich \\\\u2665 B\\\\xFCcher\",\"foo \\\\uD834\\\\uDF06 bar\"]'","title":"quotes"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#numbers","text":"The default value for the numbers option is 'decimal' . This means that any numeric values are represented using decimal integer literals. Other valid options are binary , octal , and hexadecimal , which result in binary integer literals, octal integer literals, and hexadecimal integer literals, respectively. jsesc(42, { 'numbers': 'binary' }); // \u2192 '0b101010' jsesc(42, { 'numbers': 'octal' }); // \u2192 '0o52' jsesc(42, { 'numbers': 'decimal' }); // \u2192 '42' jsesc(42, { 'numbers': 'hexadecimal' }); // \u2192 '0x2A'","title":"numbers"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#wrap","text":"The wrap option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, the output is a valid JavaScript string literal wrapped in quotes. The type of quotes can be specified through the quotes setting. jsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'single', 'wrap': true }); // \u2192 '\\'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.\\'' // \u2192 \"\\'Lorem ipsum \\\"dolor\\\" sit \\\\\\'amet\\\\\\' etc.\\'\" jsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', { 'quotes': 'double', 'wrap': true }); // \u2192 '\"Lorem ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.\"' // \u2192 \"\\\"Lorem ipsum \\\\\\\"dolor\\\\\\\" sit \\'amet\\' etc.\\\"\"","title":"wrap"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#es6","text":"The es6 option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, any astral Unicode symbols in the input are escaped using ECMAScript 6 Unicode code point escape sequences instead of using separate escape sequences for each surrogate half. If backwards compatibility with ES5 environments is a concern, don\u2019t enable this setting. If the json setting is enabled, the value for the es6 setting is ignored (as if it was false ). // By default, the `es6` option is disabled: jsesc('foo \ud834\udf06 bar \ud83d\udca9 baz'); // \u2192 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz' // To explicitly disable it: jsesc('foo \ud834\udf06 bar \ud83d\udca9 baz', { 'es6': false }); // \u2192 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz' // To enable it: jsesc('foo \ud834\udf06 bar \ud83d\udca9 baz', { 'es6': true }); // \u2192 'foo \\\\u{1D306} bar \\\\u{1F4A9} baz'","title":"es6"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#escapeeverything","text":"The escapeEverything option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, all the symbols in the output are escaped \u2014 even printable ASCII symbols. jsesc('lolwat\"foo\\'bar', { 'escapeEverything': true }); // \u2192 '\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\\\'\\\\x62\\\\x61\\\\x72' // \u2192 \"\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\'\\\\x62\\\\x61\\\\x72\" This setting also affects the output for string literals within arrays and objects.","title":"escapeEverything"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#minimal","text":"The minimal option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, only a limited set of symbols in the output are escaped: U+0000 \\0 U+0008 \\b U+0009 \\t U+000A \\n U+000C \\f U+000D \\r U+005C \\\\ U+2028 \\u2028 U+2029 \\u2029 whatever symbol is being used for wrapping string literals (based on the quotes option ) lone surrogates Note: with this option enabled, jsesc output is no longer guaranteed to be ASCII-safe. jsesc('foo\\u2029bar\\nbaz\u00a9qux\ud834\udf06flops', { 'minimal': false }); // \u2192 'foo\\\\u2029bar\\\\nbaz\u00a9qux\ud834\udf06flops'","title":"minimal"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#isscriptcontext","text":"The isScriptContext option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, occurrences of </script and </style in the output are escaped as <\\/script and <\\/style , and <!-- is escaped as \\x3C!-- (or \\u003C!-- when the json option is enabled). This setting is useful when jsesc\u2019s output ends up as part of a <script> or <style> element in an HTML document. jsesc('foo</script>bar', { 'isScriptContext': true }); // \u2192 'foo<\\\\/script>bar'","title":"isScriptContext"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#compact","text":"The compact option takes a boolean value ( true or false ), and defaults to true (enabled). When enabled, the output for arrays and objects is as compact as possible; it\u2019s not formatted nicely. jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': true // this is the default }); // \u2192 '{\\'Ich \\u2665 B\\xFCcher\\':\\'foo \\uD834\\uDF06 bar\\'}' jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': false }); // \u2192 '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}' jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], { 'compact': false }); // \u2192 '[\\n\\t\\'Ich \\u2665 B\\xFCcher\\',\\n\\t\\'foo \\uD834\\uDF06 bar\\'\\n]' This setting has no effect on the output for strings.","title":"compact"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#indent","text":"The indent option takes a string value, and defaults to '\\t' . When the compact setting is disabled ( false ), the value of the indent option is used to format the output for arrays and objects. jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': false, 'indent': '\\t' // this is the default }); // \u2192 '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}' jsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, { 'compact': false, 'indent': ' ' }); // \u2192 '{\\n \\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}' jsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], { 'compact': false, 'indent': ' ' }); // \u2192 '[\\n \\'Ich \\u2665 B\\xFCcher\\',\\n\\ t\\'foo \\uD834\\uDF06 bar\\'\\n]' This setting has no effect on the output for strings.","title":"indent"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#indentlevel","text":"The indentLevel option takes a numeric value, and defaults to 0 . It represents the current indentation level, i.e. the number of times the value of the indent option is repeated. jsesc(['a', 'b', 'c'], { 'compact': false, 'indentLevel': 1 }); // \u2192 '[\\n\\t\\t\\'a\\',\\n\\t\\t\\'b\\',\\n\\t\\t\\'c\\'\\n\\t]' jsesc(['a', 'b', 'c'], { 'compact': false, 'indentLevel': 2 }); // \u2192 '[\\n\\t\\t\\t\\'a\\',\\n\\t\\t\\t\\'b\\',\\n\\t\\t\\t\\'c\\'\\n\\t\\t]'","title":"indentLevel"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#json","text":"The json option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, the output is valid JSON. Hexadecimal character escape sequences and the \\v or \\0 escape sequences are not used. Setting json: true implies quotes: 'double', wrap: true, es6: false , although these values can still be overridden if needed \u2014 but in such cases, the output won\u2019t be valid JSON anymore. jsesc('foo\\x00bar\\xFF\\uFFFDbaz', { 'json': true }); // \u2192 '\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"' jsesc({ 'foo\\x00bar\\xFF\\uFFFDbaz': 'foo\\x00bar\\xFF\\uFFFDbaz' }, { 'json': true }); // \u2192 '{\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\":\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"}' jsesc([ 'foo\\x00bar\\xFF\\uFFFDbaz', 'foo\\x00bar\\xFF\\uFFFDbaz' ], { 'json': true }); // \u2192 '[\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\",\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"]' // Values that are acceptable in JSON but aren\u2019t strings, arrays, or object // literals can\u2019t be escaped, so they\u2019ll just be preserved: jsesc([ 'foo\\x00bar', [1, '\u00a9', { 'foo': true, 'qux': null }], 42 ], { 'json': true }); // \u2192 '[\"foo\\\\u0000bar\",[1,\"\\\\u00A9\",{\"foo\":true,\"qux\":null}],42]' // Values that aren\u2019t allowed in JSON are run through `JSON.stringify()`: jsesc([ undefined, -Infinity ], { 'json': true }); // \u2192 '[null,null]' Note: Using this option on objects or arrays that contain non-string values relies on JSON.stringify() . For legacy environments like IE \u2264 7, use a JSON polyfill .","title":"json"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#lowercasehex","text":"The lowercaseHex option takes a boolean value ( true or false ), and defaults to false (disabled). When enabled, any alphabetical hexadecimal digits in escape sequences as well as any hexadecimal integer literals (see the numbers option ) in the output are in lowercase. jsesc('Ich \u2665 B\u00fccher', { 'lowercaseHex': true }); // \u2192 'Ich \\\\u2665 B\\\\xfccher' // ^^ jsesc(42, { 'numbers': 'hexadecimal', 'lowercaseHex': true }); // \u2192 '0x2a' // ^^","title":"lowercaseHex"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#jsescversion","text":"A string representing the semantic version number.","title":"jsesc.version"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#using-the-jsesc-binary","text":"To use the jsesc binary in your shell, simply install jsesc globally using npm: npm install -g jsesc After that you\u2019re able to escape strings from the command line: $ jsesc 'f\u00f6o \u2665 b\u00e5r \ud834\udf06 baz' f\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz To escape arrays or objects containing string values, use the -o / --object option: $ jsesc --object '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }' {'f\\xF6o':'\\u2665','b\\xE5r':'\\uD834\\uDF06 baz'} To prettify the output in such cases, use the -p / --pretty option: $ jsesc --pretty '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }' { 'f\\xF6o': '\\u2665', 'b\\xE5r': '\\uD834\\uDF06 baz' } For valid JSON output, use the -j / --json option: $ jsesc --json --pretty '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }' { \"f\\u00F6o\": \"\\u2665\", \"b\\u00E5r\": \"\\uD834\\uDF06 baz\" } Read a local JSON file, escape any non-ASCII symbols, and save the result to a new file: $ jsesc --json --object < data-raw.json > data-escaped.json Or do the same with an online JSON file: $ curl -sL \"http://git.io/aorKgQ\" | jsesc --json --object > data-escaped.json See jsesc --help for the full list of options.","title":"Using the jsesc binary"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#support","text":"As of v3.0.0, jsesc supports Node.js v6+ only. Older versions (up to jsesc v1.3.0) support Chrome 27, Firefox 3, Safari 4, Opera 10, IE 6, Node.js v6.0.0, Narwhal 0.3.2, RingoJS 0.8-0.11, PhantomJS 1.9.0, and Rhino 1.7RC4. Note: Using the json option on objects or arrays that contain non-string values relies on JSON.parse() . For legacy environments like IE \u2264 7, use a JSON polyfill .","title":"Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#author","text":"Mathias Bynens","title":"Author"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsesc/#license","text":"This library is available under the MIT license.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-buffer/","text":"json-buffer JSON functions that can convert buffers! JSON mangles buffers by converting to an array... which isn't helpful. json-buffers converts to base64 instead, and deconverts base64 to a buffer. var JSONB = require('json-buffer') var Buffer = require('buffer').Buffer var str = JSONB.stringify(Buffer.from('hello there!')) console.log(JSONB.parse(str)) //GET a BUFFER back License MIT","title":"json-buffer"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-buffer/#json-buffer","text":"JSON functions that can convert buffers! JSON mangles buffers by converting to an array... which isn't helpful. json-buffers converts to base64 instead, and deconverts base64 to a buffer. var JSONB = require('json-buffer') var Buffer = require('buffer').Buffer var str = JSONB.stringify(Buffer.from('hello there!')) console.log(JSONB.parse(str)) //GET a BUFFER back","title":"json-buffer"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-buffer/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-schema-traverse/","text":"json-schema-traverse Traverse JSON Schema passing each schema object to callback Install npm install json-schema-traverse Usage const traverse = require('json-schema-traverse'); const schema = { properties: { foo: {type: 'string'}, bar: {type: 'integer'} } }; traverse(schema, {cb}); // cb is called 3 times with: // 1. root schema // 2. {type: 'string'} // 3. {type: 'integer'} // Or: traverse(schema, {cb: {pre, post}}); // pre is called 3 times with: // 1. root schema // 2. {type: 'string'} // 3. {type: 'integer'} // // post is called 3 times with: // 1. {type: 'string'} // 2. {type: 'integer'} // 3. root schema Callback function cb is called for each schema object (not including draft-06 boolean schemas), including the root schema, in pre-order traversal. Schema references ($ref) are not resolved, they are passed as is. Alternatively, you can pass a {pre, post} object as cb , and then pre will be called before traversing child elements, and post will be called after all child elements have been traversed. Callback is passed these parameters: schema : the current schema object JSON pointer : from the root schema to the current schema object root schema : the schema passed to traverse object parent JSON pointer : from the root schema to the parent schema object (see below) parent keyword : the keyword inside which this schema appears (e.g. properties , anyOf , etc.) parent schema : not necessarily parent object/array; in the example above the parent schema for {type: 'string'} is the root schema index/property : index or property name in the array/object containing multiple schemas; in the example above for {type: 'string'} the property name is 'foo' Traverse objects in all unknown keywords const traverse = require('json-schema-traverse'); const schema = { mySchema: { minimum: 1, maximum: 2 } }; traverse(schema, {allKeys: true, cb}); // cb is called 2 times with: // 1. root schema // 2. mySchema Without option allKeys: true callback will be called only with root schema. License MIT","title":"json-schema-traverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-schema-traverse/#json-schema-traverse","text":"Traverse JSON Schema passing each schema object to callback","title":"json-schema-traverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-schema-traverse/#install","text":"npm install json-schema-traverse","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-schema-traverse/#usage","text":"const traverse = require('json-schema-traverse'); const schema = { properties: { foo: {type: 'string'}, bar: {type: 'integer'} } }; traverse(schema, {cb}); // cb is called 3 times with: // 1. root schema // 2. {type: 'string'} // 3. {type: 'integer'} // Or: traverse(schema, {cb: {pre, post}}); // pre is called 3 times with: // 1. root schema // 2. {type: 'string'} // 3. {type: 'integer'} // // post is called 3 times with: // 1. {type: 'string'} // 2. {type: 'integer'} // 3. root schema Callback function cb is called for each schema object (not including draft-06 boolean schemas), including the root schema, in pre-order traversal. Schema references ($ref) are not resolved, they are passed as is. Alternatively, you can pass a {pre, post} object as cb , and then pre will be called before traversing child elements, and post will be called after all child elements have been traversed. Callback is passed these parameters: schema : the current schema object JSON pointer : from the root schema to the current schema object root schema : the schema passed to traverse object parent JSON pointer : from the root schema to the parent schema object (see below) parent keyword : the keyword inside which this schema appears (e.g. properties , anyOf , etc.) parent schema : not necessarily parent object/array; in the example above the parent schema for {type: 'string'} is the root schema index/property : index or property name in the array/object containing multiple schemas; in the example above for {type: 'string'} the property name is 'foo'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-schema-traverse/#traverse-objects-in-all-unknown-keywords","text":"const traverse = require('json-schema-traverse'); const schema = { mySchema: { minimum: 1, maximum: 2 } }; traverse(schema, {allKeys: true, cb}); // cb is called 2 times with: // 1. root schema // 2. mySchema Without option allKeys: true callback will be called only with root schema.","title":"Traverse objects in all unknown keywords"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-schema-traverse/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/","text":"json-stable-stringify This is the same as https://github.com/substack/json-stable-stringify but it doesn't depend on libraries without licenses (jsonify). deterministic version of JSON.stringify() so you can get a consistent hash from stringified results You can also pass in a custom comparison function. example var stringify = require('json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; console.log(stringify(obj)); output: {\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8} methods var stringify = require('json-stable-stringify') var str = stringify(obj, opts) Return a deterministic stringified string str from the object obj . options cmp If opts is given, you can supply an opts.cmp to have a custom comparison function for object keys. Your function opts.cmp is called with these parameters: opts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue }) For example, to sort on the object key names in reverse order you could write: var stringify = require('json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; var s = stringify(obj, function (a, b) { return a.key < b.key ? 1 : -1; }); console.log(s); which results in the output string: {\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3} Or if you wanted to sort on the object values in reverse order, you could write: var stringify = require('json-stable-stringify'); var obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 }; var s = stringify(obj, function (a, b) { return a.value < b.value ? 1 : -1; }); console.log(s); which outputs: {\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10} space If you specify opts.space , it will indent the output for pretty-printing. Valid values are strings (e.g. {space: \\t} ) or a number of spaces ( {space: 3} ). For example: var obj = { b: 1, a: { foo: 'bar', and: [1, 2, 3] } }; var s = stringify(obj, { space: ' ' }); console.log(s); which outputs: { \"a\": { \"and\": [ 1, 2, 3 ], \"foo\": \"bar\" }, \"b\": 1 } replacer The replacer parameter is a function opts.replacer(key, value) that behaves the same as the replacer from the core JSON object . install With npm do: npm install json-stable-stringify license MIT","title":"json-stable-stringify"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#json-stable-stringify","text":"This is the same as https://github.com/substack/json-stable-stringify but it doesn't depend on libraries without licenses (jsonify). deterministic version of JSON.stringify() so you can get a consistent hash from stringified results You can also pass in a custom comparison function.","title":"json-stable-stringify"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#example","text":"var stringify = require('json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; console.log(stringify(obj)); output: {\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#methods","text":"var stringify = require('json-stable-stringify')","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#var-str-stringifyobj-opts","text":"Return a deterministic stringified string str from the object obj .","title":"var str = stringify(obj, opts)"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#options","text":"","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#cmp","text":"If opts is given, you can supply an opts.cmp to have a custom comparison function for object keys. Your function opts.cmp is called with these parameters: opts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue }) For example, to sort on the object key names in reverse order you could write: var stringify = require('json-stable-stringify'); var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 }; var s = stringify(obj, function (a, b) { return a.key < b.key ? 1 : -1; }); console.log(s); which results in the output string: {\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3} Or if you wanted to sort on the object values in reverse order, you could write: var stringify = require('json-stable-stringify'); var obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 }; var s = stringify(obj, function (a, b) { return a.value < b.value ? 1 : -1; }); console.log(s); which outputs: {\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}","title":"cmp"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#space","text":"If you specify opts.space , it will indent the output for pretty-printing. Valid values are strings (e.g. {space: \\t} ) or a number of spaces ( {space: 3} ). For example: var obj = { b: 1, a: { foo: 'bar', and: [1, 2, 3] } }; var s = stringify(obj, { space: ' ' }); console.log(s); which outputs: { \"a\": { \"and\": [ 1, 2, 3 ], \"foo\": \"bar\" }, \"b\": 1 }","title":"space"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#replacer","text":"The replacer parameter is a function opts.replacer(key, value) that behaves the same as the replacer from the core JSON object .","title":"replacer"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#install","text":"With npm do: npm install json-stable-stringify","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/json-stable-stringify-without-jsonify/readme/#license","text":"MIT","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/","text":"JSON5 \u2013 JSON for Humans JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files) . It is not intended to be used for machine-to-machine communication. (Keep using JSON or other file formats for that. \ud83d\ude42) JSON5 was started in 2012, and as of 2022, now gets >65M downloads/week , ranks in the top 0.1% of the most depended-upon packages on npm, and has been adopted by major projects like Chromium , Next.js , Babel , Retool , WebStorm , and more . It's also natively supported on Apple platforms like MacOS and iOS . Formally, the JSON5 Data Interchange Format is a superset of JSON (so valid JSON files will always be valid JSON5 files) that expands its syntax to include some productions from ECMAScript 5.1 (ES5). It's also a strict subset of ES5, so valid JSON5 files will always be valid ES5. This JavaScript library is a reference implementation for JSON5 parsing and serialization, and is directly used in many of the popular projects mentioned above (where e.g. extreme performance isn't necessary), but others have created many other libraries across many other platforms. Summary of Features The following ECMAScript 5.1 features, which are not supported in JSON, have been extended to JSON5. Objects Object keys may be an ECMAScript 5.1 IdentifierName . Objects may have a single trailing comma. Arrays Arrays may have a single trailing comma. Strings Strings may be single quoted. Strings may span multiple lines by escaping new line characters. Strings may include character escapes. Numbers Numbers may be hexadecimal. Numbers may have a leading or trailing decimal point. Numbers may be IEEE 754 positive infinity, negative infinity, and NaN. Numbers may begin with an explicit plus sign. Comments Single and multi-line comments are allowed. White Space Additional white space characters are allowed. Example Kitchen-sink example: { // comments unquoted: 'and you can quote me on that', singleQuotes: 'I can use \"double quotes\" here', lineBreaks: \"Look, Mom! \\ No \\\\n's!\", hexadecimal: 0xdecaf, leadingDecimalPoint: .8675309, andTrailing: 8675309., positiveSign: +1, trailingComma: 'in objects', andIn: ['arrays',], \"backwardsCompatible\": \"with JSON\", } A more real-world example is this config file from the Chromium/Blink project. Specification For a detailed explanation of the JSON5 format, please read the official specification . Installation and Usage Node.js npm install json5 CommonJS const JSON5 = require('json5') Modules import JSON5 from 'json5' Browsers UMD <!-- This will create a global `JSON5` variable. --> <script src=\"https://unpkg.com/json5@2/dist/index.min.js\"></script> Modules <script type=\"module\"> import JSON5 from 'https://unpkg.com/json5@2/dist/index.min.mjs' </script> API The JSON5 API is compatible with the JSON API . JSON5.parse() Parses a JSON5 string, constructing the JavaScript value or object described by the string. An optional reviver function can be provided to perform a transformation on the resulting object before it is returned. Syntax JSON5.parse(text[, reviver]) Parameters text : The string to parse as JSON5. reviver : If a function, this prescribes how the value originally produced by parsing is transformed, before being returned. Return value The object corresponding to the given JSON5 text. JSON5.stringify() Converts a JavaScript value to a JSON5 string, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified. Syntax JSON5.stringify(value[, replacer[, space]]) JSON5.stringify(value[, options]) Parameters value : The value to convert to a JSON5 string. replacer : A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON5 string. If this value is null or not provided, all properties of the object are included in the resulting JSON5 string. space : A String or Number object that's used to insert white space into the output JSON5 string for readability purposes. If this is a Number, it indicates the number of space characters to use as white space; this number is capped at 10 (if it is greater, the value is just 10). Values less than 1 indicate that no space should be used. If this is a String, the string (or the first 10 characters of the string, if it's longer than that) is used as white space. If this parameter is not provided (or is null), no white space is used. If white space is used, trailing commas will be used in objects and arrays. options : An object with the following properties: replacer : Same as the replacer parameter. space : Same as the space parameter. quote : A String representing the quote character to use when serializing strings. Return value A JSON5 string representing the value. Node.js require() JSON5 files When using Node.js, you can require() JSON5 files by adding the following statement. require('json5/lib/register') Then you can load a JSON5 file with a Node.js require() statement. For example: const config = require('./config.json5') CLI Since JSON is more widely used than JSON5, this package includes a CLI for converting JSON5 to JSON and for validating the syntax of JSON5 documents. Installation npm install --global json5 Usage json5 [options] <file> If <file> is not provided, then STDIN is used. Options: -s , --space : The number of spaces to indent or t for tabs -o , --out-file [file] : Output to the specified file, otherwise STDOUT -v , --validate : Validate JSON5 but do not output JSON -V , --version : Output the version number -h , --help : Output usage information Contributing Development git clone https://github.com/json5/json5 cd json5 npm install When contributing code, please write relevant tests and run npm test and npm run lint before submitting pull requests. Please use an editor that supports EditorConfig . Issues To report bugs or request features regarding the JSON5 data format , please submit an issue to the official specification repository . Note that we will never add any features that make JSON5 incompatible with ES5; that compatibility is a fundamental premise of JSON5. To report bugs or request features regarding this JavaScript implementation of JSON5, please submit an issue to this repository . Security Vulnerabilities and Disclosures To report a security vulnerability, please follow the follow the guidelines described in our security policy . License MIT. See LICENSE.md for details. Credits Aseem Kishore founded this project. He wrote a blog post about the journey and lessons learned 10 years in. Michael Bolin independently arrived at and published some of these same ideas with awesome explanations and detail. Recommended reading: Suggested Improvements to JSON Douglas Crockford of course designed and built JSON, but his state machine diagrams on the JSON website , as cheesy as it may sound, gave us motivation and confidence that building a new parser to implement these ideas was within reach! The original implementation of JSON5 was also modeled directly off of Doug\u2019s open-source json_parse.js parser. We\u2019re grateful for that clean and well-documented code. Max Nanasy has been an early and prolific supporter, contributing multiple patches and ideas. Andrew Eisenberg contributed the original stringify method. Jordan Tucker has aligned JSON5 more closely with ES5, wrote the official JSON5 specification, completely rewrote the codebase from the ground up, and is actively maintaining this project.","title":"JSON5 \u2013 JSON for Humans"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#json5-json-for-humans","text":"JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files) . It is not intended to be used for machine-to-machine communication. (Keep using JSON or other file formats for that. \ud83d\ude42) JSON5 was started in 2012, and as of 2022, now gets >65M downloads/week , ranks in the top 0.1% of the most depended-upon packages on npm, and has been adopted by major projects like Chromium , Next.js , Babel , Retool , WebStorm , and more . It's also natively supported on Apple platforms like MacOS and iOS . Formally, the JSON5 Data Interchange Format is a superset of JSON (so valid JSON files will always be valid JSON5 files) that expands its syntax to include some productions from ECMAScript 5.1 (ES5). It's also a strict subset of ES5, so valid JSON5 files will always be valid ES5. This JavaScript library is a reference implementation for JSON5 parsing and serialization, and is directly used in many of the popular projects mentioned above (where e.g. extreme performance isn't necessary), but others have created many other libraries across many other platforms.","title":"JSON5 \u2013 JSON for Humans"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#summary-of-features","text":"The following ECMAScript 5.1 features, which are not supported in JSON, have been extended to JSON5.","title":"Summary of Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#objects","text":"Object keys may be an ECMAScript 5.1 IdentifierName . Objects may have a single trailing comma.","title":"Objects"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#arrays","text":"Arrays may have a single trailing comma.","title":"Arrays"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#strings","text":"Strings may be single quoted. Strings may span multiple lines by escaping new line characters. Strings may include character escapes.","title":"Strings"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#numbers","text":"Numbers may be hexadecimal. Numbers may have a leading or trailing decimal point. Numbers may be IEEE 754 positive infinity, negative infinity, and NaN. Numbers may begin with an explicit plus sign.","title":"Numbers"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#comments","text":"Single and multi-line comments are allowed.","title":"Comments"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#white-space","text":"Additional white space characters are allowed.","title":"White Space"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#example","text":"Kitchen-sink example: { // comments unquoted: 'and you can quote me on that', singleQuotes: 'I can use \"double quotes\" here', lineBreaks: \"Look, Mom! \\ No \\\\n's!\", hexadecimal: 0xdecaf, leadingDecimalPoint: .8675309, andTrailing: 8675309., positiveSign: +1, trailingComma: 'in objects', andIn: ['arrays',], \"backwardsCompatible\": \"with JSON\", } A more real-world example is this config file from the Chromium/Blink project.","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#specification","text":"For a detailed explanation of the JSON5 format, please read the official specification .","title":"Specification"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#installation-and-usage","text":"","title":"Installation and Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#nodejs","text":"npm install json5","title":"Node.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#commonjs","text":"const JSON5 = require('json5')","title":"CommonJS"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#modules","text":"import JSON5 from 'json5'","title":"Modules"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#browsers","text":"","title":"Browsers"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#umd","text":"<!-- This will create a global `JSON5` variable. --> <script src=\"https://unpkg.com/json5@2/dist/index.min.js\"></script>","title":"UMD"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#modules_1","text":"<script type=\"module\"> import JSON5 from 'https://unpkg.com/json5@2/dist/index.min.mjs' </script>","title":"Modules"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#api","text":"The JSON5 API is compatible with the JSON API .","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#json5parse","text":"Parses a JSON5 string, constructing the JavaScript value or object described by the string. An optional reviver function can be provided to perform a transformation on the resulting object before it is returned.","title":"JSON5.parse()"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#syntax","text":"JSON5.parse(text[, reviver])","title":"Syntax"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#parameters","text":"text : The string to parse as JSON5. reviver : If a function, this prescribes how the value originally produced by parsing is transformed, before being returned.","title":"Parameters"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#return-value","text":"The object corresponding to the given JSON5 text.","title":"Return value"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#json5stringify","text":"Converts a JavaScript value to a JSON5 string, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.","title":"JSON5.stringify()"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#syntax_1","text":"JSON5.stringify(value[, replacer[, space]]) JSON5.stringify(value[, options])","title":"Syntax"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#parameters_1","text":"value : The value to convert to a JSON5 string. replacer : A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON5 string. If this value is null or not provided, all properties of the object are included in the resulting JSON5 string. space : A String or Number object that's used to insert white space into the output JSON5 string for readability purposes. If this is a Number, it indicates the number of space characters to use as white space; this number is capped at 10 (if it is greater, the value is just 10). Values less than 1 indicate that no space should be used. If this is a String, the string (or the first 10 characters of the string, if it's longer than that) is used as white space. If this parameter is not provided (or is null), no white space is used. If white space is used, trailing commas will be used in objects and arrays. options : An object with the following properties: replacer : Same as the replacer parameter. space : Same as the space parameter. quote : A String representing the quote character to use when serializing strings.","title":"Parameters"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#return-value_1","text":"A JSON5 string representing the value.","title":"Return value"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#nodejs-require-json5-files","text":"When using Node.js, you can require() JSON5 files by adding the following statement. require('json5/lib/register') Then you can load a JSON5 file with a Node.js require() statement. For example: const config = require('./config.json5')","title":"Node.js require() JSON5 files"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#cli","text":"Since JSON is more widely used than JSON5, this package includes a CLI for converting JSON5 to JSON and for validating the syntax of JSON5 documents.","title":"CLI"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#installation","text":"npm install --global json5","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#usage","text":"json5 [options] <file> If <file> is not provided, then STDIN is used.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#options","text":"-s , --space : The number of spaces to indent or t for tabs -o , --out-file [file] : Output to the specified file, otherwise STDOUT -v , --validate : Validate JSON5 but do not output JSON -V , --version : Output the version number -h , --help : Output usage information","title":"Options:"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#contributing","text":"","title":"Contributing"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#development","text":"git clone https://github.com/json5/json5 cd json5 npm install When contributing code, please write relevant tests and run npm test and npm run lint before submitting pull requests. Please use an editor that supports EditorConfig .","title":"Development"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#issues","text":"To report bugs or request features regarding the JSON5 data format , please submit an issue to the official specification repository . Note that we will never add any features that make JSON5 incompatible with ES5; that compatibility is a fundamental premise of JSON5. To report bugs or request features regarding this JavaScript implementation of JSON5, please submit an issue to this repository .","title":"Issues"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#security-vulnerabilities-and-disclosures","text":"To report a security vulnerability, please follow the follow the guidelines described in our security policy .","title":"Security Vulnerabilities and Disclosures"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#license","text":"MIT. See LICENSE.md for details.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/#credits","text":"Aseem Kishore founded this project. He wrote a blog post about the journey and lessons learned 10 years in. Michael Bolin independently arrived at and published some of these same ideas with awesome explanations and detail. Recommended reading: Suggested Improvements to JSON Douglas Crockford of course designed and built JSON, but his state machine diagrams on the JSON website , as cheesy as it may sound, gave us motivation and confidence that building a new parser to implement these ideas was within reach! The original implementation of JSON5 was also modeled directly off of Doug\u2019s open-source json_parse.js parser. We\u2019re grateful for that clean and well-documented code. Max Nanasy has been an early and prolific supporter, contributing multiple patches and ideas. Andrew Eisenberg contributed the original stringify method. Jordan Tucker has aligned JSON5 more closely with ES5, wrote the official JSON5 specification, completely rewrote the codebase from the ground up, and is actively maintaining this project.","title":"Credits"},{"location":"_Disciplina/Code/my-react-app/node_modules/json5/LICENSE/","text":"MIT License Copyright (c) 2012-2018 Aseem Kishore, and others . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/","text":"jsx-ast-utils [![Version Badge][npm-version-svg]][package-url] [![dependency status][deps-svg]][deps-url] [![dev dependency status][dev-deps-svg]][dev-deps-url] [![npm badge][npm-badge-png]][package-url] AST utility module for statically analyzing JSX. Installation $ npm i jsx-ast-utils --save Usage This is a utility module to evaluate AST objects for JSX syntax. This can be super useful when writing linting rules for JSX code. It was originally in the code for eslint-plugin-jsx-a11y , however I thought it could be useful to be extracted and maintained separately so you could write new interesting rules to statically analyze JSX. ESLint example import { hasProp } from 'jsx-ast-utils'; // OR: var hasProp = require('jsx-ast-utils').hasProp; // OR: const hasProp = require('jsx-ast-utils/hasProp'); // OR: import hasProp from 'jsx-ast-utils/hasProp'; module.exports = context => ({ JSXOpeningElement: node => { const onChange = hasProp(node.attributes, 'onChange'); if (onChange) { context.report({ node, message: `No onChange!` }); } } }); API AST Resources JSX spec JS spec hasProp hasProp(props, prop, options); Returns boolean indicating whether an prop exists as an attribute on a JSX element node. Props Object - The attributes on the visited node. (Usually node.attributes ). Prop String - A string representation of the prop you want to check for existence. Options Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . 2. spreadStrict - automatically set to true . This means if spread operator exists in props, it will assume the prop you are looking for is not in the spread. Example: <div {...props} /> looking for specific prop here will return false if spreadStrict is true . hasAnyProp hasAnyProp(props, prop, options); Returns a boolean indicating if any of props in prop argument exist on the node. Props Object - The attributes on the visited node. (Usually node.attributes ). Prop Array - An array of strings representing the props you want to check for existence. Options Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . 2. spreadStrict - automatically set to true . This means if spread operator exists in props, it will assume the prop you are looking for is not in the spread. Example: <div {...props} /> looking for specific prop here will return false if spreadStrict is true . hasEveryProp hasEveryProp(props, prop, options); Returns a boolean indicating if all of props in prop argument exist on the node. Props Object - The attributes on the visited node. (Usually node.attributes ). Prop Array - An array of strings representing the props you want to check for existence. Options Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . 2. spreadStrict - automatically set to true . This means if spread operator exists in props, it will assume the prop you are looking for is not in the spread. Example: <div {...props} /> looking for specific prop here will return false if spreadStrict is true . getProp getProp(props, prop, options); Returns the JSXAttribute itself or undefined, indicating the prop is not present on the JSXOpeningElement. Props Object - The attributes on the visited node. (Usually node.attributes ). Prop String - A string representation of the prop you want to check for existence. Options Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . elementType elementType(node) Returns the tagName associated with a JSXElement. Node Object - The visited JSXElement node object. getPropValue getPropValue(prop); Returns the value of a given attribute. Different types of attributes have their associated values in different properties on the object. This function should return the most closely associated value with the intention of the JSX. Prop Object - The JSXAttribute collected by AST parser. getLiteralPropValue getLiteralPropValue(prop); Returns the value of a given attribute. Different types of attributes have their associated values in different properties on the object. This function should return a value only if we can extract a literal value from its attribute (i.e. values that have generic types in JavaScript - strings, numbers, booleans, etc.) Prop Object - The JSXAttribute collected by AST parser. propName propName(prop); Returns the name associated with a JSXAttribute. For example, given <div foo=\"bar\" /> and the JSXAttribute for foo , this will return the string \"foo\" . Prop Object - The JSXAttribute collected by AST parser. eventHandlers console.log(eventHandlers); /* [ 'onCopy', 'onCut', 'onPaste', 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onFocus', 'onBlur', 'onChange', 'onInput', 'onSubmit', 'onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onSelect', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'onScroll', 'onWheel', 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting', 'onLoad', 'onError', 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration', 'onTransitionEnd', ] */ Contains a flat list of common event handler props used in JSX to attach behaviors to DOM events. eventHandlersByType The same list as eventHandlers , grouped into types. console.log(eventHandlersByType); /* { clipboard: [ 'onCopy', 'onCut', 'onPaste' ], composition: [ 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate' ], keyboard: [ 'onKeyDown', 'onKeyPress', 'onKeyUp' ], focus: [ 'onFocus', 'onBlur' ], form: [ 'onChange', 'onInput', 'onSubmit' ], mouse: [ 'onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp' ], selection: [ 'onSelect' ], touch: [ 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart' ], ui: [ 'onScroll' ], wheel: [ 'onWheel' ], media: [ 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting' ], image: [ 'onLoad', 'onError' ], animation: [ 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration' ], transition: [ 'onTransitionEnd' ], } */","title":"jsx-ast-utils [![Version Badge][npm-version-svg]][package-url]"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#jsx-ast-utils-version-badgenpm-version-svgpackage-url","text":"[![dependency status][deps-svg]][deps-url] [![dev dependency status][dev-deps-svg]][dev-deps-url] [![npm badge][npm-badge-png]][package-url] AST utility module for statically analyzing JSX.","title":"jsx-ast-utils [![Version Badge][npm-version-svg]][package-url]"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#installation","text":"$ npm i jsx-ast-utils --save","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#usage","text":"This is a utility module to evaluate AST objects for JSX syntax. This can be super useful when writing linting rules for JSX code. It was originally in the code for eslint-plugin-jsx-a11y , however I thought it could be useful to be extracted and maintained separately so you could write new interesting rules to statically analyze JSX.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#eslint-example","text":"import { hasProp } from 'jsx-ast-utils'; // OR: var hasProp = require('jsx-ast-utils').hasProp; // OR: const hasProp = require('jsx-ast-utils/hasProp'); // OR: import hasProp from 'jsx-ast-utils/hasProp'; module.exports = context => ({ JSXOpeningElement: node => { const onChange = hasProp(node.attributes, 'onChange'); if (onChange) { context.report({ node, message: `No onChange!` }); } } });","title":"ESLint example"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#ast-resources","text":"JSX spec JS spec","title":"AST Resources"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#hasprop","text":"hasProp(props, prop, options); Returns boolean indicating whether an prop exists as an attribute on a JSX element node.","title":"hasProp"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#props","text":"Object - The attributes on the visited node. (Usually node.attributes ).","title":"Props"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop","text":"String - A string representation of the prop you want to check for existence.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#options","text":"Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . 2. spreadStrict - automatically set to true . This means if spread operator exists in props, it will assume the prop you are looking for is not in the spread. Example: <div {...props} /> looking for specific prop here will return false if spreadStrict is true .","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#hasanyprop","text":"hasAnyProp(props, prop, options); Returns a boolean indicating if any of props in prop argument exist on the node.","title":"hasAnyProp"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#props_1","text":"Object - The attributes on the visited node. (Usually node.attributes ).","title":"Props"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop_1","text":"Array - An array of strings representing the props you want to check for existence.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#options_1","text":"Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . 2. spreadStrict - automatically set to true . This means if spread operator exists in props, it will assume the prop you are looking for is not in the spread. Example: <div {...props} /> looking for specific prop here will return false if spreadStrict is true .","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#haseveryprop","text":"hasEveryProp(props, prop, options); Returns a boolean indicating if all of props in prop argument exist on the node.","title":"hasEveryProp"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#props_2","text":"Object - The attributes on the visited node. (Usually node.attributes ).","title":"Props"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop_2","text":"Array - An array of strings representing the props you want to check for existence.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#options_2","text":"Object - An object representing options for existence checking 1. ignoreCase - automatically set to true . 2. spreadStrict - automatically set to true . This means if spread operator exists in props, it will assume the prop you are looking for is not in the spread. Example: <div {...props} /> looking for specific prop here will return false if spreadStrict is true .","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#getprop","text":"getProp(props, prop, options); Returns the JSXAttribute itself or undefined, indicating the prop is not present on the JSXOpeningElement.","title":"getProp"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#props_3","text":"Object - The attributes on the visited node. (Usually node.attributes ).","title":"Props"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop_3","text":"String - A string representation of the prop you want to check for existence.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#options_3","text":"Object - An object representing options for existence checking 1. ignoreCase - automatically set to true .","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#elementtype","text":"elementType(node) Returns the tagName associated with a JSXElement.","title":"elementType"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#node","text":"Object - The visited JSXElement node object.","title":"Node"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#getpropvalue","text":"getPropValue(prop); Returns the value of a given attribute. Different types of attributes have their associated values in different properties on the object. This function should return the most closely associated value with the intention of the JSX.","title":"getPropValue"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop_4","text":"Object - The JSXAttribute collected by AST parser.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#getliteralpropvalue","text":"getLiteralPropValue(prop); Returns the value of a given attribute. Different types of attributes have their associated values in different properties on the object. This function should return a value only if we can extract a literal value from its attribute (i.e. values that have generic types in JavaScript - strings, numbers, booleans, etc.)","title":"getLiteralPropValue"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop_5","text":"Object - The JSXAttribute collected by AST parser.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#propname","text":"propName(prop); Returns the name associated with a JSXAttribute. For example, given <div foo=\"bar\" /> and the JSXAttribute for foo , this will return the string \"foo\" .","title":"propName"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#prop_6","text":"Object - The JSXAttribute collected by AST parser.","title":"Prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#eventhandlers","text":"console.log(eventHandlers); /* [ 'onCopy', 'onCut', 'onPaste', 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onFocus', 'onBlur', 'onChange', 'onInput', 'onSubmit', 'onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onSelect', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'onScroll', 'onWheel', 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting', 'onLoad', 'onError', 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration', 'onTransitionEnd', ] */ Contains a flat list of common event handler props used in JSX to attach behaviors to DOM events.","title":"eventHandlers"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/#eventhandlersbytype","text":"The same list as eventHandlers , grouped into types. console.log(eventHandlersByType); /* { clipboard: [ 'onCopy', 'onCut', 'onPaste' ], composition: [ 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate' ], keyboard: [ 'onKeyDown', 'onKeyPress', 'onKeyUp' ], focus: [ 'onFocus', 'onBlur' ], form: [ 'onChange', 'onInput', 'onSubmit' ], mouse: [ 'onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp' ], selection: [ 'onSelect' ], touch: [ 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart' ], ui: [ 'onScroll' ], wheel: [ 'onWheel' ], media: [ 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting' ], image: [ 'onLoad', 'onError' ], animation: [ 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration' ], transition: [ 'onTransitionEnd' ], } */","title":"eventHandlersByType"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v3.3.5 - 2023-07-28 Fixed [Fix] extractProp : support JSXFragment #132 Commits [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , eslint e5555d1 [Tests] fix a test bde3ba9 v3.3.4 - 2023-06-28 Commits [Refactor] use array.prototype.flat object.values over .reduce bad51d0 [meta] add auto-changelog af1de69 [Tests] add test for import.meta 1d39f58 [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , aud , eslint , eslint-plugin-import 3baaf76 [Fix] TSNonNullExpression : Handle function calls 26cc3c4 [Dev Deps] update eslint , @babel/core , @babel/parser , object.entries , object.fromentries 0e4f80c [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , aud b5427a6 [meta] run build in prepack, not prepublish a0f4f38 [Deps] update array-includes c479841 [Deps] update object.assign 9685dce 3.3.3 / 2022-08-08 [Fix] Mark ChainExpression as a noop (#109) [Deps] update object.assign [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , eslint 3.3.2 / 2022-07-06 [Fix] Handle as casts in TSNonNullExpression 3.3.1 / 2022-06-22 [Fix] ArrayExpression : handle sparse array (#117) [Deps] update array-includes [meta] move jest config to separate file [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , eslint 3.3.0 / 2022-04-30 [New] add JSXFragment , JSXText ; fix JSXElement to handle children [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-plugin-import 3.2.2 / 2022-03-31 [Fix] TSNonNullExpression : handle computed MemberExpressions (#109) [Fix] avoid a crash in ChainExpressions in a TSAsExpression 3.2.1 / 2021-09-16 [patch] include project name in error logging (#113) [readme] update badges, URLs [Deps] update array-includes [meta] don\u2018t lint coverage results [meta] add GitHub org to FUNDING.yml [meta] add OpenCollective to FUNDING.yml [meta] run aud in posttest [meta] add Automatic Rebase and Require Allow Edits workflows [actions] use node/install instead of node/run ; use codecov action [Tests] unpin caniuse-lite , since breaking change is fixed [Tests] pin caniuse-lite , due to breaking change in patch version [Tests] fix linting errors [Tests] migrate tests to Github Actions [Tests] stop using coveralls [Tests] skip failing fragment test in node 4 [Dev Deps] update @babel/core , @babel/parser , aud , eslint , eslint-plugin-import , object.entries , object.fromentries 3.2.0 / 2020-12-16 [New] add support for fragment syntax ( <> ) (#108) [Fix] TSNonNullExpression : handle ThisExpression s (#108) [Deps] update array-includes , object.assign [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-config-airbnb-base , object.entries , object.fromentries 3.1.0 / 2020-10-13 [New] add TSNonNullExpression (#105) [New] add AssignmentExpression (#106) [Dev Deps] update eslint 3.0.0 / 2020-10-06 [Breaking] Don't return node.start & node.end (#100) [Breaking] add ChainExpression ; CallExpression now includes arguments (#102) [New] add SequenceExpression (#101) [Deps] update object.assign [Dev Deps] update eslint , eslint-plugin-import [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-plugin-import [Tests] use proper actual, expected ordering for non-confusing failure messages 2.4.1 / 2020-06-11 [Fix] expressions/TemplateLiteral : use .range[0] instead of .start 2.4.0 / 2020-06-11 [New] Provide both range and start & end property on Node, support eslint v7 (#97) [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-config-airbnb-base , eslint-plugin-import , flow-parser [meta] remove yarn registry from npmrc, so npm publish works 2.3.0 / 2020-05-24 [New] add nullish coalescing (#99) [New] add OptionalCallExpression (#99) [Deps] update array-includes [meta] add safe-publish-latest [Dev Deps] update @babel/parser , babel-eslint , coveralls , eslint , eslint-config-airbnb-base , eslint-plugin-import , in-publish , object.entries , object.fromentries , rimraf [Tests] on node v14 ; test all branches 2.2.3 / 2019-10-24 (fix) Fix crash on spread (#94) 2.2.2 / 2019-10-24 (improvement) Add support for retrieving props from a spread with object expression (#93) 2.2.1 / 2019-06-30 (improvement) Account for TypeCastExpression in the utils 2.2.0 / 2019-06-25 (fix) Fix getLiteralPropValue for TS-specific node types. (chore) upgrade dependencies. (improvement) Stop throwing errors when unknown AST nodes are encountered. (dev) CI changes. 2.1.0 / 2018-04-19 Fix undefined bug for template strings. #45 Adding support for objectRestSpread within props #60 Accommodate ExperimentalSpreadProperty in prop values #75 Account for SpreadElement AST Nodes #76 Support OptionalMemberExpression AST nodes #77 Add support to Typescript's node types #72 2.0.1 / 2017-08-31 [fix] Add support for BindExpression 2.0.0 / 2017-07-07 [breaking] Remove undefined return from propName so it always returns a value. 1.4.1 / 2017-04-19 [fix] - Fixing fatal throw in getPropValue for ArrowFunctionExpression 1.4.0 / 2017-02-02 [new] Add eventHandlers and eventHandlersByType to API. These are the event names for DOM elements on JSX-using libraries such as React, inferno, and preact. 1.3.5 / 2016-12-14 [fix] Normalize literals \"true\" and \"false\" before converting to boolean in Literal prop value extractor. 1.3.4 / 2016-11-15 [fix] Recursively resolve JSXMemberExpression names for elementType. (i.e. <Component.Render.Me /> ). Fixes #9 1.3.3 / 2016-10-28 [fix] Add support for ArrayExpression . 1.3.2 / 2016-10-11 [fix] Add support for UpdateExpression . 1.3.1 / 2016-07-13 [fix] Add JSXElement to expression types to handle recursively extracting prop value. 1.3.0 / 2016-07-12 [new] Add support for TaggedTemplateExpression . 1.2.1 / 2016-06-15 [fix] Point to lib instead of src for root exports. 1.2.0 / 2016-06-15 [new] Export functions from root so they can be imported like the following: require('jsx-ast-utils/{function}') . 1.1.1 / 2016-06-12 [fix] Better support for expressions in TemplateLiteral extraction. 1.1.0 / 2016-06-10 [new] Support for namespaced element names. [new] Add propName to API to get correct name for prop. 1.0.1 / 2016-06-10 [fix] Return actual reserved words instead of string representations of them. 1.0.0 / 2016-06-09 Initial stable release","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#v335-2023-07-28","text":"","title":"v3.3.5 - 2023-07-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#fixed","text":"[Fix] extractProp : support JSXFragment #132","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#commits","text":"[Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , eslint e5555d1 [Tests] fix a test bde3ba9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#v334-2023-06-28","text":"","title":"v3.3.4 - 2023-06-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#commits_1","text":"[Refactor] use array.prototype.flat object.values over .reduce bad51d0 [meta] add auto-changelog af1de69 [Tests] add test for import.meta 1d39f58 [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , aud , eslint , eslint-plugin-import 3baaf76 [Fix] TSNonNullExpression : Handle function calls 26cc3c4 [Dev Deps] update eslint , @babel/core , @babel/parser , object.entries , object.fromentries 0e4f80c [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , aud b5427a6 [meta] run build in prepack, not prepublish a0f4f38 [Deps] update array-includes c479841 [Deps] update object.assign 9685dce","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#333-2022-08-08","text":"[Fix] Mark ChainExpression as a noop (#109) [Deps] update object.assign [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , eslint","title":"3.3.3 / 2022-08-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#332-2022-07-06","text":"[Fix] Handle as casts in TSNonNullExpression","title":"3.3.2 / 2022-07-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#331-2022-06-22","text":"[Fix] ArrayExpression : handle sparse array (#117) [Deps] update array-includes [meta] move jest config to separate file [meta] use npmignore to autogenerate an npmignore file [Dev Deps] update @babel/core , @babel/eslint-parser , @babel/parser , eslint","title":"3.3.1 / 2022-06-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#330-2022-04-30","text":"[New] add JSXFragment , JSXText ; fix JSXElement to handle children [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-plugin-import","title":"3.3.0 / 2022-04-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#322-2022-03-31","text":"[Fix] TSNonNullExpression : handle computed MemberExpressions (#109) [Fix] avoid a crash in ChainExpressions in a TSAsExpression","title":"3.2.2 / 2022-03-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#321-2021-09-16","text":"[patch] include project name in error logging (#113) [readme] update badges, URLs [Deps] update array-includes [meta] don\u2018t lint coverage results [meta] add GitHub org to FUNDING.yml [meta] add OpenCollective to FUNDING.yml [meta] run aud in posttest [meta] add Automatic Rebase and Require Allow Edits workflows [actions] use node/install instead of node/run ; use codecov action [Tests] unpin caniuse-lite , since breaking change is fixed [Tests] pin caniuse-lite , due to breaking change in patch version [Tests] fix linting errors [Tests] migrate tests to Github Actions [Tests] stop using coveralls [Tests] skip failing fragment test in node 4 [Dev Deps] update @babel/core , @babel/parser , aud , eslint , eslint-plugin-import , object.entries , object.fromentries","title":"3.2.1 / 2021-09-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#320-2020-12-16","text":"[New] add support for fragment syntax ( <> ) (#108) [Fix] TSNonNullExpression : handle ThisExpression s (#108) [Deps] update array-includes , object.assign [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-config-airbnb-base , object.entries , object.fromentries","title":"3.2.0 / 2020-12-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#310-2020-10-13","text":"[New] add TSNonNullExpression (#105) [New] add AssignmentExpression (#106) [Dev Deps] update eslint","title":"3.1.0 / 2020-10-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#300-2020-10-06","text":"[Breaking] Don't return node.start & node.end (#100) [Breaking] add ChainExpression ; CallExpression now includes arguments (#102) [New] add SequenceExpression (#101) [Deps] update object.assign [Dev Deps] update eslint , eslint-plugin-import [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-plugin-import [Tests] use proper actual, expected ordering for non-confusing failure messages","title":"3.0.0 / 2020-10-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#241-2020-06-11","text":"[Fix] expressions/TemplateLiteral : use .range[0] instead of .start","title":"2.4.1 / 2020-06-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#240-2020-06-11","text":"[New] Provide both range and start & end property on Node, support eslint v7 (#97) [Dev Deps] update @babel/core , @babel/parser , eslint , eslint-config-airbnb-base , eslint-plugin-import , flow-parser [meta] remove yarn registry from npmrc, so npm publish works","title":"2.4.0 / 2020-06-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#230-2020-05-24","text":"[New] add nullish coalescing (#99) [New] add OptionalCallExpression (#99) [Deps] update array-includes [meta] add safe-publish-latest [Dev Deps] update @babel/parser , babel-eslint , coveralls , eslint , eslint-config-airbnb-base , eslint-plugin-import , in-publish , object.entries , object.fromentries , rimraf [Tests] on node v14 ; test all branches","title":"2.3.0 / 2020-05-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#223-2019-10-24","text":"(fix) Fix crash on spread (#94)","title":"2.2.3 / 2019-10-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#222-2019-10-24","text":"(improvement) Add support for retrieving props from a spread with object expression (#93)","title":"2.2.2 / 2019-10-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#221-2019-06-30","text":"(improvement) Account for TypeCastExpression in the utils","title":"2.2.1 / 2019-06-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#220-2019-06-25","text":"(fix) Fix getLiteralPropValue for TS-specific node types. (chore) upgrade dependencies. (improvement) Stop throwing errors when unknown AST nodes are encountered. (dev) CI changes.","title":"2.2.0 / 2019-06-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#210-2018-04-19","text":"Fix undefined bug for template strings. #45 Adding support for objectRestSpread within props #60 Accommodate ExperimentalSpreadProperty in prop values #75 Account for SpreadElement AST Nodes #76 Support OptionalMemberExpression AST nodes #77 Add support to Typescript's node types #72","title":"2.1.0 / 2018-04-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#201-2017-08-31","text":"[fix] Add support for BindExpression","title":"2.0.1 / 2017-08-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#200-2017-07-07","text":"[breaking] Remove undefined return from propName so it always returns a value.","title":"2.0.0 / 2017-07-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#141-2017-04-19","text":"[fix] - Fixing fatal throw in getPropValue for ArrowFunctionExpression","title":"1.4.1 / 2017-04-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#140-2017-02-02","text":"[new] Add eventHandlers and eventHandlersByType to API. These are the event names for DOM elements on JSX-using libraries such as React, inferno, and preact.","title":"1.4.0 / 2017-02-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#135-2016-12-14","text":"[fix] Normalize literals \"true\" and \"false\" before converting to boolean in Literal prop value extractor.","title":"1.3.5 / 2016-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#134-2016-11-15","text":"[fix] Recursively resolve JSXMemberExpression names for elementType. (i.e. <Component.Render.Me /> ). Fixes #9","title":"1.3.4 / 2016-11-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#133-2016-10-28","text":"[fix] Add support for ArrayExpression .","title":"1.3.3 / 2016-10-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#132-2016-10-11","text":"[fix] Add support for UpdateExpression .","title":"1.3.2 / 2016-10-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#131-2016-07-13","text":"[fix] Add JSXElement to expression types to handle recursively extracting prop value.","title":"1.3.1 / 2016-07-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#130-2016-07-12","text":"[new] Add support for TaggedTemplateExpression .","title":"1.3.0 / 2016-07-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#121-2016-06-15","text":"[fix] Point to lib instead of src for root exports.","title":"1.2.1 / 2016-06-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#120-2016-06-15","text":"[new] Export functions from root so they can be imported like the following: require('jsx-ast-utils/{function}') .","title":"1.2.0 / 2016-06-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#111-2016-06-12","text":"[fix] Better support for expressions in TemplateLiteral extraction.","title":"1.1.1 / 2016-06-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#110-2016-06-10","text":"[new] Support for namespaced element names. [new] Add propName to API to get correct name for prop.","title":"1.1.0 / 2016-06-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#101-2016-06-10","text":"[fix] Return actual reserved words instead of string representations of them.","title":"1.0.1 / 2016-06-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/CHANGELOG/#100-2016-06-09","text":"Initial stable release","title":"1.0.0 / 2016-06-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/jsx-ast-utils/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2016 Ethan Cohen Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/","text":"Simple key-value storage with support for multiple backends Keyv provides a consistent interface for key-value storage across multiple backends via storage adapters. It supports TTL based expiry, making it suitable as a cache or a persistent key-value store. Features There are a few existing modules similar to Keyv, however Keyv is different because it: Isn't bloated Has a simple Promise based API Suitable as a TTL based cache or persistent key-value store Easily embeddable inside another module Works with any storage that implements the Map API Handles all JSON types plus Buffer Supports namespaces Wide range of efficient, well tested storage adapters Connection errors are passed through (db failures won't kill your app) Supports the current active LTS version of Node.js or higher Usage Install Keyv. npm install --save keyv By default everything is stored in memory, you can optionally also install a storage adapter. npm install --save @keyv/redis npm install --save @keyv/mongo npm install --save @keyv/sqlite npm install --save @keyv/postgres npm install --save @keyv/mysql npm install --save @keyv/etcd Create a new Keyv instance, passing your connection string if applicable. Keyv will automatically load the correct storage adapter. const Keyv = require('keyv'); // One of the following const keyv = new Keyv(); const keyv = new Keyv('redis://user:pass@localhost:6379'); const keyv = new Keyv('mongodb://user:pass@localhost:27017/dbname'); const keyv = new Keyv('sqlite://path/to/database.sqlite'); const keyv = new Keyv('postgresql://user:pass@localhost:5432/dbname'); const keyv = new Keyv('mysql://user:pass@localhost:3306/dbname'); const keyv = new Keyv('etcd://localhost:2379'); // Handle DB connection errors keyv.on('error', err => console.log('Connection Error', err)); await keyv.set('foo', 'expires in 1 second', 1000); // true await keyv.set('foo', 'never expires'); // true await keyv.get('foo'); // 'never expires' await keyv.delete('foo'); // true await keyv.clear(); // undefined Namespaces You can namespace your Keyv instance to avoid key collisions and allow you to clear only a certain namespace while using the same database. const users = new Keyv('redis://user:pass@localhost:6379', { namespace: 'users' }); const cache = new Keyv('redis://user:pass@localhost:6379', { namespace: 'cache' }); await users.set('foo', 'users'); // true await cache.set('foo', 'cache'); // true await users.get('foo'); // 'users' await cache.get('foo'); // 'cache' await users.clear(); // undefined await users.get('foo'); // undefined await cache.get('foo'); // 'cache' Custom Serializers Keyv uses json-buffer for data serialization to ensure consistency across different backends. You can optionally provide your own serialization functions to support extra data types or to serialize to something other than JSON. const keyv = new Keyv({ serialize: JSON.stringify, deserialize: JSON.parse }); Warning: Using custom serializers means you lose any guarantee of data consistency. You should do extensive testing with your serialisation functions and chosen storage engine. Official Storage Adapters The official storage adapters are covered by over 150 integration tests to guarantee consistent behaviour. They are lightweight, efficient wrappers over the DB clients making use of indexes and native TTLs where available. Database Adapter Native TTL Redis @keyv/redis Yes MongoDB @keyv/mongo Yes SQLite @keyv/sqlite No PostgreSQL @keyv/postgres No MySQL @keyv/mysql No Etcd @keyv/etcd Yes Memcache @keyv/memcache Yes Third-party Storage Adapters You can also use third-party storage adapters or build your own. Keyv will wrap these storage adapters in TTL functionality and handle complex types internally. const Keyv = require('keyv'); const myAdapter = require('./my-storage-adapter'); const keyv = new Keyv({ store: myAdapter }); Any store that follows the Map api will work. new Keyv({ store: new Map() }); For example, quick-lru is a completely unrelated module that implements the Map API. const Keyv = require('keyv'); const QuickLRU = require('quick-lru'); const lru = new QuickLRU({ maxSize: 1000 }); const keyv = new Keyv({ store: lru }); The following are third-party storage adapters compatible with Keyv: quick-lru - Simple \"Least Recently Used\" (LRU) cache keyv-file - File system storage adapter for Keyv keyv-dynamodb - DynamoDB storage adapter for Keyv keyv-lru - LRU storage adapter for Keyv keyv-null - Null storage adapter for Keyv keyv-firestore \u2013 Firebase Cloud Firestore adapter for Keyv keyv-mssql - Microsoft Sql Server adapter for Keyv keyv-azuretable - Azure Table Storage/API adapter for Keyv keyv-arango - ArangoDB storage adapter for Keyv keyv-momento - Momento storage adapter for Keyv Add Cache Support to your Module Keyv is designed to be easily embedded into other modules to add cache support. The recommended pattern is to expose a cache option in your modules options which is passed through to Keyv. Caching will work in memory by default and users have the option to also install a Keyv storage adapter and pass in a connection string, or any other storage that implements the Map API. You should also set a namespace for your module so you can safely call .clear() without clearing unrelated app data. Inside your module: class AwesomeModule { constructor(opts) { this.cache = new Keyv({ uri: typeof opts.cache === 'string' && opts.cache, store: typeof opts.cache !== 'string' && opts.cache, namespace: 'awesome-module' }); } } Now it can be consumed like this: const AwesomeModule = require('awesome-module'); // Caches stuff in memory by default const awesomeModule = new AwesomeModule(); // After npm install --save keyv-redis const awesomeModule = new AwesomeModule({ cache: 'redis://localhost' }); // Some third-party module that implements the Map API const awesomeModule = new AwesomeModule({ cache: some3rdPartyStore }); Compression Keyv supports gzip and brotli compression. To enable compression, pass the compress option to the constructor. const KeyvGzip = require('@keyv/compress-gzip'); const Keyv = require('keyv'); const keyvGzip = new KeyvGzip(); const keyv = new Keyv({ compression: KeyvGzip }); You can also pass a custom compression function to the compression option. Following the pattern of the official compression adapters. Want to build your own? Great! Keyv is designed to be easily extended. You can build your own compression adapter by following the pattern of the official compression adapters based on this interface: interface CompressionAdapter { async compress(value: any, options?: any); async decompress(value: any, options?: any); async serialize(value: any); async deserialize(value: any); } In addition to the interface, you can test it with our compression test suite using @keyv/test-suite: const {keyvCompresstionTests} = require('@keyv/test-suite'); const KeyvGzip = require('@keyv/compress-gzip'); keyvCompresstionTests(test, new KeyvGzip()); API new Keyv([uri], [options]) Returns a new Keyv instance. The Keyv instance is also an EventEmitter that will emit an 'error' event if the storage adapter connection fails. uri Type: String Default: undefined The connection string URI. Merged into the options object as options.uri. options Type: Object The options object is also passed through to the storage adapter. Check your storage adapter docs for any extra options. options.namespace Type: String Default: 'keyv' Namespace for the current instance. options.ttl Type: Number Default: undefined Default TTL. Can be overridden by specififying a TTL on .set() . options.compression Type: @keyv/compress-<compression_package_name> Default: undefined Compression package to use. See Compression for more details. options.serialize Type: Function Default: JSONB.stringify A custom serialization function. options.deserialize Type: Function Default: JSONB.parse A custom deserialization function. options.store Type: Storage adapter instance Default: new Map() The storage adapter instance to be used by Keyv. options.adapter Type: String Default: undefined Specify an adapter to use. e.g 'redis' or 'mongodb' . Instance Keys must always be strings. Values can be of any type. .set(key, value, [ttl]) Set a value. By default keys are persistent. You can set an expiry TTL in milliseconds. Returns a promise which resolves to true . .get(key, [options]) Returns a promise which resolves to the retrieved value. options.raw Type: Boolean Default: false If set to true the raw DB object Keyv stores internally will be returned instead of just the value. This contains the TTL timestamp. .delete(key) Deletes an entry. Returns a promise which resolves to true if the key existed, false if not. .clear() Delete all entries in the current namespace. Returns a promise which is resolved when the entries have been cleared. .iterator() Iterate over all entries of the current namespace. Returns a iterable that can be iterated by for-of loops. For example: // please note that the \"await\" keyword should be used here for await (const [key, value] of this.keyv.iterator()) { console.log(key, value); }; How to Contribute In this section of the documentation we will cover: 1) How to set up this repository locally 2) How to get started with running commands 3) How to contribute changes using Pull Requests Dependencies This package requires the following dependencies to run: 1) Yarn V1 3) Docker Setting up your workspace To contribute to this repository, start by setting up this project locally: 1) Fork this repository into your Git account 2) Clone the forked repository to your local directory using git clone 3) Install any of the above missing dependencies Launching the project Once the project is installed locally, you are ready to start up its services: 1) Ensure that your Docker service is running. 2) From the root directory of your project, run the yarn command in the command prompt to install yarn. 3) Run the yarn bootstrap command to install any necessary dependencies. 4) Run yarn test:services:start to start up this project's Docker container. The container will launch all services within your workspace. Available Commands Once the project is running, you can execute a variety of commands. The root workspace and each subpackage contain a package.json file with a scripts field listing all the commands that can be executed from that directory. This project also supports native yarn , and docker commands. Here, we'll cover the primary commands that can be executed from the root directory. Unless otherwise noted, these commands can also be executed from a subpackage. If executed from a subpackage, they will only affect that subpackage, rather than the entire workspace. yarn The yarn command installs yarn in the workspace. yarn bootstrap The yarn bootstrap command installs all dependencies in the workspace. yarn test:services:start The yarn test:services:start command starts up the project's Docker container, launching all services in the workspace. This command must be executed from the root directory. yarn test:services:stop The yarn test:services:stop command brings down the project's Docker container, halting all services. This command must be executed from the root directory. yarn test The yarn test command runs all tests in the workspace. yarn clean The yarn clean command removes yarn and all dependencies installed by yarn. After executing this command, you must repeat the steps in Setting up your workspace to rebuild your workspace. Contributing Changes Now that you've set up your workspace, you're ready to contribute changes to the keyv repository. 1) Make any changes that you would like to contribute in your local workspace. 2) After making these changes, ensure that the project's tests still pass by executing the yarn test command in the root directory. 3) Commit your changes and push them to your forked repository. 4) Navigate to the original keyv repository and go the Pull Requests tab. 5) Click the New pull request button, and open a pull request for the branch in your repository that contains your changes. 6) Once your pull request is created, ensure that all checks have passed and that your branch has no conflicts with the base branch. If there are any issues, resolve these changes in your local repository, and then commit and push them to git. 7) Similarly, respond to any reviewer comments or requests for changes by making edits to your local repository and pushing them to Git. 8) Once the pull request has been reviewed, those with write access to the branch will be able to merge your changes into the keyv repository. If you need more information on the steps to create a pull request, you can find a detailed walkthrough in the Github documentation License MIT \u00a9 Jared Wray","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#features","text":"There are a few existing modules similar to Keyv, however Keyv is different because it: Isn't bloated Has a simple Promise based API Suitable as a TTL based cache or persistent key-value store Easily embeddable inside another module Works with any storage that implements the Map API Handles all JSON types plus Buffer Supports namespaces Wide range of efficient, well tested storage adapters Connection errors are passed through (db failures won't kill your app) Supports the current active LTS version of Node.js or higher","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#usage","text":"Install Keyv. npm install --save keyv By default everything is stored in memory, you can optionally also install a storage adapter. npm install --save @keyv/redis npm install --save @keyv/mongo npm install --save @keyv/sqlite npm install --save @keyv/postgres npm install --save @keyv/mysql npm install --save @keyv/etcd Create a new Keyv instance, passing your connection string if applicable. Keyv will automatically load the correct storage adapter. const Keyv = require('keyv'); // One of the following const keyv = new Keyv(); const keyv = new Keyv('redis://user:pass@localhost:6379'); const keyv = new Keyv('mongodb://user:pass@localhost:27017/dbname'); const keyv = new Keyv('sqlite://path/to/database.sqlite'); const keyv = new Keyv('postgresql://user:pass@localhost:5432/dbname'); const keyv = new Keyv('mysql://user:pass@localhost:3306/dbname'); const keyv = new Keyv('etcd://localhost:2379'); // Handle DB connection errors keyv.on('error', err => console.log('Connection Error', err)); await keyv.set('foo', 'expires in 1 second', 1000); // true await keyv.set('foo', 'never expires'); // true await keyv.get('foo'); // 'never expires' await keyv.delete('foo'); // true await keyv.clear(); // undefined","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#namespaces","text":"You can namespace your Keyv instance to avoid key collisions and allow you to clear only a certain namespace while using the same database. const users = new Keyv('redis://user:pass@localhost:6379', { namespace: 'users' }); const cache = new Keyv('redis://user:pass@localhost:6379', { namespace: 'cache' }); await users.set('foo', 'users'); // true await cache.set('foo', 'cache'); // true await users.get('foo'); // 'users' await cache.get('foo'); // 'cache' await users.clear(); // undefined await users.get('foo'); // undefined await cache.get('foo'); // 'cache'","title":"Namespaces"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#custom-serializers","text":"Keyv uses json-buffer for data serialization to ensure consistency across different backends. You can optionally provide your own serialization functions to support extra data types or to serialize to something other than JSON. const keyv = new Keyv({ serialize: JSON.stringify, deserialize: JSON.parse }); Warning: Using custom serializers means you lose any guarantee of data consistency. You should do extensive testing with your serialisation functions and chosen storage engine.","title":"Custom Serializers"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#official-storage-adapters","text":"The official storage adapters are covered by over 150 integration tests to guarantee consistent behaviour. They are lightweight, efficient wrappers over the DB clients making use of indexes and native TTLs where available. Database Adapter Native TTL Redis @keyv/redis Yes MongoDB @keyv/mongo Yes SQLite @keyv/sqlite No PostgreSQL @keyv/postgres No MySQL @keyv/mysql No Etcd @keyv/etcd Yes Memcache @keyv/memcache Yes","title":"Official Storage Adapters"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#third-party-storage-adapters","text":"You can also use third-party storage adapters or build your own. Keyv will wrap these storage adapters in TTL functionality and handle complex types internally. const Keyv = require('keyv'); const myAdapter = require('./my-storage-adapter'); const keyv = new Keyv({ store: myAdapter }); Any store that follows the Map api will work. new Keyv({ store: new Map() }); For example, quick-lru is a completely unrelated module that implements the Map API. const Keyv = require('keyv'); const QuickLRU = require('quick-lru'); const lru = new QuickLRU({ maxSize: 1000 }); const keyv = new Keyv({ store: lru }); The following are third-party storage adapters compatible with Keyv: quick-lru - Simple \"Least Recently Used\" (LRU) cache keyv-file - File system storage adapter for Keyv keyv-dynamodb - DynamoDB storage adapter for Keyv keyv-lru - LRU storage adapter for Keyv keyv-null - Null storage adapter for Keyv keyv-firestore \u2013 Firebase Cloud Firestore adapter for Keyv keyv-mssql - Microsoft Sql Server adapter for Keyv keyv-azuretable - Azure Table Storage/API adapter for Keyv keyv-arango - ArangoDB storage adapter for Keyv keyv-momento - Momento storage adapter for Keyv","title":"Third-party Storage Adapters"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#add-cache-support-to-your-module","text":"Keyv is designed to be easily embedded into other modules to add cache support. The recommended pattern is to expose a cache option in your modules options which is passed through to Keyv. Caching will work in memory by default and users have the option to also install a Keyv storage adapter and pass in a connection string, or any other storage that implements the Map API. You should also set a namespace for your module so you can safely call .clear() without clearing unrelated app data. Inside your module: class AwesomeModule { constructor(opts) { this.cache = new Keyv({ uri: typeof opts.cache === 'string' && opts.cache, store: typeof opts.cache !== 'string' && opts.cache, namespace: 'awesome-module' }); } } Now it can be consumed like this: const AwesomeModule = require('awesome-module'); // Caches stuff in memory by default const awesomeModule = new AwesomeModule(); // After npm install --save keyv-redis const awesomeModule = new AwesomeModule({ cache: 'redis://localhost' }); // Some third-party module that implements the Map API const awesomeModule = new AwesomeModule({ cache: some3rdPartyStore });","title":"Add Cache Support to your Module"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#compression","text":"Keyv supports gzip and brotli compression. To enable compression, pass the compress option to the constructor. const KeyvGzip = require('@keyv/compress-gzip'); const Keyv = require('keyv'); const keyvGzip = new KeyvGzip(); const keyv = new Keyv({ compression: KeyvGzip }); You can also pass a custom compression function to the compression option. Following the pattern of the official compression adapters.","title":"Compression"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#want-to-build-your-own","text":"Great! Keyv is designed to be easily extended. You can build your own compression adapter by following the pattern of the official compression adapters based on this interface: interface CompressionAdapter { async compress(value: any, options?: any); async decompress(value: any, options?: any); async serialize(value: any); async deserialize(value: any); } In addition to the interface, you can test it with our compression test suite using @keyv/test-suite: const {keyvCompresstionTests} = require('@keyv/test-suite'); const KeyvGzip = require('@keyv/compress-gzip'); keyvCompresstionTests(test, new KeyvGzip());","title":"Want to build your own?"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#new-keyvuri-options","text":"Returns a new Keyv instance. The Keyv instance is also an EventEmitter that will emit an 'error' event if the storage adapter connection fails.","title":"new Keyv([uri], [options])"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#uri","text":"Type: String Default: undefined The connection string URI. Merged into the options object as options.uri.","title":"uri"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#options","text":"Type: Object The options object is also passed through to the storage adapter. Check your storage adapter docs for any extra options.","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsnamespace","text":"Type: String Default: 'keyv' Namespace for the current instance.","title":"options.namespace"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsttl","text":"Type: Number Default: undefined Default TTL. Can be overridden by specififying a TTL on .set() .","title":"options.ttl"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionscompression","text":"Type: @keyv/compress-<compression_package_name> Default: undefined Compression package to use. See Compression for more details.","title":"options.compression"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsserialize","text":"Type: Function Default: JSONB.stringify A custom serialization function.","title":"options.serialize"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsdeserialize","text":"Type: Function Default: JSONB.parse A custom deserialization function.","title":"options.deserialize"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsstore","text":"Type: Storage adapter instance Default: new Map() The storage adapter instance to be used by Keyv.","title":"options.store"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsadapter","text":"Type: String Default: undefined Specify an adapter to use. e.g 'redis' or 'mongodb' .","title":"options.adapter"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#instance","text":"Keys must always be strings. Values can be of any type.","title":"Instance"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#setkey-value-ttl","text":"Set a value. By default keys are persistent. You can set an expiry TTL in milliseconds. Returns a promise which resolves to true .","title":".set(key, value, [ttl])"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#getkey-options","text":"Returns a promise which resolves to the retrieved value.","title":".get(key, [options])"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#optionsraw","text":"Type: Boolean Default: false If set to true the raw DB object Keyv stores internally will be returned instead of just the value. This contains the TTL timestamp.","title":"options.raw"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#deletekey","text":"Deletes an entry. Returns a promise which resolves to true if the key existed, false if not.","title":".delete(key)"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#clear","text":"Delete all entries in the current namespace. Returns a promise which is resolved when the entries have been cleared.","title":".clear()"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#iterator","text":"Iterate over all entries of the current namespace. Returns a iterable that can be iterated by for-of loops. For example: // please note that the \"await\" keyword should be used here for await (const [key, value] of this.keyv.iterator()) { console.log(key, value); };","title":".iterator()"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#how-to-contribute","text":"In this section of the documentation we will cover: 1) How to set up this repository locally 2) How to get started with running commands 3) How to contribute changes using Pull Requests","title":"How to Contribute"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#dependencies","text":"This package requires the following dependencies to run: 1) Yarn V1 3) Docker","title":"Dependencies"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#setting-up-your-workspace","text":"To contribute to this repository, start by setting up this project locally: 1) Fork this repository into your Git account 2) Clone the forked repository to your local directory using git clone 3) Install any of the above missing dependencies","title":"Setting up your workspace"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#launching-the-project","text":"Once the project is installed locally, you are ready to start up its services: 1) Ensure that your Docker service is running. 2) From the root directory of your project, run the yarn command in the command prompt to install yarn. 3) Run the yarn bootstrap command to install any necessary dependencies. 4) Run yarn test:services:start to start up this project's Docker container. The container will launch all services within your workspace.","title":"Launching the project"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#available-commands","text":"Once the project is running, you can execute a variety of commands. The root workspace and each subpackage contain a package.json file with a scripts field listing all the commands that can be executed from that directory. This project also supports native yarn , and docker commands. Here, we'll cover the primary commands that can be executed from the root directory. Unless otherwise noted, these commands can also be executed from a subpackage. If executed from a subpackage, they will only affect that subpackage, rather than the entire workspace.","title":"Available Commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#yarn","text":"The yarn command installs yarn in the workspace.","title":"yarn"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#yarn-bootstrap","text":"The yarn bootstrap command installs all dependencies in the workspace.","title":"yarn bootstrap"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#yarn-testservicesstart","text":"The yarn test:services:start command starts up the project's Docker container, launching all services in the workspace. This command must be executed from the root directory.","title":"yarn test:services:start"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#yarn-testservicesstop","text":"The yarn test:services:stop command brings down the project's Docker container, halting all services. This command must be executed from the root directory.","title":"yarn test:services:stop"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#yarn-test","text":"The yarn test command runs all tests in the workspace.","title":"yarn test"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#yarn-clean","text":"The yarn clean command removes yarn and all dependencies installed by yarn. After executing this command, you must repeat the steps in Setting up your workspace to rebuild your workspace.","title":"yarn clean"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#contributing-changes","text":"Now that you've set up your workspace, you're ready to contribute changes to the keyv repository. 1) Make any changes that you would like to contribute in your local workspace. 2) After making these changes, ensure that the project's tests still pass by executing the yarn test command in the root directory. 3) Commit your changes and push them to your forked repository. 4) Navigate to the original keyv repository and go the Pull Requests tab. 5) Click the New pull request button, and open a pull request for the branch in your repository that contains your changes. 6) Once your pull request is created, ensure that all checks have passed and that your branch has no conflicts with the base branch. If there are any issues, resolve these changes in your local repository, and then commit and push them to git. 7) Similarly, respond to any reviewer comments or requests for changes by making edits to your local repository and pushing them to Git. 8) Once the pull request has been reviewed, those with write access to the branch will be able to merge your changes into the keyv repository. If you need more information on the steps to create a pull request, you can find a detailed walkthrough in the Github documentation","title":"Contributing Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/keyv/#license","text":"MIT \u00a9 Jared Wray","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/","text":"levn Light ECMAScript (JavaScript) Value Notation Levn is a library which allows you to parse a string into a JavaScript value based on an expected type. It is meant for short amounts of human entered data (eg. config files, command line arguments). Levn aims to concisely describe JavaScript values in text, and allow for the extraction and validation of those values. Levn uses type-check for its type format, and to validate the results. MIT license. Version 0.4.1. How is this different than JSON? levn is meant to be written by humans only, is (due to the previous point) much more concise, can be validated against supplied types, has regex and date literals, and can easily be extended with custom types. On the other hand, it is probably slower and thus less efficient at transporting large amounts of data, which is fine since this is not its purpose. npm install levn For updates on levn, follow me on twitter . Quick Examples var parse = require('levn').parse; parse('Number', '2'); // 2 parse('String', '2'); // '2' parse('String', 'levn'); // 'levn' parse('String', 'a b'); // 'a b' parse('Boolean', 'true'); // true parse('Date', '#2011-11-11#'); // (Date object) parse('Date', '2011-11-11'); // (Date object) parse('RegExp', '/[a-z]/gi'); // /[a-z]/gi parse('RegExp', 're'); // /re/ parse('Int', '2'); // 2 parse('Number | String', 'str'); // 'str' parse('Number | String', '2'); // 2 parse('[Number]', '[1,2,3]'); // [1,2,3] parse('(String, Boolean)', '(hi, false)'); // ['hi', false] parse('{a: String, b: Number}', '{a: str, b: 2}'); // {a: 'str', b: 2} // at the top level, you can ommit surrounding delimiters parse('[Number]', '1,2,3'); // [1,2,3] parse('(String, Boolean)', 'hi, false'); // ['hi', false] parse('{a: String, b: Number}', 'a: str, b: 2'); // {a: 'str', b: 2} // wildcard - auto choose type parse('*', '[hi,(null,[42]),{k: true}]'); // ['hi', [null, [42]], {k: true}] Usage require('levn'); returns an object that exposes three properties. VERSION is the current version of the library as a string. parse and parsedTypeParse are functions. // parse(type, input, options); parse('[Number]', '1,2,3'); // [1, 2, 3] // parsedTypeParse(parsedType, input, options); var parsedType = require('type-check').parseType('[Number]'); parsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3] parse(type, input, options) parse casts the string input into a JavaScript value according to the specified type in the type format (and taking account the optional options ) and returns the resulting JavaScript value. arguments type - String - the type written in the type format which to check against input - String - the value written in the levn format options - Maybe Object - an optional parameter specifying additional options returns * - the resulting JavaScript value example parse('[Number]', '1,2,3'); // [1, 2, 3] parsedTypeParse(parsedType, input, options) parsedTypeParse casts the string input into a JavaScript value according to the specified type which has already been parsed (and taking account the optional options ) and returns the resulting JavaScript value. You can parse a type using the type-check library's parseType function. arguments type - Object - the type in the parsed type format which to check against input - String - the value written in the levn format options - Maybe Object - an optional parameter specifying additional options returns * - the resulting JavaScript value example var parsedType = require('type-check').parseType('[Number]'); parsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3] Levn Format Levn can use the type information you provide to choose the appropriate value to produce from the input. For the same input, it will choose a different output value depending on the type provided. For example, parse('Number', '2') will produce the number 2 , but parse('String', '2') will produce the string \"2\" . If you do not provide type information, and simply use * , levn will parse the input according the unambiguous \"explicit\" mode, which we will now detail - you can also set the explicit option to true manually in the options . \"string\" , 'string' are parsed as a String, eg. \"a msg\" is \"a msg\" #date# is parsed as a Date, eg. #2011-11-11# is new Date('2011-11-11') /regexp/flags is parsed as a RegExp, eg. /re/gi is /re/gi undefined , null , NaN , true , and false are all their JavaScript equivalents [element1, element2, etc] is an Array, and the casting procedure is recursively applied to each element. Eg. [1,2,3] is [1,2,3] . (element1, element2, etc) is an tuple, and the casting procedure is recursively applied to each element. Eg. (1, a) is (1, a) (is [1, 'a'] ). {key1: val1, key2: val2, ...} is an Object, and the casting procedure is recursively applied to each property. Eg. {a: 1, b: 2} is {a: 1, b: 2} . Any test which does not fall under the above, and which does not contain special characters ( [``]``(``)``{``}``:``, ) is a string, eg. $12- blah is \"$12- blah\" . If you do provide type information, you can make your input more concise as the program already has some information about what it expects. Please see the type format section of type-check for more information about how to specify types. There are some rules about what levn can do with the information: If a String is expected, and only a String, all characters of the input (including any special ones) will become part of the output. Eg. [({})] is \"[({})]\" , and \"hi\" is '\"hi\"' . If a Date is expected, the surrounding # can be omitted from date literals. Eg. 2011-11-11 is new Date('2011-11-11') . If a RegExp is expected, no flags need to be specified, and the regex is not using any of the special characters,the opening and closing / can be omitted - this will have the affect of setting the source of the regex to the input. Eg. regex is /regex/ . If an Array is expected, and it is the root node (at the top level), the opening [ and closing ] can be omitted. Eg. 1,2,3 is [1,2,3] . If a tuple is expected, and it is the root node (at the top level), the opening ( and closing ) can be omitted. Eg. 1, a is (1, a) (is [1, 'a'] ). If an Object is expected, and it is the root node (at the top level), the opening { and closing } can be omitted. Eg a: 1, b: 2 is {a: 1, b: 2} . If you list multiple types (eg. Number | String ), it will first attempt to cast to the first type and then validate - if the validation fails it will move on to the next type and so forth, left to right. You must be careful as some types will succeed with any input, such as String. Thus put String at the end of your list. In non-explicit mode, Date and RegExp will succeed with a large variety of input - also be careful with these and list them near the end if not last in your list. Whitespace between special characters and elements is inconsequential. Options Options is an object. It is an optional parameter to the parse and parsedTypeParse functions. Explicit A Boolean . By default it is false . Example: parse('RegExp', 're', {explicit: false}); // /re/ parse('RegExp', 're', {explicit: true}); // Error: ... does not type check... parse('RegExp | String', 're', {explicit: true}); // 're' explicit sets whether to be in explicit mode or not. Using * automatically activates explicit mode. For more information, read the levn format section. customTypes An Object . Empty {} by default. Example: var options = { customTypes: { Even: { typeOf: 'Number', validate: function (x) { return x % 2 === 0; }, cast: function (x) { return {type: 'Just', value: parseInt(x)}; } } } } parse('Even', '2', options); // 2 parse('Even', '3', options); // Error: Value: \"3\" does not type check... Another Example: function Person(name, age){ this.name = name; this.age = age; } var options = { customTypes: { Person: { typeOf: 'Object', validate: function (x) { x instanceof Person; }, cast: function (value, options, typesCast) { var name, age; if ({}.toString.call(value).slice(8, -1) !== 'Object') { return {type: 'Nothing'}; } name = typesCast(value.name, [{type: 'String'}], options); age = typesCast(value.age, [{type: 'Numger'}], options); return {type: 'Just', value: new Person(name, age)}; } } } parse('Person', '{name: Laura, age: 25}', options); // Person {name: 'Laura', age: 25} customTypes is an object whose keys are the name of the types, and whose values are an object with three properties, typeOf , validate , and cast . For more information about typeOf and validate , please see the custom types section of type-check. cast is a function which receives three arguments, the value under question, options, and the typesCast function. In cast , attempt to cast the value into the specified type. If you are successful, return an object in the format {type: 'Just', value: CAST-VALUE} , if you know it won't work, return {type: 'Nothing'} . You can use the typesCast function to cast any child values. Remember to pass options to it. In your function you can also check for options.explicit and act accordingly. Technical About levn is written in LiveScript - a language that compiles to JavaScript. It uses type-check to both parse types and validate values. It also uses the prelude.ls library.","title":"levn Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#levn","text":"Light ECMAScript (JavaScript) Value Notation Levn is a library which allows you to parse a string into a JavaScript value based on an expected type. It is meant for short amounts of human entered data (eg. config files, command line arguments). Levn aims to concisely describe JavaScript values in text, and allow for the extraction and validation of those values. Levn uses type-check for its type format, and to validate the results. MIT license. Version 0.4.1. How is this different than JSON? levn is meant to be written by humans only, is (due to the previous point) much more concise, can be validated against supplied types, has regex and date literals, and can easily be extended with custom types. On the other hand, it is probably slower and thus less efficient at transporting large amounts of data, which is fine since this is not its purpose. npm install levn For updates on levn, follow me on twitter .","title":"levn"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#quick-examples","text":"var parse = require('levn').parse; parse('Number', '2'); // 2 parse('String', '2'); // '2' parse('String', 'levn'); // 'levn' parse('String', 'a b'); // 'a b' parse('Boolean', 'true'); // true parse('Date', '#2011-11-11#'); // (Date object) parse('Date', '2011-11-11'); // (Date object) parse('RegExp', '/[a-z]/gi'); // /[a-z]/gi parse('RegExp', 're'); // /re/ parse('Int', '2'); // 2 parse('Number | String', 'str'); // 'str' parse('Number | String', '2'); // 2 parse('[Number]', '[1,2,3]'); // [1,2,3] parse('(String, Boolean)', '(hi, false)'); // ['hi', false] parse('{a: String, b: Number}', '{a: str, b: 2}'); // {a: 'str', b: 2} // at the top level, you can ommit surrounding delimiters parse('[Number]', '1,2,3'); // [1,2,3] parse('(String, Boolean)', 'hi, false'); // ['hi', false] parse('{a: String, b: Number}', 'a: str, b: 2'); // {a: 'str', b: 2} // wildcard - auto choose type parse('*', '[hi,(null,[42]),{k: true}]'); // ['hi', [null, [42]], {k: true}]","title":"Quick Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#usage","text":"require('levn'); returns an object that exposes three properties. VERSION is the current version of the library as a string. parse and parsedTypeParse are functions. // parse(type, input, options); parse('[Number]', '1,2,3'); // [1, 2, 3] // parsedTypeParse(parsedType, input, options); var parsedType = require('type-check').parseType('[Number]'); parsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#parsetype-input-options","text":"parse casts the string input into a JavaScript value according to the specified type in the type format (and taking account the optional options ) and returns the resulting JavaScript value.","title":"parse(type, input, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#arguments","text":"type - String - the type written in the type format which to check against input - String - the value written in the levn format options - Maybe Object - an optional parameter specifying additional options","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#returns","text":"* - the resulting JavaScript value","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#example","text":"parse('[Number]', '1,2,3'); // [1, 2, 3]","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#parsedtypeparseparsedtype-input-options","text":"parsedTypeParse casts the string input into a JavaScript value according to the specified type which has already been parsed (and taking account the optional options ) and returns the resulting JavaScript value. You can parse a type using the type-check library's parseType function.","title":"parsedTypeParse(parsedType, input, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#arguments_1","text":"type - Object - the type in the parsed type format which to check against input - String - the value written in the levn format options - Maybe Object - an optional parameter specifying additional options","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#returns_1","text":"* - the resulting JavaScript value","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#example_1","text":"var parsedType = require('type-check').parseType('[Number]'); parsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#levn-format","text":"Levn can use the type information you provide to choose the appropriate value to produce from the input. For the same input, it will choose a different output value depending on the type provided. For example, parse('Number', '2') will produce the number 2 , but parse('String', '2') will produce the string \"2\" . If you do not provide type information, and simply use * , levn will parse the input according the unambiguous \"explicit\" mode, which we will now detail - you can also set the explicit option to true manually in the options . \"string\" , 'string' are parsed as a String, eg. \"a msg\" is \"a msg\" #date# is parsed as a Date, eg. #2011-11-11# is new Date('2011-11-11') /regexp/flags is parsed as a RegExp, eg. /re/gi is /re/gi undefined , null , NaN , true , and false are all their JavaScript equivalents [element1, element2, etc] is an Array, and the casting procedure is recursively applied to each element. Eg. [1,2,3] is [1,2,3] . (element1, element2, etc) is an tuple, and the casting procedure is recursively applied to each element. Eg. (1, a) is (1, a) (is [1, 'a'] ). {key1: val1, key2: val2, ...} is an Object, and the casting procedure is recursively applied to each property. Eg. {a: 1, b: 2} is {a: 1, b: 2} . Any test which does not fall under the above, and which does not contain special characters ( [``]``(``)``{``}``:``, ) is a string, eg. $12- blah is \"$12- blah\" . If you do provide type information, you can make your input more concise as the program already has some information about what it expects. Please see the type format section of type-check for more information about how to specify types. There are some rules about what levn can do with the information: If a String is expected, and only a String, all characters of the input (including any special ones) will become part of the output. Eg. [({})] is \"[({})]\" , and \"hi\" is '\"hi\"' . If a Date is expected, the surrounding # can be omitted from date literals. Eg. 2011-11-11 is new Date('2011-11-11') . If a RegExp is expected, no flags need to be specified, and the regex is not using any of the special characters,the opening and closing / can be omitted - this will have the affect of setting the source of the regex to the input. Eg. regex is /regex/ . If an Array is expected, and it is the root node (at the top level), the opening [ and closing ] can be omitted. Eg. 1,2,3 is [1,2,3] . If a tuple is expected, and it is the root node (at the top level), the opening ( and closing ) can be omitted. Eg. 1, a is (1, a) (is [1, 'a'] ). If an Object is expected, and it is the root node (at the top level), the opening { and closing } can be omitted. Eg a: 1, b: 2 is {a: 1, b: 2} . If you list multiple types (eg. Number | String ), it will first attempt to cast to the first type and then validate - if the validation fails it will move on to the next type and so forth, left to right. You must be careful as some types will succeed with any input, such as String. Thus put String at the end of your list. In non-explicit mode, Date and RegExp will succeed with a large variety of input - also be careful with these and list them near the end if not last in your list. Whitespace between special characters and elements is inconsequential.","title":"Levn Format"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#options","text":"Options is an object. It is an optional parameter to the parse and parsedTypeParse functions.","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#explicit","text":"A Boolean . By default it is false . Example: parse('RegExp', 're', {explicit: false}); // /re/ parse('RegExp', 're', {explicit: true}); // Error: ... does not type check... parse('RegExp | String', 're', {explicit: true}); // 're' explicit sets whether to be in explicit mode or not. Using * automatically activates explicit mode. For more information, read the levn format section.","title":"Explicit"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#customtypes","text":"An Object . Empty {} by default. Example: var options = { customTypes: { Even: { typeOf: 'Number', validate: function (x) { return x % 2 === 0; }, cast: function (x) { return {type: 'Just', value: parseInt(x)}; } } } } parse('Even', '2', options); // 2 parse('Even', '3', options); // Error: Value: \"3\" does not type check... Another Example: function Person(name, age){ this.name = name; this.age = age; } var options = { customTypes: { Person: { typeOf: 'Object', validate: function (x) { x instanceof Person; }, cast: function (value, options, typesCast) { var name, age; if ({}.toString.call(value).slice(8, -1) !== 'Object') { return {type: 'Nothing'}; } name = typesCast(value.name, [{type: 'String'}], options); age = typesCast(value.age, [{type: 'Numger'}], options); return {type: 'Just', value: new Person(name, age)}; } } } parse('Person', '{name: Laura, age: 25}', options); // Person {name: 'Laura', age: 25} customTypes is an object whose keys are the name of the types, and whose values are an object with three properties, typeOf , validate , and cast . For more information about typeOf and validate , please see the custom types section of type-check. cast is a function which receives three arguments, the value under question, options, and the typesCast function. In cast , attempt to cast the value into the specified type. If you are successful, return an object in the format {type: 'Just', value: CAST-VALUE} , if you know it won't work, return {type: 'Nothing'} . You can use the typesCast function to cast any child values. Remember to pass options to it. In your function you can also check for options.explicit and act accordingly.","title":"customTypes"},{"location":"_Disciplina/Code/my-react-app/node_modules/levn/#technical-about","text":"levn is written in LiveScript - a language that compiles to JavaScript. It uses type-check to both parse types and validate values. It also uses the prelude.ls library.","title":"Technical About"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/","text":"locate-path Get the first path that exists on disk of multiple paths Install $ npm install locate-path Usage Here we find the first file that exists on disk, in array order. const locatePath = require('locate-path'); const files = [ 'unicorn.png', 'rainbow.png', // Only this one actually exists on disk 'pony.png' ]; (async () => { console(await locatePath(files)); //=> 'rainbow' })(); API locatePath(paths, options?) Returns a Promise<string> for the first path that exists or undefined if none exists. paths Type: Iterable<string> Paths to check. options Type: object concurrency Type: number \\ Default: Infinity \\ Minimum: 1 Number of concurrently pending promises. preserveOrder Type: boolean \\ Default: true Preserve paths order when searching. Disable this to improve performance if you don't care about the order. cwd Type: string \\ Default: process.cwd() Current working directory. type Type: string \\ Default: 'file' \\ Values: 'file' | 'directory' The type of paths that can match. allowSymlinks Type: boolean \\ Default: true Allow symbolic links to match if they point to the chosen path type. locatePath.sync(paths, options?) Returns the first path that exists or undefined if none exists. paths Type: Iterable<string> Paths to check. options Type: object cwd Same as above. type Same as above. allowSymlinks Same as above. Related path-exists - Check if a path exists Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"locate-path Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#locate-path","text":"Get the first path that exists on disk of multiple paths","title":"locate-path"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#install","text":"$ npm install locate-path","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#usage","text":"Here we find the first file that exists on disk, in array order. const locatePath = require('locate-path'); const files = [ 'unicorn.png', 'rainbow.png', // Only this one actually exists on disk 'pony.png' ]; (async () => { console(await locatePath(files)); //=> 'rainbow' })();","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#locatepathpaths-options","text":"Returns a Promise<string> for the first path that exists or undefined if none exists.","title":"locatePath(paths, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#paths","text":"Type: Iterable<string> Paths to check.","title":"paths"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#options","text":"Type: object","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#concurrency","text":"Type: number \\ Default: Infinity \\ Minimum: 1 Number of concurrently pending promises.","title":"concurrency"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#preserveorder","text":"Type: boolean \\ Default: true Preserve paths order when searching. Disable this to improve performance if you don't care about the order.","title":"preserveOrder"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#cwd","text":"Type: string \\ Default: process.cwd() Current working directory.","title":"cwd"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#type","text":"Type: string \\ Default: 'file' \\ Values: 'file' | 'directory' The type of paths that can match.","title":"type"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#allowsymlinks","text":"Type: boolean \\ Default: true Allow symbolic links to match if they point to the chosen path type.","title":"allowSymlinks"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#locatepathsyncpaths-options","text":"Returns the first path that exists or undefined if none exists.","title":"locatePath.sync(paths, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#paths_1","text":"Type: Iterable<string> Paths to check.","title":"paths"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#options_1","text":"Type: object","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#cwd_1","text":"Same as above.","title":"cwd"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#type_1","text":"Same as above.","title":"type"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#allowsymlinks_1","text":"Same as above.","title":"allowSymlinks"},{"location":"_Disciplina/Code/my-react-app/node_modules/locate-path/readme/#related","text":"path-exists - Check if a path exists Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/lodash.merge/","text":"lodash.merge v4.6.2 The Lodash method _.merge exported as a Node.js module. Installation Using npm: $ {sudo -H} npm i -g npm $ npm i --save lodash.merge In Node.js: var merge = require('lodash.merge'); See the documentation or package source for more details.","title":"lodash.merge v4.6.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/lodash.merge/#lodashmerge-v462","text":"The Lodash method _.merge exported as a Node.js module.","title":"lodash.merge v4.6.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/lodash.merge/#installation","text":"Using npm: $ {sudo -H} npm i -g npm $ npm i --save lodash.merge In Node.js: var merge = require('lodash.merge'); See the documentation or package source for more details.","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/loose-envify/","text":"loose-envify Fast (and loose) selective process.env replacer using js-tokens instead of an AST. Works just like envify but much faster. Gotchas Doesn't handle broken syntax. Doesn't look inside embedded expressions in template strings. this won't work: js console.log(`the current env is ${process.env.NODE_ENV}`); Doesn't replace oddly-spaced or oddly-commented expressions. this won't work: js console.log(process./*won't*/env./*work*/NODE_ENV); Usage/Options loose-envify has the exact same interface as envify , including the CLI. Benchmark envify: $ for i in {1..5}; do node bench/bench.js 'envify'; done 708ms 727ms 791ms 719ms 720ms loose-envify: $ for i in {1..5}; do node bench/bench.js '../'; done 51ms 52ms 52ms 52ms 52ms","title":"loose-envify"},{"location":"_Disciplina/Code/my-react-app/node_modules/loose-envify/#loose-envify","text":"Fast (and loose) selective process.env replacer using js-tokens instead of an AST. Works just like envify but much faster.","title":"loose-envify"},{"location":"_Disciplina/Code/my-react-app/node_modules/loose-envify/#gotchas","text":"Doesn't handle broken syntax. Doesn't look inside embedded expressions in template strings. this won't work: js console.log(`the current env is ${process.env.NODE_ENV}`); Doesn't replace oddly-spaced or oddly-commented expressions. this won't work: js console.log(process./*won't*/env./*work*/NODE_ENV);","title":"Gotchas"},{"location":"_Disciplina/Code/my-react-app/node_modules/loose-envify/#usageoptions","text":"loose-envify has the exact same interface as envify , including the CLI.","title":"Usage/Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/loose-envify/#benchmark","text":"envify: $ for i in {1..5}; do node bench/bench.js 'envify'; done 708ms 727ms 791ms 719ms 720ms loose-envify: $ for i in {1..5}; do node bench/bench.js '../'; done 51ms 52ms 52ms 52ms 52ms","title":"Benchmark"},{"location":"_Disciplina/Code/my-react-app/node_modules/lru-cache/","text":"lru cache A cache object that deletes the least-recently-used items. Installation: npm install lru-cache --save Usage: var LRU = require(\"lru-cache\") , options = { max: 500 , length: function (n, key) { return n * 2 + key.length } , dispose: function (key, n) { n.close() } , maxAge: 1000 * 60 * 60 } , cache = new LRU(options) , otherCache = new LRU(50) // sets just the max size cache.set(\"key\", \"value\") cache.get(\"key\") // \"value\" // non-string keys ARE fully supported // but note that it must be THE SAME object, not // just a JSON-equivalent object. var someObject = { a: 1 } cache.set(someObject, 'a value') // Object keys are not toString()-ed cache.set('[object Object]', 'a different value') assert.equal(cache.get(someObject), 'a value') // A similar object with same keys/values won't work, // because it's a different object identity assert.equal(cache.get({ a: 1 }), undefined) cache.reset() // empty the cache If you put more stuff in it, then items will fall out. If you try to put an oversized thing in it, then it'll fall out right away. Options max The maximum size of the cache, checked by applying the length function to all values in the cache. Not setting this is kind of silly, since that's the whole purpose of this lib, but it defaults to Infinity . Setting it to a non-number or negative number will throw a TypeError . Setting it to 0 makes it be Infinity . maxAge Maximum age in ms. Items are not pro-actively pruned out as they age, but if you try to get an item that is too old, it'll drop it and return undefined instead of giving it to you. Setting this to a negative value will make everything seem old! Setting it to a non-number will throw a TypeError . length Function that is used to calculate the length of stored items. If you're storing strings or buffers, then you probably want to do something like function(n, key){return n.length} . The default is function(){return 1} , which is fine if you want to store max like-sized things. The item is passed as the first argument, and the key is passed as the second argumnet. dispose Function that is called on items when they are dropped from the cache. This can be handy if you want to close file descriptors or do other cleanup tasks when items are no longer accessible. Called with key, value . It's called before actually removing the item from the internal cache, so if you want to immediately put it back in, you'll have to do that in a nextTick or setTimeout callback or it won't do anything. stale By default, if you set a maxAge , it'll only actually pull stale items out of the cache when you get(key) . (That is, it's not pre-emptively doing a setTimeout or anything.) If you set stale:true , it'll return the stale value before deleting it. If you don't set this, then it'll return undefined when you try to get a stale entry, as if it had already been deleted. noDisposeOnSet By default, if you set a dispose() method, then it'll be called whenever a set() operation overwrites an existing key. If you set this option, dispose() will only be called when a key falls out of the cache, not when it is overwritten. updateAgeOnGet When using time-expiring entries with maxAge , setting this to true will make each item's effective time update to the current time whenever it is retrieved from cache, causing it to not expire. (It can still fall out of cache based on recency of use, of course.) API set(key, value, maxAge) get(key) => value Both of these will update the \"recently used\"-ness of the key. They do what you think. maxAge is optional and overrides the cache maxAge option if provided. If the key is not found, get() will return undefined . The key and val can be any value. peek(key) Returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key. (If you find yourself using this a lot, you might be using the wrong sort of data structure, but there are some use cases where it's handy.) del(key) Deletes a key out of the cache. reset() Clear the cache entirely, throwing away all values. has(key) Check if a key is in the cache, without updating the recent-ness or deleting it for being stale. forEach(function(value,key,cache), [thisp]) Just like Array.prototype.forEach . Iterates over all the keys in the cache, in order of recent-ness. (Ie, more recently used items are iterated over first.) rforEach(function(value,key,cache), [thisp]) The same as cache.forEach(...) but items are iterated over in reverse order. (ie, less recently used items are iterated over first.) keys() Return an array of the keys in the cache. values() Return an array of the values in the cache. length Return total length of objects in cache taking into account length options function. itemCount Return total quantity of objects currently in cache. Note, that stale (see options) items are returned as part of this item count. dump() Return an array of the cache entries ready for serialization and usage with 'destinationCache.load(arr)`. load(cacheEntriesArray) Loads another cache entries array, obtained with sourceCache.dump() , into the cache. The destination cache is reset before loading new entries prune() Manually iterates over the entire cache proactively pruning old entries","title":"lru cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/lru-cache/#lru-cache","text":"A cache object that deletes the least-recently-used items.","title":"lru cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/lru-cache/#installation","text":"npm install lru-cache --save","title":"Installation:"},{"location":"_Disciplina/Code/my-react-app/node_modules/lru-cache/#usage","text":"var LRU = require(\"lru-cache\") , options = { max: 500 , length: function (n, key) { return n * 2 + key.length } , dispose: function (key, n) { n.close() } , maxAge: 1000 * 60 * 60 } , cache = new LRU(options) , otherCache = new LRU(50) // sets just the max size cache.set(\"key\", \"value\") cache.get(\"key\") // \"value\" // non-string keys ARE fully supported // but note that it must be THE SAME object, not // just a JSON-equivalent object. var someObject = { a: 1 } cache.set(someObject, 'a value') // Object keys are not toString()-ed cache.set('[object Object]', 'a different value') assert.equal(cache.get(someObject), 'a value') // A similar object with same keys/values won't work, // because it's a different object identity assert.equal(cache.get({ a: 1 }), undefined) cache.reset() // empty the cache If you put more stuff in it, then items will fall out. If you try to put an oversized thing in it, then it'll fall out right away.","title":"Usage:"},{"location":"_Disciplina/Code/my-react-app/node_modules/lru-cache/#options","text":"max The maximum size of the cache, checked by applying the length function to all values in the cache. Not setting this is kind of silly, since that's the whole purpose of this lib, but it defaults to Infinity . Setting it to a non-number or negative number will throw a TypeError . Setting it to 0 makes it be Infinity . maxAge Maximum age in ms. Items are not pro-actively pruned out as they age, but if you try to get an item that is too old, it'll drop it and return undefined instead of giving it to you. Setting this to a negative value will make everything seem old! Setting it to a non-number will throw a TypeError . length Function that is used to calculate the length of stored items. If you're storing strings or buffers, then you probably want to do something like function(n, key){return n.length} . The default is function(){return 1} , which is fine if you want to store max like-sized things. The item is passed as the first argument, and the key is passed as the second argumnet. dispose Function that is called on items when they are dropped from the cache. This can be handy if you want to close file descriptors or do other cleanup tasks when items are no longer accessible. Called with key, value . It's called before actually removing the item from the internal cache, so if you want to immediately put it back in, you'll have to do that in a nextTick or setTimeout callback or it won't do anything. stale By default, if you set a maxAge , it'll only actually pull stale items out of the cache when you get(key) . (That is, it's not pre-emptively doing a setTimeout or anything.) If you set stale:true , it'll return the stale value before deleting it. If you don't set this, then it'll return undefined when you try to get a stale entry, as if it had already been deleted. noDisposeOnSet By default, if you set a dispose() method, then it'll be called whenever a set() operation overwrites an existing key. If you set this option, dispose() will only be called when a key falls out of the cache, not when it is overwritten. updateAgeOnGet When using time-expiring entries with maxAge , setting this to true will make each item's effective time update to the current time whenever it is retrieved from cache, causing it to not expire. (It can still fall out of cache based on recency of use, of course.)","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/lru-cache/#api","text":"set(key, value, maxAge) get(key) => value Both of these will update the \"recently used\"-ness of the key. They do what you think. maxAge is optional and overrides the cache maxAge option if provided. If the key is not found, get() will return undefined . The key and val can be any value. peek(key) Returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key. (If you find yourself using this a lot, you might be using the wrong sort of data structure, but there are some use cases where it's handy.) del(key) Deletes a key out of the cache. reset() Clear the cache entirely, throwing away all values. has(key) Check if a key is in the cache, without updating the recent-ness or deleting it for being stale. forEach(function(value,key,cache), [thisp]) Just like Array.prototype.forEach . Iterates over all the keys in the cache, in order of recent-ness. (Ie, more recently used items are iterated over first.) rforEach(function(value,key,cache), [thisp]) The same as cache.forEach(...) but items are iterated over in reverse order. (ie, less recently used items are iterated over first.) keys() Return an array of the keys in the cache. values() Return an array of the values in the cache. length Return total length of objects in cache taking into account length options function. itemCount Return total quantity of objects currently in cache. Note, that stale (see options) items are returned as part of this item count. dump() Return an array of the cache entries ready for serialization and usage with 'destinationCache.load(arr)`. load(cacheEntriesArray) Loads another cache entries array, obtained with sourceCache.dump() , into the cache. The destination cache is reset before loading new entries prune() Manually iterates over the entire cache proactively pruning old entries","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/","text":"minimatch A minimal matching utility. This is the matching library used internally by npm. It works by converting glob expressions into JavaScript RegExp objects. Usage var minimatch = require(\"minimatch\") minimatch(\"bar.foo\", \"*.foo\") // true! minimatch(\"bar.foo\", \"*.bar\") // false! minimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy! Features Supports these glob features: Brace Expansion Extended glob matching \"Globstar\" ** matching See: man sh man bash man 3 fnmatch man 5 gitignore Minimatch Class Create a minimatch object by instantiating the minimatch.Minimatch class. var Minimatch = require(\"minimatch\").Minimatch var mm = new Minimatch(pattern, options) Properties pattern The original pattern the minimatch object represents. options The options supplied to the constructor. set A 2-dimensional array of regexp or string expressions. Each row in the array corresponds to a brace-expanded pattern. Each item in the row corresponds to a single path-part. For example, the pattern {a,b/c}/d would expand to a set of patterns like: [ [ a, d ] , [ b, c, d ] ] If a portion of the pattern doesn't have any \"magic\" in it (that is, it's something like \"foo\" rather than fo*o? ), then it will be left as a string rather than converted to a regular expression. regexp Created by the makeRe method. A single regular expression expressing the entire pattern. This is useful in cases where you wish to use the pattern somewhat like fnmatch(3) with FNM_PATH enabled. negate True if the pattern is negated. comment True if the pattern is a comment. empty True if the pattern is \"\" . Methods makeRe Generate the regexp member if necessary, and return it. Will return false if the pattern is invalid. match(fname) Return true if the filename matches the pattern, or false otherwise. matchOne(fileArray, patternArray, partial) Take a / -split filename, and match it against a single row in the regExpSet . This method is mainly for internal use, but is exposed so that it can be used by a glob-walker that needs to avoid excessive filesystem calls. All other methods are internal, and will be called as necessary. minimatch(path, pattern, options) Main export. Tests a path against the pattern using the options. var isJS = minimatch(file, \"*.js\", { matchBase: true }) minimatch.filter(pattern, options) Returns a function that tests its supplied argument, suitable for use with Array.filter . Example: var javascripts = fileList.filter(minimatch.filter(\"*.js\", {matchBase: true})) minimatch.match(list, pattern, options) Match against the list of files, in the style of fnmatch or glob. If nothing is matched, and options.nonull is set, then return a list containing the pattern itself. var javascripts = minimatch.match(fileList, \"*.js\", {matchBase: true})) minimatch.makeRe(pattern, options) Make a regular expression object from the pattern. Options All options are false by default. debug Dump a ton of stuff to stderr. nobrace Do not expand {a,b} and {1..3} brace sets. noglobstar Disable ** matching against multiple folder names. dot Allow patterns to match filenames starting with a period, even if the pattern does not explicitly have a period in that spot. Note that by default, a/**/b will not match a/.d/b , unless dot is set. noext Disable \"extglob\" style patterns like +(a|b) . nocase Perform a case-insensitive match. nonull When a match is not found by minimatch.match , return a list containing the pattern itself if this option is set. When not set, an empty list is returned if there are no matches. matchBase If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, a?b would match the path /xyz/123/acb , but not /xyz/acb/123 . nocomment Suppress the behavior of treating # at the start of a pattern as a comment. nonegate Suppress the behavior of treating a leading ! character as negation. flipNegate Returns from negate expressions the same as if they were not negated. (Ie, true on a hit, false on a miss.) partial Compare a partial path to a pattern. As long as the parts of the path that are present are not contradicted by the pattern, it will be treated as a match. This is useful in applications where you're walking through a folder structure, and don't yet have the full path, but want to ensure that you do not walk down paths that can never be a match. For example, minimatch('/a/b', '/a/*/c/d', { partial: true }) // true, might be /a/b/c/d minimatch('/a/b', '/**/d', { partial: true }) // true, might be /a/b/.../d minimatch('/x/y/z', '/a/**/z', { partial: true }) // false, because x !== a allowWindowsEscape Windows path separator \\ is by default converted to / , which prohibits the usage of \\ as a escape character. This flag skips that behavior and allows using the escape character. Comparisons to other fnmatch/glob implementations While strict compliance with the existing standards is a worthwhile goal, some discrepancies exist between minimatch and other implementations, and are intentional. If the pattern starts with a ! character, then it is negated. Set the nonegate flag to suppress this behavior, and treat leading ! characters normally. This is perhaps relevant if you wish to start the pattern with a negative extglob pattern like !(a|B) . Multiple ! characters at the start of a pattern will negate the pattern multiple times. If a pattern starts with # , then it is treated as a comment, and will not match anything. Use \\# to match a literal # at the start of a line, or set the nocomment flag to suppress this behavior. The double-star character ** is supported by default, unless the noglobstar flag is set. This is supported in the manner of bsdglob and bash 4.1, where ** only has special significance if it is the only thing in a path part. That is, a/**/b will match a/x/y/b , but a/**b will not. If an escaped pattern has no matches, and the nonull flag is set, then minimatch.match returns the pattern as-provided, rather than interpreting the character escapes. For example, minimatch.match([], \"\\\\*a\\\\?\") will return \"\\\\*a\\\\?\" rather than \"*a?\" . This is akin to setting the nullglob option in bash, except that it does not resolve escaped pattern characters. If brace expansion is not disabled, then it is performed before any other interpretation of the glob pattern. Thus, a pattern like +(a|{b),c)} , which would not be valid in bash or zsh, is expanded first into the set of +(a|b) and +(a|c) , and those patterns are checked for validity. Since those two are valid, matching proceeds.","title":"minimatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#minimatch","text":"A minimal matching utility. This is the matching library used internally by npm. It works by converting glob expressions into JavaScript RegExp objects.","title":"minimatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#usage","text":"var minimatch = require(\"minimatch\") minimatch(\"bar.foo\", \"*.foo\") // true! minimatch(\"bar.foo\", \"*.bar\") // false! minimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy!","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#features","text":"Supports these glob features: Brace Expansion Extended glob matching \"Globstar\" ** matching See: man sh man bash man 3 fnmatch man 5 gitignore","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#minimatch-class","text":"Create a minimatch object by instantiating the minimatch.Minimatch class. var Minimatch = require(\"minimatch\").Minimatch var mm = new Minimatch(pattern, options)","title":"Minimatch Class"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#properties","text":"pattern The original pattern the minimatch object represents. options The options supplied to the constructor. set A 2-dimensional array of regexp or string expressions. Each row in the array corresponds to a brace-expanded pattern. Each item in the row corresponds to a single path-part. For example, the pattern {a,b/c}/d would expand to a set of patterns like: [ [ a, d ] , [ b, c, d ] ] If a portion of the pattern doesn't have any \"magic\" in it (that is, it's something like \"foo\" rather than fo*o? ), then it will be left as a string rather than converted to a regular expression. regexp Created by the makeRe method. A single regular expression expressing the entire pattern. This is useful in cases where you wish to use the pattern somewhat like fnmatch(3) with FNM_PATH enabled. negate True if the pattern is negated. comment True if the pattern is a comment. empty True if the pattern is \"\" .","title":"Properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#methods","text":"makeRe Generate the regexp member if necessary, and return it. Will return false if the pattern is invalid. match(fname) Return true if the filename matches the pattern, or false otherwise. matchOne(fileArray, patternArray, partial) Take a / -split filename, and match it against a single row in the regExpSet . This method is mainly for internal use, but is exposed so that it can be used by a glob-walker that needs to avoid excessive filesystem calls. All other methods are internal, and will be called as necessary.","title":"Methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#minimatchpath-pattern-options","text":"Main export. Tests a path against the pattern using the options. var isJS = minimatch(file, \"*.js\", { matchBase: true })","title":"minimatch(path, pattern, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#minimatchfilterpattern-options","text":"Returns a function that tests its supplied argument, suitable for use with Array.filter . Example: var javascripts = fileList.filter(minimatch.filter(\"*.js\", {matchBase: true}))","title":"minimatch.filter(pattern, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#minimatchmatchlist-pattern-options","text":"Match against the list of files, in the style of fnmatch or glob. If nothing is matched, and options.nonull is set, then return a list containing the pattern itself. var javascripts = minimatch.match(fileList, \"*.js\", {matchBase: true}))","title":"minimatch.match(list, pattern, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#minimatchmakerepattern-options","text":"Make a regular expression object from the pattern.","title":"minimatch.makeRe(pattern, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#options","text":"All options are false by default.","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#debug","text":"Dump a ton of stuff to stderr.","title":"debug"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#nobrace","text":"Do not expand {a,b} and {1..3} brace sets.","title":"nobrace"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#noglobstar","text":"Disable ** matching against multiple folder names.","title":"noglobstar"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#dot","text":"Allow patterns to match filenames starting with a period, even if the pattern does not explicitly have a period in that spot. Note that by default, a/**/b will not match a/.d/b , unless dot is set.","title":"dot"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#noext","text":"Disable \"extglob\" style patterns like +(a|b) .","title":"noext"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#nocase","text":"Perform a case-insensitive match.","title":"nocase"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#nonull","text":"When a match is not found by minimatch.match , return a list containing the pattern itself if this option is set. When not set, an empty list is returned if there are no matches.","title":"nonull"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#matchbase","text":"If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, a?b would match the path /xyz/123/acb , but not /xyz/acb/123 .","title":"matchBase"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#nocomment","text":"Suppress the behavior of treating # at the start of a pattern as a comment.","title":"nocomment"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#nonegate","text":"Suppress the behavior of treating a leading ! character as negation.","title":"nonegate"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#flipnegate","text":"Returns from negate expressions the same as if they were not negated. (Ie, true on a hit, false on a miss.)","title":"flipNegate"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#partial","text":"Compare a partial path to a pattern. As long as the parts of the path that are present are not contradicted by the pattern, it will be treated as a match. This is useful in applications where you're walking through a folder structure, and don't yet have the full path, but want to ensure that you do not walk down paths that can never be a match. For example, minimatch('/a/b', '/a/*/c/d', { partial: true }) // true, might be /a/b/c/d minimatch('/a/b', '/**/d', { partial: true }) // true, might be /a/b/.../d minimatch('/x/y/z', '/a/**/z', { partial: true }) // false, because x !== a","title":"partial"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#allowwindowsescape","text":"Windows path separator \\ is by default converted to / , which prohibits the usage of \\ as a escape character. This flag skips that behavior and allows using the escape character.","title":"allowWindowsEscape"},{"location":"_Disciplina/Code/my-react-app/node_modules/minimatch/#comparisons-to-other-fnmatchglob-implementations","text":"While strict compliance with the existing standards is a worthwhile goal, some discrepancies exist between minimatch and other implementations, and are intentional. If the pattern starts with a ! character, then it is negated. Set the nonegate flag to suppress this behavior, and treat leading ! characters normally. This is perhaps relevant if you wish to start the pattern with a negative extglob pattern like !(a|B) . Multiple ! characters at the start of a pattern will negate the pattern multiple times. If a pattern starts with # , then it is treated as a comment, and will not match anything. Use \\# to match a literal # at the start of a line, or set the nocomment flag to suppress this behavior. The double-star character ** is supported by default, unless the noglobstar flag is set. This is supported in the manner of bsdglob and bash 4.1, where ** only has special significance if it is the only thing in a path part. That is, a/**/b will match a/x/y/b , but a/**b will not. If an escaped pattern has no matches, and the nonull flag is set, then minimatch.match returns the pattern as-provided, rather than interpreting the character escapes. For example, minimatch.match([], \"\\\\*a\\\\?\") will return \"\\\\*a\\\\?\" rather than \"*a?\" . This is akin to setting the nullglob option in bash, except that it does not resolve escaped pattern characters. If brace expansion is not disabled, then it is performed before any other interpretation of the glob pattern. Thus, a pattern like +(a|{b),c)} , which would not be valid in bash or zsh, is expanded first into the set of +(a|b) and +(a|c) , and those patterns are checked for validity. Since those two are valid, matching proceeds.","title":"Comparisons to other fnmatch/glob implementations"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/license/","text":"The MIT License (MIT) Copyright (c) 2020 Vercel, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/","text":"ms Use this package to easily convert various time formats to milliseconds. Examples ms('2 days') // 172800000 ms('1d') // 86400000 ms('10h') // 36000000 ms('2.5 hrs') // 9000000 ms('2h') // 7200000 ms('1m') // 60000 ms('5s') // 5000 ms('1y') // 31557600000 ms('100') // 100 ms('-3 days') // -259200000 ms('-1h') // -3600000 ms('-200') // -200 Convert from Milliseconds ms(60000) // \"1m\" ms(2 * 60000) // \"2m\" ms(-3 * 60000) // \"-3m\" ms(ms('10 hours')) // \"10h\" Time Format Written-Out ms(60000, { long: true }) // \"1 minute\" ms(2 * 60000, { long: true }) // \"2 minutes\" ms(-3 * 60000, { long: true }) // \"-3 minutes\" ms(ms('10 hours'), { long: true }) // \"10 hours\" Features Works both in Node.js and in the browser If a number is supplied to ms , a string with a unit is returned If a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100' ) If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned Related Packages ms.macro - Run ms as a macro at build-time. Caught a Bug? Fork this repository to your own GitHub account and then clone it to your local device Link the package to the global module directory: npm link Within the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms . Instead of the default one from npm, Node.js will now use your clone of ms! As always, you can run the tests using: npm test","title":"ms"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#ms","text":"Use this package to easily convert various time formats to milliseconds.","title":"ms"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#examples","text":"ms('2 days') // 172800000 ms('1d') // 86400000 ms('10h') // 36000000 ms('2.5 hrs') // 9000000 ms('2h') // 7200000 ms('1m') // 60000 ms('5s') // 5000 ms('1y') // 31557600000 ms('100') // 100 ms('-3 days') // -259200000 ms('-1h') // -3600000 ms('-200') // -200","title":"Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#convert-from-milliseconds","text":"ms(60000) // \"1m\" ms(2 * 60000) // \"2m\" ms(-3 * 60000) // \"-3m\" ms(ms('10 hours')) // \"10h\"","title":"Convert from Milliseconds"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#time-format-written-out","text":"ms(60000, { long: true }) // \"1 minute\" ms(2 * 60000, { long: true }) // \"2 minutes\" ms(-3 * 60000, { long: true }) // \"-3 minutes\" ms(ms('10 hours'), { long: true }) // \"10 hours\"","title":"Time Format Written-Out"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#features","text":"Works both in Node.js and in the browser If a number is supplied to ms , a string with a unit is returned If a string that contains the number is supplied, it returns it as a number (e.g.: it returns 100 for '100' ) If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned","title":"Features"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#related-packages","text":"ms.macro - Run ms as a macro at build-time.","title":"Related Packages"},{"location":"_Disciplina/Code/my-react-app/node_modules/ms/readme/#caught-a-bug","text":"Fork this repository to your own GitHub account and then clone it to your local device Link the package to the global module directory: npm link Within the module you want to test your local development instance of ms, just link it to the dependencies: npm link ms . Instead of the default one from npm, Node.js will now use your clone of ms! As always, you can run the tests using: npm test","title":"Caught a Bug?"},{"location":"_Disciplina/Code/my-react-app/node_modules/nanoid/","text":"Nano ID English | \u0420\u0443\u0441\u0441\u043a\u0438\u0439 | \u7b80\u4f53\u4e2d\u6587 | Bahasa Indonesia A tiny, secure, URL-friendly, unique string ID generator for JavaScript. \u201cAn amazing level of senseless perfectionism, which is simply impossible not to respect.\u201d Small. 130 bytes (minified and gzipped). No dependencies. Size Limit controls the size. Fast. It is 2 times faster than UUID. Safe. It uses hardware random generator. Can be used in clusters. Short IDs. It uses a larger alphabet than UUID ( A-Za-z0-9_- ). So ID size was reduced from 36 to 21 symbols. Portable. Nano ID was ported to 20 programming languages . import { nanoid } from 'nanoid' model.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\" Supports modern browsers, IE with Babel , Node.js and React Native. Docs Read full docs here .","title":"Nano ID"},{"location":"_Disciplina/Code/my-react-app/node_modules/nanoid/#nano-id","text":"English | \u0420\u0443\u0441\u0441\u043a\u0438\u0439 | \u7b80\u4f53\u4e2d\u6587 | Bahasa Indonesia A tiny, secure, URL-friendly, unique string ID generator for JavaScript. \u201cAn amazing level of senseless perfectionism, which is simply impossible not to respect.\u201d Small. 130 bytes (minified and gzipped). No dependencies. Size Limit controls the size. Fast. It is 2 times faster than UUID. Safe. It uses hardware random generator. Can be used in clusters. Short IDs. It uses a larger alphabet than UUID ( A-Za-z0-9_- ). So ID size was reduced from 36 to 21 symbols. Portable. Nano ID was ported to 20 programming languages . import { nanoid } from 'nanoid' model.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\" Supports modern browsers, IE with Babel , Node.js and React Native.","title":"Nano ID"},{"location":"_Disciplina/Code/my-react-app/node_modules/nanoid/#docs","text":"Read full docs here .","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/","text":"@version 1.4.0 @date 2015-10-26 @stability 3 - Stable Natural Compare \u2013 Compare strings containing a mix of letters and numbers in the way a human being would in sort order. This is described as a \"natural ordering\". Standard sorting: Natural order sorting: img1.png img1.png img10.png img2.png img12.png img10.png img2.png img12.png String.naturalCompare returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order. Use it with builtin sort() function. Installation In browser <script src=min.natural-compare.js></script> In node.js: npm install natural-compare-lite require(\"natural-compare-lite\") Usage // Simple case sensitive example var a = [\"z1.doc\", \"z10.doc\", \"z17.doc\", \"z2.doc\", \"z23.doc\", \"z3.doc\"]; a.sort(String.naturalCompare); // [\"z1.doc\", \"z2.doc\", \"z3.doc\", \"z10.doc\", \"z17.doc\", \"z23.doc\"] // Use wrapper function for case insensitivity a.sort(function(a, b){ return String.naturalCompare(a.toLowerCase(), b.toLowerCase()); }) // In most cases we want to sort an array of objects var a = [ {\"street\":\"350 5th Ave\", \"room\":\"A-1021\"} , {\"street\":\"350 5th Ave\", \"room\":\"A-21046-b\"} ]; // sort by street, then by room a.sort(function(a, b){ return String.naturalCompare(a.street, b.street) || String.naturalCompare(a.room, b.room); }) // When text transformation is needed (eg toLowerCase()), // it is best for performance to keep // transformed key in that object. // There are no need to do text transformation // on each comparision when sorting. var a = [ {\"make\":\"Audi\", \"model\":\"A6\"} , {\"make\":\"Kia\", \"model\":\"Rio\"} ]; // sort by make, then by model a.map(function(car){ car.sort_key = (car.make + \" \" + car.model).toLowerCase(); }) a.sort(function(a, b){ return String.naturalCompare(a.sort_key, b.sort_key); }) Works well with dates in ISO format eg \"Rev 2012-07-26.doc\". Custom alphabet It is possible to configure a custom alphabet to achieve a desired order. // Estonian alphabet String.alphabet = \"ABDEFGHIJKLMNOPRS\u0160Z\u017dTUV\u00d5\u00c4\u00d6\u00dcXYabdefghijklmnoprs\u0161z\u017etuv\u00f5\u00e4\u00f6\u00fcxy\" [\"t\", \"z\", \"x\", \"\u00f5\"].sort(String.naturalCompare) // [\"z\", \"t\", \"\u00f5\", \"x\"] // Russian alphabet String.alphabet = \"\u0410\u0411\u0412\u0413\u0414\u0415\u0401\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0451\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\" [\"\u0401\", \"\u0410\", \"\u0411\"].sort(String.naturalCompare) // [\"\u0410\", \"\u0411\", \"\u0401\"] External links GitHub repo [https://github.com/litejs/natural-compare-lite] jsperf test Licence Copyright (c) 2012-2015 Lauri Rooden <lauri@rooden.ee> The MIT License","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/#natural-compare","text":"Compare strings containing a mix of letters and numbers in the way a human being would in sort order. This is described as a \"natural ordering\". Standard sorting: Natural order sorting: img1.png img1.png img10.png img2.png img12.png img10.png img2.png img12.png String.naturalCompare returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order. Use it with builtin sort() function.","title":"Natural Compare &ndash;"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/#installation","text":"In browser <script src=min.natural-compare.js></script> In node.js: npm install natural-compare-lite require(\"natural-compare-lite\")","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/#usage","text":"// Simple case sensitive example var a = [\"z1.doc\", \"z10.doc\", \"z17.doc\", \"z2.doc\", \"z23.doc\", \"z3.doc\"]; a.sort(String.naturalCompare); // [\"z1.doc\", \"z2.doc\", \"z3.doc\", \"z10.doc\", \"z17.doc\", \"z23.doc\"] // Use wrapper function for case insensitivity a.sort(function(a, b){ return String.naturalCompare(a.toLowerCase(), b.toLowerCase()); }) // In most cases we want to sort an array of objects var a = [ {\"street\":\"350 5th Ave\", \"room\":\"A-1021\"} , {\"street\":\"350 5th Ave\", \"room\":\"A-21046-b\"} ]; // sort by street, then by room a.sort(function(a, b){ return String.naturalCompare(a.street, b.street) || String.naturalCompare(a.room, b.room); }) // When text transformation is needed (eg toLowerCase()), // it is best for performance to keep // transformed key in that object. // There are no need to do text transformation // on each comparision when sorting. var a = [ {\"make\":\"Audi\", \"model\":\"A6\"} , {\"make\":\"Kia\", \"model\":\"Rio\"} ]; // sort by make, then by model a.map(function(car){ car.sort_key = (car.make + \" \" + car.model).toLowerCase(); }) a.sort(function(a, b){ return String.naturalCompare(a.sort_key, b.sort_key); }) Works well with dates in ISO format eg \"Rev 2012-07-26.doc\".","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/#custom-alphabet","text":"It is possible to configure a custom alphabet to achieve a desired order. // Estonian alphabet String.alphabet = \"ABDEFGHIJKLMNOPRS\u0160Z\u017dTUV\u00d5\u00c4\u00d6\u00dcXYabdefghijklmnoprs\u0161z\u017etuv\u00f5\u00e4\u00f6\u00fcxy\" [\"t\", \"z\", \"x\", \"\u00f5\"].sort(String.naturalCompare) // [\"z\", \"t\", \"\u00f5\", \"x\"] // Russian alphabet String.alphabet = \"\u0410\u0411\u0412\u0413\u0414\u0415\u0401\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0451\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\" [\"\u0401\", \"\u0410\", \"\u0411\"].sort(String.naturalCompare) // [\"\u0410\", \"\u0411\", \"\u0401\"]","title":"Custom alphabet"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/#external-links","text":"GitHub repo [https://github.com/litejs/natural-compare-lite] jsperf test","title":"External links"},{"location":"_Disciplina/Code/my-react-app/node_modules/natural-compare/#licence","text":"Copyright (c) 2012-2015 Lauri Rooden <lauri@rooden.ee> The MIT License","title":"Licence"},{"location":"_Disciplina/Code/my-react-app/node_modules/node-releases/","text":"Node.js releases data All data is located in data directory. data/processed contains envs.json with node.js releases data preprocessed to be used by Browserslist and other projects. Each version in this file contains only necessary info: version, release date, LTS flag/name, and security flag. data/release-schedule contains release-schedule.json with node.js releases date and end of life date. Installation npm install node-releases","title":"Node.js releases data"},{"location":"_Disciplina/Code/my-react-app/node_modules/node-releases/#nodejs-releases-data","text":"All data is located in data directory. data/processed contains envs.json with node.js releases data preprocessed to be used by Browserslist and other projects. Each version in this file contains only necessary info: version, release date, LTS flag/name, and security flag. data/release-schedule contains release-schedule.json with node.js releases date and end of life date.","title":"Node.js releases data"},{"location":"_Disciplina/Code/my-react-app/node_modules/node-releases/#installation","text":"npm install node-releases","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/","text":"object-assign ES2015 Object.assign() ponyfill Use the built-in Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari), support Object.assign() :tada:. If you target only those environments, then by all means, use Object.assign() instead of this package. Install $ npm install --save object-assign Usage const objectAssign = require('object-assign'); objectAssign({foo: 0}, {bar: 1}); //=> {foo: 0, bar: 1} // multiple sources objectAssign({foo: 0}, {bar: 1}, {baz: 2}); //=> {foo: 0, bar: 1, baz: 2} // overwrites equal keys objectAssign({foo: 0}, {foo: 1}, {foo: 2}); //=> {foo: 2} // ignores null and undefined sources objectAssign({foo: 0}, null, {bar: 1}, undefined); //=> {foo: 0, bar: 1} API objectAssign(target, [source, ...]) Assigns enumerable own properties of source objects to the target object and returns the target object. Additional source objects will overwrite previous ones. Resources ES2015 spec - Object.assign Related deep-assign - Recursive Object.assign() License MIT \u00a9 Sindre Sorhus","title":"object-assign Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#object-assign","text":"ES2015 Object.assign() ponyfill","title":"object-assign"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#use-the-built-in","text":"Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari), support Object.assign() :tada:. If you target only those environments, then by all means, use Object.assign() instead of this package.","title":"Use the built-in"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#install","text":"$ npm install --save object-assign","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#usage","text":"const objectAssign = require('object-assign'); objectAssign({foo: 0}, {bar: 1}); //=> {foo: 0, bar: 1} // multiple sources objectAssign({foo: 0}, {bar: 1}, {baz: 2}); //=> {foo: 0, bar: 1, baz: 2} // overwrites equal keys objectAssign({foo: 0}, {foo: 1}, {foo: 2}); //=> {foo: 2} // ignores null and undefined sources objectAssign({foo: 0}, null, {bar: 1}, undefined); //=> {foo: 0, bar: 1}","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#objectassigntarget-source","text":"Assigns enumerable own properties of source objects to the target object and returns the target object. Additional source objects will overwrite previous ones.","title":"objectAssign(target, [source, ...])"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#resources","text":"ES2015 spec - Object.assign","title":"Resources"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#related","text":"deep-assign - Recursive Object.assign()","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-assign/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.13.2 - 2024-06-21 Commits [readme] update badges 8a51e6b [Dev Deps] update @ljharb/eslint-config , tape ef05f58 [Dev Deps] update error-cause , has-tostringtag , tape c0c6c26 [Fix] Don't throw when global is not defined d4d0965 [meta] add missing engines.node 17a352a [Dev Deps] update globalthis 9c08884 [Dev Deps] update error-cause 6af352d [Dev Deps] update npmignore 94e617d [Dev Deps] update mock-property 2ac24d7 [Dev Deps] update tape 46125e5 v1.13.1 - 2023-10-19 Commits [Fix] in IE 8, global can !== window despite them being prototypes of each other 30d0859 v1.13.0 - 2023-10-14 Commits [New] add special handling for the global object 431bab2 [Dev Deps] update @ljharb/eslint-config , aud , tape fd4f619 [Dev Deps] update mock-property , tape b453f6c [Dev Deps] update error-cause e8ffc57 [Dev Deps] update tape 054b8b9 [Dev Deps] temporarily remove aud due to breaking change in transitive deps 2476845 [Dev Deps] pin glob , since v10.3.8+ requires a broken jackspeak 383fa5e [Dev Deps] pin jackspeak since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6 68c244c v1.12.3 - 2023-01-12 Commits [Fix] in eg FF 24, collections lack forEach 75fc226 [actions] update rebase action to use reusable workflow 250a277 [Dev Deps] update aud , es-value-fixtures , tape 66a19b3 [Dev Deps] update @ljharb/eslint-config , aud , error-cause c43d332 [Tests] add @pkgjs/support to postlint e2618d2 v1.12.2 - 2022-05-26 Commits [Fix] use util.inspect for a custom inspection symbol method e243bf2 [meta] add support info ca20ba3 [Fix] ignore cause in node v16.9 and v16.10 where it has a bug 86aa553 v1.12.1 - 2022-05-21 Commits [Tests] use mock-property 4ec8893 [meta] use npmignore to autogenerate an npmignore file 07f868c [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape b05244b [Dev Deps] update @ljharb/eslint-config , error-cause , es-value-fixtures , functions-have-names , tape d037398 [Fix] properly handle callable regexes in older engines 848fe48 v1.12.0 - 2021-12-18 Commits [New] add numericSeparator boolean option 2d2d537 [Robustness] cache more prototype methods 191533d [New] ensure an Error\u2019s cause is displayed 53bc2ce [Dev Deps] update eslint , @ljharb/eslint-config bc164b6 [Robustness] cache RegExp.prototype.test a314ab8 [meta] fix auto-changelog settings 5ed0983 v1.11.1 - 2021-12-05 Commits [meta] add auto-changelog 7dbdd22 [actions] reuse common workflows c8823bc [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 7532b12 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 94abb5d [actions] update codecov uploader 5ed5102 [Dev Deps] update eslint , tape 37b2ad2 [meta] add sideEffects flag d341f90 v1.11.0 - 2021-07-12 Commits [New] customInspect : add symbol option, to mimic modern util.inspect behavior e973a6e [Dev Deps] update eslint 05f1cb3 v1.10.3 - 2021-05-07 Commits [Fix] handle core-js Symbol shams 4acfc2c [readme] update badges 95c323a [Dev Deps] update eslint , @ljharb/eslint-config , aud cb38f48 v1.10.2 - 2021-04-17 Commits [Fix] use a robust check for a boxed Symbol 87f12d6 v1.10.1 - 2021-04-17 Commits [Fix] use a robust check for a boxed bigint d5ca829 v1.10.0 - 2021-04-17 Commits [Tests] increase coverage d8abb8a [actions] use node/install instead of node/run ; use codecov action 4bfec2e [New] respect Symbol.toStringTag on objects 799b58f [Fix] do not allow Symbol.toStringTag to masquerade as builtins d6c5b37 [New] add WeakRef support b6d898e [meta] do not publish github action workflow files 918cdfc [meta] create FUNDING.yml 0bb5fc5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 22c8dc0 [meta] use prepublishOnly script for npm 7+ e52ee09 [Dev Deps] update eslint 7c4e6fd v1.9.0 - 2020-11-30 Commits [Tests] migrate tests to Github Actions d262251 [New] add enumerable own Symbols to plain object output ee60c03 [Tests] add passing tests 01ac3e4 [actions] add \"Require Allow Edits\" action c2d7746 [Dev Deps] update eslint , @ljharb/eslint-config , aud , core-js 70058de [Fix] hex characters in strings should be uppercased, to match node assert 6ab8faa [Tests] run nyc on all tests 4c47372 [Tests] node 0.8 has an unpredictable property order; fix groups test by removing property f192069 [New] add enumerable properties to Function inspect result, per node\u2019s assert fd38e1b [Tests] fix tests for node < 10, due to regex match groups 2ac6462 [Dev Deps] update eslint , @ljharb/eslint-config 44b59e2 [Robustness] cache Symbol.prototype.toString f3c2074 [Dev Deps] update eslint 9411294 [meta] require-allow-edits no longer requires an explicit github token 36c0220 [actions] update rebase checkout action to v2 55a39a6 [actions] switch Automatic Rebase workflow to pull_request_target event f59fd3c [Dev Deps] update eslint a492bec v1.8.0 - 2020-06-18 Fixed [New] add indent option #27 Commits [Tests] add codecov 4324cbb [New] add maxStringLength option b3995cb [New] add customInspect option, to disable custom inspect methods 28b9179 [Tests] add Date and RegExp tests 3b28eca [actions] add automatic rebasing / merge commit blocking 0d9c6c0 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape ; add aud 7c204f2 [readme] fix repo URLs, remove testling 34ca9a0 [Fix] when truncating a deep array, note it as [Array] instead of just [Object] f74c82d [Dev Deps] update eslint , @ljharb/eslint-config , tape 1a8a5ea [Fix] do not be fooled by a function\u2019s own toString method 7cb5c65 [patch] indicate explicitly that anon functions are anonymous, to match node 81ebdd4 [Dev Deps] loosen the core-js dep e7472e8 [Dev Deps] update tape 699827e [meta] add safe-publish-latest c5d2868 [Dev Deps] update @ljharb/eslint-config 9199501 v1.7.0 - 2019-11-10 Commits [Tests] use shared travis-ci configs 19899ed [Tests] add linting a00f057 [Tests] lint last file 2698047 [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 589e87a [New] add support for WeakMap and WeakSet 3ddb3e4 [meta] clean up license so github can detect it properly 27527bb [Tests] cover util.inspect.custom 36d47b9 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape b614eaa [Tests] fix coverage thresholds 7b7b176 [Tests] bigint tests now can run on unflagged node 063af31 [Refactor] add early bailout to isMap and isSet checks fc51047 [meta] add funding field 7f9953a [Tests] Fix invalid strict-mode syntax with hexadecimal a8b5425 [Dev Deps] update @ljharb/eslint-config 98df157 add copyright to LICENSE bb69fd0 [Tests] use npx aud in posttest 4838353 [Tests] move 0.6 to allowed failures, because it won\u2018t build on travis 1bff32a v1.6.0 - 2018-05-02 Commits [New] add support for boxed BigInt primitives 356c66a [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 c77b65b [New] Add support for upcoming BigInt 1ac548e [Tests] run bigint tests in CI with --harmony-bigint flag d31b738 [Dev Deps] update core-js , tape ff9eff6 [Docs] fix example to use safer-buffer 48cae12 v1.5.0 - 2017-12-25 Commits [New] add quoteStyle option f5a72d2 [Tests] add more test coverage 30ebe4e [Tests] require 0.6 to pass 99a008c v1.4.1 - 2017-12-19 Commits [Tests] up to node v9.3 , v8.9 , v6.12 6674476 [Fix] inspect(Object(-0)) should be \u201cObject(-0)\u201d, not \u201cObject(0)\u201d d0a031f v1.4.0 - 2017-10-24 Commits [Tests] add npm run coverage 3b48fb2 [Tests] remove commented-out osx builds 71e24db [New] add support for util.inspect.custom , in node only. 20cca77 [Tests] up to node v8.6 ; use nvm install-latest-npm to ensure new npm doesn\u2019t break old node 252952d [Tests] up to node v8.8 4aa868d [Dev Deps] update core-js , tape 59483d1 v1.3.0 - 2017-07-31 Fixed [Fix] Map/Set: work around core-js bug < v2.5.0 #9 Commits [New] add support for arrays with additional object keys 0d19937 [Tests] up to node v8.2 , v7.10 , v6.11 ; fix new npm breaking on older nodes e24784a Only apps should have lockfiles c6faebc [Dev Deps] update tape 7345a0a v1.2.2 - 2017-03-24 Commits [Tests] up to node v7.7 , v6.10 , v4.8 ; improve test matrix a2ddc15 [Tests] up to node v7.0 , v6.9 , v5.12 , v4.6 , io.js v3.3 ; improve test matrix a48949f [Performance] check for primitive types as early as possible. 3b8092a [Refactor] remove unneeded else s. 7255034 [Refactor] avoid recreating lowbyte function every time. 81edd34 [Fix] differentiate -0 from 0 521d345 [Refactor] move object key gathering into separate function aca6265 [Refactor] consolidate wrapping logic for boxed primitives into a function. 4e440cd [Robustness] use typeof instead of comparing to literal undefined 5ca6f60 [Refactor] consolidate Map/Set notations. 4e576e5 [Tests] ensure that this function remains anonymous, despite ES6 name inference. 7540ae5 [Refactor] explicitly coerce Error objects to strings. 7f4ca84 [Refactor] split up var declarations for debuggability 6f2c11e [Robustness] cache Object.prototype.toString df44a20 [Dev Deps] update tape 3ec714e [Dev Deps] update tape beb72d9 v1.2.1 - 2016-04-09 Fixed [Fix] fix Boolean false object inspection. #7 v1.2.0 - 2016-04-09 Fixed [New] add support for inspecting String/Number/Boolean objects. #6 Commits [Dev Deps] update tape 742caa2 v1.1.0 - 2015-12-14 Merged [New] add ES6 Map/Set support. #4 Fixed [New] add ES6 Map/Set support. #3 Commits Update travis.yml to test on bunches of iojs and node versions. 4c1fd65 [Dev Deps] update tape 88a907e 1.0.2 - 2015-08-07 Commits [Fix] Cache Object.prototype.hasOwnProperty in case it's deleted later. 1d0075d [Dev Deps] Update tape ca8d5d7 gitignore node_modules since this is a reusable modules. ed41407 1.0.1 - 2015-07-19 Commits Make inspect work with symbol primitives and objects, including in node 0.11 and 0.12. ddf1b94 bump tape 103d674 use newer travis config d497276 1.0.0 - 2014-08-05 Commits error inspect works properly 260a22d seen coverage 57269e8 htmlelement instance coverage 397ffe1 more element coverage 6905cc2 failing test for type errors 385b615 fn name coverage edc906d server-side element test 362d1d3 custom inspect fn e89b0f6 fixed browser test b530882 depth test, matches node 1cfd9e0 exercise hasOwnProperty path 8d753fb more cases covered for errors c5c46a5 \\W obj key test case b0eceee coverage for explicit depth param e12b91c 0.4.0 - 2014-03-21 Commits passing lowbyte interpolation test b847511 lowbyte test 4a2b0e1 0.3.1 - 2014-03-04 Commits sort keys a07b19c 0.3.0 - 2014-03-04 Commits [] and {} instead of [ ] and { } 654c44b 0.2.0 - 2014-03-04 Commits failing holes test 99cdfad regex already work e324033 failing undef/null test 1f88a00 holes in the all example 7d345f3 check for .inspect(), fixes Buffer use-case c3f7546 fixes for holes ce25f73 weird null behavior 405c1ea tape is actually a devDependency, upgrade 703b0ce put date in the example a342219 passing the null test 4ab737e 0.1.3 - 2013-07-26 Commits special isElement() check 882768a oh right old IEs don't have indexOf either 36d1275 0.1.1 - 2013-07-26 Commits tests! 4422fd9 fix for ie<9, doesn't have hasOwnProperty 6b7d611 fix for all IEs: no f.name 4e0c2f6 badges 5ed0d88 0.1.0 - 2013-07-26 Commits [Function] for functions ad5c485 0.0.0 - 2013-07-26 Commits working browser example 34be6b6 package.json etc cad51f2 docs complete b80cce2 circular example 4b4a7b9 string rep 7afb479","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1132-2024-06-21","text":"","title":"v1.13.2 - 2024-06-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits","text":"[readme] update badges 8a51e6b [Dev Deps] update @ljharb/eslint-config , tape ef05f58 [Dev Deps] update error-cause , has-tostringtag , tape c0c6c26 [Fix] Don't throw when global is not defined d4d0965 [meta] add missing engines.node 17a352a [Dev Deps] update globalthis 9c08884 [Dev Deps] update error-cause 6af352d [Dev Deps] update npmignore 94e617d [Dev Deps] update mock-property 2ac24d7 [Dev Deps] update tape 46125e5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1131-2023-10-19","text":"","title":"v1.13.1 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_1","text":"[Fix] in IE 8, global can !== window despite them being prototypes of each other 30d0859","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1130-2023-10-14","text":"","title":"v1.13.0 - 2023-10-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_2","text":"[New] add special handling for the global object 431bab2 [Dev Deps] update @ljharb/eslint-config , aud , tape fd4f619 [Dev Deps] update mock-property , tape b453f6c [Dev Deps] update error-cause e8ffc57 [Dev Deps] update tape 054b8b9 [Dev Deps] temporarily remove aud due to breaking change in transitive deps 2476845 [Dev Deps] pin glob , since v10.3.8+ requires a broken jackspeak 383fa5e [Dev Deps] pin jackspeak since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6 68c244c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1123-2023-01-12","text":"","title":"v1.12.3 - 2023-01-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_3","text":"[Fix] in eg FF 24, collections lack forEach 75fc226 [actions] update rebase action to use reusable workflow 250a277 [Dev Deps] update aud , es-value-fixtures , tape 66a19b3 [Dev Deps] update @ljharb/eslint-config , aud , error-cause c43d332 [Tests] add @pkgjs/support to postlint e2618d2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1122-2022-05-26","text":"","title":"v1.12.2 - 2022-05-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_4","text":"[Fix] use util.inspect for a custom inspection symbol method e243bf2 [meta] add support info ca20ba3 [Fix] ignore cause in node v16.9 and v16.10 where it has a bug 86aa553","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1121-2022-05-21","text":"","title":"v1.12.1 - 2022-05-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_5","text":"[Tests] use mock-property 4ec8893 [meta] use npmignore to autogenerate an npmignore file 07f868c [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape b05244b [Dev Deps] update @ljharb/eslint-config , error-cause , es-value-fixtures , functions-have-names , tape d037398 [Fix] properly handle callable regexes in older engines 848fe48","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1120-2021-12-18","text":"","title":"v1.12.0 - 2021-12-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_6","text":"[New] add numericSeparator boolean option 2d2d537 [Robustness] cache more prototype methods 191533d [New] ensure an Error\u2019s cause is displayed 53bc2ce [Dev Deps] update eslint , @ljharb/eslint-config bc164b6 [Robustness] cache RegExp.prototype.test a314ab8 [meta] fix auto-changelog settings 5ed0983","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1111-2021-12-05","text":"","title":"v1.11.1 - 2021-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_7","text":"[meta] add auto-changelog 7dbdd22 [actions] reuse common workflows c8823bc [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 7532b12 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 94abb5d [actions] update codecov uploader 5ed5102 [Dev Deps] update eslint , tape 37b2ad2 [meta] add sideEffects flag d341f90","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1110-2021-07-12","text":"","title":"v1.11.0 - 2021-07-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_8","text":"[New] customInspect : add symbol option, to mimic modern util.inspect behavior e973a6e [Dev Deps] update eslint 05f1cb3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1103-2021-05-07","text":"","title":"v1.10.3 - 2021-05-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_9","text":"[Fix] handle core-js Symbol shams 4acfc2c [readme] update badges 95c323a [Dev Deps] update eslint , @ljharb/eslint-config , aud cb38f48","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1102-2021-04-17","text":"","title":"v1.10.2 - 2021-04-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_10","text":"[Fix] use a robust check for a boxed Symbol 87f12d6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1101-2021-04-17","text":"","title":"v1.10.1 - 2021-04-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_11","text":"[Fix] use a robust check for a boxed bigint d5ca829","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v1100-2021-04-17","text":"","title":"v1.10.0 - 2021-04-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_12","text":"[Tests] increase coverage d8abb8a [actions] use node/install instead of node/run ; use codecov action 4bfec2e [New] respect Symbol.toStringTag on objects 799b58f [Fix] do not allow Symbol.toStringTag to masquerade as builtins d6c5b37 [New] add WeakRef support b6d898e [meta] do not publish github action workflow files 918cdfc [meta] create FUNDING.yml 0bb5fc5 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 22c8dc0 [meta] use prepublishOnly script for npm 7+ e52ee09 [Dev Deps] update eslint 7c4e6fd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v190-2020-11-30","text":"","title":"v1.9.0 - 2020-11-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_13","text":"[Tests] migrate tests to Github Actions d262251 [New] add enumerable own Symbols to plain object output ee60c03 [Tests] add passing tests 01ac3e4 [actions] add \"Require Allow Edits\" action c2d7746 [Dev Deps] update eslint , @ljharb/eslint-config , aud , core-js 70058de [Fix] hex characters in strings should be uppercased, to match node assert 6ab8faa [Tests] run nyc on all tests 4c47372 [Tests] node 0.8 has an unpredictable property order; fix groups test by removing property f192069 [New] add enumerable properties to Function inspect result, per node\u2019s assert fd38e1b [Tests] fix tests for node < 10, due to regex match groups 2ac6462 [Dev Deps] update eslint , @ljharb/eslint-config 44b59e2 [Robustness] cache Symbol.prototype.toString f3c2074 [Dev Deps] update eslint 9411294 [meta] require-allow-edits no longer requires an explicit github token 36c0220 [actions] update rebase checkout action to v2 55a39a6 [actions] switch Automatic Rebase workflow to pull_request_target event f59fd3c [Dev Deps] update eslint a492bec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v180-2020-06-18","text":"","title":"v1.8.0 - 2020-06-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#fixed","text":"[New] add indent option #27","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_14","text":"[Tests] add codecov 4324cbb [New] add maxStringLength option b3995cb [New] add customInspect option, to disable custom inspect methods 28b9179 [Tests] add Date and RegExp tests 3b28eca [actions] add automatic rebasing / merge commit blocking 0d9c6c0 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape ; add aud 7c204f2 [readme] fix repo URLs, remove testling 34ca9a0 [Fix] when truncating a deep array, note it as [Array] instead of just [Object] f74c82d [Dev Deps] update eslint , @ljharb/eslint-config , tape 1a8a5ea [Fix] do not be fooled by a function\u2019s own toString method 7cb5c65 [patch] indicate explicitly that anon functions are anonymous, to match node 81ebdd4 [Dev Deps] loosen the core-js dep e7472e8 [Dev Deps] update tape 699827e [meta] add safe-publish-latest c5d2868 [Dev Deps] update @ljharb/eslint-config 9199501","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v170-2019-11-10","text":"","title":"v1.7.0 - 2019-11-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_15","text":"[Tests] use shared travis-ci configs 19899ed [Tests] add linting a00f057 [Tests] lint last file 2698047 [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 589e87a [New] add support for WeakMap and WeakSet 3ddb3e4 [meta] clean up license so github can detect it properly 27527bb [Tests] cover util.inspect.custom 36d47b9 [Dev Deps] update eslint , @ljharb/eslint-config , core-js , tape b614eaa [Tests] fix coverage thresholds 7b7b176 [Tests] bigint tests now can run on unflagged node 063af31 [Refactor] add early bailout to isMap and isSet checks fc51047 [meta] add funding field 7f9953a [Tests] Fix invalid strict-mode syntax with hexadecimal a8b5425 [Dev Deps] update @ljharb/eslint-config 98df157 add copyright to LICENSE bb69fd0 [Tests] use npx aud in posttest 4838353 [Tests] move 0.6 to allowed failures, because it won\u2018t build on travis 1bff32a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v160-2018-05-02","text":"","title":"v1.6.0 - 2018-05-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_16","text":"[New] add support for boxed BigInt primitives 356c66a [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 c77b65b [New] Add support for upcoming BigInt 1ac548e [Tests] run bigint tests in CI with --harmony-bigint flag d31b738 [Dev Deps] update core-js , tape ff9eff6 [Docs] fix example to use safer-buffer 48cae12","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v150-2017-12-25","text":"","title":"v1.5.0 - 2017-12-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_17","text":"[New] add quoteStyle option f5a72d2 [Tests] add more test coverage 30ebe4e [Tests] require 0.6 to pass 99a008c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v141-2017-12-19","text":"","title":"v1.4.1 - 2017-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_18","text":"[Tests] up to node v9.3 , v8.9 , v6.12 6674476 [Fix] inspect(Object(-0)) should be \u201cObject(-0)\u201d, not \u201cObject(0)\u201d d0a031f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v140-2017-10-24","text":"","title":"v1.4.0 - 2017-10-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_19","text":"[Tests] add npm run coverage 3b48fb2 [Tests] remove commented-out osx builds 71e24db [New] add support for util.inspect.custom , in node only. 20cca77 [Tests] up to node v8.6 ; use nvm install-latest-npm to ensure new npm doesn\u2019t break old node 252952d [Tests] up to node v8.8 4aa868d [Dev Deps] update core-js , tape 59483d1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v130-2017-07-31","text":"","title":"v1.3.0 - 2017-07-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#fixed_1","text":"[Fix] Map/Set: work around core-js bug < v2.5.0 #9","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_20","text":"[New] add support for arrays with additional object keys 0d19937 [Tests] up to node v8.2 , v7.10 , v6.11 ; fix new npm breaking on older nodes e24784a Only apps should have lockfiles c6faebc [Dev Deps] update tape 7345a0a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v122-2017-03-24","text":"","title":"v1.2.2 - 2017-03-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_21","text":"[Tests] up to node v7.7 , v6.10 , v4.8 ; improve test matrix a2ddc15 [Tests] up to node v7.0 , v6.9 , v5.12 , v4.6 , io.js v3.3 ; improve test matrix a48949f [Performance] check for primitive types as early as possible. 3b8092a [Refactor] remove unneeded else s. 7255034 [Refactor] avoid recreating lowbyte function every time. 81edd34 [Fix] differentiate -0 from 0 521d345 [Refactor] move object key gathering into separate function aca6265 [Refactor] consolidate wrapping logic for boxed primitives into a function. 4e440cd [Robustness] use typeof instead of comparing to literal undefined 5ca6f60 [Refactor] consolidate Map/Set notations. 4e576e5 [Tests] ensure that this function remains anonymous, despite ES6 name inference. 7540ae5 [Refactor] explicitly coerce Error objects to strings. 7f4ca84 [Refactor] split up var declarations for debuggability 6f2c11e [Robustness] cache Object.prototype.toString df44a20 [Dev Deps] update tape 3ec714e [Dev Deps] update tape beb72d9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v121-2016-04-09","text":"","title":"v1.2.1 - 2016-04-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#fixed_2","text":"[Fix] fix Boolean false object inspection. #7","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v120-2016-04-09","text":"","title":"v1.2.0 - 2016-04-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#fixed_3","text":"[New] add support for inspecting String/Number/Boolean objects. #6","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_22","text":"[Dev Deps] update tape 742caa2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#v110-2015-12-14","text":"","title":"v1.1.0 - 2015-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#merged","text":"[New] add ES6 Map/Set support. #4","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#fixed_4","text":"[New] add ES6 Map/Set support. #3","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_23","text":"Update travis.yml to test on bunches of iojs and node versions. 4c1fd65 [Dev Deps] update tape 88a907e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#102-2015-08-07","text":"","title":"1.0.2 - 2015-08-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_24","text":"[Fix] Cache Object.prototype.hasOwnProperty in case it's deleted later. 1d0075d [Dev Deps] Update tape ca8d5d7 gitignore node_modules since this is a reusable modules. ed41407","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#101-2015-07-19","text":"","title":"1.0.1 - 2015-07-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_25","text":"Make inspect work with symbol primitives and objects, including in node 0.11 and 0.12. ddf1b94 bump tape 103d674 use newer travis config d497276","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#100-2014-08-05","text":"","title":"1.0.0 - 2014-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_26","text":"error inspect works properly 260a22d seen coverage 57269e8 htmlelement instance coverage 397ffe1 more element coverage 6905cc2 failing test for type errors 385b615 fn name coverage edc906d server-side element test 362d1d3 custom inspect fn e89b0f6 fixed browser test b530882 depth test, matches node 1cfd9e0 exercise hasOwnProperty path 8d753fb more cases covered for errors c5c46a5 \\W obj key test case b0eceee coverage for explicit depth param e12b91c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#040-2014-03-21","text":"","title":"0.4.0 - 2014-03-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_27","text":"passing lowbyte interpolation test b847511 lowbyte test 4a2b0e1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#031-2014-03-04","text":"","title":"0.3.1 - 2014-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_28","text":"sort keys a07b19c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#030-2014-03-04","text":"","title":"0.3.0 - 2014-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_29","text":"[] and {} instead of [ ] and { } 654c44b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#020-2014-03-04","text":"","title":"0.2.0 - 2014-03-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_30","text":"failing holes test 99cdfad regex already work e324033 failing undef/null test 1f88a00 holes in the all example 7d345f3 check for .inspect(), fixes Buffer use-case c3f7546 fixes for holes ce25f73 weird null behavior 405c1ea tape is actually a devDependency, upgrade 703b0ce put date in the example a342219 passing the null test 4ab737e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#013-2013-07-26","text":"","title":"0.1.3 - 2013-07-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_31","text":"special isElement() check 882768a oh right old IEs don't have indexOf either 36d1275","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#011-2013-07-26","text":"","title":"0.1.1 - 2013-07-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_32","text":"tests! 4422fd9 fix for ie<9, doesn't have hasOwnProperty 6b7d611 fix for all IEs: no f.name 4e0c2f6 badges 5ed0d88","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#010-2013-07-26","text":"","title":"0.1.0 - 2013-07-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_33","text":"[Function] for functions ad5c485","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#000-2013-07-26","text":"","title":"0.0.0 - 2013-07-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/CHANGELOG/#commits_34","text":"working browser example 34be6b6 package.json etc cad51f2 docs complete b80cce2 circular example 4b4a7b9 string rep 7afb479","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/","text":"object-inspect string representations of objects in node and the browser example circular var inspect = require('object-inspect'); var obj = { a: 1, b: [3,4] }; obj.c = obj; console.log(inspect(obj)); dom element var inspect = require('object-inspect'); var d = document.createElement('div'); d.setAttribute('id', 'beep'); d.innerHTML = '<b>wooo</b><i>iiiii</i>'; console.log(inspect([ d, { a: 3, b : 4, c: [5,6,[7,[8,[9]]]] } ])); output: [ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ] methods var inspect = require('object-inspect') var s = inspect(obj, opts={}) Return a string s with the string representation of obj up to a depth of opts.depth . Additional options: - quoteStyle : must be \"single\" or \"double\", if present. Default 'single' for strings, 'double' for HTML elements. - maxStringLength : must be 0 , a positive integer, Infinity , or null , if present. Default Infinity . - customInspect : When true , a custom inspect method function will be invoked (either undere the util.inspect.custom symbol, or the inspect property). When the string 'symbol' , only the symbol method will be invoked. Default true . - indent : must be \"\\t\", null , or a positive integer. Default null . - numericSeparator : must be a boolean, if present. Default false . If true , all numbers will be printed with numeric separators (eg, 1234.5678 will be printed as '1_234.567_8' ) install With npm do: npm install object-inspect license MIT","title":"object-inspect Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#object-inspect","text":"string representations of objects in node and the browser","title":"object-inspect"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#example","text":"","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#circular","text":"var inspect = require('object-inspect'); var obj = { a: 1, b: [3,4] }; obj.c = obj; console.log(inspect(obj));","title":"circular"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#dom-element","text":"var inspect = require('object-inspect'); var d = document.createElement('div'); d.setAttribute('id', 'beep'); d.innerHTML = '<b>wooo</b><i>iiiii</i>'; console.log(inspect([ d, { a: 3, b : 4, c: [5,6,[7,[8,[9]]]] } ])); output: [ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ]","title":"dom element"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#methods","text":"var inspect = require('object-inspect')","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#var-s-inspectobj-opts","text":"Return a string s with the string representation of obj up to a depth of opts.depth . Additional options: - quoteStyle : must be \"single\" or \"double\", if present. Default 'single' for strings, 'double' for HTML elements. - maxStringLength : must be 0 , a positive integer, Infinity , or null , if present. Default Infinity . - customInspect : When true , a custom inspect method function will be invoked (either undere the util.inspect.custom symbol, or the inspect property). When the string 'symbol' , only the symbol method will be invoked. Default true . - indent : must be \"\\t\", null , or a positive integer. Default null . - numericSeparator : must be a boolean, if present. Default false . If true , all numbers will be printed with numeric separators (eg, 1234.5678 will be printed as '1_234.567_8' )","title":"var s = inspect(obj, opts={})"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#install","text":"With npm do: npm install object-inspect","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-inspect/readme/#license","text":"MIT","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/","text":"object-keys An Object.keys shim. Invoke its \"shim\" method to shim Object.keys if it is unavailable. Most common usage: var keys = Object.keys || require('object-keys'); Example var keys = require('object-keys'); var assert = require('assert'); var obj = { a: true, b: true, c: true }; assert.deepEqual(keys(obj), ['a', 'b', 'c']); var keys = require('object-keys'); var assert = require('assert'); /* when Object.keys is not present */ delete Object.keys; var shimmedKeys = keys.shim(); assert.equal(shimmedKeys, keys); assert.deepEqual(Object.keys(obj), keys(obj)); var keys = require('object-keys'); var assert = require('assert'); /* when Object.keys is present */ var shimmedKeys = keys.shim(); assert.equal(shimmedKeys, Object.keys); assert.deepEqual(Object.keys(obj), keys(obj)); Source Implementation taken directly from es5-shim , with modifications, including from lodash . Tests Simply clone the repo, npm install , and run npm test","title":"object-keys Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/#object-keys","text":"An Object.keys shim. Invoke its \"shim\" method to shim Object.keys if it is unavailable. Most common usage: var keys = Object.keys || require('object-keys');","title":"object-keys"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/#example","text":"var keys = require('object-keys'); var assert = require('assert'); var obj = { a: true, b: true, c: true }; assert.deepEqual(keys(obj), ['a', 'b', 'c']); var keys = require('object-keys'); var assert = require('assert'); /* when Object.keys is not present */ delete Object.keys; var shimmedKeys = keys.shim(); assert.equal(shimmedKeys, keys); assert.deepEqual(Object.keys(obj), keys(obj)); var keys = require('object-keys'); var assert = require('assert'); /* when Object.keys is present */ var shimmedKeys = keys.shim(); assert.equal(shimmedKeys, Object.keys); assert.deepEqual(Object.keys(obj), keys(obj));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/#source","text":"Implementation taken directly from es5-shim , with modifications, including from lodash .","title":"Source"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/","text":"1.1.1 / 2019-04-06 [Fix] exclude deprecated Firefox keys (#53) 1.1.0 / 2019-02-10 [New] [Refactor] move full implementation to implementation entry point [Refactor] only evaluate the implementation if Object.keys is not present [Tests] up to node v11.8 , v10.15 , v8.15 , v6.16 [Tests] remove jscs [Tests] switch to npm audit from nsp 1.0.12 / 2018-06-18 [Fix] avoid accessing window.applicationCache , to avoid issues with latest Chrome on HTTP (#46) 1.0.11 / 2016-07-05 [Fix] exclude keys regarding the style (eg. pageYOffset ) on window to avoid reflow (#32) 1.0.10 / 2016-07-04 [Fix] exclude height and width keys on window to avoid reflow (#31) [Fix] In IE 6, window.external makes Object.keys throw [Tests] up to node v6.2 , v5.10 , v4.4 [Tests] use pretest/posttest for linting/security [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config [Dev Deps] remove unused eccheck script + dep 1.0.9 / 2015-10-19 [Fix] Blacklist 'frame' property on window (#16, #17) [Dev Deps] update jscs , eslint , @ljharb/eslint-config 1.0.8 / 2015-10-14 [Fix] wrap automation equality bug checking in try/catch, per es5-shim#327 [Fix] Blacklist 'window.frameElement' per es5-shim#322 [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Tests] up to io.js v3.3 , node v4.2 [Dev Deps] update eslint , tape , @ljharb/eslint-config , jscs 1.0.7 / 2015-07-18 [Fix] A proper fix for 176f03335e90d5c8d0d8125a99f27819c9b9cdad / https://github.com/es-shims/es5-shim/issues/275 that doesn't break dontEnum/constructor fixes in IE 8. [Fix] Remove deprecation message in Chrome by touching deprecated window properties (#15) [Tests] Improve test output for automation equality bugfix [Tests] Test on io.js v2.4 1.0.6 / 2015-07-09 [Fix] Use an object lookup rather than ES5's indexOf (#14) [Tests] ES3 browsers don't have Array.isArray [Tests] Fix no-shadow rule, as well as an IE 8 bug caused by engine NFE shadowing bugs. 1.0.5 / 2015-07-03 [Fix] Fix a flabbergasting IE 8 bug where localStorage.constructor.prototype === localStorage throws [Tests] Test up to io.js v2.3 [Dev Deps] Update nsp , eslint 1.0.4 / 2015-05-23 Fix a Safari 5.0 bug with Object.keys not working with arguments Test on latest node and io.js Update jscs , tape , eslint , nsp , is , editorconfig-tools , covert 1.0.3 / 2015-01-06 Revert \"Make object-keys more robust against later environment tampering\" to maintain ES3 compliance 1.0.2 / 2014-12-28 Update lots of dev dependencies Tweaks to README Make object-keys more robust against later environment tampering 1.0.1 / 2014-09-03 Update URLs and badges in README 1.0.0 / 2014-08-26 v1.0.0 0.6.1 / 2014-08-25 v0.6.1 Updating dependencies (tape, covert, is) Update badges in readme Use separate var statements 0.6.0 / 2014-04-23 v0.6.0 Updating dependencies (tape, covert) Make sure boxed primitives, and arguments objects, work properly in ES3 browsers Improve test matrix: test all node versions, but only latest two stables are a failure Remove internal foreach shim. 0.5.1 / 2014-03-09 0.5.1 Updating dependencies (tape, covert, is) Removing forEach from the module (but keeping it in tests) 0.5.0 / 2014-01-30 0.5.0 Explicitly returning the shim, instead of returning native Object.keys when present Adding a changelog. Cleaning up IIFE wrapping Testing on node 0.4 through 0.11 0.4.0 / 2013-08-14 v0.4.0 In Chrome 4-10 and Safari 4, typeof (new RegExp) === 'function' If it's a string, make sure to use charAt instead of brackets. Only use Function#call if necessary. Making sure the context tests actually run. Better function detection Adding the android browser Fixing testling files Updating tape Removing the \"is\" dependency. Making an isArguments shim. Adding a local forEach shim and tests. Updating paths. Moving the shim test. v0.3.0 0.3.0 / 2013-05-18 README tweak. Fixing constructor enum issue. Fixes #5 . Adding a test for #5 Updating readme. Updating dependencies. Giving credit to lodash. Make sure that a prototype's constructor property is not enumerable. Fixes #3 . Adding additional tests to handle arguments objects, and to skip \"prototype\" in functions. Fixes #2 . Fixing a typo on this test for #3 . Adding node 0.10 to travis. Adding an IE < 9 test per #3 Adding an iOS 5 mobile Safari test per #2 Moving \"indexof\" and \"is\" to be dev dependencies. Making sure the shim works with functions. Flattening the tests. 0.2.0 / 2013-05-10 v0.2.0 Object.keys should work with arrays. 0.1.8 / 2013-05-10 v0.1.8 Upgrading dependencies. Using a simpler check. Fixing a bug in hasDontEnumBug browsers. Using the newest tape! Fixing this error test. \"undefined\" is probably a reserved word in ES3. Better test message. 0.1.7 / 2013-04-17 Upgrading \"is\" once more. The key \"null\" is breaking some browsers. 0.1.6 / 2013-04-17 v0.1.6 Upgrading \"is\" 0.1.5 / 2013-04-14 Bumping version. Adding more testling browsers. Updating \"is\" 0.1.4 / 2013-04-08 Using \"is\" instead of \"is-extended\". 0.1.3 / 2013-04-07 Using \"foreach\" instead of my own shim. Removing \"tap\"; I'll just wait for \"tape\" to fix its node 0.10 bug. 0.1.2 / 2013-04-03 Adding dependency status; moving links to an index at the bottom. Upgrading is-extended; version 0.1.2 Adding an npm version badge. 0.1.1 / 2013-04-01 Adding Travis CI. Bumping the version. Adding indexOf since IE sucks. Adding a forEach shim since older browsers don't have Array#forEach. Upgrading tape - 0.3.2 uses Array#map Using explicit end instead of plan. Can't test with Array.isArray in older browsers. Using is-extended. Fixing testling files. JSHint/JSLint-ing. Removing an unused object. Using strict mode. 0.1.0 / 2013-03-30 Changing the exports should have meant a higher version bump. Oops, fixing the repo URL. Adding more tests. 0.0.2 Merge branch 'export_one_thing'; closes #1 Move shim export to a separate file.","title":"1.1.1 / 2019-04-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#111-2019-04-06","text":"[Fix] exclude deprecated Firefox keys (#53)","title":"1.1.1 / 2019-04-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#110-2019-02-10","text":"[New] [Refactor] move full implementation to implementation entry point [Refactor] only evaluate the implementation if Object.keys is not present [Tests] up to node v11.8 , v10.15 , v8.15 , v6.16 [Tests] remove jscs [Tests] switch to npm audit from nsp","title":"1.1.0 / 2019-02-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#1012-2018-06-18","text":"[Fix] avoid accessing window.applicationCache , to avoid issues with latest Chrome on HTTP (#46)","title":"1.0.12 / 2018-06-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#1011-2016-07-05","text":"[Fix] exclude keys regarding the style (eg. pageYOffset ) on window to avoid reflow (#32)","title":"1.0.11 / 2016-07-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#1010-2016-07-04","text":"[Fix] exclude height and width keys on window to avoid reflow (#31) [Fix] In IE 6, window.external makes Object.keys throw [Tests] up to node v6.2 , v5.10 , v4.4 [Tests] use pretest/posttest for linting/security [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config [Dev Deps] remove unused eccheck script + dep","title":"1.0.10 / 2016-07-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#109-2015-10-19","text":"[Fix] Blacklist 'frame' property on window (#16, #17) [Dev Deps] update jscs , eslint , @ljharb/eslint-config","title":"1.0.9 / 2015-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#108-2015-10-14","text":"[Fix] wrap automation equality bug checking in try/catch, per es5-shim#327 [Fix] Blacklist 'window.frameElement' per es5-shim#322 [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Tests] up to io.js v3.3 , node v4.2 [Dev Deps] update eslint , tape , @ljharb/eslint-config , jscs","title":"1.0.8 / 2015-10-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#107-2015-07-18","text":"[Fix] A proper fix for 176f03335e90d5c8d0d8125a99f27819c9b9cdad / https://github.com/es-shims/es5-shim/issues/275 that doesn't break dontEnum/constructor fixes in IE 8. [Fix] Remove deprecation message in Chrome by touching deprecated window properties (#15) [Tests] Improve test output for automation equality bugfix [Tests] Test on io.js v2.4","title":"1.0.7 / 2015-07-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#106-2015-07-09","text":"[Fix] Use an object lookup rather than ES5's indexOf (#14) [Tests] ES3 browsers don't have Array.isArray [Tests] Fix no-shadow rule, as well as an IE 8 bug caused by engine NFE shadowing bugs.","title":"1.0.6 / 2015-07-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#105-2015-07-03","text":"[Fix] Fix a flabbergasting IE 8 bug where localStorage.constructor.prototype === localStorage throws [Tests] Test up to io.js v2.3 [Dev Deps] Update nsp , eslint","title":"1.0.5 / 2015-07-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#104-2015-05-23","text":"Fix a Safari 5.0 bug with Object.keys not working with arguments Test on latest node and io.js Update jscs , tape , eslint , nsp , is , editorconfig-tools , covert","title":"1.0.4 / 2015-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#103-2015-01-06","text":"Revert \"Make object-keys more robust against later environment tampering\" to maintain ES3 compliance","title":"1.0.3 / 2015-01-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#102-2014-12-28","text":"Update lots of dev dependencies Tweaks to README Make object-keys more robust against later environment tampering","title":"1.0.2 / 2014-12-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#101-2014-09-03","text":"Update URLs and badges in README","title":"1.0.1 / 2014-09-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#100-2014-08-26","text":"v1.0.0","title":"1.0.0 / 2014-08-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#061-2014-08-25","text":"v0.6.1 Updating dependencies (tape, covert, is) Update badges in readme Use separate var statements","title":"0.6.1 / 2014-08-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#060-2014-04-23","text":"v0.6.0 Updating dependencies (tape, covert) Make sure boxed primitives, and arguments objects, work properly in ES3 browsers Improve test matrix: test all node versions, but only latest two stables are a failure Remove internal foreach shim.","title":"0.6.0 / 2014-04-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#051-2014-03-09","text":"0.5.1 Updating dependencies (tape, covert, is) Removing forEach from the module (but keeping it in tests)","title":"0.5.1 / 2014-03-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#050-2014-01-30","text":"0.5.0 Explicitly returning the shim, instead of returning native Object.keys when present Adding a changelog. Cleaning up IIFE wrapping Testing on node 0.4 through 0.11","title":"0.5.0 / 2014-01-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#040-2013-08-14","text":"v0.4.0 In Chrome 4-10 and Safari 4, typeof (new RegExp) === 'function' If it's a string, make sure to use charAt instead of brackets. Only use Function#call if necessary. Making sure the context tests actually run. Better function detection Adding the android browser Fixing testling files Updating tape Removing the \"is\" dependency. Making an isArguments shim. Adding a local forEach shim and tests. Updating paths. Moving the shim test. v0.3.0","title":"0.4.0 / 2013-08-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#030-2013-05-18","text":"README tweak. Fixing constructor enum issue. Fixes #5 . Adding a test for #5 Updating readme. Updating dependencies. Giving credit to lodash. Make sure that a prototype's constructor property is not enumerable. Fixes #3 . Adding additional tests to handle arguments objects, and to skip \"prototype\" in functions. Fixes #2 . Fixing a typo on this test for #3 . Adding node 0.10 to travis. Adding an IE < 9 test per #3 Adding an iOS 5 mobile Safari test per #2 Moving \"indexof\" and \"is\" to be dev dependencies. Making sure the shim works with functions. Flattening the tests.","title":"0.3.0 / 2013-05-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#020-2013-05-10","text":"v0.2.0 Object.keys should work with arrays.","title":"0.2.0 / 2013-05-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#018-2013-05-10","text":"v0.1.8 Upgrading dependencies. Using a simpler check. Fixing a bug in hasDontEnumBug browsers. Using the newest tape! Fixing this error test. \"undefined\" is probably a reserved word in ES3. Better test message.","title":"0.1.8 / 2013-05-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#017-2013-04-17","text":"Upgrading \"is\" once more. The key \"null\" is breaking some browsers.","title":"0.1.7 / 2013-04-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#016-2013-04-17","text":"v0.1.6 Upgrading \"is\"","title":"0.1.6 / 2013-04-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#015-2013-04-14","text":"Bumping version. Adding more testling browsers. Updating \"is\"","title":"0.1.5 / 2013-04-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#014-2013-04-08","text":"Using \"is\" instead of \"is-extended\".","title":"0.1.4 / 2013-04-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#013-2013-04-07","text":"Using \"foreach\" instead of my own shim. Removing \"tap\"; I'll just wait for \"tape\" to fix its node 0.10 bug.","title":"0.1.3 / 2013-04-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#012-2013-04-03","text":"Adding dependency status; moving links to an index at the bottom. Upgrading is-extended; version 0.1.2 Adding an npm version badge.","title":"0.1.2 / 2013-04-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#011-2013-04-01","text":"Adding Travis CI. Bumping the version. Adding indexOf since IE sucks. Adding a forEach shim since older browsers don't have Array#forEach. Upgrading tape - 0.3.2 uses Array#map Using explicit end instead of plan. Can't test with Array.isArray in older browsers. Using is-extended. Fixing testling files. JSHint/JSLint-ing. Removing an unused object. Using strict mode.","title":"0.1.1 / 2013-04-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/object-keys/CHANGELOG/#010-2013-03-30","text":"Changing the exports should have meant a higher version bump. Oops, fixing the repo URL. Adding more tests. 0.0.2 Merge branch 'export_one_thing'; closes #1 Move shim export to a separate file.","title":"0.1.0 / 2013-03-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/","text":"object.assign An Object.assign shim. Invoke its \"shim\" method to shim Object.assign if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . In an ES6 environment, it will also work properly with Symbol s. Takes a minimum of 2 arguments: target and source . Takes a variable sized list of source arguments - at least 1, as many as you want. Throws a TypeError if the target argument is null or undefined . Most common usage: var assign = require('object.assign').getPolyfill(); // returns native method if compliant /* or */ var assign = require('object.assign/polyfill')(); // returns native method if compliant Example var assert = require('assert'); // Multiple sources! var target = { a: true }; var source1 = { b: true }; var source2 = { c: true }; var sourceN = { n: true }; var expected = { a: true, b: true, c: true, n: true }; assign(target, source1, source2, sourceN); assert.deepEqual(target, expected); // AWESOME! var target = { a: true, b: true, c: true }; var source1 = { c: false, d: false }; var sourceN = { e: false }; var assigned = assign(target, source1, sourceN); assert.equal(target, assigned); // returns the target object assert.deepEqual(assigned, { a: true, b: true, c: false, d: false, e: false }); /* when Object.assign is not present */ delete Object.assign; var shimmedAssign = require('object.assign').shim(); /* or */ var shimmedAssign = require('object.assign/shim')(); assert.equal(shimmedAssign, assign); var target = { a: true, b: true, c: true }; var source = { c: false, d: false, e: false }; var assigned = assign(target, source); assert.deepEqual(Object.assign(target, source), assign(target, source)); /* when Object.assign is present */ var shimmedAssign = require('object.assign').shim(); assert.equal(shimmedAssign, Object.assign); var target = { a: true, b: true, c: true }; var source = { c: false, d: false, e: false }; assert.deepEqual(Object.assign(target, source), assign(target, source)); Tests Simply clone the repo, npm install , and run npm test","title":"object.assign Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/#objectassign","text":"An Object.assign shim. Invoke its \"shim\" method to shim Object.assign if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . In an ES6 environment, it will also work properly with Symbol s. Takes a minimum of 2 arguments: target and source . Takes a variable sized list of source arguments - at least 1, as many as you want. Throws a TypeError if the target argument is null or undefined . Most common usage: var assign = require('object.assign').getPolyfill(); // returns native method if compliant /* or */ var assign = require('object.assign/polyfill')(); // returns native method if compliant","title":"object.assign"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/#example","text":"var assert = require('assert'); // Multiple sources! var target = { a: true }; var source1 = { b: true }; var source2 = { c: true }; var sourceN = { n: true }; var expected = { a: true, b: true, c: true, n: true }; assign(target, source1, source2, sourceN); assert.deepEqual(target, expected); // AWESOME! var target = { a: true, b: true, c: true }; var source1 = { c: false, d: false }; var sourceN = { e: false }; var assigned = assign(target, source1, sourceN); assert.equal(target, assigned); // returns the target object assert.deepEqual(assigned, { a: true, b: true, c: false, d: false, e: false }); /* when Object.assign is not present */ delete Object.assign; var shimmedAssign = require('object.assign').shim(); /* or */ var shimmedAssign = require('object.assign/shim')(); assert.equal(shimmedAssign, assign); var target = { a: true, b: true, c: true }; var source = { c: false, d: false, e: false }; var assigned = assign(target, source); assert.deepEqual(Object.assign(target, source), assign(target, source)); /* when Object.assign is present */ var shimmedAssign = require('object.assign').shim(); assert.equal(shimmedAssign, Object.assign); var target = { a: true, b: true, c: true }; var source = { c: false, d: false, e: false }; assert.deepEqual(Object.assign(target, source), assign(target, source));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/","text":"4.1.5 / 2023-11-30 [meta] republish without testing HTML file (#85) [Deps] update call-bind , define-properties [Dev Deps] use hasown instead of has [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , npmignore , mock-property , tape [actions] update rebase action 4.1.4 / 2022-08-16 [meta] fix npmignore integration (#83) 4.1.3 / 2022-08-05 [Refactor] make steps closer to actual spec [Refactor] simplify object coercible check [readme] remove defunct badges, add coverage and actions badges [eslint] ignore coverage output [meta] use npmignore to autogenerate an npmignore file [meta] remove audit-level [Deps] update call-bind , define-properties , has-symbols [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , functions-have-names , safe-publish-latest , ses , tape [actions] use node/install instead of node/run ; use codecov action [actions] reuse common workflows [actions] update codecov uploader [Tests] add implementation tests [Tests] use mock-property [Tests] disable posttest pending aud handling file: deps [Tests] migrate remaining tests to Github Actions (#81) [Tests] gitignore coverage output [Tests] test node v1-v9 on Github Actions instead of travis; resume testing all minors (#80) 4.1.2 / 2020-10-30 [Refactor] use extracted call-bind instead of full es-abstract [Dev Deps] update eslint , ses , browserify [Tests] run tests in SES [Tests] ses-compat: show error stacks 4.1.1 / 2020-09-11 [Fix] avoid mutating Object.assign in modern engines [Refactor] use callBind from es-abstract instead of function-bind [Deps] update has-symbols , object-keys , define-properties [meta] add funding field, FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , browserify , covert , for-each , is , tape , functions-have-names ; add aud , safe-publish-latest ; remove jscs [actions] add Require Allow Edits workflow [actions] add automatic rebasing / merge commit blocking [Tests] ses-compat - add test to ensure package initializes correctly after ses lockdown (#77) [Tests] Add passing test for a source of window.location (#68) [Tests] use shared travis-ci config [Tests] use npx aud instead of npm audit with hoops or nsp [Tests] use functions-have-names 4.1.0 / 2017-12-21 [New] add auto entry point (#52) [Refactor] Use has-symbols module [Deps] update function-bind , object-keys [Dev Deps] update @es-shims/api , browserify , nsp , eslint , @ljharb/eslint-config , is [Tests] up to node v9.3 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS 4.0.4 / 2016-07-04 [Fix] Cache original getOwnPropertySymbols , and use that when Object.getOwnPropertySymbols is unavailable [Deps] update object-keys [Dev Deps] update eslint , get-own-property-symbols , core-js , jscs , nsp , browserify , @ljharb/eslint-config , tape , @es-shims/api [Tests] up to node v6.2 , v5.10 , v4.4 [Tests] run sham tests on node 0.10 [Tests] use pretest/posttest for linting/security 4.0.3 / 2015-10-21 [Fix] Support core-js's Symbol sham (#17) [Fix] Ensure that properties removed or made non-enumerable during enumeration are not assigned (#16) [Fix] Avoid looking up keys and values more than once [Tests] Avoid using reduce so npm run test:shams:corejs passes in node v0.8 ( core-js#122 ) [Tests] Refactor to use my conventional structure that separates shimmed, implementation, and common tests [Tests] Create npm run test:shams and better organize tests for symbol shams [Tests] Remove nsp in favor of requiresafe 4.0.2 / 2015-10-20 [Fix] Ensure correct property enumeration order, particularly in v8 (#15) [Deps] update object-keys , define-properties [Dev Deps] update browserify , is , tape , jscs , eslint , @ljharb/eslint-config [Tests] up to io.js v3.3 , node v4.2 4.0.1 / 2015-08-16 [Docs] Add Symbol note to readme 4.0.0 / 2015-08-15 [Breaking] Implement the es-shim API . [Robustness] Make implementation robust against later modification of environment methods. [Refactor] Move implementation to implementation.js [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Deps] update object-keys , define-properties [Dev Deps] update browserify , tape , eslint , jscs , browserify [Tests] Add npm run tests-only [Tests] use my personal shared eslint config. [Tests] up to io.js v3.0 3.0.1 / 2015-06-28 Cache Object and Array#push to make the shim more robust. [Fix] Remove use of Array#filter , which isn't in ES3. [Deps] Update object-keys , define-properties [Dev Deps] Update get-own-property-symbols , browserify , eslint , nsp [Tests] Test up to io.js v2.3 [Tests] Adding Object.assign tests for non-object targets, per https://github.com/paulmillr/es6-shim/issues/348 3.0.0 / 2015-05-20 Attempt to feature-detect Symbols, even if typeof Symbol() !== 'symbol' (#12) Make a separate hasSymbols internal module Update browserify , eslint 2.0.3 / 2015-06-28 Cache Object and Array#push to make the shim more robust. [Fix] Remove use of Array#filter , which isn't in ES3 [Deps] Update object-keys , define-properties [Dev Deps] Update browserify , nsp , eslint [Tests] Test up to io.js v2.3 2.0.2 / 2015-05-20 Make sure .shim is non-enumerable. Refactor .shim implementation to use define-properties predicates, rather than delete ing the original. Update docs to match spec/implementation. (#11) Add npm run eslint Test up to io.js v2.0 Update jscs , browserify , covert 2.0.1 / 2015-04-12 Make sure non-enumerable Symbols are excluded. 2.0.0 / 2015-04-12 Make sure the shim function overwrites a broken implementation with pending exceptions. Ensure shim is not enumerable using define-properties Ensure Object.assign includes symbols. All grade A-supported node / iojs versions now ship with an npm that understands ^ . Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. Add npm run security via nsp Update browserify , jscs , tape , object-keys , is 1.1.1 / 2014-12-14 Actually include the browser build in npm 1.1.0 / 2014-12-14 Add npm run build , and build an automatic-shimming browser distribution as part of the npm publish process. Update is , jscs 1.0.3 / 2014-11-29 Revert \"optimize --production installs\" 1.0.2 / 2014-11-27 Update jscs , is , object-keys , tape Add badges to README Name URLs in README Lock covert to v1.0.0 Optimize --production installs 1.0.1 / 2014-08-26 Update is , covert 1.0.0 / 2014-08-07 Update object-keys , tape 0.5.0 / 2014-07-31 Object.assign no longer throws on null or undefined sources, per https://bugs.ecmascript.org/show_bug.cgi?id=3096 0.4.3 / 2014-07-30 Don\u2019t modify vars in the function signature, since it deoptimizes v8 0.4.2 / 2014-07-30 Fixing the version number: v0.4.2 0.4.1 / 2014-07-19 Revert \"Use the native Object.keys if it\u2019s available.\" 0.4.0 / 2014-07-19 Use the native Object.keys if it\u2019s available. Fixes #2 . Adding failing tests for #2 . Fix indentation. Adding npm run lint Update tape , covert README: Use SVG badge for Travis #1 from mathiasbynens/patch-1 0.3.1 / 2014-04-10 Object.assign does partially modify objects if it throws, per https://twitter.com/awbjs/status/454320863093862400 0.3.0 / 2014-04-10 Update with newest ES6 behavior - Object.assign now takes a variable number of source objects. Update tape Make sure old and unstable nodes don\u2019t fail Travis 0.2.1 / 2014-03-16 Let object-keys handle the fallback Update dependency badges Adding bower.json 0.2.0 / 2014-03-16 Use a for loop, because ES3 browsers don\u2019t have \"reduce\" 0.1.1 / 2014-03-14 Updating readme 0.1.0 / 2014-03-14 Initial release.","title":"4.1.5 / 2023-11-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#415-2023-11-30","text":"[meta] republish without testing HTML file (#85) [Deps] update call-bind , define-properties [Dev Deps] use hasown instead of has [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , npmignore , mock-property , tape [actions] update rebase action","title":"4.1.5 / 2023-11-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#414-2022-08-16","text":"[meta] fix npmignore integration (#83)","title":"4.1.4 / 2022-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#413-2022-08-05","text":"[Refactor] make steps closer to actual spec [Refactor] simplify object coercible check [readme] remove defunct badges, add coverage and actions badges [eslint] ignore coverage output [meta] use npmignore to autogenerate an npmignore file [meta] remove audit-level [Deps] update call-bind , define-properties , has-symbols [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , functions-have-names , safe-publish-latest , ses , tape [actions] use node/install instead of node/run ; use codecov action [actions] reuse common workflows [actions] update codecov uploader [Tests] add implementation tests [Tests] use mock-property [Tests] disable posttest pending aud handling file: deps [Tests] migrate remaining tests to Github Actions (#81) [Tests] gitignore coverage output [Tests] test node v1-v9 on Github Actions instead of travis; resume testing all minors (#80)","title":"4.1.3 / 2022-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#412-2020-10-30","text":"[Refactor] use extracted call-bind instead of full es-abstract [Dev Deps] update eslint , ses , browserify [Tests] run tests in SES [Tests] ses-compat: show error stacks","title":"4.1.2 / 2020-10-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#411-2020-09-11","text":"[Fix] avoid mutating Object.assign in modern engines [Refactor] use callBind from es-abstract instead of function-bind [Deps] update has-symbols , object-keys , define-properties [meta] add funding field, FUNDING.yml [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , browserify , covert , for-each , is , tape , functions-have-names ; add aud , safe-publish-latest ; remove jscs [actions] add Require Allow Edits workflow [actions] add automatic rebasing / merge commit blocking [Tests] ses-compat - add test to ensure package initializes correctly after ses lockdown (#77) [Tests] Add passing test for a source of window.location (#68) [Tests] use shared travis-ci config [Tests] use npx aud instead of npm audit with hoops or nsp [Tests] use functions-have-names","title":"4.1.1 / 2020-09-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#410-2017-12-21","text":"[New] add auto entry point (#52) [Refactor] Use has-symbols module [Deps] update function-bind , object-keys [Dev Deps] update @es-shims/api , browserify , nsp , eslint , @ljharb/eslint-config , is [Tests] up to node v9.3 , v8.9 , v6.12 ; use nvm install-latest-npm ; pin included builds to LTS","title":"4.1.0 / 2017-12-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#404-2016-07-04","text":"[Fix] Cache original getOwnPropertySymbols , and use that when Object.getOwnPropertySymbols is unavailable [Deps] update object-keys [Dev Deps] update eslint , get-own-property-symbols , core-js , jscs , nsp , browserify , @ljharb/eslint-config , tape , @es-shims/api [Tests] up to node v6.2 , v5.10 , v4.4 [Tests] run sham tests on node 0.10 [Tests] use pretest/posttest for linting/security","title":"4.0.4 / 2016-07-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#403-2015-10-21","text":"[Fix] Support core-js's Symbol sham (#17) [Fix] Ensure that properties removed or made non-enumerable during enumeration are not assigned (#16) [Fix] Avoid looking up keys and values more than once [Tests] Avoid using reduce so npm run test:shams:corejs passes in node v0.8 ( core-js#122 ) [Tests] Refactor to use my conventional structure that separates shimmed, implementation, and common tests [Tests] Create npm run test:shams and better organize tests for symbol shams [Tests] Remove nsp in favor of requiresafe","title":"4.0.3 / 2015-10-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#402-2015-10-20","text":"[Fix] Ensure correct property enumeration order, particularly in v8 (#15) [Deps] update object-keys , define-properties [Dev Deps] update browserify , is , tape , jscs , eslint , @ljharb/eslint-config [Tests] up to io.js v3.3 , node v4.2","title":"4.0.2 / 2015-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#401-2015-08-16","text":"[Docs] Add Symbol note to readme","title":"4.0.1 / 2015-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#400-2015-08-15","text":"[Breaking] Implement the es-shim API . [Robustness] Make implementation robust against later modification of environment methods. [Refactor] Move implementation to implementation.js [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG [Deps] update object-keys , define-properties [Dev Deps] update browserify , tape , eslint , jscs , browserify [Tests] Add npm run tests-only [Tests] use my personal shared eslint config. [Tests] up to io.js v3.0","title":"4.0.0 / 2015-08-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#301-2015-06-28","text":"Cache Object and Array#push to make the shim more robust. [Fix] Remove use of Array#filter , which isn't in ES3. [Deps] Update object-keys , define-properties [Dev Deps] Update get-own-property-symbols , browserify , eslint , nsp [Tests] Test up to io.js v2.3 [Tests] Adding Object.assign tests for non-object targets, per https://github.com/paulmillr/es6-shim/issues/348","title":"3.0.1 / 2015-06-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#300-2015-05-20","text":"Attempt to feature-detect Symbols, even if typeof Symbol() !== 'symbol' (#12) Make a separate hasSymbols internal module Update browserify , eslint","title":"3.0.0 / 2015-05-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#203-2015-06-28","text":"Cache Object and Array#push to make the shim more robust. [Fix] Remove use of Array#filter , which isn't in ES3 [Deps] Update object-keys , define-properties [Dev Deps] Update browserify , nsp , eslint [Tests] Test up to io.js v2.3","title":"2.0.3 / 2015-06-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#202-2015-05-20","text":"Make sure .shim is non-enumerable. Refactor .shim implementation to use define-properties predicates, rather than delete ing the original. Update docs to match spec/implementation. (#11) Add npm run eslint Test up to io.js v2.0 Update jscs , browserify , covert","title":"2.0.2 / 2015-05-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#201-2015-04-12","text":"Make sure non-enumerable Symbols are excluded.","title":"2.0.1 / 2015-04-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#200-2015-04-12","text":"Make sure the shim function overwrites a broken implementation with pending exceptions. Ensure shim is not enumerable using define-properties Ensure Object.assign includes symbols. All grade A-supported node / iojs versions now ship with an npm that understands ^ . Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. Add npm run security via nsp Update browserify , jscs , tape , object-keys , is","title":"2.0.0 / 2015-04-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#111-2014-12-14","text":"Actually include the browser build in npm","title":"1.1.1 / 2014-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#110-2014-12-14","text":"Add npm run build , and build an automatic-shimming browser distribution as part of the npm publish process. Update is , jscs","title":"1.1.0 / 2014-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#103-2014-11-29","text":"Revert \"optimize --production installs\"","title":"1.0.3 / 2014-11-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#102-2014-11-27","text":"Update jscs , is , object-keys , tape Add badges to README Name URLs in README Lock covert to v1.0.0 Optimize --production installs","title":"1.0.2 / 2014-11-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#101-2014-08-26","text":"Update is , covert","title":"1.0.1 / 2014-08-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#100-2014-08-07","text":"Update object-keys , tape","title":"1.0.0 / 2014-08-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#050-2014-07-31","text":"Object.assign no longer throws on null or undefined sources, per https://bugs.ecmascript.org/show_bug.cgi?id=3096","title":"0.5.0 / 2014-07-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#043-2014-07-30","text":"Don\u2019t modify vars in the function signature, since it deoptimizes v8","title":"0.4.3 / 2014-07-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#042-2014-07-30","text":"Fixing the version number: v0.4.2","title":"0.4.2 / 2014-07-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#041-2014-07-19","text":"Revert \"Use the native Object.keys if it\u2019s available.\"","title":"0.4.1 / 2014-07-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#040-2014-07-19","text":"Use the native Object.keys if it\u2019s available. Fixes #2 . Adding failing tests for #2 . Fix indentation. Adding npm run lint Update tape , covert README: Use SVG badge for Travis #1 from mathiasbynens/patch-1","title":"0.4.0 / 2014-07-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#031-2014-04-10","text":"Object.assign does partially modify objects if it throws, per https://twitter.com/awbjs/status/454320863093862400","title":"0.3.1 / 2014-04-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#030-2014-04-10","text":"Update with newest ES6 behavior - Object.assign now takes a variable number of source objects. Update tape Make sure old and unstable nodes don\u2019t fail Travis","title":"0.3.0 / 2014-04-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#021-2014-03-16","text":"Let object-keys handle the fallback Update dependency badges Adding bower.json","title":"0.2.1 / 2014-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#020-2014-03-16","text":"Use a for loop, because ES3 browsers don\u2019t have \"reduce\"","title":"0.2.0 / 2014-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#011-2014-03-14","text":"Updating readme","title":"0.1.1 / 2014-03-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.assign/CHANGELOG/#010-2014-03-14","text":"Initial release.","title":"0.1.0 / 2014-03-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/","text":"object.entries An ES2017 spec-compliant Object.entries shim. Invoke its \"shim\" method to shim Object.entries if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Most common usage: var assert = require('assert'); var entries = require('object.entries'); var obj = { a: 1, b: 2, c: 3 }; var expected = [['a', 1], ['b', 2], ['c', 3]]; if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') { // for environments with Symbol support var sym = Symbol(); obj[sym] = 4; obj.d = sym; expected.push(['d', sym]); } assert.deepEqual(entries(obj), expected); if (!Object.entries) { entries.shim(); } assert.deepEqual(Object.entries(obj), expected); Tests Simply clone the repo, npm install , and run npm test","title":"object.entries Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/#objectentries","text":"An ES2017 spec-compliant Object.entries shim. Invoke its \"shim\" method to shim Object.entries if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Most common usage: var assert = require('assert'); var entries = require('object.entries'); var obj = { a: 1, b: 2, c: 3 }; var expected = [['a', 1], ['b', 2], ['c', 3]]; if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') { // for environments with Symbol support var sym = Symbol(); obj[sym] = 4; obj.d = sym; expected.push(['d', sym]); } assert.deepEqual(entries(obj), expected); if (!Object.entries) { entries.shim(); } assert.deepEqual(Object.entries(obj), expected);","title":"object.entries"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.8 - 2024-03-18 Commits [actions] remove redundant finisher 14a9f46 [Dev Deps] update array.prototype.map , aud , npmignore , tape eee9379 [Deps] update call-bind , define-properties 02bbe0d [Refactor] use es-object-atoms instead of es-abstract dac98c9 v1.1.7 - 2023-08-27 Commits [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape f2edb13 [Deps] update define-properties , es-abstract 7b9daec v1.1.6 - 2022-11-05 Commits [actions] reuse common workflows e6dc177 [meta] use npmignore to autogenerate an npmignore file 76b4136 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 2ab7fcd [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.map , aud , auto-changelog , functions-have-names , tape 61a205e [actions] update rebase action to use reusable workflow 3b886b0 [actions] update codecov uploader 6db30f8 [Deps] update define-properties , es-abstract fa0a9c9 v1.1.5 - 2021-10-03 Commits [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.map , tape 3fa8e24 [Deps] update es-abstract 9288cc0 [Robustness] use call-bound Array.prototype.push e495b27 [meta] npmignore coverage output d16eb7d v1.1.4 - 2021-05-26 Commits [actions] use node/install instead of node/run ; use codecov action 502a2d7 [meta] do not publish github action workflow files f38243c [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape 28b8c53 [readme] fix repo URLs; remove travis badge 01eb2bc [readme] add actions and codecov badges e9455ce [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 3f26a81 [actions] update workflows 2447f74 [Refactor] propertyIsEnumerable checks own-ness; remove has a65ae8d [actions] update workflows 2465bef [Tests] swap array-map for array.prototype.map 37d5157 [Dev Deps] update eslint , tape 3878db8 [Deps] update call-bind , es-abstract 9ff20ec [meta] use prepublishOnly script for npm 7+ 052d1ca [Tests] increase coverage 1e84c9c [Deps] update es-abstract 65af70d [Deps] update es-abstract 2a633ce [meta] gitignore coverage output 5f4a0c1 v1.1.3 - 2020-11-26 Commits [Tests] migrate tests to Github Actions f9641aa [Tests] add implementation test; run es-shim-api in postlint; use tape runner 7cd4184 [Tests] run nyc on all tests de597c9 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape f453127 [actions] add \"Allow Edits\" workflow 5b65ef6 [Deps] update es-abstract ; use call-bind where applicable 339136d [actions] switch Automatic Rebase workflow to pull_request_target event ef2df4d v1.1.2 - 2020-05-20 Commits [meta] add auto-changelog 29e2771 [Dev Deps] update eslint , @ljharb/eslint-config , tape , functions-have-names ; add safe-publish-latest f30dde0 [Refactor] use callBound instead of function-bind db94733 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud 124d3bb [Fix] do not mutate the native function when present fffb674 [Dev Deps] update @ljharb/eslint-config , aud 5552db4 [Deps] update es-abstract bcf93d0 [meta] only run aud on prod deps 13c35c9 [Deps] update es-abstract 9374fed v1.1.1 - 2019-12-12 Commits [Tests] use shared travis-ci configs 576c8a7 [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 ; use nvm install-latest-npm 26c5a45 [actions] add automatic rebasing / merge commit blocking 3253bdf [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names bf480ef [Refactor] use split-up es-abstract (85% bundle size decrease) 3fd42b9 [Tests] use npx aud instead of nsp or npm audit with hoops 9bf7f7f [meta] clean up scripts 908f4fd [Dev Deps] update eslint , tape 213436c [Tests] use functions-have-names 8cd5de5 [Deps] update es-abstract 3a2ca03 v1.1.0 - 2019-01-01 Fixed Exclude test.html from the npm package. #12 Commits [Tests] remove jscs 052aed1 [Tests] up to node v11.1 , v10.13 , v9.11 , v8.12 , v7.10 , v6.14 , v4.9 ; use nvm install-latest-npm 0015678 [Tests] up to node v7.4 , v4.7 ; improve test matrix 6f19e66 [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 89415ba [Dev Deps] update eslint , @ljharb/eslint-config , nsp , tape 91f9ee6 [New] add auto entry point [ 9799c0d`](https://github.com/ljharb/Object.entries/commit/9799c0d8634cfecb68038a1770fcb35e184ebe94) [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 074677d [Deps] update define-properties , es-abstract , function-bind , has db5d97e [Tests] use npm audit instead of nsp bc3e6a7 Only apps should have lockfiles d192ab7 v1.0.4 - 2016-12-04 Commits [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , @es-shims/api cf4a9cf [Tests] up to node v7.2 , v6.9 , v4.6 ; improve test matrix. 281ccbd [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 33fb890 [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config 7c1ea3f [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config f9473c7 [Dev Deps] update jscs , nsp , eslint , @es-shims/api 1368a76 [Tests] up to v5.6 , v4.3 7ad9976 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 6bf18dc [Dev Deps] update jscs , eslint , @ljharb/eslint-config a45c239 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 13f7d10 [Tests] up to node v5.9 , v4.4 261533c [Dev Deps] update jscs 8dd7b5f [Docs] update to reflect ES2017 inclusion. 7662206 [Tests] use pretest/posttest for linting/security 87d62ad [Tests] fix npm upgrades on older nodes 67cabde [Tests] up to node v6.2 c50c154 [Dev Deps] update jscs , eslint , @ljharb/eslint-config ff17ab8 [Deps] update es-abstract b8be50a [Deps] update es-abstract fb3a7e1 [Tests] on node v5.12 ba624ca [Tests] on node v5.10 e513ca5 [Deps] update function-bind 6e25d29 [Deps] update es-abstract bf680a4 [Deps] update es-abstract fbb209b [Deps] update define-properties 77d4ead [Tests] on node v4.2 d946594 [Tests] on node v5.0 80d7d16 v1.0.3 - 2015-10-06 Commits Add test case to cover non-enumerable keys made enumerable by a previous getter. 5b53808 [Dev Deps] update tape , eslint , @ljharb/eslint-config 1c3ddff [Dev Deps] update jscs , eslint 0a0f1be [Deps] update es-abstract 8cacfdc v1.0.2 - 2015-09-25 Fixed Not-yet-visited keys deleted on a [[Get]] must not show up in the output #1 v1.0.1 - 2015-09-21 Commits [Tests] on iojs v3.3 , up to node v4.1 181f888 [Dev Deps] update eslint , @ljharb/eslint-config e93536e Add es-shim API keyword 51080c2 [Docs] update version badge URL 398a7e4 v1.0.0 - 2015-09-02 Commits Dotfiles 3a59351 Tests bd1ceae package.json 301832d Read me d92e775 Initial commit 212a7ce Implementation. 8fd8aae Clarifying tests that only Symbol properties are omitted. 1b5cb92","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v118-2024-03-18","text":"","title":"v1.1.8 - 2024-03-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits","text":"[actions] remove redundant finisher 14a9f46 [Dev Deps] update array.prototype.map , aud , npmignore , tape eee9379 [Deps] update call-bind , define-properties 02bbe0d [Refactor] use es-object-atoms instead of es-abstract dac98c9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v117-2023-08-27","text":"","title":"v1.1.7 - 2023-08-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_1","text":"[Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape f2edb13 [Deps] update define-properties , es-abstract 7b9daec","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v116-2022-11-05","text":"","title":"v1.1.6 - 2022-11-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_2","text":"[actions] reuse common workflows e6dc177 [meta] use npmignore to autogenerate an npmignore file 76b4136 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 2ab7fcd [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.map , aud , auto-changelog , functions-have-names , tape 61a205e [actions] update rebase action to use reusable workflow 3b886b0 [actions] update codecov uploader 6db30f8 [Deps] update define-properties , es-abstract fa0a9c9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v115-2021-10-03","text":"","title":"v1.1.5 - 2021-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_3","text":"[Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.map , tape 3fa8e24 [Deps] update es-abstract 9288cc0 [Robustness] use call-bound Array.prototype.push e495b27 [meta] npmignore coverage output d16eb7d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v114-2021-05-26","text":"","title":"v1.1.4 - 2021-05-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_4","text":"[actions] use node/install instead of node/run ; use codecov action 502a2d7 [meta] do not publish github action workflow files f38243c [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape 28b8c53 [readme] fix repo URLs; remove travis badge 01eb2bc [readme] add actions and codecov badges e9455ce [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 3f26a81 [actions] update workflows 2447f74 [Refactor] propertyIsEnumerable checks own-ness; remove has a65ae8d [actions] update workflows 2465bef [Tests] swap array-map for array.prototype.map 37d5157 [Dev Deps] update eslint , tape 3878db8 [Deps] update call-bind , es-abstract 9ff20ec [meta] use prepublishOnly script for npm 7+ 052d1ca [Tests] increase coverage 1e84c9c [Deps] update es-abstract 65af70d [Deps] update es-abstract 2a633ce [meta] gitignore coverage output 5f4a0c1","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v113-2020-11-26","text":"","title":"v1.1.3 - 2020-11-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_5","text":"[Tests] migrate tests to Github Actions f9641aa [Tests] add implementation test; run es-shim-api in postlint; use tape runner 7cd4184 [Tests] run nyc on all tests de597c9 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape f453127 [actions] add \"Allow Edits\" workflow 5b65ef6 [Deps] update es-abstract ; use call-bind where applicable 339136d [actions] switch Automatic Rebase workflow to pull_request_target event ef2df4d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v112-2020-05-20","text":"","title":"v1.1.2 - 2020-05-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_6","text":"[meta] add auto-changelog 29e2771 [Dev Deps] update eslint , @ljharb/eslint-config , tape , functions-have-names ; add safe-publish-latest f30dde0 [Refactor] use callBound instead of function-bind db94733 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud 124d3bb [Fix] do not mutate the native function when present fffb674 [Dev Deps] update @ljharb/eslint-config , aud 5552db4 [Deps] update es-abstract bcf93d0 [meta] only run aud on prod deps 13c35c9 [Deps] update es-abstract 9374fed","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v111-2019-12-12","text":"","title":"v1.1.1 - 2019-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_7","text":"[Tests] use shared travis-ci configs 576c8a7 [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 ; use nvm install-latest-npm 26c5a45 [actions] add automatic rebasing / merge commit blocking 3253bdf [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names bf480ef [Refactor] use split-up es-abstract (85% bundle size decrease) 3fd42b9 [Tests] use npx aud instead of nsp or npm audit with hoops 9bf7f7f [meta] clean up scripts 908f4fd [Dev Deps] update eslint , tape 213436c [Tests] use functions-have-names 8cd5de5 [Deps] update es-abstract 3a2ca03","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v110-2019-01-01","text":"","title":"v1.1.0 - 2019-01-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#fixed","text":"Exclude test.html from the npm package. #12","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_8","text":"[Tests] remove jscs 052aed1 [Tests] up to node v11.1 , v10.13 , v9.11 , v8.12 , v7.10 , v6.14 , v4.9 ; use nvm install-latest-npm 0015678 [Tests] up to node v7.4 , v4.7 ; improve test matrix 6f19e66 [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 89415ba [Dev Deps] update eslint , @ljharb/eslint-config , nsp , tape 91f9ee6 [New] add auto entry point [ 9799c0d`](https://github.com/ljharb/Object.entries/commit/9799c0d8634cfecb68038a1770fcb35e184ebe94) [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 074677d [Deps] update define-properties , es-abstract , function-bind , has db5d97e [Tests] use npm audit instead of nsp bc3e6a7 Only apps should have lockfiles d192ab7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v104-2016-12-04","text":"","title":"v1.0.4 - 2016-12-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_9","text":"[Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , @es-shims/api cf4a9cf [Tests] up to node v7.2 , v6.9 , v4.6 ; improve test matrix. 281ccbd [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 33fb890 [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config 7c1ea3f [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config f9473c7 [Dev Deps] update jscs , nsp , eslint , @es-shims/api 1368a76 [Tests] up to v5.6 , v4.3 7ad9976 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 6bf18dc [Dev Deps] update jscs , eslint , @ljharb/eslint-config a45c239 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 13f7d10 [Tests] up to node v5.9 , v4.4 261533c [Dev Deps] update jscs 8dd7b5f [Docs] update to reflect ES2017 inclusion. 7662206 [Tests] use pretest/posttest for linting/security 87d62ad [Tests] fix npm upgrades on older nodes 67cabde [Tests] up to node v6.2 c50c154 [Dev Deps] update jscs , eslint , @ljharb/eslint-config ff17ab8 [Deps] update es-abstract b8be50a [Deps] update es-abstract fb3a7e1 [Tests] on node v5.12 ba624ca [Tests] on node v5.10 e513ca5 [Deps] update function-bind 6e25d29 [Deps] update es-abstract bf680a4 [Deps] update es-abstract fbb209b [Deps] update define-properties 77d4ead [Tests] on node v4.2 d946594 [Tests] on node v5.0 80d7d16","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v103-2015-10-06","text":"","title":"v1.0.3 - 2015-10-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_10","text":"Add test case to cover non-enumerable keys made enumerable by a previous getter. 5b53808 [Dev Deps] update tape , eslint , @ljharb/eslint-config 1c3ddff [Dev Deps] update jscs , eslint 0a0f1be [Deps] update es-abstract 8cacfdc","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v102-2015-09-25","text":"","title":"v1.0.2 - 2015-09-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#fixed_1","text":"Not-yet-visited keys deleted on a [[Get]] must not show up in the output #1","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v101-2015-09-21","text":"","title":"v1.0.1 - 2015-09-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_11","text":"[Tests] on iojs v3.3 , up to node v4.1 181f888 [Dev Deps] update eslint , @ljharb/eslint-config e93536e Add es-shim API keyword 51080c2 [Docs] update version badge URL 398a7e4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#v100-2015-09-02","text":"","title":"v1.0.0 - 2015-09-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.entries/CHANGELOG/#commits_12","text":"Dotfiles 3a59351 Tests bd1ceae package.json 301832d Read me d92e775 Initial commit 212a7ce Implementation. 8fd8aae Clarifying tests that only Symbol properties are omitted. 1b5cb92","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/","text":"object.fromentries An ES spec-proposal-compliant Object.fromEntries shim. Invoke its \"shim\" method to shim Object.fromEntries if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Most common usage: var assert = require('assert'); var fromEntries = require('object.fromentries'); var obj = { a: 1, b: 2, c: 3 }; var actual = fromEntries(Object.entries(obj)); assert.deepEqual(obj, actual); if (!Object.fromEntries) { fromEntries.shim(); } assert.deepEqual(Object.fromEntries(Object.entries(obj)), obj); Tests Simply clone the repo, npm install , and run npm test","title":"object.fromentries Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/#objectfromentries","text":"An ES spec-proposal-compliant Object.fromEntries shim. Invoke its \"shim\" method to shim Object.fromEntries if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the proposed spec . Most common usage: var assert = require('assert'); var fromEntries = require('object.fromentries'); var obj = { a: 1, b: 2, c: 3 }; var actual = fromEntries(Object.entries(obj)); assert.deepEqual(obj, actual); if (!Object.fromEntries) { fromEntries.shim(); } assert.deepEqual(Object.fromEntries(Object.entries(obj)), obj);","title":"object.fromentries"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.8 - 2024-03-18 Commits [actions] remove redundant finisher 70e8717 [Deps] update call-bind , define-properties , es-abstract f4b1a93 [Refactor] use es-object-atoms where possible 252ffa7 [Dev Deps] update aud , tape 200ccd5 v2.0.7 - 2023-08-28 Commits [Deps] update define-properties , es-abstract dbf1467 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 495556f v2.0.6 - 2022-11-06 Commits [actions] reuse common workflows 867603d [meta] add auto-changelog 3621c90 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape d6c3de7 [Deps] update define-properties , es-abstract a0eca66 [actions] update rebase action to use reusable workflow 91df159 [actions] update codecov uploader e7f2c96 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape ec22968 2.0.5 / 2021-10-03 [readme] add actions and codecov badges [Deps] update es-abstract [Deps] remove unused has dep [meta] use prepublishOnly script for npm 7+ [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , tape [actions] update workflows [actions] use node/install instead of node/run ; use codecov action [Tests] increase coverage 2.0.4 / 2021-02-21 [readme] fix repo URLs; remove travis badge [meta] do not publish github action workflow files [Deps] update call-bind , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-strict-mode , tape [actions] update workflows 2.0.3 / 2020-11-26 [Deps] update es-abstract ; remove function-bind ; use call-bind where applicable [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud , safe-publish-latest [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [Tests] only audit prod deps 2.0.2 / 2019-12-12 [Refactor] use split-up es-abstract (63% bundle size decrease) [readme] remove testling [Dev Deps] update eslint , @ljharb/eslint-config [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking 2.0.1 / 2019-10-03 [Fix] do not mutate Object.fromEntries when already present [Deps] update define-properties , es-abstract , has [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape [Tests] up to node v12.9 , v11.15 , v10.16 , v9.11 , v8.16 , v6.17 , v4.9 [Tests] use npx aud instead of nsp or npm audit with hoops 2.0.0 / 2018-08-09 [Breaking] throw when iterable is nullish [Docs] Fix link to proposed spec 1.0.0 / 2018-03-21 v1.0.0","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#v208-2024-03-18","text":"","title":"v2.0.8 - 2024-03-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#commits","text":"[actions] remove redundant finisher 70e8717 [Deps] update call-bind , define-properties , es-abstract f4b1a93 [Refactor] use es-object-atoms where possible 252ffa7 [Dev Deps] update aud , tape 200ccd5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#v207-2023-08-28","text":"","title":"v2.0.7 - 2023-08-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#commits_1","text":"[Deps] update define-properties , es-abstract dbf1467 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 495556f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#v206-2022-11-06","text":"","title":"v2.0.6 - 2022-11-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#commits_2","text":"[actions] reuse common workflows 867603d [meta] add auto-changelog 3621c90 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape d6c3de7 [Deps] update define-properties , es-abstract a0eca66 [actions] update rebase action to use reusable workflow 91df159 [actions] update codecov uploader e7f2c96 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape ec22968","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#205-2021-10-03","text":"[readme] add actions and codecov badges [Deps] update es-abstract [Deps] remove unused has dep [meta] use prepublishOnly script for npm 7+ [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , tape [actions] update workflows [actions] use node/install instead of node/run ; use codecov action [Tests] increase coverage","title":"2.0.5 / 2021-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#204-2021-02-21","text":"[readme] fix repo URLs; remove travis badge [meta] do not publish github action workflow files [Deps] update call-bind , es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-strict-mode , tape [actions] update workflows","title":"2.0.4 / 2021-02-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#203-2020-11-26","text":"[Deps] update es-abstract ; remove function-bind ; use call-bind where applicable [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud , safe-publish-latest [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] add implementation test; run es-shim-api in postlint; use tape runner [Tests] only audit prod deps","title":"2.0.3 / 2020-11-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#202-2019-12-12","text":"[Refactor] use split-up es-abstract (63% bundle size decrease) [readme] remove testling [Dev Deps] update eslint , @ljharb/eslint-config [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking","title":"2.0.2 / 2019-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#201-2019-10-03","text":"[Fix] do not mutate Object.fromEntries when already present [Deps] update define-properties , es-abstract , has [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape [Tests] up to node v12.9 , v11.15 , v10.16 , v9.11 , v8.16 , v6.17 , v4.9 [Tests] use npx aud instead of nsp or npm audit with hoops","title":"2.0.1 / 2019-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#200-2018-08-09","text":"[Breaking] throw when iterable is nullish [Docs] Fix link to proposed spec","title":"2.0.0 / 2018-08-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.fromentries/CHANGELOG/#100-2018-03-21","text":"v1.0.0","title":"1.0.0 / 2018-03-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/","text":"object.values An ES2017 spec-compliant Object.values shim. Invoke its \"shim\" method to shim Object.values if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Most common usage: var assert = require('assert'); var values = require('object.values'); var obj = { a: 1, b: 2, c: 3 }; var expected = [1, 2, 3]; if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') { // for environments with Symbol support var sym = Symbol(); obj[sym] = 4; obj.d = sym; expected.push(sym); } assert.deepEqual(values(obj), expected); if (!Object.values) { values.shim(); } assert.deepEqual(Object.values(obj), expected); Tests Simply clone the repo, npm install , and run npm test","title":"object.values Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/#objectvalues","text":"An ES2017 spec-compliant Object.values shim. Invoke its \"shim\" method to shim Object.values if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Most common usage: var assert = require('assert'); var values = require('object.values'); var obj = { a: 1, b: 2, c: 3 }; var expected = [1, 2, 3]; if (typeof Symbol === 'function' && typeof Symbol() === 'symbol') { // for environments with Symbol support var sym = Symbol(); obj[sym] = 4; obj.d = sym; expected.push(sym); } assert.deepEqual(values(obj), expected); if (!Object.values) { values.shim(); } assert.deepEqual(Object.values(obj), expected);","title":"object.values"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.0 - 2024-03-18 Commits [Refactor] use es-object-atoms instead of es-abstract ; update call-bind , define-properties a51f9fd [Dev Deps] update array.prototype.map , aud , npmignore , tape 540765d [New] add auto entrypoint ce8740c v1.1.7 - 2023-08-27 Commits [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 7a52cb5 [Deps] update define-properties , es-abstract 4adc158 v1.1.6 - 2022-11-06 Commits [actions] reuse common workflows 4072b71 [meta] use npmignore to autogenerate an npmignore file 6881278 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , array.prototype.map , safe-publish-latest , tape 28c21e6 [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.map , aud , auto-changelog , functions-have-names , tape 0e78caa [actions] update rebase action to use reusable workflow 6f37c60 [actions] update codecov uploader d7c5f30 [Deps] update define-properties , es-abstract 911ca0e v1.1.5 - 2021-10-03 Commits [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , tape c397925 [Deps] update es-abstract f98d0da [Robustness] use a call-bound Array.prototype.push 72a3213 [meta] npmignore coverage output 3b0433f v1.1.4 - 2021-05-26 Commits [meta] add auto-changelog 01ee3ac [actions] use node/install instead of node/run ; use codecov action f403cba [readme] add actions and codecov badges bee5cd2 [Dev Deps] update eslint , @ljharb/eslint-config , aud ; switch array-map for array.prototype.map 8c49dbe [Refactor] propertyIsEnumerable checks own-ness; remove has 3cb48cf [actions] update workflows eb1d757 [Dev Deps] update eslint , tape 0abdb2d [Tests] increase coverage 8ca19a3 [meta] use prepublishOnly script for npm 7+ 88998c8 [Deps] update es-abstract 12515ab [Deps] update es-abstract 3083ce7 [meta] gitignore coverage output 7aef22b v1.1.3 - 2021-02-22 Commits [meta] do not publish github action workflow files 208c71c [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape 88849ab [readme] remove travis badge 0a9a67f [actions] update workflows 4ecb890 [Deps] update call-bind , es-abstract 28845c7 v1.1.2 - 2020-11-26 Commits [Tests] migrate tests to Github Actions 6ab9d79 [Tests] add implementation test; run es-shim-api in postlint; use tape runner 65667b7 [Tests] run nyc on all tests b83f36c [actions] add \"Allow Edits\" workflow 44c7de1 [Deps] update es-abstract ; use call-bind where applicable 35f88b0 [Dev Deps] update eslint , @ljharb/eslint-config , tape , functions-have-names ; add safe-publish-latest 2495030 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1cc1742 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud f42bc75 [Fix] do not mutate the native function when present ea2a273 [actions] switch Automatic Rebase workflow to pull_request_target event 5040d09 [Tests] only audit prod deps 2803c92 [Deps] update es-abstract d15d0e5 [Dev Deps] update tape e83fe3a [Deps] update es-abstract cfab489 v1.1.1 - 2019-12-12 Commits [Tests] use shared travis-ci configs 2a82dea [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 ; use nvm install-latest-npm 58a4209 [Tests] use npx aud instead of nsp or npm audit with hoops 80080cd [actions] add automatic rebasing / merge commit blocking e8a9297 [Refactor] use split-up es-abstract (85% bundle size decrease) a8ac36f [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names c74ad8a [Dev Deps] update object-keys , tape , eslint 10adf18 [meta] add funding field 110dbca [Tests] use functions-have-names 40746e5 [Deps] update es-abstract 9b7c99b v1.1.0 - 2019-01-01 Commits [Tests] remove jscs a9d5f94 [Tests] up to node v11.1 , v10.13 , v9.11 , v8.12 , v7.10 , v6.14 , v4.9 ; use nvm install-latest-npm 103a907 [Tests] up to node v7.4 , v4.7 ; improve test matrix 66caa4a [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 81de647 [Dev Deps] update eslint , @ljharb/eslint-config , nsp , tape 13c5dd1 [Dev Deps] add missing object-keys dev dep 7cbc7f3 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 1bf1dbe [Deps] update define-properties , es-abstract , function-bind , has faa4051 [Tests] use npm audit instead of nsp 428fb50 Only apps should have lockfiles f35eb85 [New] add auto entry point ed730e3 v1.0.4 - 2016-12-04 Commits [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , @es-shims/api b0db351 [Tests] up to node v7.2 , v6.9 , v4.6 ; improve test matrix. 89362d3 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 883dce4 [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config 67e83b8 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 2c1c6c7 [Dev Deps] update jscs , nsp , eslint , @es-shims/api d878ea6 [Tests] up to node v5.6 , v4.3 f37757e [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 348a2a3 [Dev Deps] update jscs , eslint , @ljharb/eslint-config b1e915e [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 015b78d [Tests] up to node v5.9 , v4.4 b33686e [Dev Deps] update jscs 0a44aa3 [Docs] update to reflect ES2017 inclusion. c01085b [Tests] use pretest/posttest for linting/security. 8f9c6c7 [Tests] fix npm upgrades on older nodes 68c195f [Tests] up to node v6.2 48fac8d [Dev Deps] update jscs , eslint , @ljharb/eslint-config 471a794 [Deps] update es-abstract 7e644f1 [Deps] update es-abstract 1856267 [Tests] on node v5.12 8a4e0c0 [Tests] on node v5.10 aaeb1a7 [Deps] update function-bind 14d2e88 [Deps] update es-abstract 63e46a9 [Deps] update es-abstract 7c40db6 [Deps] update define-properties 0a86270 [Tests] on node v4.2 8ee831d [Tests] on node v5.0 b9c88c7 v1.0.3 - 2015-10-06 Commits Add test case to cover non-enumerable keys made enumerable by a previous getter. 9d61739 [Dev Deps] update tape , eslint , @ljharb/eslint-config cf6dff8 [Dev Deps] update jscs , eslint f439029 [Deps] update es-abstract 6879994 v1.0.2 - 2015-09-25 Fixed Not-yet-visited keys deleted on a [[Get]] must not show up in the output #1 v1.0.1 - 2015-09-21 Commits [Tests] on io.js v3.3 , up to node v4.1 27aac5f [Dev Deps] update eslint , @ljharb/eslint-config 83cde5c Add es-shim API keyword 2c6b885 [Docs] update version badge URL 626bf99 v1.0.0 - 2015-09-02 Commits Dotfiles 5251629 Tests b02e54e package.json 7b84f4e Read me 31e115b Initial commit 01271a5 Implementation. 9a0c315 Clarifying tests that only Symbol properties are omitted. 16b3abb","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v120-2024-03-18","text":"","title":"v1.2.0 - 2024-03-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits","text":"[Refactor] use es-object-atoms instead of es-abstract ; update call-bind , define-properties a51f9fd [Dev Deps] update array.prototype.map , aud , npmignore , tape 540765d [New] add auto entrypoint ce8740c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v117-2023-08-27","text":"","title":"v1.1.7 - 2023-08-27"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_1","text":"[Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 7a52cb5 [Deps] update define-properties , es-abstract 4adc158","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v116-2022-11-06","text":"","title":"v1.1.6 - 2022-11-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_2","text":"[actions] reuse common workflows 4072b71 [meta] use npmignore to autogenerate an npmignore file 6881278 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , array.prototype.map , safe-publish-latest , tape 28c21e6 [Dev Deps] update eslint , @ljharb/eslint-config , array.prototype.map , aud , auto-changelog , functions-have-names , tape 0e78caa [actions] update rebase action to use reusable workflow 6f37c60 [actions] update codecov uploader d7c5f30 [Deps] update define-properties , es-abstract 911ca0e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v115-2021-10-03","text":"","title":"v1.1.5 - 2021-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_3","text":"[Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , tape c397925 [Deps] update es-abstract f98d0da [Robustness] use a call-bound Array.prototype.push 72a3213 [meta] npmignore coverage output 3b0433f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v114-2021-05-26","text":"","title":"v1.1.4 - 2021-05-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_4","text":"[meta] add auto-changelog 01ee3ac [actions] use node/install instead of node/run ; use codecov action f403cba [readme] add actions and codecov badges bee5cd2 [Dev Deps] update eslint , @ljharb/eslint-config , aud ; switch array-map for array.prototype.map 8c49dbe [Refactor] propertyIsEnumerable checks own-ness; remove has 3cb48cf [actions] update workflows eb1d757 [Dev Deps] update eslint , tape 0abdb2d [Tests] increase coverage 8ca19a3 [meta] use prepublishOnly script for npm 7+ 88998c8 [Deps] update es-abstract 12515ab [Deps] update es-abstract 3083ce7 [meta] gitignore coverage output 7aef22b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v113-2021-02-22","text":"","title":"v1.1.3 - 2021-02-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_5","text":"[meta] do not publish github action workflow files 208c71c [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape 88849ab [readme] remove travis badge 0a9a67f [actions] update workflows 4ecb890 [Deps] update call-bind , es-abstract 28845c7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v112-2020-11-26","text":"","title":"v1.1.2 - 2020-11-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_6","text":"[Tests] migrate tests to Github Actions 6ab9d79 [Tests] add implementation test; run es-shim-api in postlint; use tape runner 65667b7 [Tests] run nyc on all tests b83f36c [actions] add \"Allow Edits\" workflow 44c7de1 [Deps] update es-abstract ; use call-bind where applicable 35f88b0 [Dev Deps] update eslint , @ljharb/eslint-config , tape , functions-have-names ; add safe-publish-latest 2495030 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 1cc1742 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud f42bc75 [Fix] do not mutate the native function when present ea2a273 [actions] switch Automatic Rebase workflow to pull_request_target event 5040d09 [Tests] only audit prod deps 2803c92 [Deps] update es-abstract d15d0e5 [Dev Deps] update tape e83fe3a [Deps] update es-abstract cfab489","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v111-2019-12-12","text":"","title":"v1.1.1 - 2019-12-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_7","text":"[Tests] use shared travis-ci configs 2a82dea [Tests] up to node v12.7 , v11.15 , v10.16 , v8.16 , v6.17 ; use nvm install-latest-npm 58a4209 [Tests] use npx aud instead of nsp or npm audit with hoops 80080cd [actions] add automatic rebasing / merge commit blocking e8a9297 [Refactor] use split-up es-abstract (85% bundle size decrease) a8ac36f [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names c74ad8a [Dev Deps] update object-keys , tape , eslint 10adf18 [meta] add funding field 110dbca [Tests] use functions-have-names 40746e5 [Deps] update es-abstract 9b7c99b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v110-2019-01-01","text":"","title":"v1.1.0 - 2019-01-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_8","text":"[Tests] remove jscs a9d5f94 [Tests] up to node v11.1 , v10.13 , v9.11 , v8.12 , v7.10 , v6.14 , v4.9 ; use nvm install-latest-npm 103a907 [Tests] up to node v7.4 , v4.7 ; improve test matrix 66caa4a [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 81de647 [Dev Deps] update eslint , @ljharb/eslint-config , nsp , tape 13c5dd1 [Dev Deps] add missing object-keys dev dep 7cbc7f3 [Dev Deps] update eslint , @ljharb/eslint-config , covert , tape 1bf1dbe [Deps] update define-properties , es-abstract , function-bind , has faa4051 [Tests] use npm audit instead of nsp 428fb50 Only apps should have lockfiles f35eb85 [New] add auto entry point ed730e3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v104-2016-12-04","text":"","title":"v1.0.4 - 2016-12-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_9","text":"[Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , @es-shims/api b0db351 [Tests] up to node v7.2 , v6.9 , v4.6 ; improve test matrix. 89362d3 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 883dce4 [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config 67e83b8 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 2c1c6c7 [Dev Deps] update jscs , nsp , eslint , @es-shims/api d878ea6 [Tests] up to node v5.6 , v4.3 f37757e [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 348a2a3 [Dev Deps] update jscs , eslint , @ljharb/eslint-config b1e915e [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 015b78d [Tests] up to node v5.9 , v4.4 b33686e [Dev Deps] update jscs 0a44aa3 [Docs] update to reflect ES2017 inclusion. c01085b [Tests] use pretest/posttest for linting/security. 8f9c6c7 [Tests] fix npm upgrades on older nodes 68c195f [Tests] up to node v6.2 48fac8d [Dev Deps] update jscs , eslint , @ljharb/eslint-config 471a794 [Deps] update es-abstract 7e644f1 [Deps] update es-abstract 1856267 [Tests] on node v5.12 8a4e0c0 [Tests] on node v5.10 aaeb1a7 [Deps] update function-bind 14d2e88 [Deps] update es-abstract 63e46a9 [Deps] update es-abstract 7c40db6 [Deps] update define-properties 0a86270 [Tests] on node v4.2 8ee831d [Tests] on node v5.0 b9c88c7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v103-2015-10-06","text":"","title":"v1.0.3 - 2015-10-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_10","text":"Add test case to cover non-enumerable keys made enumerable by a previous getter. 9d61739 [Dev Deps] update tape , eslint , @ljharb/eslint-config cf6dff8 [Dev Deps] update jscs , eslint f439029 [Deps] update es-abstract 6879994","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v102-2015-09-25","text":"","title":"v1.0.2 - 2015-09-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#fixed","text":"Not-yet-visited keys deleted on a [[Get]] must not show up in the output #1","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v101-2015-09-21","text":"","title":"v1.0.1 - 2015-09-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_11","text":"[Tests] on io.js v3.3 , up to node v4.1 27aac5f [Dev Deps] update eslint , @ljharb/eslint-config 83cde5c Add es-shim API keyword 2c6b885 [Docs] update version badge URL 626bf99","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#v100-2015-09-02","text":"","title":"v1.0.0 - 2015-09-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/object.values/CHANGELOG/#commits_12","text":"Dotfiles 5251629 Tests b02e54e package.json 7b84f4e Read me 31e115b Initial commit 01271a5 Implementation. 9a0c315 Clarifying tests that only Symbol properties are omitted. 16b3abb","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/","text":"Optionator Optionator is a JavaScript/Node.js option parsing and help generation library used by eslint , Grasp , LiveScript , esmangle , escodegen , and many more . For an online demo, check out the Grasp online demo . About \u00b7 Usage \u00b7 Settings Format \u00b7 Argument Format Why? The problem with other option parsers, such as yargs or minimist , is they just accept all input, valid or not. With Optionator, if you mistype an option, it will give you an error (with a suggestion for what you meant). If you give the wrong type of argument for an option, it will give you an error rather than supplying the wrong input to your application. $ cmd --halp Invalid option '--halp' - perhaps you meant '--help'? $ cmd --count str Invalid value for option 'count' - expected type Int, received value: str. Other helpful features include reformatting the help text based on the size of the console, so that it fits even if the console is narrow, and accepting not just an array (eg. process.argv), but a string or object as well, making things like testing much easier. About Optionator uses type-check and levn behind the scenes to cast and verify input according the specified types. MIT license. Version 0.9.4 npm install optionator For updates on Optionator, follow me on twitter . Optionator is a Node.js module, but can be used in the browser as well if packed with webpack/browserify. Usage require('optionator'); returns a function. It has one property, VERSION , the current version of the library as a string. This function is called with an object specifying your options and other information, see the settings format section . This in turn returns an object with three properties, parse , parseArgv , generateHelp , and generateHelpForOption , which are all functions. var optionator = require('optionator')({ prepend: 'Usage: cmd [options]', append: 'Version 1.0.0', options: [{ option: 'help', alias: 'h', type: 'Boolean', description: 'displays help' }, { option: 'count', alias: 'c', type: 'Int', description: 'number of things', example: 'cmd --count 2' }] }); var options = optionator.parseArgv(process.argv); if (options.help) { console.log(optionator.generateHelp()); } ... parse(input, parseOptions) parse processes the input according to your settings, and returns an object with the results. arguments input - [String] | Object | String - the input you wish to parse parseOptions - {slice: Int} - all options optional slice specifies how much to slice away from the beginning if the input is an array or string - by default 0 for string, 2 for array (works with process.argv ) returns Object - the parsed options, each key is a camelCase version of the option name (specified in dash-case), and each value is the processed value for that option. Positional values are in an array under the _ key. example parse(['node', 't.js', '--count', '2', 'positional']); // {count: 2, _: ['positional']} parse('--count 2 positional'); // {count: 2, _: ['positional']} parse({count: 2, _:['positional']}); // {count: 2, _: ['positional']} parseArgv(input) parseArgv works exactly like parse , but only for array input and it slices off the first two elements. arguments input - [String] - the input you wish to parse returns See \"returns\" section in \"parse\" example parseArgv(process.argv); generateHelp(helpOptions) generateHelp produces help text based on your settings. arguments helpOptions - {showHidden: Boolean, interpolate: Object} - all options optional showHidden specifies whether to show options with hidden: true specified, by default it is false interpolate specify data to be interpolated in prepend and append text, {{key}} is the format - eg. generateHelp({interpolate:{version: '0.4.2'}}) , will change this append text: Version {{version}} to Version 0.4.2 returns String - the generated help text example generateHelp(); /* \"Usage: cmd [options] positional -h, --help displays help -c, --count Int number of things Version 1.0.0 \"*/ generateHelpForOption(optionName) generateHelpForOption produces expanded help text for the specified with optionName option. If an example was specified for the option, it will be displayed, and if a longDescription was specified, it will display that instead of the description . arguments optionName - String - the name of the option to display returns String - the generated help text for the option example generateHelpForOption('count'); /* \"-c, --count Int description: number of things example: cmd --count 2 \"*/ Settings Format When your require('optionator') , you get a function that takes in a settings object. This object has the type: { prepend: String, append: String, options: [{heading: String} | { option: String, alias: [String] | String, type: String, enum: [String], default: String, restPositional: Boolean, required: Boolean, overrideRequired: Boolean, dependsOn: [String] | String, concatRepeatedArrays: Boolean | (Boolean, Object), mergeRepeatedObjects: Boolean, description: String, longDescription: String, example: [String] | String }], helpStyle: { aliasSeparator: String, typeSeparator: String, descriptionSeparator: String, initialIndent: Int, secondaryIndent: Int, maxPadFactor: Number }, mutuallyExclusive: [[String | [String]]], concatRepeatedArrays: Boolean | (Boolean, Object), // deprecated, set in defaults object mergeRepeatedObjects: Boolean, // deprecated, set in defaults object positionalAnywhere: Boolean, typeAliases: Object, defaults: Object } All of the properties are optional (the Maybe has been excluded for brevities sake), except for having either heading: String or option: String in each object in the options array. Top Level Properties prepend is an optional string to be placed before the options in the help text append is an optional string to be placed after the options in the help text options is a required array specifying your options and headings, the options and headings will be displayed in the order specified helpStyle is an optional object which enables you to change the default appearance of some aspects of the help text mutuallyExclusive is an optional array of arrays of either strings or arrays of strings. The top level array is a list of rules, each rule is a list of elements - each element can be either a string (the name of an option), or a list of strings (a group of option names) - there will be an error if more than one element is present concatRepeatedArrays see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the defaults property mergeRepeatedObjects see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the defaults property positionalAnywhere is an optional boolean (defaults to true ) - when true it allows positional arguments anywhere, when false , all arguments after the first positional one are taken to be positional as well, even if they look like a flag. For example, with positionalAnywhere: false , the arguments --flag --boom 12 --crack would have two positional arguments: 12 and --crack typeAliases is an optional object, it allows you to set aliases for types, eg. {Path: 'String'} would allow you to use the type Path as an alias for the type String defaults is an optional object following the option properties format, which specifies default values for all options. A default will be overridden if manually set. For example, you can do default: { type: \"String\" } to set the default type of all options to String , and then override that default in an individual option by setting the type property Heading Properties heading a required string, the name of the heading Option Properties option the required name of the option - use dash-case, without the leading dashes alias is an optional string or array of strings which specify any aliases for the option type is a required string in the type check format , this will be used to cast the inputted value and validate it enum is an optional array of strings, each string will be parsed by levn - the argument value must be one of the resulting values - each potential value must validate against the specified type default is a optional string, which will be parsed by levn and used as the default value if none is set - the value must validate against the specified type restPositional is an optional boolean - if set to true , everything after the option will be taken to be a positional argument, even if it looks like a named argument required is an optional boolean - if set to true , the option parsing will fail if the option is not defined overrideRequired is a optional boolean - if set to true and the option is used, and there is another option which is required but not set, it will override the need for the required option and there will be no error - this is useful if you have required options and want to use --help or --version flags concatRepeatedArrays is an optional boolean or tuple with boolean and options object (defaults to false ) - when set to true and an option contains an array value and is repeated, the subsequent values for the flag will be appended rather than overwriting the original value - eg. option g of type [String] : -g a -g b -g c,d will result in ['a','b','c','d'] You can supply an options object by giving the following value: [true, options] . The one currently supported option is oneValuePerFlag , this only allows one array value per flag. This is useful if your potential values contain a comma. * mergeRepeatedObjects is an optional boolean (defaults to false ) - when set to true and an option contains an object value and is repeated, the subsequent values for the flag will be merged rather than overwriting the original value - eg. option g of type Object : -g a:1 -g b:2 -g c:3,d:4 will result in {a: 1, b: 2, c: 3, d: 4} * dependsOn is an optional string or array of strings - if simply a string (the name of another option), it will make sure that that other option is set, if an array of strings, depending on whether 'and' or 'or' is first, it will either check whether all ( ['and', 'option-a', 'option-b'] ), or at least one ( ['or', 'option-a', 'option-b'] ) other options are set * description is an optional string, which will be displayed next to the option in the help text * longDescription is an optional string, it will be displayed instead of the description when generateHelpForOption is used * example is an optional string or array of strings with example(s) for the option - these will be displayed when generateHelpForOption is used Help Style Properties aliasSeparator is an optional string, separates multiple names from each other - default: ' ,' typeSeparator is an optional string, separates the type from the names - default: ' ' descriptionSeparator is an optional string , separates the description from the padded name and type - default: ' ' initialIndent is an optional int - the amount of indent for options - default: 2 secondaryIndent is an optional int - the amount of indent if wrapped fully (in addition to the initial indent) - default: 4 maxPadFactor is an optional number - affects the default level of padding for the names/type, it is multiplied by the average of the length of the names/type - default: 1.5 Argument Format At the highest level there are two types of arguments: named, and positional. Name arguments of any length are prefixed with -- (eg. --go ), and those of one character may be prefixed with either -- or - (eg. -g ). There are two types of named arguments: boolean flags (eg. --problemo , -p ) which take no value and result in a true if they are present, the falsey undefined if they are not present, or false if present and explicitly prefixed with no (eg. --no-problemo ). Named arguments with values (eg. --tseries 800 , -t 800 ) are the other type. If the option has a type Boolean it will automatically be made into a boolean flag. Any other type results in a named argument that takes a value. For more information about how to properly set types to get the value you want, take a look at the type check and levn pages. You can group single character arguments that use a single - , however all except the last must be boolean flags (which take no value). The last may be a boolean flag, or an argument which takes a value - eg. -ba 2 is equivalent to -b -a 2 . Positional arguments are all those values which do not fall under the above - they can be anywhere, not just at the end. For example, in cmd -b one -a 2 two where b is a boolean flag, and a has the type Number , there are two positional arguments, one and two . Everything after an -- is positional, even if it looks like a named argument. You may optionally use = to separate option names from values, for example: --count=2 . If you specify the option NUM , then any argument using a single - followed by a number will be valid and will set the value of NUM . Eg. -2 will be parsed into NUM: 2 . If duplicate named arguments are present, the last one will be taken. Technical About optionator is written in LiveScript - a language that compiles to JavaScript. It uses levn to cast arguments to their specified type, and uses type-check to validate values. It also uses the prelude.ls library.","title":"Optionator"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#optionator","text":"Optionator is a JavaScript/Node.js option parsing and help generation library used by eslint , Grasp , LiveScript , esmangle , escodegen , and many more . For an online demo, check out the Grasp online demo . About \u00b7 Usage \u00b7 Settings Format \u00b7 Argument Format","title":"Optionator"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#why","text":"The problem with other option parsers, such as yargs or minimist , is they just accept all input, valid or not. With Optionator, if you mistype an option, it will give you an error (with a suggestion for what you meant). If you give the wrong type of argument for an option, it will give you an error rather than supplying the wrong input to your application. $ cmd --halp Invalid option '--halp' - perhaps you meant '--help'? $ cmd --count str Invalid value for option 'count' - expected type Int, received value: str. Other helpful features include reformatting the help text based on the size of the console, so that it fits even if the console is narrow, and accepting not just an array (eg. process.argv), but a string or object as well, making things like testing much easier.","title":"Why?"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#about","text":"Optionator uses type-check and levn behind the scenes to cast and verify input according the specified types. MIT license. Version 0.9.4 npm install optionator For updates on Optionator, follow me on twitter . Optionator is a Node.js module, but can be used in the browser as well if packed with webpack/browserify.","title":"About"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#usage","text":"require('optionator'); returns a function. It has one property, VERSION , the current version of the library as a string. This function is called with an object specifying your options and other information, see the settings format section . This in turn returns an object with three properties, parse , parseArgv , generateHelp , and generateHelpForOption , which are all functions. var optionator = require('optionator')({ prepend: 'Usage: cmd [options]', append: 'Version 1.0.0', options: [{ option: 'help', alias: 'h', type: 'Boolean', description: 'displays help' }, { option: 'count', alias: 'c', type: 'Int', description: 'number of things', example: 'cmd --count 2' }] }); var options = optionator.parseArgv(process.argv); if (options.help) { console.log(optionator.generateHelp()); } ...","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#parseinput-parseoptions","text":"parse processes the input according to your settings, and returns an object with the results.","title":"parse(input, parseOptions)"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#arguments","text":"input - [String] | Object | String - the input you wish to parse parseOptions - {slice: Int} - all options optional slice specifies how much to slice away from the beginning if the input is an array or string - by default 0 for string, 2 for array (works with process.argv )","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#returns","text":"Object - the parsed options, each key is a camelCase version of the option name (specified in dash-case), and each value is the processed value for that option. Positional values are in an array under the _ key.","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#example","text":"parse(['node', 't.js', '--count', '2', 'positional']); // {count: 2, _: ['positional']} parse('--count 2 positional'); // {count: 2, _: ['positional']} parse({count: 2, _:['positional']}); // {count: 2, _: ['positional']}","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#parseargvinput","text":"parseArgv works exactly like parse , but only for array input and it slices off the first two elements.","title":"parseArgv(input)"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#arguments_1","text":"input - [String] - the input you wish to parse","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#returns_1","text":"See \"returns\" section in \"parse\"","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#example_1","text":"parseArgv(process.argv);","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#generatehelphelpoptions","text":"generateHelp produces help text based on your settings.","title":"generateHelp(helpOptions)"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#arguments_2","text":"helpOptions - {showHidden: Boolean, interpolate: Object} - all options optional showHidden specifies whether to show options with hidden: true specified, by default it is false interpolate specify data to be interpolated in prepend and append text, {{key}} is the format - eg. generateHelp({interpolate:{version: '0.4.2'}}) , will change this append text: Version {{version}} to Version 0.4.2","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#returns_2","text":"String - the generated help text","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#example_2","text":"generateHelp(); /* \"Usage: cmd [options] positional -h, --help displays help -c, --count Int number of things Version 1.0.0 \"*/","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#generatehelpforoptionoptionname","text":"generateHelpForOption produces expanded help text for the specified with optionName option. If an example was specified for the option, it will be displayed, and if a longDescription was specified, it will display that instead of the description .","title":"generateHelpForOption(optionName)"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#arguments_3","text":"optionName - String - the name of the option to display","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#returns_3","text":"String - the generated help text for the option","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#example_3","text":"generateHelpForOption('count'); /* \"-c, --count Int description: number of things example: cmd --count 2 \"*/","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#settings-format","text":"When your require('optionator') , you get a function that takes in a settings object. This object has the type: { prepend: String, append: String, options: [{heading: String} | { option: String, alias: [String] | String, type: String, enum: [String], default: String, restPositional: Boolean, required: Boolean, overrideRequired: Boolean, dependsOn: [String] | String, concatRepeatedArrays: Boolean | (Boolean, Object), mergeRepeatedObjects: Boolean, description: String, longDescription: String, example: [String] | String }], helpStyle: { aliasSeparator: String, typeSeparator: String, descriptionSeparator: String, initialIndent: Int, secondaryIndent: Int, maxPadFactor: Number }, mutuallyExclusive: [[String | [String]]], concatRepeatedArrays: Boolean | (Boolean, Object), // deprecated, set in defaults object mergeRepeatedObjects: Boolean, // deprecated, set in defaults object positionalAnywhere: Boolean, typeAliases: Object, defaults: Object } All of the properties are optional (the Maybe has been excluded for brevities sake), except for having either heading: String or option: String in each object in the options array.","title":"Settings Format"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#top-level-properties","text":"prepend is an optional string to be placed before the options in the help text append is an optional string to be placed after the options in the help text options is a required array specifying your options and headings, the options and headings will be displayed in the order specified helpStyle is an optional object which enables you to change the default appearance of some aspects of the help text mutuallyExclusive is an optional array of arrays of either strings or arrays of strings. The top level array is a list of rules, each rule is a list of elements - each element can be either a string (the name of an option), or a list of strings (a group of option names) - there will be an error if more than one element is present concatRepeatedArrays see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the defaults property mergeRepeatedObjects see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the defaults property positionalAnywhere is an optional boolean (defaults to true ) - when true it allows positional arguments anywhere, when false , all arguments after the first positional one are taken to be positional as well, even if they look like a flag. For example, with positionalAnywhere: false , the arguments --flag --boom 12 --crack would have two positional arguments: 12 and --crack typeAliases is an optional object, it allows you to set aliases for types, eg. {Path: 'String'} would allow you to use the type Path as an alias for the type String defaults is an optional object following the option properties format, which specifies default values for all options. A default will be overridden if manually set. For example, you can do default: { type: \"String\" } to set the default type of all options to String , and then override that default in an individual option by setting the type property","title":"Top Level Properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#heading-properties","text":"heading a required string, the name of the heading","title":"Heading Properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#option-properties","text":"option the required name of the option - use dash-case, without the leading dashes alias is an optional string or array of strings which specify any aliases for the option type is a required string in the type check format , this will be used to cast the inputted value and validate it enum is an optional array of strings, each string will be parsed by levn - the argument value must be one of the resulting values - each potential value must validate against the specified type default is a optional string, which will be parsed by levn and used as the default value if none is set - the value must validate against the specified type restPositional is an optional boolean - if set to true , everything after the option will be taken to be a positional argument, even if it looks like a named argument required is an optional boolean - if set to true , the option parsing will fail if the option is not defined overrideRequired is a optional boolean - if set to true and the option is used, and there is another option which is required but not set, it will override the need for the required option and there will be no error - this is useful if you have required options and want to use --help or --version flags concatRepeatedArrays is an optional boolean or tuple with boolean and options object (defaults to false ) - when set to true and an option contains an array value and is repeated, the subsequent values for the flag will be appended rather than overwriting the original value - eg. option g of type [String] : -g a -g b -g c,d will result in ['a','b','c','d'] You can supply an options object by giving the following value: [true, options] . The one currently supported option is oneValuePerFlag , this only allows one array value per flag. This is useful if your potential values contain a comma. * mergeRepeatedObjects is an optional boolean (defaults to false ) - when set to true and an option contains an object value and is repeated, the subsequent values for the flag will be merged rather than overwriting the original value - eg. option g of type Object : -g a:1 -g b:2 -g c:3,d:4 will result in {a: 1, b: 2, c: 3, d: 4} * dependsOn is an optional string or array of strings - if simply a string (the name of another option), it will make sure that that other option is set, if an array of strings, depending on whether 'and' or 'or' is first, it will either check whether all ( ['and', 'option-a', 'option-b'] ), or at least one ( ['or', 'option-a', 'option-b'] ) other options are set * description is an optional string, which will be displayed next to the option in the help text * longDescription is an optional string, it will be displayed instead of the description when generateHelpForOption is used * example is an optional string or array of strings with example(s) for the option - these will be displayed when generateHelpForOption is used","title":"Option Properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#help-style-properties","text":"aliasSeparator is an optional string, separates multiple names from each other - default: ' ,' typeSeparator is an optional string, separates the type from the names - default: ' ' descriptionSeparator is an optional string , separates the description from the padded name and type - default: ' ' initialIndent is an optional int - the amount of indent for options - default: 2 secondaryIndent is an optional int - the amount of indent if wrapped fully (in addition to the initial indent) - default: 4 maxPadFactor is an optional number - affects the default level of padding for the names/type, it is multiplied by the average of the length of the names/type - default: 1.5","title":"Help Style Properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#argument-format","text":"At the highest level there are two types of arguments: named, and positional. Name arguments of any length are prefixed with -- (eg. --go ), and those of one character may be prefixed with either -- or - (eg. -g ). There are two types of named arguments: boolean flags (eg. --problemo , -p ) which take no value and result in a true if they are present, the falsey undefined if they are not present, or false if present and explicitly prefixed with no (eg. --no-problemo ). Named arguments with values (eg. --tseries 800 , -t 800 ) are the other type. If the option has a type Boolean it will automatically be made into a boolean flag. Any other type results in a named argument that takes a value. For more information about how to properly set types to get the value you want, take a look at the type check and levn pages. You can group single character arguments that use a single - , however all except the last must be boolean flags (which take no value). The last may be a boolean flag, or an argument which takes a value - eg. -ba 2 is equivalent to -b -a 2 . Positional arguments are all those values which do not fall under the above - they can be anywhere, not just at the end. For example, in cmd -b one -a 2 two where b is a boolean flag, and a has the type Number , there are two positional arguments, one and two . Everything after an -- is positional, even if it looks like a named argument. You may optionally use = to separate option names from values, for example: --count=2 . If you specify the option NUM , then any argument using a single - followed by a number will be valid and will set the value of NUM . Eg. -2 will be parsed into NUM: 2 . If duplicate named arguments are present, the last one will be taken.","title":"Argument Format"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/#technical-about","text":"optionator is written in LiveScript - a language that compiles to JavaScript. It uses levn to cast arguments to their specified type, and uses type-check to validate values. It also uses the prelude.ls library.","title":"Technical About"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/","text":"0.9.0 update dependencies, in particular levn and type-check - this could affect behaviour of argument parsing 0.8.3 changes dependency from wordwrap to word-wrap due to license issue update dependencies 0.8.2 fix bug #18 - detect missing value when flag is last item update dependencies 0.8.1 update fast-levenshtein dependency 0.8.0 update levn dependency - supplying a float value to an option with type Int now throws an error, instead of silently converting to an Int 0.7.1 fix bug with use of defaults and concatRepeatedArrays or mergeRepeatedObjects 0.7.0 added concatrepeatedarrays option: oneValuePerFlag , only allows one array value per flag added typeAliases option added parseArgv which takes an array and parses with the first two items sliced off changed enum help style bug fixes (#12) use of concatRepeatedArrays and mergeRepeatedObjects at the top level is deprecated, use it as either a per-option option, or set them in the defaults object to set them for all objects 0.6.0 added defaults lib-option flag, allowing one to set default properties for all options added concatRepeatedArrays and mergeRepeatedObjects as option level properties, allowing you to turn this feature on for specific options only 0.5.0 Boolean flags with default: 'true' , and no short aliases, will by default show the --no version in help 0.4.0 add mergeRepeatedObjects setting 0.3.0 add concatRepeatedArrays setting add overrideRequired option setting use just Levenshtein string compare algo rather than Levenshtein Damerau to due dependency license issue 0.2.2 bug fixes 0.2.1 improved interpolation added changelog 0.2.0 add dependency checks to options - added dependsOn as an option property add interpolation for prepend and append text with new generateHelp option, interpolate 0.1.1 update dependencies 0.1.0 initial release","title":"0.9.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#090","text":"update dependencies, in particular levn and type-check - this could affect behaviour of argument parsing","title":"0.9.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#083","text":"changes dependency from wordwrap to word-wrap due to license issue update dependencies","title":"0.8.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#082","text":"fix bug #18 - detect missing value when flag is last item update dependencies","title":"0.8.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#081","text":"update fast-levenshtein dependency","title":"0.8.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#080","text":"update levn dependency - supplying a float value to an option with type Int now throws an error, instead of silently converting to an Int","title":"0.8.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#071","text":"fix bug with use of defaults and concatRepeatedArrays or mergeRepeatedObjects","title":"0.7.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#070","text":"added concatrepeatedarrays option: oneValuePerFlag , only allows one array value per flag added typeAliases option added parseArgv which takes an array and parses with the first two items sliced off changed enum help style bug fixes (#12) use of concatRepeatedArrays and mergeRepeatedObjects at the top level is deprecated, use it as either a per-option option, or set them in the defaults object to set them for all objects","title":"0.7.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#060","text":"added defaults lib-option flag, allowing one to set default properties for all options added concatRepeatedArrays and mergeRepeatedObjects as option level properties, allowing you to turn this feature on for specific options only","title":"0.6.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#050","text":"Boolean flags with default: 'true' , and no short aliases, will by default show the --no version in help","title":"0.5.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#040","text":"add mergeRepeatedObjects setting","title":"0.4.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#030","text":"add concatRepeatedArrays setting add overrideRequired option setting use just Levenshtein string compare algo rather than Levenshtein Damerau to due dependency license issue","title":"0.3.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#022","text":"bug fixes","title":"0.2.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#021","text":"improved interpolation added changelog","title":"0.2.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#020","text":"add dependency checks to options - added dependsOn as an option property add interpolation for prepend and append text with new generateHelp option, interpolate","title":"0.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#011","text":"update dependencies","title":"0.1.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/optionator/CHANGELOG/#010","text":"initial release","title":"0.1.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/","text":"p-limit Run multiple promise-returning & async functions with limited concurrency Install $ npm install p-limit Usage const pLimit = require('p-limit'); const limit = pLimit(1); const input = [ limit(() => fetchSomething('foo')), limit(() => fetchSomething('bar')), limit(() => doSomething()) ]; (async () => { // Only one promise is run at once const result = await Promise.all(input); console.log(result); })(); API pLimit(concurrency) Returns a limit function. concurrency Type: number \\ Minimum: 1 \\ Default: Infinity Concurrency limit. limit(fn, ...args) Returns the promise returned by calling fn(...args) . fn Type: Function Promise-returning/async function. args Any arguments to pass through to fn . Support for passing arguments on to the fn is provided in order to be able to avoid creating unnecessary closures. You probably don't need this optimization unless you're pushing a lot of functions. limit.activeCount The number of promises that are currently running. limit.pendingCount The number of promises that are waiting to run (i.e. their internal fn was not called yet). limit.clearQueue() Discard pending promises that are waiting to run. This might be useful if you want to teardown the queue at the end of your program's lifecycle or discard any function calls referencing an intermediary state of your app. Note: This does not cancel promises that are already running. FAQ How is this different from the p-queue package? This package is only about limiting the number of concurrent executions, while p-queue is a fully featured queue implementation with lots of different options, introspection, and ability to pause the queue. Related p-queue - Promise queue with concurrency control p-throttle - Throttle promise-returning & async functions p-debounce - Debounce promise-returning & async functions p-all - Run promise-returning & async functions concurrently with optional limited concurrency More\u2026 Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"p-limit"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#p-limit","text":"Run multiple promise-returning & async functions with limited concurrency","title":"p-limit"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#install","text":"$ npm install p-limit","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#usage","text":"const pLimit = require('p-limit'); const limit = pLimit(1); const input = [ limit(() => fetchSomething('foo')), limit(() => fetchSomething('bar')), limit(() => doSomething()) ]; (async () => { // Only one promise is run at once const result = await Promise.all(input); console.log(result); })();","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#plimitconcurrency","text":"Returns a limit function.","title":"pLimit(concurrency)"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#concurrency","text":"Type: number \\ Minimum: 1 \\ Default: Infinity Concurrency limit.","title":"concurrency"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#limitfn-args","text":"Returns the promise returned by calling fn(...args) .","title":"limit(fn, ...args)"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#fn","text":"Type: Function Promise-returning/async function.","title":"fn"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#args","text":"Any arguments to pass through to fn . Support for passing arguments on to the fn is provided in order to be able to avoid creating unnecessary closures. You probably don't need this optimization unless you're pushing a lot of functions.","title":"args"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#limitactivecount","text":"The number of promises that are currently running.","title":"limit.activeCount"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#limitpendingcount","text":"The number of promises that are waiting to run (i.e. their internal fn was not called yet).","title":"limit.pendingCount"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#limitclearqueue","text":"Discard pending promises that are waiting to run. This might be useful if you want to teardown the queue at the end of your program's lifecycle or discard any function calls referencing an intermediary state of your app. Note: This does not cancel promises that are already running.","title":"limit.clearQueue()"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#faq","text":"","title":"FAQ"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#how-is-this-different-from-the-p-queue-package","text":"This package is only about limiting the number of concurrent executions, while p-queue is a fully featured queue implementation with lots of different options, introspection, and ability to pause the queue.","title":"How is this different from the p-queue package?"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-limit/readme/#related","text":"p-queue - Promise queue with concurrency control p-throttle - Throttle promise-returning & async functions p-debounce - Debounce promise-returning & async functions p-all - Run promise-returning & async functions concurrently with optional limited concurrency More\u2026 Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/","text":"p-locate Get the first fulfilled promise that satisfies the provided testing function Think of it like an async version of Array#find . Install $ npm install p-locate Usage Here we find the first file that exists on disk, in array order. const pathExists = require('path-exists'); const pLocate = require('p-locate'); const files = [ 'unicorn.png', 'rainbow.png', // Only this one actually exists on disk 'pony.png' ]; (async () => { const foundPath = await pLocate(files, file => pathExists(file)); console.log(foundPath); //=> 'rainbow' })(); The above is just an example. Use locate-path if you need this. API pLocate(input, tester, options?) Returns a Promise that is fulfilled when tester resolves to true or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or undefined if tester never resolved to true . input Type: Iterable<Promise | unknown> An iterable of promises/values to test. tester(element) Type: Function This function will receive resolved values from input and is expected to return a Promise<boolean> or boolean . options Type: object concurrency Type: number \\ Default: Infinity \\ Minimum: 1 Number of concurrently pending promises returned by tester . preserveOrder Type: boolean \\ Default: true Preserve input order when searching. Disable this to improve performance if you don't care about the order. Related p-map - Map over promises concurrently p-filter - Filter promises concurrently p-any - Wait for any promise to be fulfilled More\u2026 Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"p-locate Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#p-locate","text":"Get the first fulfilled promise that satisfies the provided testing function Think of it like an async version of Array#find .","title":"p-locate"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#install","text":"$ npm install p-locate","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#usage","text":"Here we find the first file that exists on disk, in array order. const pathExists = require('path-exists'); const pLocate = require('p-locate'); const files = [ 'unicorn.png', 'rainbow.png', // Only this one actually exists on disk 'pony.png' ]; (async () => { const foundPath = await pLocate(files, file => pathExists(file)); console.log(foundPath); //=> 'rainbow' })(); The above is just an example. Use locate-path if you need this.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#plocateinput-tester-options","text":"Returns a Promise that is fulfilled when tester resolves to true or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or undefined if tester never resolved to true .","title":"pLocate(input, tester, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#input","text":"Type: Iterable<Promise | unknown> An iterable of promises/values to test.","title":"input"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#testerelement","text":"Type: Function This function will receive resolved values from input and is expected to return a Promise<boolean> or boolean .","title":"tester(element)"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#options","text":"Type: object","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#concurrency","text":"Type: number \\ Default: Infinity \\ Minimum: 1 Number of concurrently pending promises returned by tester .","title":"concurrency"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#preserveorder","text":"Type: boolean \\ Default: true Preserve input order when searching. Disable this to improve performance if you don't care about the order.","title":"preserveOrder"},{"location":"_Disciplina/Code/my-react-app/node_modules/p-locate/readme/#related","text":"p-map - Map over promises concurrently p-filter - Filter promises concurrently p-any - Wait for any promise to be fulfilled More\u2026 Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/","text":"parent-module Get the path of the parent module Node.js exposes module.parent , but it only gives you the first cached parent, which is not necessarily the actual parent. Install $ npm install parent-module Usage // bar.js const parentModule = require('parent-module'); module.exports = () => { console.log(parentModule()); //=> '/Users/sindresorhus/dev/unicorn/foo.js' }; // foo.js const bar = require('./bar'); bar(); API parentModule([filepath]) By default, it will return the path of the immediate parent. filepath Type: string Default: __filename Filepath of the module of which to get the parent path. Useful if you want it to work multiple module levels down . Tip Combine it with read-pkg-up to read the package.json of the parent module. const path = require('path'); const readPkgUp = require('read-pkg-up'); const parentModule = require('parent-module'); console.log(readPkgUp.sync({cwd: path.dirname(parentModule())}).pkg); //=> {name: 'chalk', version: '1.0.0', \u2026} License MIT \u00a9 Sindre Sorhus","title":"parent-module Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#parent-module","text":"Get the path of the parent module Node.js exposes module.parent , but it only gives you the first cached parent, which is not necessarily the actual parent.","title":"parent-module"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#install","text":"$ npm install parent-module","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#usage","text":"// bar.js const parentModule = require('parent-module'); module.exports = () => { console.log(parentModule()); //=> '/Users/sindresorhus/dev/unicorn/foo.js' }; // foo.js const bar = require('./bar'); bar();","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#parentmodulefilepath","text":"By default, it will return the path of the immediate parent.","title":"parentModule([filepath])"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#filepath","text":"Type: string Default: __filename Filepath of the module of which to get the parent path. Useful if you want it to work multiple module levels down .","title":"filepath"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#tip","text":"Combine it with read-pkg-up to read the package.json of the parent module. const path = require('path'); const readPkgUp = require('read-pkg-up'); const parentModule = require('parent-module'); console.log(readPkgUp.sync({cwd: path.dirname(parentModule())}).pkg); //=> {name: 'chalk', version: '1.0.0', \u2026}","title":"Tip"},{"location":"_Disciplina/Code/my-react-app/node_modules/parent-module/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/","text":"path-exists Check if a path exists NOTE: fs.existsSync has been un-deprecated in Node.js since 6.8.0. If you only need to check synchronously, this module is not needed. While fs.exists() is being deprecated , there's still a genuine use-case of being able to check if a path exists for other purposes than doing IO with it. Never use this before handling a file though: In particular, checking if a file exists before opening it is an anti-pattern that leaves you vulnerable to race conditions: another process may remove the file between the calls to fs.exists() and fs.open() . Just open the file and handle the error when it's not there. Install $ npm install path-exists Usage // foo.js const pathExists = require('path-exists'); (async () => { console.log(await pathExists('foo.js')); //=> true })(); API pathExists(path) Returns a Promise<boolean> of whether the path exists. pathExists.sync(path) Returns a boolean of whether the path exists. Related path-exists-cli - CLI for this module License MIT \u00a9 Sindre Sorhus","title":"path-exists Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#path-exists","text":"Check if a path exists NOTE: fs.existsSync has been un-deprecated in Node.js since 6.8.0. If you only need to check synchronously, this module is not needed. While fs.exists() is being deprecated , there's still a genuine use-case of being able to check if a path exists for other purposes than doing IO with it. Never use this before handling a file though: In particular, checking if a file exists before opening it is an anti-pattern that leaves you vulnerable to race conditions: another process may remove the file between the calls to fs.exists() and fs.open() . Just open the file and handle the error when it's not there.","title":"path-exists"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#install","text":"$ npm install path-exists","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#usage","text":"// foo.js const pathExists = require('path-exists'); (async () => { console.log(await pathExists('foo.js')); //=> true })();","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#pathexistspath","text":"Returns a Promise<boolean> of whether the path exists.","title":"pathExists(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#pathexistssyncpath","text":"Returns a boolean of whether the path exists.","title":"pathExists.sync(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#related","text":"path-exists-cli - CLI for this module","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-exists/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/","text":"path-key Get the PATH environment variable key cross-platform It's usually PATH , but on Windows it can be any casing like Path ... Install $ npm install path-key Usage const pathKey = require('path-key'); const key = pathKey(); //=> 'PATH' const PATH = process.env[key]; //=> '/usr/local/bin:/usr/bin:/bin' API pathKey(options?) options Type: object env Type: object Default: process.env Use a custom environment variables object. platform Type: string Default: process.platform Get the PATH key for a specific platform. Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"path-key Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#path-key","text":"Get the PATH environment variable key cross-platform It's usually PATH , but on Windows it can be any casing like Path ...","title":"path-key"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#install","text":"$ npm install path-key","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#usage","text":"const pathKey = require('path-key'); const key = pathKey(); //=> 'PATH' const PATH = process.env[key]; //=> '/usr/local/bin:/usr/bin:/bin'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#pathkeyoptions","text":"","title":"pathKey(options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#options","text":"Type: object","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#env","text":"Type: object Default: process.env Use a custom environment variables object.","title":"env"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-key/readme/#platform","text":"Type: string Default: process.platform Get the PATH key for a specific platform. Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"platform"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/","text":"path-parse Node.js path.parse(pathString) ponyfill . Install $ npm install --save path-parse Usage var pathParse = require('path-parse'); pathParse('/home/user/dir/file.txt'); //=> { // root : \"/\", // dir : \"/home/user/dir\", // base : \"file.txt\", // ext : \".txt\", // name : \"file\" // } API See path.parse(pathString) docs. pathParse(path) pathParse.posix(path) The Posix specific version. pathParse.win32(path) The Windows specific version. License MIT \u00a9 Javier Blanco","title":"path-parse Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#path-parse","text":"Node.js path.parse(pathString) ponyfill .","title":"path-parse"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#install","text":"$ npm install --save path-parse","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#usage","text":"var pathParse = require('path-parse'); pathParse('/home/user/dir/file.txt'); //=> { // root : \"/\", // dir : \"/home/user/dir\", // base : \"file.txt\", // ext : \".txt\", // name : \"file\" // }","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#api","text":"See path.parse(pathString) docs.","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#pathparsepath","text":"","title":"pathParse(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#pathparseposixpath","text":"The Posix specific version.","title":"pathParse.posix(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#pathparsewin32path","text":"The Windows specific version.","title":"pathParse.win32(path)"},{"location":"_Disciplina/Code/my-react-app/node_modules/path-parse/#license","text":"MIT \u00a9 Javier Blanco","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/","text":"picocolors The tiniest and the fastest library for terminal output formatting with ANSI colors. import pc from \"picocolors\" console.log( pc.green(`How are ${pc.italic(`you`)} doing?`) ) No dependencies. 14 times smaller and 2 times faster than chalk. Used by popular tools like PostCSS, SVGO, Stylelint, and Browserslist. Node.js v6+ & browsers support. Support for both CJS and ESM projects. TypeScript type declarations included. NO_COLOR friendly. Motivation With picocolors we are trying to draw attention to the node_modules size problem and promote performance-first culture. Prior Art Credits go to the following projects: Nanocolors by @ai Colorette by @jorgebucaran Kleur by @lukeed Colors.js by @Marak Chalk by @sindresorhus Benchmarks The space in node_modules including sub-dependencies: $ node ./benchmarks/size.js Data from packagephobia.com chalk 101 kB cli-color 1249 kB ansi-colors 25 kB kleur 21 kB colorette 17 kB nanocolors 16 kB + picocolors 7 kB Library loading time: $ node ./benchmarks/loading.js chalk 6.167 ms cli-color 31.431 ms ansi-colors 1.585 ms kleur 2.008 ms kleur/colors 0.773 ms colorette 2.476 ms nanocolors 0.833 ms + picocolors 0.466 ms Benchmark for simple use case: $ node ./benchmarks/simple.js chalk 24,066,342 ops/sec cli-color 938,700 ops/sec ansi-colors 4,532,542 ops/sec kleur 20,343,122 ops/sec kleur/colors 35,415,770 ops/sec colorette 34,244,834 ops/sec nanocolors 33,443,265 ops/sec + picocolors 33,271,645 ops/sec Benchmark for complex use cases: $ node ./benchmarks/complex.js chalk 969,915 ops/sec cli-color 131,639 ops/sec ansi-colors 342,250 ops/sec kleur 611,880 ops/sec kleur/colors 1,129,526 ops/sec colorette 1,747,277 ops/sec nanocolors 1,251,312 ops/sec + picocolors 2,024,086 ops/sec Usage Picocolors provides an object which includes a variety of text coloring and formatting functions import pc from \"picocolors\" The object includes following coloring functions: black , red , green , yellow , blue , magenta , cyan , white , gray . console.log(`I see a ${pc.red(\"red door\")} and I want it painted ${pc.black(\"black\")}`) The object also includes following background color modifier functions: bgBlack , bgRed , bgGreen , bgYellow , bgBlue , bgMagenta , bgCyan , bgWhite and bright variants bgBlackBright , bgRedBright , bgGreenBright , bgYellowBright , bgBlueBright , bgMagentaBright , bgCyanBright , bgWhiteBright . console.log( pc.bgBlack( pc.white(`Tom appeared on the sidewalk with a bucket of whitewash and a long-handled brush.`) ) ) Besides colors, the object includes following formatting functions: dim , bold , hidden , italic , underline , strikethrough , reset , inverse and bright variants blackBright , redBright , greenBright , yellowBright , blueBright , magentaBright , cyanBright , whiteBright . for (let task of tasks) { console.log(`${pc.bold(task.name)} ${pc.dim(task.durationMs + \"ms\")}`) } The library provides additional utilities to ensure the best results for the task: isColorSupported \u2014 boolean, explicitly tells whether or not the colors or formatting appear on the screen ```javascript import pc from \"picocolors\" if (pc.isColorSupported) { console.log(\"Yay! This script can use colors and formatters\") } ``` createColors(enabled) \u2014 a function that returns a new API object with manually defined color support configuration ```javascript import pc from \"picocolors\" let { red, bgWhite } = pc.createColors(options.enableColors) ``` Replacing chalk Replace package name in import: diff - import chalk from 'chalk' + import pico from 'picocolors' Replace variable: diff - chalk.red(text) + pico.red(text) Replace chains to nested calls: diff - chalk.red.bold(text) + pico.red(pico.bold(text)) You can use colorize-template to replace chalk\u2019s tagged template literal. ```diff + import { createColorize } from 'colorize-template' let colorize = createColorize(pico) chalk.red.bold full {yellow ${\"text\"}} colorize {red.bold full {yellow ${\"text\"}}} ```","title":"picocolors"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/#picocolors","text":"The tiniest and the fastest library for terminal output formatting with ANSI colors. import pc from \"picocolors\" console.log( pc.green(`How are ${pc.italic(`you`)} doing?`) ) No dependencies. 14 times smaller and 2 times faster than chalk. Used by popular tools like PostCSS, SVGO, Stylelint, and Browserslist. Node.js v6+ & browsers support. Support for both CJS and ESM projects. TypeScript type declarations included. NO_COLOR friendly.","title":"picocolors"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/#motivation","text":"With picocolors we are trying to draw attention to the node_modules size problem and promote performance-first culture.","title":"Motivation"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/#prior-art","text":"Credits go to the following projects: Nanocolors by @ai Colorette by @jorgebucaran Kleur by @lukeed Colors.js by @Marak Chalk by @sindresorhus","title":"Prior Art"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/#benchmarks","text":"The space in node_modules including sub-dependencies: $ node ./benchmarks/size.js Data from packagephobia.com chalk 101 kB cli-color 1249 kB ansi-colors 25 kB kleur 21 kB colorette 17 kB nanocolors 16 kB + picocolors 7 kB Library loading time: $ node ./benchmarks/loading.js chalk 6.167 ms cli-color 31.431 ms ansi-colors 1.585 ms kleur 2.008 ms kleur/colors 0.773 ms colorette 2.476 ms nanocolors 0.833 ms + picocolors 0.466 ms Benchmark for simple use case: $ node ./benchmarks/simple.js chalk 24,066,342 ops/sec cli-color 938,700 ops/sec ansi-colors 4,532,542 ops/sec kleur 20,343,122 ops/sec kleur/colors 35,415,770 ops/sec colorette 34,244,834 ops/sec nanocolors 33,443,265 ops/sec + picocolors 33,271,645 ops/sec Benchmark for complex use cases: $ node ./benchmarks/complex.js chalk 969,915 ops/sec cli-color 131,639 ops/sec ansi-colors 342,250 ops/sec kleur 611,880 ops/sec kleur/colors 1,129,526 ops/sec colorette 1,747,277 ops/sec nanocolors 1,251,312 ops/sec + picocolors 2,024,086 ops/sec","title":"Benchmarks"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/#usage","text":"Picocolors provides an object which includes a variety of text coloring and formatting functions import pc from \"picocolors\" The object includes following coloring functions: black , red , green , yellow , blue , magenta , cyan , white , gray . console.log(`I see a ${pc.red(\"red door\")} and I want it painted ${pc.black(\"black\")}`) The object also includes following background color modifier functions: bgBlack , bgRed , bgGreen , bgYellow , bgBlue , bgMagenta , bgCyan , bgWhite and bright variants bgBlackBright , bgRedBright , bgGreenBright , bgYellowBright , bgBlueBright , bgMagentaBright , bgCyanBright , bgWhiteBright . console.log( pc.bgBlack( pc.white(`Tom appeared on the sidewalk with a bucket of whitewash and a long-handled brush.`) ) ) Besides colors, the object includes following formatting functions: dim , bold , hidden , italic , underline , strikethrough , reset , inverse and bright variants blackBright , redBright , greenBright , yellowBright , blueBright , magentaBright , cyanBright , whiteBright . for (let task of tasks) { console.log(`${pc.bold(task.name)} ${pc.dim(task.durationMs + \"ms\")}`) } The library provides additional utilities to ensure the best results for the task: isColorSupported \u2014 boolean, explicitly tells whether or not the colors or formatting appear on the screen ```javascript import pc from \"picocolors\" if (pc.isColorSupported) { console.log(\"Yay! This script can use colors and formatters\") } ``` createColors(enabled) \u2014 a function that returns a new API object with manually defined color support configuration ```javascript import pc from \"picocolors\" let { red, bgWhite } = pc.createColors(options.enableColors) ```","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/picocolors/#replacing-chalk","text":"Replace package name in import: diff - import chalk from 'chalk' + import pico from 'picocolors' Replace variable: diff - chalk.red(text) + pico.red(text) Replace chains to nested calls: diff - chalk.red.bold(text) + pico.red(pico.bold(text)) You can use colorize-template to replace chalk\u2019s tagged template literal. ```diff + import { createColorize } from 'colorize-template' let colorize = createColorize(pico) chalk.red.bold full {yellow ${\"text\"}} colorize {red.bold full {yellow ${\"text\"}}} ```","title":"Replacing chalk"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/","text":"possible-typed-array-names A simple list of possible Typed Array names. Example const assert = require('assert'); const names = require('possible-typed-array-names'); assert(Array.isArray(names)); assert(names.every(name => ( typeof name === 'string' && typeof globalThis[name] === 'function' && globalThis[name].name === name ))); Tests Simply clone the repo, npm install , and run npm test Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"possible-typed-array-names Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/#possible-typed-array-names","text":"A simple list of possible Typed Array names.","title":"possible-typed-array-names"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/#example","text":"const assert = require('assert'); const names = require('possible-typed-array-names'); assert(Array.isArray(names)); assert(names.every(name => ( typeof name === 'string' && typeof globalThis[name] === 'function' && globalThis[name].name === name )));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.0 - 2024-02-19 Commits Initial implementation, tests, readme, types c279f55 Initial commit 0f22bf2 npm init 25d6cff Only apps should have lockfiles a1bd592","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/CHANGELOG/#v100-2024-02-19","text":"","title":"v1.0.0 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/possible-typed-array-names/CHANGELOG/#commits","text":"Initial implementation, tests, readme, types c279f55 Initial commit 0f22bf2 npm init 25d6cff Only apps should have lockfiles a1bd592","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/postcss/","text":"PostCSS PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more. PostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba, and JetBrains. The Autoprefixer and Stylelint PostCSS plugins is one of the most popular CSS tools. Made at Evil Martians , product consulting for developer tools . Docs Read full docs here .","title":"PostCSS"},{"location":"_Disciplina/Code/my-react-app/node_modules/postcss/#postcss","text":"PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more. PostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba, and JetBrains. The Autoprefixer and Stylelint PostCSS plugins is one of the most popular CSS tools. Made at Evil Martians , product consulting for developer tools .","title":"PostCSS"},{"location":"_Disciplina/Code/my-react-app/node_modules/postcss/#docs","text":"Read full docs here .","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/","text":"prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript . See the prelude.ls site for examples, a reference, and more. You can install via npm npm install prelude-ls Development make test to test make build to build lib from src make build-browser to build browser versions","title":"prelude.ls Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/#preludels","text":"is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript . See the prelude.ls site for examples, a reference, and more. You can install via npm npm install prelude-ls","title":"prelude.ls"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/#development","text":"make test to test make build to build lib from src make build-browser to build browser versions","title":"Development"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/","text":"1.2.1 fix version 1.2.0 add List.remove build with LiveScript 1.6.0 update dependencies remove coverage calculation 1.1.2 add Func.memoize fix zip-all and zip-with-all corner case (no input) build with LiveScript 1.4.0 1.1.1 curry unique-by , minimum-by 1.1.0 added List functions: maximum-by , minimum-by , unique-by added List functions: at , elem-index , elem-indices , find-index , find-indices added Str functions: capitalize , camelize , dasherize added Func function: over - eg. same-length = (==) `over` (.length) exported Str.repeat through main prelude object fixed definition of foldr and foldr1 , the new correct definition is backwards incompatible with the old, incorrect one fixed issue with fix improved code coverage 1.0.3 build browser versions 1.0.2 bug fix for flatten - slight change with bug fix, flattens arrays only, not array-like objects 1.0.1 bug fixes for drop-while and take-while 1.0.0 massive update - separated functions into separate modules functions do not accept multiple types anymore - use different versions in their respective modules in some cases (eg. Obj.map ), or use chars or values in other cases to transform into a list objects are no longer transformed into functions, simply use (obj.) in LiveScript to do that browser version now using browserify - use prelude = require('prelude-ls') added compact , split , flatten , difference , intersection , union , count-by , group-by , chars , unchars , apply added lists-to-obj which takes a list of keys and list of values and zips them up into an object, and the converse obj-to-lists added pairs-to-obj which takes a list of pairs (2 element lists) and creates an object, and the converse obj-to-pairs removed cons , append - use the concat operator removed compose - use the compose operator removed obj-to-func - use partially applied access (eg. (obj.) ) removed length - use (.length) sort-by renamed to sort-with added new sort-by removed compare - just use the new sort-by break-it renamed break-list , ( Str.break-str for the string version) added Str.repeat which creates a new string by repeating the input n times unfold as alias to unfoldr is no longer used fixed up style and compiled with LiveScript 1.1.1 use Make instead of Slake greatly improved tests 0.6.0 fixed various bugs added fix , a fixpoint (Y combinator) for anonymous recursive functions added unfoldr (alias unfold ) calling replicate with a string now returns a list of strings removed partial , just use native partial application in LiveScript using the _ placeholder, or currying added sort , sortBy , and compare 0.5.0 removed lookup - use (.prop) removed call - use (.func arg1, arg2) removed pluck - use map (.prop), xs fixed buys wtih head and last added non-minifed browser version, as prelude-browser.js renamed prelude-min.js to prelude-browser-min.js renamed zip to zipAll renamed zipWith to zipAllWith added zip , a curried zip that takes only two arguments added zipWith , a curried zipWith that takes only two arguments 0.4.0 added parition function added curry function removed elem function (use in ) removed notElem function (use not in ) 0.3.0 added listToObject added unique added objToFunc added support for using strings in map and the like added support for using objects in map and the like added ability to use objects instead of functions in certain cases removed error (just use throw) added tau constant added join added values added keys added partial renamed log to ln added alias to head : first added installPrelude helper 0.2.0 removed functions that simply warp operators as you can now use operators as functions in LiveScript min/max are now curried and take only 2 arguments added call 0.1.0 initial public release","title":"1.2.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#121","text":"fix version","title":"1.2.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#120","text":"add List.remove build with LiveScript 1.6.0 update dependencies remove coverage calculation","title":"1.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#112","text":"add Func.memoize fix zip-all and zip-with-all corner case (no input) build with LiveScript 1.4.0","title":"1.1.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#111","text":"curry unique-by , minimum-by","title":"1.1.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#110","text":"added List functions: maximum-by , minimum-by , unique-by added List functions: at , elem-index , elem-indices , find-index , find-indices added Str functions: capitalize , camelize , dasherize added Func function: over - eg. same-length = (==) `over` (.length) exported Str.repeat through main prelude object fixed definition of foldr and foldr1 , the new correct definition is backwards incompatible with the old, incorrect one fixed issue with fix improved code coverage","title":"1.1.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#103","text":"build browser versions","title":"1.0.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#102","text":"bug fix for flatten - slight change with bug fix, flattens arrays only, not array-like objects","title":"1.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#101","text":"bug fixes for drop-while and take-while","title":"1.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#100","text":"massive update - separated functions into separate modules functions do not accept multiple types anymore - use different versions in their respective modules in some cases (eg. Obj.map ), or use chars or values in other cases to transform into a list objects are no longer transformed into functions, simply use (obj.) in LiveScript to do that browser version now using browserify - use prelude = require('prelude-ls') added compact , split , flatten , difference , intersection , union , count-by , group-by , chars , unchars , apply added lists-to-obj which takes a list of keys and list of values and zips them up into an object, and the converse obj-to-lists added pairs-to-obj which takes a list of pairs (2 element lists) and creates an object, and the converse obj-to-pairs removed cons , append - use the concat operator removed compose - use the compose operator removed obj-to-func - use partially applied access (eg. (obj.) ) removed length - use (.length) sort-by renamed to sort-with added new sort-by removed compare - just use the new sort-by break-it renamed break-list , ( Str.break-str for the string version) added Str.repeat which creates a new string by repeating the input n times unfold as alias to unfoldr is no longer used fixed up style and compiled with LiveScript 1.1.1 use Make instead of Slake greatly improved tests","title":"1.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#060","text":"fixed various bugs added fix , a fixpoint (Y combinator) for anonymous recursive functions added unfoldr (alias unfold ) calling replicate with a string now returns a list of strings removed partial , just use native partial application in LiveScript using the _ placeholder, or currying added sort , sortBy , and compare","title":"0.6.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#050","text":"removed lookup - use (.prop) removed call - use (.func arg1, arg2) removed pluck - use map (.prop), xs fixed buys wtih head and last added non-minifed browser version, as prelude-browser.js renamed prelude-min.js to prelude-browser-min.js renamed zip to zipAll renamed zipWith to zipAllWith added zip , a curried zip that takes only two arguments added zipWith , a curried zipWith that takes only two arguments","title":"0.5.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#040","text":"added parition function added curry function removed elem function (use in ) removed notElem function (use not in )","title":"0.4.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#030","text":"added listToObject added unique added objToFunc added support for using strings in map and the like added support for using objects in map and the like added ability to use objects instead of functions in certain cases removed error (just use throw) added tau constant added join added values added keys added partial renamed log to ln added alias to head : first added installPrelude helper","title":"0.3.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#020","text":"removed functions that simply warp operators as you can now use operators as functions in LiveScript min/max are now curried and take only 2 arguments added call","title":"0.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prelude-ls/CHANGELOG/#010","text":"initial public release","title":"0.1.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/","text":"prop-types Runtime type checking for React props and similar objects. You can use prop-types to document the intended types of properties passed to components. React (and potentially other libraries\u2014see the checkPropTypes() reference below) will check props passed to your components against those definitions, and warn in development if they don\u2019t match. Installation npm install --save prop-types Importing import PropTypes from 'prop-types'; // ES6 var PropTypes = require('prop-types'); // ES5 with npm CDN If you prefer to exclude prop-types from your application and use it globally via window.PropTypes , the prop-types package provides single-file distributions, which are hosted on the following CDNs: unpkg <!-- development version --> <script src=\"https://unpkg.com/prop-types@15.6/prop-types.js\"></script> <!-- production version --> <script src=\"https://unpkg.com/prop-types@15.6/prop-types.min.js\"></script> cdnjs <!-- development version --> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.js\"></script> <!-- production version --> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.min.js\"></script> To load a specific version of prop-types replace 15.6.0 with the version number. Usage PropTypes was originally exposed as part of the React core module, and is commonly used with React components. Here is an example of using PropTypes with a React component, which also documents the different validators provided: import React from 'react'; import PropTypes from 'prop-types'; class MyComponent extends React.Component { render() { // ... do things with the props } } MyComponent.propTypes = { // You can declare that a prop is a specific JS primitive. By default, these // are all optional. optionalArray: PropTypes.array, optionalBigInt: PropTypes.bigint, optionalBool: PropTypes.bool, optionalFunc: PropTypes.func, optionalNumber: PropTypes.number, optionalObject: PropTypes.object, optionalString: PropTypes.string, optionalSymbol: PropTypes.symbol, // Anything that can be rendered: numbers, strings, elements or an array // (or fragment) containing these types. // see https://reactjs.org/docs/rendering-elements.html for more info optionalNode: PropTypes.node, // A React element (ie. <MyComponent />). optionalElement: PropTypes.element, // A React element type (eg. MyComponent). // a function, string, or \"element-like\" object (eg. React.Fragment, Suspense, etc.) // see https://github.com/facebook/react/blob/HEAD/packages/shared/isValidElementType.js optionalElementType: PropTypes.elementType, // You can also declare that a prop is an instance of a class. This uses // JS's instanceof operator. optionalMessage: PropTypes.instanceOf(Message), // You can ensure that your prop is limited to specific values by treating // it as an enum. optionalEnum: PropTypes.oneOf(['News', 'Photos']), // An object that could be one of many types optionalUnion: PropTypes.oneOfType([ PropTypes.string, PropTypes.number, PropTypes.instanceOf(Message) ]), // An array of a certain type optionalArrayOf: PropTypes.arrayOf(PropTypes.number), // An object with property values of a certain type optionalObjectOf: PropTypes.objectOf(PropTypes.number), // You can chain any of the above with `isRequired` to make sure a warning // is shown if the prop isn't provided. // An object taking on a particular shape optionalObjectWithShape: PropTypes.shape({ optionalProperty: PropTypes.string, requiredProperty: PropTypes.number.isRequired }), // An object with warnings on extra properties optionalObjectWithStrictShape: PropTypes.exact({ optionalProperty: PropTypes.string, requiredProperty: PropTypes.number.isRequired }), requiredFunc: PropTypes.func.isRequired, // A value of any data type requiredAny: PropTypes.any.isRequired, // You can also specify a custom validator. It should return an Error // object if the validation fails. Don't `console.warn` or throw, as this // won't work inside `oneOfType`. customProp: function(props, propName, componentName) { if (!/matchme/.test(props[propName])) { return new Error( 'Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Validation failed.' ); } }, // You can also supply a custom validator to `arrayOf` and `objectOf`. // It should return an Error object if the validation fails. The validator // will be called for each key in the array or object. The first two // arguments of the validator are the array or object itself, and the // current item's key. customArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) { if (!/matchme/.test(propValue[key])) { return new Error( 'Invalid prop `' + propFullName + '` supplied to' + ' `' + componentName + '`. Validation failed.' ); } }) }; Refer to the React documentation for more information. Migrating from React.PropTypes Check out Migrating from React.PropTypes for details on how to migrate to prop-types from React.PropTypes . Note that this blog posts mentions a codemod script that performs the conversion automatically . There are also important notes below. How to Depend on This Package? For apps, we recommend putting it in dependencies with a caret range. For example: \"dependencies\": { \"prop-types\": \"^15.5.7\" } For libraries, we also recommend leaving it in dependencies : \"dependencies\": { \"prop-types\": \"^15.5.7\" }, \"peerDependencies\": { \"react\": \"^15.5.0\" } Note: there are known issues in versions before 15.5.7 so we recommend using it as the minimal version. Make sure that the version range uses a caret ( ^ ) and thus is broad enough for npm to efficiently deduplicate packages. For UMD bundles of your components, make sure you don\u2019t include PropTypes in the build. Usually this is done by marking it as an external (the specifics depend on your bundler), just like you do with React. Compatibility React 0.14 This package is compatible with React 0.14.9 . Compared to 0.14.8 (which was released in March of 2016), there are no other changes in 0.14.9, so it should be a painless upgrade. # ATTENTION: Only run this if you still use React 0.14! npm install --save react@^0.14.9 react-dom@^0.14.9 React 15+ This package is compatible with React 15.3.0 and higher. npm install --save react@^15.3.0 react-dom@^15.3.0 What happens on other React versions? It outputs warnings with the message below even though the developer doesn\u2019t do anything wrong. Unfortunately there is no solution for this other than updating React to either 15.3.0 or higher, or 0.14.9 if you\u2019re using React 0.14. Difference from React.PropTypes : Don\u2019t Call Validator Functions First of all, which version of React are you using ? You might be seeing this message because a component library has updated to use prop-types package, but your version of React is incompatible with it. See the above section for more details. Are you using either React 0.14.9 or a version higher than React 15.3.0? Read on. When you migrate components to use the standalone prop-types , all validator functions will start throwing an error if you call them directly . This makes sure that nobody relies on them in production code, and it is safe to strip their implementations to optimize the bundle size. Code like this is still fine: MyComponent.propTypes = { myProp: PropTypes.bool }; However, code like this will not work with the prop-types package: // Will not work with `prop-types` package! var errorOrNull = PropTypes.bool(42, 'myProp', 'MyComponent', 'prop'); It will throw an error: Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. (If you see a warning rather than an error with this message, please check the above section about compatibility .) This is new behavior, and you will only encounter it when you migrate from React.PropTypes to the prop-types package. For the vast majority of components, this doesn\u2019t matter, and if you didn\u2019t see this warning in your components, your code is safe to migrate. This is not a breaking change in React because you are only opting into this change for a component by explicitly changing your imports to use prop-types . If you temporarily need the old behavior, you can keep using React.PropTypes until React 16. If you absolutely need to trigger the validation manually , call PropTypes.checkPropTypes() . Unlike the validators themselves, this function is safe to call in production, as it will be replaced by an empty function: // Works with standalone PropTypes PropTypes.checkPropTypes(MyComponent.propTypes, props, 'prop', 'MyComponent'); See below for more info. If you DO want to use validation in production , you can choose to use the development version by importing/requiring prop-types/prop-types instead of prop-types . You might also see this error if you\u2019re calling a PropTypes validator from your own custom PropTypes validator. In this case, the fix is to make sure that you are passing all of the arguments to the inner function. There is a more in-depth explanation of how to fix it on this page . Alternatively, you can temporarily keep using React.PropTypes until React 16, as it would still only warn in this case. If you use a bundler like Browserify or Webpack, don\u2019t forget to follow these instructions to correctly bundle your application in development or production mode. Otherwise you\u2019ll ship unnecessary code to your users. PropTypes.checkPropTypes React will automatically check the propTypes you set on the component, but if you are using PropTypes without React then you may want to manually call PropTypes.checkPropTypes , like so: const myPropTypes = { name: PropTypes.string, age: PropTypes.number, // ... define your prop validations }; const props = { name: 'hello', // is valid age: 'world', // not valid }; // Let's say your component is called 'MyComponent' // Works with standalone PropTypes PropTypes.checkPropTypes(myPropTypes, props, 'prop', 'MyComponent'); // This will warn as follows: // Warning: Failed prop type: Invalid prop `age` of type `string` supplied to // `MyComponent`, expected `number`. PropTypes.resetWarningCache() PropTypes.checkPropTypes(...) only console.error s a given message once. To reset the error warning cache in tests, call PropTypes.resetWarningCache() License prop-types is MIT licensed .","title":"prop-types Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#prop-types","text":"Runtime type checking for React props and similar objects. You can use prop-types to document the intended types of properties passed to components. React (and potentially other libraries\u2014see the checkPropTypes() reference below) will check props passed to your components against those definitions, and warn in development if they don\u2019t match.","title":"prop-types"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#installation","text":"npm install --save prop-types","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#importing","text":"import PropTypes from 'prop-types'; // ES6 var PropTypes = require('prop-types'); // ES5 with npm","title":"Importing"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#cdn","text":"If you prefer to exclude prop-types from your application and use it globally via window.PropTypes , the prop-types package provides single-file distributions, which are hosted on the following CDNs: unpkg <!-- development version --> <script src=\"https://unpkg.com/prop-types@15.6/prop-types.js\"></script> <!-- production version --> <script src=\"https://unpkg.com/prop-types@15.6/prop-types.min.js\"></script> cdnjs <!-- development version --> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.js\"></script> <!-- production version --> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.min.js\"></script> To load a specific version of prop-types replace 15.6.0 with the version number.","title":"CDN"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#usage","text":"PropTypes was originally exposed as part of the React core module, and is commonly used with React components. Here is an example of using PropTypes with a React component, which also documents the different validators provided: import React from 'react'; import PropTypes from 'prop-types'; class MyComponent extends React.Component { render() { // ... do things with the props } } MyComponent.propTypes = { // You can declare that a prop is a specific JS primitive. By default, these // are all optional. optionalArray: PropTypes.array, optionalBigInt: PropTypes.bigint, optionalBool: PropTypes.bool, optionalFunc: PropTypes.func, optionalNumber: PropTypes.number, optionalObject: PropTypes.object, optionalString: PropTypes.string, optionalSymbol: PropTypes.symbol, // Anything that can be rendered: numbers, strings, elements or an array // (or fragment) containing these types. // see https://reactjs.org/docs/rendering-elements.html for more info optionalNode: PropTypes.node, // A React element (ie. <MyComponent />). optionalElement: PropTypes.element, // A React element type (eg. MyComponent). // a function, string, or \"element-like\" object (eg. React.Fragment, Suspense, etc.) // see https://github.com/facebook/react/blob/HEAD/packages/shared/isValidElementType.js optionalElementType: PropTypes.elementType, // You can also declare that a prop is an instance of a class. This uses // JS's instanceof operator. optionalMessage: PropTypes.instanceOf(Message), // You can ensure that your prop is limited to specific values by treating // it as an enum. optionalEnum: PropTypes.oneOf(['News', 'Photos']), // An object that could be one of many types optionalUnion: PropTypes.oneOfType([ PropTypes.string, PropTypes.number, PropTypes.instanceOf(Message) ]), // An array of a certain type optionalArrayOf: PropTypes.arrayOf(PropTypes.number), // An object with property values of a certain type optionalObjectOf: PropTypes.objectOf(PropTypes.number), // You can chain any of the above with `isRequired` to make sure a warning // is shown if the prop isn't provided. // An object taking on a particular shape optionalObjectWithShape: PropTypes.shape({ optionalProperty: PropTypes.string, requiredProperty: PropTypes.number.isRequired }), // An object with warnings on extra properties optionalObjectWithStrictShape: PropTypes.exact({ optionalProperty: PropTypes.string, requiredProperty: PropTypes.number.isRequired }), requiredFunc: PropTypes.func.isRequired, // A value of any data type requiredAny: PropTypes.any.isRequired, // You can also specify a custom validator. It should return an Error // object if the validation fails. Don't `console.warn` or throw, as this // won't work inside `oneOfType`. customProp: function(props, propName, componentName) { if (!/matchme/.test(props[propName])) { return new Error( 'Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Validation failed.' ); } }, // You can also supply a custom validator to `arrayOf` and `objectOf`. // It should return an Error object if the validation fails. The validator // will be called for each key in the array or object. The first two // arguments of the validator are the array or object itself, and the // current item's key. customArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) { if (!/matchme/.test(propValue[key])) { return new Error( 'Invalid prop `' + propFullName + '` supplied to' + ' `' + componentName + '`. Validation failed.' ); } }) }; Refer to the React documentation for more information.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#migrating-from-reactproptypes","text":"Check out Migrating from React.PropTypes for details on how to migrate to prop-types from React.PropTypes . Note that this blog posts mentions a codemod script that performs the conversion automatically . There are also important notes below.","title":"Migrating from React.PropTypes"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#how-to-depend-on-this-package","text":"For apps, we recommend putting it in dependencies with a caret range. For example: \"dependencies\": { \"prop-types\": \"^15.5.7\" } For libraries, we also recommend leaving it in dependencies : \"dependencies\": { \"prop-types\": \"^15.5.7\" }, \"peerDependencies\": { \"react\": \"^15.5.0\" } Note: there are known issues in versions before 15.5.7 so we recommend using it as the minimal version. Make sure that the version range uses a caret ( ^ ) and thus is broad enough for npm to efficiently deduplicate packages. For UMD bundles of your components, make sure you don\u2019t include PropTypes in the build. Usually this is done by marking it as an external (the specifics depend on your bundler), just like you do with React.","title":"How to Depend on This Package?"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#compatibility","text":"","title":"Compatibility"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#react-014","text":"This package is compatible with React 0.14.9 . Compared to 0.14.8 (which was released in March of 2016), there are no other changes in 0.14.9, so it should be a painless upgrade. # ATTENTION: Only run this if you still use React 0.14! npm install --save react@^0.14.9 react-dom@^0.14.9","title":"React 0.14"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#react-15","text":"This package is compatible with React 15.3.0 and higher. npm install --save react@^15.3.0 react-dom@^15.3.0","title":"React 15+"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#what-happens-on-other-react-versions","text":"It outputs warnings with the message below even though the developer doesn\u2019t do anything wrong. Unfortunately there is no solution for this other than updating React to either 15.3.0 or higher, or 0.14.9 if you\u2019re using React 0.14.","title":"What happens on other React versions?"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#difference-from-reactproptypes-dont-call-validator-functions","text":"First of all, which version of React are you using ? You might be seeing this message because a component library has updated to use prop-types package, but your version of React is incompatible with it. See the above section for more details. Are you using either React 0.14.9 or a version higher than React 15.3.0? Read on. When you migrate components to use the standalone prop-types , all validator functions will start throwing an error if you call them directly . This makes sure that nobody relies on them in production code, and it is safe to strip their implementations to optimize the bundle size. Code like this is still fine: MyComponent.propTypes = { myProp: PropTypes.bool }; However, code like this will not work with the prop-types package: // Will not work with `prop-types` package! var errorOrNull = PropTypes.bool(42, 'myProp', 'MyComponent', 'prop'); It will throw an error: Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. (If you see a warning rather than an error with this message, please check the above section about compatibility .) This is new behavior, and you will only encounter it when you migrate from React.PropTypes to the prop-types package. For the vast majority of components, this doesn\u2019t matter, and if you didn\u2019t see this warning in your components, your code is safe to migrate. This is not a breaking change in React because you are only opting into this change for a component by explicitly changing your imports to use prop-types . If you temporarily need the old behavior, you can keep using React.PropTypes until React 16. If you absolutely need to trigger the validation manually , call PropTypes.checkPropTypes() . Unlike the validators themselves, this function is safe to call in production, as it will be replaced by an empty function: // Works with standalone PropTypes PropTypes.checkPropTypes(MyComponent.propTypes, props, 'prop', 'MyComponent'); See below for more info. If you DO want to use validation in production , you can choose to use the development version by importing/requiring prop-types/prop-types instead of prop-types . You might also see this error if you\u2019re calling a PropTypes validator from your own custom PropTypes validator. In this case, the fix is to make sure that you are passing all of the arguments to the inner function. There is a more in-depth explanation of how to fix it on this page . Alternatively, you can temporarily keep using React.PropTypes until React 16, as it would still only warn in this case. If you use a bundler like Browserify or Webpack, don\u2019t forget to follow these instructions to correctly bundle your application in development or production mode. Otherwise you\u2019ll ship unnecessary code to your users.","title":"Difference from React.PropTypes: Don\u2019t Call Validator Functions"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#proptypescheckproptypes","text":"React will automatically check the propTypes you set on the component, but if you are using PropTypes without React then you may want to manually call PropTypes.checkPropTypes , like so: const myPropTypes = { name: PropTypes.string, age: PropTypes.number, // ... define your prop validations }; const props = { name: 'hello', // is valid age: 'world', // not valid }; // Let's say your component is called 'MyComponent' // Works with standalone PropTypes PropTypes.checkPropTypes(myPropTypes, props, 'prop', 'MyComponent'); // This will warn as follows: // Warning: Failed prop type: Invalid prop `age` of type `string` supplied to // `MyComponent`, expected `number`.","title":"PropTypes.checkPropTypes"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#proptypesresetwarningcache","text":"PropTypes.checkPropTypes(...) only console.error s a given message once. To reset the error warning cache in tests, call PropTypes.resetWarningCache()","title":"PropTypes.resetWarningCache()"},{"location":"_Disciplina/Code/my-react-app/node_modules/prop-types/#license","text":"prop-types is MIT licensed .","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/","text":"Punycode.js Punycode.js is a robust Punycode converter that fully complies to RFC 3492 and RFC 5891 . This JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm: The C example code from RFC 3492 punycode.c by Markus W. Scherer (IBM) punycode.c by Ben Noordhuis JavaScript implementation by some punycode.js by Ben Noordhuis (note: not fully compliant ) This project was bundled with Node.js from v0.6.2+ until v7 (soft-deprecated). This project provides a CommonJS module that uses ES2015+ features and JavaScript module, which work in modern Node.js versions and browsers. For the old Punycode.js version that offers the same functionality in a UMD build with support for older pre-ES2015 runtimes, including Rhino, Ringo, and Narwhal, see v1.4.1 . Installation Via npm : npm install punycode --save In Node.js : \u26a0\ufe0f Note that userland modules don't hide core modules. For example, require('punycode') still imports the deprecated core module even if you executed npm install punycode . Use require('punycode/') to import userland modules rather than core modules. const punycode = require('punycode/'); API punycode.decode(string) Converts a Punycode string of ASCII symbols to a string of Unicode symbols. // decode domain name parts punycode.decode('maana-pta'); // 'ma\u00f1ana' punycode.decode('--dqo34k'); // '\u2603-\u2318' punycode.encode(string) Converts a string of Unicode symbols to a Punycode string of ASCII symbols. // encode domain name parts punycode.encode('ma\u00f1ana'); // 'maana-pta' punycode.encode('\u2603-\u2318'); // '--dqo34k' punycode.toUnicode(input) Converts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn\u2019t matter if you call it on a string that has already been converted to Unicode. // decode domain names punycode.toUnicode('xn--maana-pta.com'); // \u2192 'ma\u00f1ana.com' punycode.toUnicode('xn----dqo34k.com'); // \u2192 '\u2603-\u2318.com' // decode email addresses punycode.toUnicode('\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a' punycode.toASCII(input) Converts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn\u2019t matter if you call it with a domain that\u2019s already in ASCII. // encode domain names punycode.toASCII('ma\u00f1ana.com'); // \u2192 'xn--maana-pta.com' punycode.toASCII('\u2603-\u2318.com'); // \u2192 'xn----dqo34k.com' // encode email addresses punycode.toASCII('\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a'); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq' punycode.ucs2 punycode.ucs2.decode(string) Creates an array containing the numeric code point values of each Unicode symbol in the string. While JavaScript uses UCS-2 internally , this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16. punycode.ucs2.decode('abc'); // \u2192 [0x61, 0x62, 0x63] // surrogate pair for U+1D306 TETRAGRAM FOR CENTRE: punycode.ucs2.decode('\\uD834\\uDF06'); // \u2192 [0x1D306] punycode.ucs2.encode(codePoints) Creates a string based on an array of numeric code point values. punycode.ucs2.encode([0x61, 0x62, 0x63]); // \u2192 'abc' punycode.ucs2.encode([0x1D306]); // \u2192 '\\uD834\\uDF06' punycode.version A string representing the current Punycode.js version number. For maintainers How to publish a new release On the main branch, bump the version number in package.json : sh npm version patch -m 'Release v%s' Instead of patch , use minor or major as needed . Note that this produces a Git commit + tag. Push the release commit and tag: sh git push && git push --tags Our CI then automatically publishes the new release to npm, under both the punycode and punycode.js names. Author Mathias Bynens License Punycode.js is available under the MIT license.","title":"Punycode.js punycode on npm"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodejs","text":"Punycode.js is a robust Punycode converter that fully complies to RFC 3492 and RFC 5891 . This JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm: The C example code from RFC 3492 punycode.c by Markus W. Scherer (IBM) punycode.c by Ben Noordhuis JavaScript implementation by some punycode.js by Ben Noordhuis (note: not fully compliant ) This project was bundled with Node.js from v0.6.2+ until v7 (soft-deprecated). This project provides a CommonJS module that uses ES2015+ features and JavaScript module, which work in modern Node.js versions and browsers. For the old Punycode.js version that offers the same functionality in a UMD build with support for older pre-ES2015 runtimes, including Rhino, Ringo, and Narwhal, see v1.4.1 .","title":"Punycode.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#installation","text":"Via npm : npm install punycode --save In Node.js : \u26a0\ufe0f Note that userland modules don't hide core modules. For example, require('punycode') still imports the deprecated core module even if you executed npm install punycode . Use require('punycode/') to import userland modules rather than core modules. const punycode = require('punycode/');","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodedecodestring","text":"Converts a Punycode string of ASCII symbols to a string of Unicode symbols. // decode domain name parts punycode.decode('maana-pta'); // 'ma\u00f1ana' punycode.decode('--dqo34k'); // '\u2603-\u2318'","title":"punycode.decode(string)"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodeencodestring","text":"Converts a string of Unicode symbols to a Punycode string of ASCII symbols. // encode domain name parts punycode.encode('ma\u00f1ana'); // 'maana-pta' punycode.encode('\u2603-\u2318'); // '--dqo34k'","title":"punycode.encode(string)"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodetounicodeinput","text":"Converts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn\u2019t matter if you call it on a string that has already been converted to Unicode. // decode domain names punycode.toUnicode('xn--maana-pta.com'); // \u2192 'ma\u00f1ana.com' punycode.toUnicode('xn----dqo34k.com'); // \u2192 '\u2603-\u2318.com' // decode email addresses punycode.toUnicode('\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a'","title":"punycode.toUnicode(input)"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodetoasciiinput","text":"Converts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn\u2019t matter if you call it with a domain that\u2019s already in ASCII. // encode domain names punycode.toASCII('ma\u00f1ana.com'); // \u2192 'xn--maana-pta.com' punycode.toASCII('\u2603-\u2318.com'); // \u2192 'xn----dqo34k.com' // encode email addresses punycode.toASCII('\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a'); // \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'","title":"punycode.toASCII(input)"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodeucs2","text":"","title":"punycode.ucs2"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodeucs2decodestring","text":"Creates an array containing the numeric code point values of each Unicode symbol in the string. While JavaScript uses UCS-2 internally , this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16. punycode.ucs2.decode('abc'); // \u2192 [0x61, 0x62, 0x63] // surrogate pair for U+1D306 TETRAGRAM FOR CENTRE: punycode.ucs2.decode('\\uD834\\uDF06'); // \u2192 [0x1D306]","title":"punycode.ucs2.decode(string)"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodeucs2encodecodepoints","text":"Creates a string based on an array of numeric code point values. punycode.ucs2.encode([0x61, 0x62, 0x63]); // \u2192 'abc' punycode.ucs2.encode([0x1D306]); // \u2192 '\\uD834\\uDF06'","title":"punycode.ucs2.encode(codePoints)"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#punycodeversion","text":"A string representing the current Punycode.js version number.","title":"punycode.version"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#for-maintainers","text":"","title":"For maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#how-to-publish-a-new-release","text":"On the main branch, bump the version number in package.json : sh npm version patch -m 'Release v%s' Instead of patch , use minor or major as needed . Note that this produces a Git commit + tag. Push the release commit and tag: sh git push && git push --tags Our CI then automatically publishes the new release to npm, under both the punycode and punycode.js names.","title":"How to publish a new release"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#author","text":"Mathias Bynens","title":"Author"},{"location":"_Disciplina/Code/my-react-app/node_modules/punycode/#license","text":"Punycode.js is available under the MIT license.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/react/","text":"react React is a JavaScript library for creating user interfaces. The react package contains only the functionality necessary to define React components. It is typically used together with a React renderer like react-dom for the web, or react-native for the native environments. Note: by default, React will be in development mode. The development version includes extra warnings about common mistakes, whereas the production version includes extra performance optimizations and strips all error messages. Don't forget to use the production build when deploying your application. Usage import { useState } from 'react'; import { createRoot } from 'react-dom/client'; function Counter() { const [count, setCount] = useState(0); return ( <> <h1>{count}</h1> <button onClick={() => setCount(count + 1)}> Increment </button> </> ); } const root = createRoot(document.getElementById('root')); root.render(<App />); Documentation See https://reactjs.org/ API See https://reactjs.org/docs/react-api.html","title":"react"},{"location":"_Disciplina/Code/my-react-app/node_modules/react/#react","text":"React is a JavaScript library for creating user interfaces. The react package contains only the functionality necessary to define React components. It is typically used together with a React renderer like react-dom for the web, or react-native for the native environments. Note: by default, React will be in development mode. The development version includes extra warnings about common mistakes, whereas the production version includes extra performance optimizations and strips all error messages. Don't forget to use the production build when deploying your application.","title":"react"},{"location":"_Disciplina/Code/my-react-app/node_modules/react/#usage","text":"import { useState } from 'react'; import { createRoot } from 'react-dom/client'; function Counter() { const [count, setCount] = useState(0); return ( <> <h1>{count}</h1> <button onClick={() => setCount(count + 1)}> Increment </button> </> ); } const root = createRoot(document.getElementById('root')); root.render(<App />);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/react/#documentation","text":"See https://reactjs.org/","title":"Documentation"},{"location":"_Disciplina/Code/my-react-app/node_modules/react/#api","text":"See https://reactjs.org/docs/react-api.html","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/","text":"react-dom This package serves as the entry point to the DOM and server renderers for React. It is intended to be paired with the generic React package, which is shipped as react to npm. Installation npm install react react-dom Usage In the browser import { createRoot } from 'react-dom/client'; function App() { return <div>Hello World</div>; } const root = createRoot(document.getElementById('root')); root.render(<App />); On the server import { renderToPipeableStream } from 'react-dom/server'; function App() { return <div>Hello World</div>; } function handleRequest(res) { // ... in your server handler ... const stream = renderToPipeableStream(<App />, { onShellReady() { res.statusCode = 200; res.setHeader('Content-type', 'text/html'); stream.pipe(res); }, // ... }); } API react-dom See https://reactjs.org/docs/react-dom.html react-dom/client See https://reactjs.org/docs/react-dom-client.html react-dom/server See https://reactjs.org/docs/react-dom-server.html","title":"react-dom"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#react-dom","text":"This package serves as the entry point to the DOM and server renderers for React. It is intended to be paired with the generic React package, which is shipped as react to npm.","title":"react-dom"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#installation","text":"npm install react react-dom","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#usage","text":"","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#in-the-browser","text":"import { createRoot } from 'react-dom/client'; function App() { return <div>Hello World</div>; } const root = createRoot(document.getElementById('root')); root.render(<App />);","title":"In the browser"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#on-the-server","text":"import { renderToPipeableStream } from 'react-dom/server'; function App() { return <div>Hello World</div>; } function handleRequest(res) { // ... in your server handler ... const stream = renderToPipeableStream(<App />, { onShellReady() { res.statusCode = 200; res.setHeader('Content-type', 'text/html'); stream.pipe(res); }, // ... }); }","title":"On the server"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#react-dom_1","text":"See https://reactjs.org/docs/react-dom.html","title":"react-dom"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#react-domclient","text":"See https://reactjs.org/docs/react-dom-client.html","title":"react-dom/client"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-dom/#react-domserver","text":"See https://reactjs.org/docs/react-dom-server.html","title":"react-dom/server"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/","text":"react-is This package allows you to test arbitrary values and see if they're a particular React element type. Installation # Yarn yarn add react-is # NPM npm install react-is Usage Determining if a Component is Valid import React from \"react\"; import * as ReactIs from \"react-is\"; class ClassComponent extends React.Component { render() { return React.createElement(\"div\"); } } const FunctionComponent = () => React.createElement(\"div\"); const ForwardRefComponent = React.forwardRef((props, ref) => React.createElement(Component, { forwardedRef: ref, ...props }) ); const Context = React.createContext(false); ReactIs.isValidElementType(\"div\"); // true ReactIs.isValidElementType(ClassComponent); // true ReactIs.isValidElementType(FunctionComponent); // true ReactIs.isValidElementType(ForwardRefComponent); // true ReactIs.isValidElementType(Context.Provider); // true ReactIs.isValidElementType(Context.Consumer); // true ReactIs.isValidElementType(React.createFactory(\"div\")); // true Determining an Element's Type Context import React from \"react\"; import * as ReactIs from 'react-is'; const ThemeContext = React.createContext(\"blue\"); ReactIs.isContextConsumer(<ThemeContext.Consumer />); // true ReactIs.isContextProvider(<ThemeContext.Provider />); // true ReactIs.typeOf(<ThemeContext.Provider />) === ReactIs.ContextProvider; // true ReactIs.typeOf(<ThemeContext.Consumer />) === ReactIs.ContextConsumer; // true Element import React from \"react\"; import * as ReactIs from 'react-is'; ReactIs.isElement(<div />); // true ReactIs.typeOf(<div />) === ReactIs.Element; // true Fragment import React from \"react\"; import * as ReactIs from 'react-is'; ReactIs.isFragment(<></>); // true ReactIs.typeOf(<></>) === ReactIs.Fragment; // true Portal import React from \"react\"; import ReactDOM from \"react-dom\"; import * as ReactIs from 'react-is'; const div = document.createElement(\"div\"); const portal = ReactDOM.createPortal(<div />, div); ReactIs.isPortal(portal); // true ReactIs.typeOf(portal) === ReactIs.Portal; // true StrictMode import React from \"react\"; import * as ReactIs from 'react-is'; ReactIs.isStrictMode(<React.StrictMode />); // true ReactIs.typeOf(<React.StrictMode />) === ReactIs.StrictMode; // true","title":"react-is"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#react-is","text":"This package allows you to test arbitrary values and see if they're a particular React element type.","title":"react-is"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#installation","text":"# Yarn yarn add react-is # NPM npm install react-is","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#usage","text":"","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#determining-if-a-component-is-valid","text":"import React from \"react\"; import * as ReactIs from \"react-is\"; class ClassComponent extends React.Component { render() { return React.createElement(\"div\"); } } const FunctionComponent = () => React.createElement(\"div\"); const ForwardRefComponent = React.forwardRef((props, ref) => React.createElement(Component, { forwardedRef: ref, ...props }) ); const Context = React.createContext(false); ReactIs.isValidElementType(\"div\"); // true ReactIs.isValidElementType(ClassComponent); // true ReactIs.isValidElementType(FunctionComponent); // true ReactIs.isValidElementType(ForwardRefComponent); // true ReactIs.isValidElementType(Context.Provider); // true ReactIs.isValidElementType(Context.Consumer); // true ReactIs.isValidElementType(React.createFactory(\"div\")); // true","title":"Determining if a Component is Valid"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#determining-an-elements-type","text":"","title":"Determining an Element's Type"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#context","text":"import React from \"react\"; import * as ReactIs from 'react-is'; const ThemeContext = React.createContext(\"blue\"); ReactIs.isContextConsumer(<ThemeContext.Consumer />); // true ReactIs.isContextProvider(<ThemeContext.Provider />); // true ReactIs.typeOf(<ThemeContext.Provider />) === ReactIs.ContextProvider; // true ReactIs.typeOf(<ThemeContext.Consumer />) === ReactIs.ContextConsumer; // true","title":"Context"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#element","text":"import React from \"react\"; import * as ReactIs from 'react-is'; ReactIs.isElement(<div />); // true ReactIs.typeOf(<div />) === ReactIs.Element; // true","title":"Element"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#fragment","text":"import React from \"react\"; import * as ReactIs from 'react-is'; ReactIs.isFragment(<></>); // true ReactIs.typeOf(<></>) === ReactIs.Fragment; // true","title":"Fragment"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#portal","text":"import React from \"react\"; import ReactDOM from \"react-dom\"; import * as ReactIs from 'react-is'; const div = document.createElement(\"div\"); const portal = ReactDOM.createPortal(<div />, div); ReactIs.isPortal(portal); // true ReactIs.typeOf(portal) === ReactIs.Portal; // true","title":"Portal"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-is/#strictmode","text":"import React from \"react\"; import * as ReactIs from 'react-is'; ReactIs.isStrictMode(<React.StrictMode />); // true ReactIs.typeOf(<React.StrictMode />) === ReactIs.StrictMode; // true","title":"StrictMode"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-refresh/","text":"react-refresh This package implements the wiring necessary to integrate Fast Refresh into bundlers. Fast Refresh is a feature that lets you edit React components in a running application without losing their state. It is similar to an old feature known as \"hot reloading\", but Fast Refresh is more reliable and officially supported by React. This package is primarily aimed at developers of bundler plugins. If you\u2019re working on one, here is a rough guide for Fast Refresh integration using this package.","title":"react-refresh"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-refresh/#react-refresh","text":"This package implements the wiring necessary to integrate Fast Refresh into bundlers. Fast Refresh is a feature that lets you edit React components in a running application without losing their state. It is similar to an old feature known as \"hot reloading\", but Fast Refresh is more reliable and officially supported by React. This package is primarily aimed at developers of bundler plugins. If you\u2019re working on one, here is a rough guide for Fast Refresh integration using this package.","title":"react-refresh"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/","text":"React Router The react-router package is the heart of React Router and provides all the core functionality for both react-router-dom and react-router-native . If you're using React Router, you should never import anything directly from the react-router package, but you should have everything you need in either react-router-dom or react-router-native . Both of those packages re-export everything from react-router . If you'd like to extend React Router and you know what you're doing, you should add react-router as a peer dependency, not a regular dependency in your package.","title":"React Router"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/#react-router","text":"The react-router package is the heart of React Router and provides all the core functionality for both react-router-dom and react-router-native . If you're using React Router, you should never import anything directly from the react-router package, but you should have everything you need in either react-router-dom or react-router-native . Both of those packages re-export everything from react-router . If you'd like to extend React Router and you know what you're doing, you should add react-router as a peer dependency, not a regular dependency in your package.","title":"React Router"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/","text":"react-router 6.27.0 Minor Changes Stabilize unstable_patchRoutesOnNavigation ( #11973 ) Add new PatchRoutesOnNavigationFunctionArgs type for convenience ( #11967 ) Stabilize unstable_dataStrategy ( #11974 ) Stabilize the unstable_flushSync option for navigations and fetchers ( #11989 ) Stabilize the unstable_viewTransition option for navigations and the corresponding unstable_useViewTransitionState hook ( #11989 ) Patch Changes Fix bug when submitting to the current contextual route (parent route with an index child) when an ?index param already exists from a prior submission ( #12003 ) Fix useFormAction bug - when removing ?index param it would not keep other non-Remix index params ( #12003 ) Fix types for RouteObject within PatchRoutesOnNavigationFunction 's patch method so it doesn't expect agnostic route objects passed to patch ( #11967 ) Updated dependencies: @remix-run/router@1.20.0 6.26.2 Patch Changes Updated dependencies: @remix-run/router@1.19.2 6.26.1 Patch Changes Rename unstable_patchRoutesOnMiss to unstable_patchRoutesOnNavigation to match new behavior ( #11888 ) Updated dependencies: @remix-run/router@1.19.1 6.26.0 Minor Changes Add a new replace(url, init?) alternative to redirect(url, init?) that performs a history.replaceState instead of a history.pushState on client-side navigation redirects ( #11811 ) Patch Changes Fix initial hydration behavior when using future.v7_partialHydration along with unstable_patchRoutesOnMiss ( #11838 ) During initial hydration, router.state.matches will now include any partial matches so that we can render ancestor HydrateFallback components Updated dependencies: @remix-run/router@1.19.0 6.25.1 No significant changes to this package were made in this release. See the repo CHANGELOG.md for an overview of all changes in v6.25.1. 6.25.0 Minor Changes Stabilize future.unstable_skipActionErrorRevalidation as future.v7_skipActionErrorRevalidation ( #11769 ) When this flag is enabled, actions will not automatically trigger a revalidation if they return/throw a Response with a 4xx / 5xx status code You may still opt-into revalidation via shouldRevalidate This also changes shouldRevalidate 's unstable_actionStatus parameter to actionStatus Patch Changes Fix regression and properly decode paths inside useMatch so matches/params reflect decoded params ( #11789 ) Updated dependencies: @remix-run/router@1.18.0 6.24.1 Patch Changes When using future.v7_relativeSplatPath , properly resolve relative paths in splat routes that are children of pathless routes ( #11633 ) Updated dependencies: @remix-run/router@1.17.1 6.24.0 Minor Changes Add support for Lazy Route Discovery (a.k.a. Fog of War) ( #11626 ) RFC: https://github.com/remix-run/react-router/discussions/11113 unstable_patchRoutesOnMiss docs: https://reactrouter.com/en/main/routers/create-browser-router Patch Changes Updated dependencies: @remix-run/router@1.17.0 6.23.1 Patch Changes allow undefined to be resolved with <Await> ( #11513 ) Updated dependencies: @remix-run/router@1.16.1 6.23.0 Minor Changes Add a new unstable_dataStrategy configuration option ( #11098 ) This option allows Data Router applications to take control over the approach for executing route loaders and actions The default implementation is today's behavior, to fetch all loaders in parallel, but this option allows users to implement more advanced data flows including Remix single-fetch, middleware/context APIs, automatic loader caching, and more Patch Changes Updated dependencies: @remix-run/router@1.16.0 6.22.3 Patch Changes Updated dependencies: @remix-run/router@1.15.3 6.22.2 Patch Changes Updated dependencies: @remix-run/router@1.15.2 6.22.1 Patch Changes Fix encoding/decoding issues with pre-encoded dynamic parameter values ( #11199 ) Updated dependencies: @remix-run/router@1.15.1 6.22.0 Patch Changes Updated dependencies: @remix-run/router@1.15.0 6.21.3 Patch Changes Remove leftover unstable_ prefix from Blocker / BlockerFunction types ( #11187 ) 6.21.2 Patch Changes Updated dependencies: @remix-run/router@1.14.2 6.21.1 Patch Changes Fix bug with route.lazy not working correctly on initial SPA load when v7_partialHydration is specified ( #11121 ) Updated dependencies: @remix-run/router@1.14.1 6.21.0 Minor Changes Add a new future.v7_relativeSplatPath flag to implement a breaking bug fix to relative routing when inside a splat route. ( #11087 ) This fix was originally added in #10983 and was later reverted in #11078 because it was determined that a large number of existing applications were relying on the buggy behavior (see #11052 ) The Bug The buggy behavior is that without this flag, the default behavior when resolving relative paths is to ignore any splat ( * ) portion of the current route path. The Background This decision was originally made thinking that it would make the concept of nested different sections of your apps in <Routes> easier if relative routing would replace the current splat: jsx <BrowserRouter> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"dashboard/*\" element={<Dashboard />} /> </Routes> </BrowserRouter> Any paths like /dashboard , /dashboard/team , /dashboard/projects will match the Dashboard route. The dashboard component itself can then render nested <Routes> : ```jsx function Dashboard() { return ( Dashboard Dashboard Home Team Projects <Routes> <Route path=\"/\" element={<DashboardHome />} /> <Route path=\"team\" element={<DashboardTeam />} /> <Route path=\"projects\" element={<DashboardProjects />} /> </Routes> </div> ); } ``` Now, all links and route paths are relative to the router above them. This makes code splitting and compartmentalizing your app really easy. You could render the Dashboard as its own independent app, or embed it into your large app without making any changes to it. The Problem The problem is that this concept of ignoring part of a path breaks a lot of other assumptions in React Router - namely that \".\" always means the current location pathname for that route. When we ignore the splat portion, we start getting invalid paths when using \".\" : ```jsx // If we are on URL /dashboard/team, and we want to link to /dashboard/team: function DashboardTeam() { // \u274c This is broken and results in return A broken link to the Current URL ; // \u2705 This is fixed but super unintuitive since we're already at /dashboard/team! return <Link to=\"./team\">A broken link to the Current URL</Link>; } ``` We've also introduced an issue that we can no longer move our DashboardTeam component around our route hierarchy easily - since it behaves differently if we're underneath a non-splat route, such as /dashboard/:widget . Now, our \".\" links will, properly point to ourself inclusive of the dynamic param value so behavior will break from it's corresponding usage in a /dashboard/* route. Even worse, consider a nested splat route configuration: jsx <BrowserRouter> <Routes> <Route path=\"dashboard\"> <Route path=\"*\" element={<Dashboard />} /> </Route> </Routes> </BrowserRouter> Now, a <Link to=\".\"> and a <Link to=\"..\"> inside the Dashboard component go to the same place! That is definitely not correct! Another common issue arose in Data Routers (and Remix) where any <Form> should post to it's own route action if you the user doesn't specify a form action: jsx let router = createBrowserRouter({ path: \"/dashboard\", children: [ { path: \"*\", action: dashboardAction, Component() { // \u274c This form is broken! It throws a 405 error when it submits because // it tries to submit to /dashboard (without the splat value) and the parent // `/dashboard` route doesn't have an action return <Form method=\"post\">...</Form>; }, }, ], }); This is just a compounded issue from the above because the default location for a Form to submit to is itself ( \".\" ) - and if we ignore the splat portion, that now resolves to the parent route. The Solution If you are leveraging this behavior, it's recommended to enable the future flag, move your splat to it's own route, and leverage ../ for any links to \"sibling\" pages: ```jsx } /> function Dashboard() { return ( Dashboard Dashboard Home Team Projects <Routes> <Route path=\"/\" element={<DashboardHome />} /> <Route path=\"team\" element={<DashboardTeam />} /> <Route path=\"projects\" element={<DashboardProjects />} /> </Router> </div> ); } ``` This way, . means \"the full current pathname for my route\" in all cases (including static, dynamic, and splat routes) and .. always means \"my parents pathname\". Patch Changes Properly handle falsy error values in ErrorBoundary's ( #11071 ) Updated dependencies: @remix-run/router@1.14.0 6.20.1 Patch Changes Revert the useResolvedPath fix for splat routes due to a large number of applications that were relying on the buggy behavior (see https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329 ). We plan to re-introduce this fix behind a future flag in the next minor version. ( #11078 ) Updated dependencies: @remix-run/router@1.13.1 6.20.0 Minor Changes Export the PathParam type from the public API ( #10719 ) Patch Changes Fix bug with resolveTo in splat routes ( #11045 ) This is a follow up to #10983 to handle the few other code paths using getPathContributingMatches This removes the UNSAFE_getPathContributingMatches export from @remix-run/router since we no longer need this in the react-router / react-router-dom layers Updated dependencies: @remix-run/router@1.13.0 6.19.0 Minor Changes Add unstable_flushSync option to useNavigate / useSumbit / fetcher.load / fetcher.submit to opt-out of React.startTransition and into ReactDOM.flushSync for state updates ( #11005 ) Remove the unstable_ prefix from the useBlocker hook as it's been in use for enough time that we are confident in the API. We do not plan to remove the prefix from unstable_usePrompt due to differences in how browsers handle window.confirm that prevent React Router from guaranteeing consistent/correct behavior. ( #10991 ) Patch Changes Fix useActionData so it returns proper contextual action data and not any action data in the tree ( #11023 ) Fix bug in useResolvedPath that would cause useResolvedPath(\".\") in a splat route to lose the splat portion of the URL path. ( #10983 ) \u26a0\ufe0f This fixes a quite long-standing bug specifically for \".\" paths inside a splat route which incorrectly dropped the splat portion of the URL. If you are relative routing via \".\" inside a splat route in your application you should double check that your logic is not relying on this buggy behavior and update accordingly. Updated dependencies: @remix-run/router@1.12.0 6.18.0 Patch Changes Fix the future prop on BrowserRouter , HashRouter and MemoryRouter so that it accepts a Partial<FutureConfig> instead of requiring all flags to be included. ( #10962 ) Updated dependencies: @remix-run/router@1.11.0 6.17.0 Patch Changes Fix RouterProvider future prop type to be a Partial<FutureConfig> so that not all flags must be specified ( #10900 ) Updated dependencies: @remix-run/router@1.10.0 6.16.0 Minor Changes In order to move towards stricter TypeScript support in the future, we're aiming to replace current usages of any with unknown on exposed typings for user-provided data. To do this in Remix v2 without introducing breaking changes in React Router v6, we have added generics to a number of shared types. These continue to default to any in React Router and are overridden with unknown in Remix. In React Router v7 we plan to move these to unknown as a breaking change. ( #10843 ) Location now accepts a generic for the location.state value ActionFunctionArgs / ActionFunction / LoaderFunctionArgs / LoaderFunction now accept a generic for the context parameter (only used in SSR usages via createStaticHandler ) The return type of useMatches (now exported as UIMatch ) accepts generics for match.data and match.handle - both of which were already set to unknown Move the @private class export ErrorResponse to an UNSAFE_ErrorResponseImpl export since it is an implementation detail and there should be no construction of ErrorResponse instances in userland. This frees us up to export a type ErrorResponse which correlates to an instance of the class via InstanceType . Userland code should only ever be using ErrorResponse as a type and should be type-narrowing via isRouteErrorResponse . ( #10811 ) Export ShouldRevalidateFunctionArgs interface ( #10797 ) Removed private/internal APIs only required for the Remix v1 backwards compatibility layer and no longer needed in Remix v2 ( _isFetchActionRedirect , _hasFetcherDoneAnything ) ( #10715 ) Patch Changes Updated dependencies: @remix-run/router@1.9.0 6.15.0 Minor Changes Add's a new redirectDocument() function which allows users to specify that a redirect from a loader / action should trigger a document reload (via window.location ) instead of attempting to navigate to the redirected location via React Router ( #10705 ) Patch Changes Ensure useRevalidator is referentially stable across re-renders if revalidations are not actively occurring ( #10707 ) Updated dependencies: @remix-run/router@1.8.0 6.14.2 Patch Changes Updated dependencies: @remix-run/router@1.7.2 6.14.1 Patch Changes Fix loop in unstable_useBlocker when used with an unstable blocker function ( #10652 ) Fix issues with reused blockers on subsequent navigations ( #10656 ) Updated dependencies: @remix-run/router@1.7.1 6.14.0 Patch Changes Strip basename from locations provided to unstable_useBlocker functions to match useLocation ( #10573 ) Fix generatePath when passed a numeric 0 value parameter ( #10612 ) Fix unstable_useBlocker key issues in StrictMode ( #10573 ) Fix tsc --skipLibCheck:false issues on React 17 ( #10622 ) Upgrade typescript to 5.1 ( #10581 ) Updated dependencies: @remix-run/router@1.7.0 6.13.0 Minor Changes Move React.startTransition usage behind a future flag to avoid issues with existing incompatible Suspense usages. We recommend folks adopting this flag to be better compatible with React concurrent mode, but if you run into issues you can continue without the use of startTransition until v7. Issues usually boils down to creating net-new promises during the render cycle, so if you run into issues you should either lift your promise creation out of the render cycle or put it behind a useMemo . ( #10596 ) Existing behavior will no longer include React.startTransition : ```jsx {/ ... /} ``` If you wish to enable React.startTransition , pass the future flag to your component: ```jsx {/ ... /} ``` Patch Changes Work around webpack/terser React.startTransition minification bug in production mode ( #10588 ) 6.12.1 [!WARNING] Please use version 6.13.0 or later instead of 6.12.1 . This version suffers from a webpack / terser minification issue resulting in invalid minified code in your resulting production bundles which can cause issues in your application. See #10579 for more details. Patch Changes Adjust feature detection of React.startTransition to fix webpack + react 17 compilation error ( #10569 ) 6.12.0 Minor Changes Wrap internal router state updates with React.startTransition if it exists ( #10438 ) Patch Changes Updated dependencies: @remix-run/router@1.6.3 6.11.2 Patch Changes Fix basename duplication in descendant <Routes> inside a <RouterProvider> ( #10492 ) Updated dependencies: @remix-run/router@1.6.2 6.11.1 Patch Changes Fix usage of Component API within descendant <Routes> ( #10434 ) Fix bug when calling useNavigate from <Routes> inside a <RouterProvider> ( #10432 ) Fix usage of <Navigate> in strict mode when using a data router ( #10435 ) Updated dependencies: @remix-run/router@1.6.1 6.11.0 Patch Changes Log loader/action errors to the console in dev for easier stack trace evaluation ( #10286 ) Fix bug preventing rendering of descendant <Routes> when RouterProvider errors existed ( #10374 ) Fix inadvertent re-renders when using Component instead of element on a route definition ( #10287 ) Fix detection of useNavigate in the render cycle by setting the activeRef in a layout effect, allowing the navigate function to be passed to child components and called in a useEffect there. ( #10394 ) Switched from useSyncExternalStore to useState for internal @remix-run/router router state syncing in <RouterProvider> . We found some subtle bugs where router state updates got propagated before other normal useState updates, which could lead to footguns in useEffect calls. ( #10377 , #10409 ) Allow useRevalidator() to resolve a loader-driven error boundary scenario ( #10369 ) Avoid unnecessary unsubscribe/resubscribes on router state changes ( #10409 ) When using a RouterProvider , useNavigate / useSubmit / fetcher.submit are now stable across location changes, since we can handle relative routing via the @remix-run/router instance and get rid of our dependence on useLocation() . When using BrowserRouter , these hooks remain unstable across location changes because they still rely on useLocation() . ( #10336 ) Updated dependencies: @remix-run/router@1.6.0 6.10.0 Minor Changes Added support for Future Flags in React Router. The first flag being introduced is future.v7_normalizeFormMethod which will normalize the exposed useNavigation()/useFetcher() formMethod fields as uppercase HTTP methods to align with the fetch() behavior. ( #10207 ) When future.v7_normalizeFormMethod === false (default v6 behavior), useNavigation().formMethod is lowercase useFetcher().formMethod is lowercase When future.v7_normalizeFormMethod === true : useNavigation().formMethod is uppercase useFetcher().formMethod is uppercase Patch Changes Fix route ID generation when using Fragments in createRoutesFromElements ( #10193 ) Updated dependencies: @remix-run/router@1.5.0 6.9.0 Minor Changes React Router now supports an alternative way to define your route element and errorElement fields as React Components instead of React Elements. You can instead pass a React Component to the new Component and ErrorBoundary fields if you choose. There is no functional difference between the two, so use whichever approach you prefer \ud83d\ude00. You shouldn't be defining both, but if you do Component / ErrorBoundary will \"win\". ( #10045 ) Example JSON Syntax ```jsx // Both of these work the same: const elementRoutes = [{ path: '/', element: , errorElement: , }] const componentRoutes = [{ path: '/', Component: Home, ErrorBoundary: HomeError, }] function Home() { ... } function HomeError() { ... } ``` Example JSX Syntax ```jsx // Both of these work the same: const elementRoutes = createRoutesFromElements( } errorElement={\\ } /> ); const componentRoutes = createRoutesFromElements( ); function Home() { ... } function HomeError() { ... } ``` Introducing Lazy Route Modules! ( #10045 ) In order to keep your application bundles small and support code-splitting of your routes, we've introduced a new lazy() route property. This is an async function that resolves the non-route-matching portions of your route definition ( loader , action , element / Component , errorElement / ErrorBoundary , shouldRevalidate , handle ). Lazy routes are resolved on initial load and during the loading or submitting phase of a navigation or fetcher call. You cannot lazily define route-matching properties ( path , index , children ) since we only execute your lazy route functions after we've matched known routes. Your lazy functions will typically return the result of a dynamic import. jsx // In this example, we assume most folks land on the homepage so we include that // in our critical-path bundle, but then we lazily load modules for /a and /b so // they don't load until the user navigates to those routes let routes = createRoutesFromElements( <Route path=\"/\" element={<Layout />}> <Route index element={<Home />} /> <Route path=\"a\" lazy={() => import(\"./a\")} /> <Route path=\"b\" lazy={() => import(\"./b\")} /> </Route> ); Then in your lazy route modules, export the properties you want defined for the route: ```jsx export async function loader({ request }) { let data = await fetchData(request); return json(data); } // Export a Component directly instead of needing to create a React Element from it export function Component() { let data = useLoaderData(); return ( <> <h1>You made it!</h1> <p>{data}</p> ); } // Export an ErrorBoundary directly instead of needing to create a React Element from it export function ErrorBoundary() { let error = useRouteError(); return isRouteErrorResponse(error) ? ( {error.status} {error.statusText} ) : ( {error.message || error} ); } ``` An example of this in action can be found in the examples/lazy-loading-router-provider directory of the repository. \ud83d\ude4c Huge thanks to @rossipedia for the Initial Proposal and POC Implementation . Updated dependencies: @remix-run/router@1.4.0 Patch Changes Fix generatePath incorrectly applying parameters in some cases ( #10078 ) Improve memoization for context providers to avoid unnecessary re-renders ( #9983 ) 6.8.2 Patch Changes Updated dependencies: @remix-run/router@1.3.3 6.8.1 Patch Changes Remove inaccurate console warning for POP navigations and update active blocker logic ( #10030 ) Updated dependencies: @remix-run/router@1.3.2 6.8.0 Patch Changes Updated dependencies: @remix-run/router@1.3.1 6.7.0 Minor Changes Add unstable_useBlocker hook for blocking navigations within the app's location origin ( #9709 ) Patch Changes Fix generatePath when optional params are present ( #9764 ) Update <Await> to accept ReactNode as children function return result ( #9896 ) Updated dependencies: @remix-run/router@1.3.0 6.6.2 Patch Changes Ensure useId consistency during SSR ( #9805 ) 6.6.1 Patch Changes Updated dependencies: @remix-run/router@1.2.1 6.6.0 Patch Changes Prevent useLoaderData usage in errorElement ( #9735 ) Updated dependencies: @remix-run/router@1.2.0 6.5.0 This release introduces support for Optional Route Segments . Now, adding a ? to the end of any path segment will make that entire segment optional. This works for both static segments and dynamic parameters. Optional Params Examples <Route path=\":lang?/about> will match: /:lang/about /about <Route path=\"/multistep/:widget1?/widget2?/widget3?\"> will match: /multistep /multistep/:widget1 /multistep/:widget1/:widget2 /multistep/:widget1/:widget2/:widget3 Optional Static Segment Example <Route path=\"/home?\"> will match: / /home <Route path=\"/fr?/about\"> will match: /about /fr/about Minor Changes Allows optional routes and optional static segments ( #9650 ) Patch Changes Stop incorrectly matching on partial named parameters, i.e. <Route path=\"prefix-:param\"> , to align with how splat parameters work. If you were previously relying on this behavior then it's recommended to extract the static portion of the path at the useParams call site: ( #9506 ) // Old behavior at URL /prefix-123 <Route path=\"prefix-:id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: '123' } let id = params.id; // \"123\" ... } // New behavior at URL /prefix-123 <Route path=\":id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: 'prefix-123' } let id = params.id.replace(/^prefix-/, ''); // \"123\" ... } Updated dependencies: @remix-run/router@1.1.0 6.4.5 Patch Changes Updated dependencies: @remix-run/router@1.0.5 6.4.4 Patch Changes Updated dependencies: @remix-run/router@1.0.4 6.4.3 Patch Changes useRoutes should be able to return null when passing locationArg ( #9485 ) fix initialEntries type in createMemoryRouter ( #9498 ) Updated dependencies: @remix-run/router@1.0.3 6.4.2 Patch Changes Fix IndexRouteObject and NonIndexRouteObject types to make hasErrorElement optional ( #9394 ) Enhance console error messages for invalid usage of data router hooks ( #9311 ) If an index route has children, it will result in a runtime error. We have strengthened our RouteObject / RouteProps types to surface the error in TypeScript. ( #9366 ) Updated dependencies: @remix-run/router@1.0.2 6.4.1 Patch Changes Preserve state from initialEntries ( #9288 ) Updated dependencies: @remix-run/router@1.0.1 6.4.0 Whoa this is a big one! 6.4.0 brings all the data loading and mutation APIs over from Remix. Here's a quick high level overview, but it's recommended you go check out the docs , especially the feature overview and the tutorial . New APIs Create your router with createMemoryRouter Render your router with <RouterProvider> Load data with a Route loader and mutate with a Route action Handle errors with Route errorElement Defer non-critical data with defer and Await Bug Fixes Path resolution is now trailing slash agnostic (#8861) useLocation returns the scoped location inside a <Routes location> component (#9094) Updated Dependencies @remix-run/router@1.0.0","title":"react-router"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#react-router","text":"","title":"react-router"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6270","text":"","title":"6.27.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes","text":"Stabilize unstable_patchRoutesOnNavigation ( #11973 ) Add new PatchRoutesOnNavigationFunctionArgs type for convenience ( #11967 ) Stabilize unstable_dataStrategy ( #11974 ) Stabilize the unstable_flushSync option for navigations and fetchers ( #11989 ) Stabilize the unstable_viewTransition option for navigations and the corresponding unstable_useViewTransitionState hook ( #11989 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes","text":"Fix bug when submitting to the current contextual route (parent route with an index child) when an ?index param already exists from a prior submission ( #12003 ) Fix useFormAction bug - when removing ?index param it would not keep other non-Remix index params ( #12003 ) Fix types for RouteObject within PatchRoutesOnNavigationFunction 's patch method so it doesn't expect agnostic route objects passed to patch ( #11967 ) Updated dependencies: @remix-run/router@1.20.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6262","text":"","title":"6.26.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_1","text":"Updated dependencies: @remix-run/router@1.19.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6261","text":"","title":"6.26.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_2","text":"Rename unstable_patchRoutesOnMiss to unstable_patchRoutesOnNavigation to match new behavior ( #11888 ) Updated dependencies: @remix-run/router@1.19.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6260","text":"","title":"6.26.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_1","text":"Add a new replace(url, init?) alternative to redirect(url, init?) that performs a history.replaceState instead of a history.pushState on client-side navigation redirects ( #11811 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_3","text":"Fix initial hydration behavior when using future.v7_partialHydration along with unstable_patchRoutesOnMiss ( #11838 ) During initial hydration, router.state.matches will now include any partial matches so that we can render ancestor HydrateFallback components Updated dependencies: @remix-run/router@1.19.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6251","text":"No significant changes to this package were made in this release. See the repo CHANGELOG.md for an overview of all changes in v6.25.1.","title":"6.25.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6250","text":"","title":"6.25.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_2","text":"Stabilize future.unstable_skipActionErrorRevalidation as future.v7_skipActionErrorRevalidation ( #11769 ) When this flag is enabled, actions will not automatically trigger a revalidation if they return/throw a Response with a 4xx / 5xx status code You may still opt-into revalidation via shouldRevalidate This also changes shouldRevalidate 's unstable_actionStatus parameter to actionStatus","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_4","text":"Fix regression and properly decode paths inside useMatch so matches/params reflect decoded params ( #11789 ) Updated dependencies: @remix-run/router@1.18.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6241","text":"","title":"6.24.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_5","text":"When using future.v7_relativeSplatPath , properly resolve relative paths in splat routes that are children of pathless routes ( #11633 ) Updated dependencies: @remix-run/router@1.17.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6240","text":"","title":"6.24.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_3","text":"Add support for Lazy Route Discovery (a.k.a. Fog of War) ( #11626 ) RFC: https://github.com/remix-run/react-router/discussions/11113 unstable_patchRoutesOnMiss docs: https://reactrouter.com/en/main/routers/create-browser-router","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_6","text":"Updated dependencies: @remix-run/router@1.17.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6231","text":"","title":"6.23.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_7","text":"allow undefined to be resolved with <Await> ( #11513 ) Updated dependencies: @remix-run/router@1.16.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6230","text":"","title":"6.23.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_4","text":"Add a new unstable_dataStrategy configuration option ( #11098 ) This option allows Data Router applications to take control over the approach for executing route loaders and actions The default implementation is today's behavior, to fetch all loaders in parallel, but this option allows users to implement more advanced data flows including Remix single-fetch, middleware/context APIs, automatic loader caching, and more","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_8","text":"Updated dependencies: @remix-run/router@1.16.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6223","text":"","title":"6.22.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_9","text":"Updated dependencies: @remix-run/router@1.15.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6222","text":"","title":"6.22.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_10","text":"Updated dependencies: @remix-run/router@1.15.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6221","text":"","title":"6.22.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_11","text":"Fix encoding/decoding issues with pre-encoded dynamic parameter values ( #11199 ) Updated dependencies: @remix-run/router@1.15.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6220","text":"","title":"6.22.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_12","text":"Updated dependencies: @remix-run/router@1.15.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6213","text":"","title":"6.21.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_13","text":"Remove leftover unstable_ prefix from Blocker / BlockerFunction types ( #11187 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6212","text":"","title":"6.21.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_14","text":"Updated dependencies: @remix-run/router@1.14.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6211","text":"","title":"6.21.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_15","text":"Fix bug with route.lazy not working correctly on initial SPA load when v7_partialHydration is specified ( #11121 ) Updated dependencies: @remix-run/router@1.14.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6210","text":"","title":"6.21.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_5","text":"Add a new future.v7_relativeSplatPath flag to implement a breaking bug fix to relative routing when inside a splat route. ( #11087 ) This fix was originally added in #10983 and was later reverted in #11078 because it was determined that a large number of existing applications were relying on the buggy behavior (see #11052 ) The Bug The buggy behavior is that without this flag, the default behavior when resolving relative paths is to ignore any splat ( * ) portion of the current route path. The Background This decision was originally made thinking that it would make the concept of nested different sections of your apps in <Routes> easier if relative routing would replace the current splat: jsx <BrowserRouter> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"dashboard/*\" element={<Dashboard />} /> </Routes> </BrowserRouter> Any paths like /dashboard , /dashboard/team , /dashboard/projects will match the Dashboard route. The dashboard component itself can then render nested <Routes> : ```jsx function Dashboard() { return (","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_16","text":"Properly handle falsy error values in ErrorBoundary's ( #11071 ) Updated dependencies: @remix-run/router@1.14.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6201","text":"","title":"6.20.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_17","text":"Revert the useResolvedPath fix for splat routes due to a large number of applications that were relying on the buggy behavior (see https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329 ). We plan to re-introduce this fix behind a future flag in the next minor version. ( #11078 ) Updated dependencies: @remix-run/router@1.13.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6200","text":"","title":"6.20.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_6","text":"Export the PathParam type from the public API ( #10719 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_18","text":"Fix bug with resolveTo in splat routes ( #11045 ) This is a follow up to #10983 to handle the few other code paths using getPathContributingMatches This removes the UNSAFE_getPathContributingMatches export from @remix-run/router since we no longer need this in the react-router / react-router-dom layers Updated dependencies: @remix-run/router@1.13.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6190","text":"","title":"6.19.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_7","text":"Add unstable_flushSync option to useNavigate / useSumbit / fetcher.load / fetcher.submit to opt-out of React.startTransition and into ReactDOM.flushSync for state updates ( #11005 ) Remove the unstable_ prefix from the useBlocker hook as it's been in use for enough time that we are confident in the API. We do not plan to remove the prefix from unstable_usePrompt due to differences in how browsers handle window.confirm that prevent React Router from guaranteeing consistent/correct behavior. ( #10991 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_19","text":"Fix useActionData so it returns proper contextual action data and not any action data in the tree ( #11023 ) Fix bug in useResolvedPath that would cause useResolvedPath(\".\") in a splat route to lose the splat portion of the URL path. ( #10983 ) \u26a0\ufe0f This fixes a quite long-standing bug specifically for \".\" paths inside a splat route which incorrectly dropped the splat portion of the URL. If you are relative routing via \".\" inside a splat route in your application you should double check that your logic is not relying on this buggy behavior and update accordingly. Updated dependencies: @remix-run/router@1.12.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6180","text":"","title":"6.18.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_20","text":"Fix the future prop on BrowserRouter , HashRouter and MemoryRouter so that it accepts a Partial<FutureConfig> instead of requiring all flags to be included. ( #10962 ) Updated dependencies: @remix-run/router@1.11.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6170","text":"","title":"6.17.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_21","text":"Fix RouterProvider future prop type to be a Partial<FutureConfig> so that not all flags must be specified ( #10900 ) Updated dependencies: @remix-run/router@1.10.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6160","text":"","title":"6.16.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_8","text":"In order to move towards stricter TypeScript support in the future, we're aiming to replace current usages of any with unknown on exposed typings for user-provided data. To do this in Remix v2 without introducing breaking changes in React Router v6, we have added generics to a number of shared types. These continue to default to any in React Router and are overridden with unknown in Remix. In React Router v7 we plan to move these to unknown as a breaking change. ( #10843 ) Location now accepts a generic for the location.state value ActionFunctionArgs / ActionFunction / LoaderFunctionArgs / LoaderFunction now accept a generic for the context parameter (only used in SSR usages via createStaticHandler ) The return type of useMatches (now exported as UIMatch ) accepts generics for match.data and match.handle - both of which were already set to unknown Move the @private class export ErrorResponse to an UNSAFE_ErrorResponseImpl export since it is an implementation detail and there should be no construction of ErrorResponse instances in userland. This frees us up to export a type ErrorResponse which correlates to an instance of the class via InstanceType . Userland code should only ever be using ErrorResponse as a type and should be type-narrowing via isRouteErrorResponse . ( #10811 ) Export ShouldRevalidateFunctionArgs interface ( #10797 ) Removed private/internal APIs only required for the Remix v1 backwards compatibility layer and no longer needed in Remix v2 ( _isFetchActionRedirect , _hasFetcherDoneAnything ) ( #10715 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_22","text":"Updated dependencies: @remix-run/router@1.9.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6150","text":"","title":"6.15.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_9","text":"Add's a new redirectDocument() function which allows users to specify that a redirect from a loader / action should trigger a document reload (via window.location ) instead of attempting to navigate to the redirected location via React Router ( #10705 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_23","text":"Ensure useRevalidator is referentially stable across re-renders if revalidations are not actively occurring ( #10707 ) Updated dependencies: @remix-run/router@1.8.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6142","text":"","title":"6.14.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_24","text":"Updated dependencies: @remix-run/router@1.7.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6141","text":"","title":"6.14.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_25","text":"Fix loop in unstable_useBlocker when used with an unstable blocker function ( #10652 ) Fix issues with reused blockers on subsequent navigations ( #10656 ) Updated dependencies: @remix-run/router@1.7.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6140","text":"","title":"6.14.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_26","text":"Strip basename from locations provided to unstable_useBlocker functions to match useLocation ( #10573 ) Fix generatePath when passed a numeric 0 value parameter ( #10612 ) Fix unstable_useBlocker key issues in StrictMode ( #10573 ) Fix tsc --skipLibCheck:false issues on React 17 ( #10622 ) Upgrade typescript to 5.1 ( #10581 ) Updated dependencies: @remix-run/router@1.7.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6130","text":"","title":"6.13.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_10","text":"Move React.startTransition usage behind a future flag to avoid issues with existing incompatible Suspense usages. We recommend folks adopting this flag to be better compatible with React concurrent mode, but if you run into issues you can continue without the use of startTransition until v7. Issues usually boils down to creating net-new promises during the render cycle, so if you run into issues you should either lift your promise creation out of the render cycle or put it behind a useMemo . ( #10596 ) Existing behavior will no longer include React.startTransition : ```jsx {/ ... /} ``` If you wish to enable React.startTransition , pass the future flag to your component: ```jsx {/ ... /} ```","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_27","text":"Work around webpack/terser React.startTransition minification bug in production mode ( #10588 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6121","text":"[!WARNING] Please use version 6.13.0 or later instead of 6.12.1 . This version suffers from a webpack / terser minification issue resulting in invalid minified code in your resulting production bundles which can cause issues in your application. See #10579 for more details.","title":"6.12.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_28","text":"Adjust feature detection of React.startTransition to fix webpack + react 17 compilation error ( #10569 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6120","text":"","title":"6.12.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_11","text":"Wrap internal router state updates with React.startTransition if it exists ( #10438 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_29","text":"Updated dependencies: @remix-run/router@1.6.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6112","text":"","title":"6.11.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_30","text":"Fix basename duplication in descendant <Routes> inside a <RouterProvider> ( #10492 ) Updated dependencies: @remix-run/router@1.6.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6111","text":"","title":"6.11.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_31","text":"Fix usage of Component API within descendant <Routes> ( #10434 ) Fix bug when calling useNavigate from <Routes> inside a <RouterProvider> ( #10432 ) Fix usage of <Navigate> in strict mode when using a data router ( #10435 ) Updated dependencies: @remix-run/router@1.6.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6110","text":"","title":"6.11.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_32","text":"Log loader/action errors to the console in dev for easier stack trace evaluation ( #10286 ) Fix bug preventing rendering of descendant <Routes> when RouterProvider errors existed ( #10374 ) Fix inadvertent re-renders when using Component instead of element on a route definition ( #10287 ) Fix detection of useNavigate in the render cycle by setting the activeRef in a layout effect, allowing the navigate function to be passed to child components and called in a useEffect there. ( #10394 ) Switched from useSyncExternalStore to useState for internal @remix-run/router router state syncing in <RouterProvider> . We found some subtle bugs where router state updates got propagated before other normal useState updates, which could lead to footguns in useEffect calls. ( #10377 , #10409 ) Allow useRevalidator() to resolve a loader-driven error boundary scenario ( #10369 ) Avoid unnecessary unsubscribe/resubscribes on router state changes ( #10409 ) When using a RouterProvider , useNavigate / useSubmit / fetcher.submit are now stable across location changes, since we can handle relative routing via the @remix-run/router instance and get rid of our dependence on useLocation() . When using BrowserRouter , these hooks remain unstable across location changes because they still rely on useLocation() . ( #10336 ) Updated dependencies: @remix-run/router@1.6.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#6100","text":"","title":"6.10.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_12","text":"Added support for Future Flags in React Router. The first flag being introduced is future.v7_normalizeFormMethod which will normalize the exposed useNavigation()/useFetcher() formMethod fields as uppercase HTTP methods to align with the fetch() behavior. ( #10207 ) When future.v7_normalizeFormMethod === false (default v6 behavior), useNavigation().formMethod is lowercase useFetcher().formMethod is lowercase When future.v7_normalizeFormMethod === true : useNavigation().formMethod is uppercase useFetcher().formMethod is uppercase","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_33","text":"Fix route ID generation when using Fragments in createRoutesFromElements ( #10193 ) Updated dependencies: @remix-run/router@1.5.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#690","text":"","title":"6.9.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_13","text":"React Router now supports an alternative way to define your route element and errorElement fields as React Components instead of React Elements. You can instead pass a React Component to the new Component and ErrorBoundary fields if you choose. There is no functional difference between the two, so use whichever approach you prefer \ud83d\ude00. You shouldn't be defining both, but if you do Component / ErrorBoundary will \"win\". ( #10045 ) Example JSON Syntax ```jsx // Both of these work the same: const elementRoutes = [{ path: '/', element: , errorElement: , }] const componentRoutes = [{ path: '/', Component: Home, ErrorBoundary: HomeError, }] function Home() { ... } function HomeError() { ... } ``` Example JSX Syntax ```jsx // Both of these work the same: const elementRoutes = createRoutesFromElements( } errorElement={\\ } /> ); const componentRoutes = createRoutesFromElements( ); function Home() { ... } function HomeError() { ... } ``` Introducing Lazy Route Modules! ( #10045 ) In order to keep your application bundles small and support code-splitting of your routes, we've introduced a new lazy() route property. This is an async function that resolves the non-route-matching portions of your route definition ( loader , action , element / Component , errorElement / ErrorBoundary , shouldRevalidate , handle ). Lazy routes are resolved on initial load and during the loading or submitting phase of a navigation or fetcher call. You cannot lazily define route-matching properties ( path , index , children ) since we only execute your lazy route functions after we've matched known routes. Your lazy functions will typically return the result of a dynamic import. jsx // In this example, we assume most folks land on the homepage so we include that // in our critical-path bundle, but then we lazily load modules for /a and /b so // they don't load until the user navigates to those routes let routes = createRoutesFromElements( <Route path=\"/\" element={<Layout />}> <Route index element={<Home />} /> <Route path=\"a\" lazy={() => import(\"./a\")} /> <Route path=\"b\" lazy={() => import(\"./b\")} /> </Route> ); Then in your lazy route modules, export the properties you want defined for the route: ```jsx export async function loader({ request }) { let data = await fetchData(request); return json(data); } // Export a Component directly instead of needing to create a React Element from it export function Component() { let data = useLoaderData(); return ( <> <h1>You made it!</h1> <p>{data}</p> ); } // Export an ErrorBoundary directly instead of needing to create a React Element from it export function ErrorBoundary() { let error = useRouteError(); return isRouteErrorResponse(error) ? (","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_34","text":"Fix generatePath incorrectly applying parameters in some cases ( #10078 ) Improve memoization for context providers to avoid unnecessary re-renders ( #9983 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#682","text":"","title":"6.8.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_35","text":"Updated dependencies: @remix-run/router@1.3.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#681","text":"","title":"6.8.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_36","text":"Remove inaccurate console warning for POP navigations and update active blocker logic ( #10030 ) Updated dependencies: @remix-run/router@1.3.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#680","text":"","title":"6.8.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_37","text":"Updated dependencies: @remix-run/router@1.3.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#670","text":"","title":"6.7.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_14","text":"Add unstable_useBlocker hook for blocking navigations within the app's location origin ( #9709 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_38","text":"Fix generatePath when optional params are present ( #9764 ) Update <Await> to accept ReactNode as children function return result ( #9896 ) Updated dependencies: @remix-run/router@1.3.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#662","text":"","title":"6.6.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_39","text":"Ensure useId consistency during SSR ( #9805 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#661","text":"","title":"6.6.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_40","text":"Updated dependencies: @remix-run/router@1.2.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#660","text":"","title":"6.6.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_41","text":"Prevent useLoaderData usage in errorElement ( #9735 ) Updated dependencies: @remix-run/router@1.2.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#650","text":"This release introduces support for Optional Route Segments . Now, adding a ? to the end of any path segment will make that entire segment optional. This works for both static segments and dynamic parameters. Optional Params Examples <Route path=\":lang?/about> will match: /:lang/about /about <Route path=\"/multistep/:widget1?/widget2?/widget3?\"> will match: /multistep /multistep/:widget1 /multistep/:widget1/:widget2 /multistep/:widget1/:widget2/:widget3 Optional Static Segment Example <Route path=\"/home?\"> will match: / /home <Route path=\"/fr?/about\"> will match: /about /fr/about","title":"6.5.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#minor-changes_15","text":"Allows optional routes and optional static segments ( #9650 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_42","text":"Stop incorrectly matching on partial named parameters, i.e. <Route path=\"prefix-:param\"> , to align with how splat parameters work. If you were previously relying on this behavior then it's recommended to extract the static portion of the path at the useParams call site: ( #9506 ) // Old behavior at URL /prefix-123 <Route path=\"prefix-:id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: '123' } let id = params.id; // \"123\" ... } // New behavior at URL /prefix-123 <Route path=\":id\" element={<Comp /> }> function Comp() { let params = useParams(); // { id: 'prefix-123' } let id = params.id.replace(/^prefix-/, ''); // \"123\" ... } Updated dependencies: @remix-run/router@1.1.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#645","text":"","title":"6.4.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_43","text":"Updated dependencies: @remix-run/router@1.0.5","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#644","text":"","title":"6.4.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_44","text":"Updated dependencies: @remix-run/router@1.0.4","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#643","text":"","title":"6.4.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_45","text":"useRoutes should be able to return null when passing locationArg ( #9485 ) fix initialEntries type in createMemoryRouter ( #9498 ) Updated dependencies: @remix-run/router@1.0.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#642","text":"","title":"6.4.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_46","text":"Fix IndexRouteObject and NonIndexRouteObject types to make hasErrorElement optional ( #9394 ) Enhance console error messages for invalid usage of data router hooks ( #9311 ) If an index route has children, it will result in a runtime error. We have strengthened our RouteObject / RouteProps types to surface the error in TypeScript. ( #9366 ) Updated dependencies: @remix-run/router@1.0.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#641","text":"","title":"6.4.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#patch-changes_47","text":"Preserve state from initialEntries ( #9288 ) Updated dependencies: @remix-run/router@1.0.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/CHANGELOG/#640","text":"Whoa this is a big one! 6.4.0 brings all the data loading and mutation APIs over from Remix. Here's a quick high level overview, but it's recommended you go check out the docs , especially the feature overview and the tutorial . New APIs Create your router with createMemoryRouter Render your router with <RouterProvider> Load data with a Route loader and mutate with a Route action Handle errors with Route errorElement Defer non-critical data with defer and Await Bug Fixes Path resolution is now trailing slash agnostic (#8861) useLocation returns the scoped location inside a <Routes location> component (#9094) Updated Dependencies @remix-run/router@1.0.0","title":"6.4.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router/LICENSE/","text":"MIT License Copyright (c) React Training LLC 2015-2019 Copyright (c) Remix Software Inc. 2020-2021 Copyright (c) Shopify Inc. 2022-2023 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/","text":"React Router DOM The react-router-dom package contains bindings for using React Router in web applications. Please see the Getting Started guide for more information on how to get started with React Router.","title":"React Router DOM"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/#react-router-dom","text":"The react-router-dom package contains bindings for using React Router in web applications. Please see the Getting Started guide for more information on how to get started with React Router.","title":"React Router DOM"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/","text":"react-router-dom 6.27.0 Minor Changes Stabilize unstable_patchRoutesOnNavigation ( #11973 ) Add new PatchRoutesOnNavigationFunctionArgs type for convenience ( #11967 ) Stabilize unstable_dataStrategy ( #11974 ) Stabilize the unstable_flushSync option for navigations and fetchers ( #11989 ) Stabilize the unstable_viewTransition option for navigations and the corresponding unstable_useViewTransitionState hook ( #11989 ) Patch Changes Fix bug when submitting to the current contextual route (parent route with an index child) when an ?index param already exists from a prior submission ( #12003 ) Fix useFormAction bug - when removing ?index param it would not keep other non-Remix index params ( #12003 ) Fix types for RouteObject within PatchRoutesOnNavigationFunction 's patch method so it doesn't expect agnostic route objects passed to patch ( #11967 ) Updated dependencies: react-router@6.27.0 @remix-run/router@1.20.0 6.26.2 Patch Changes Updated dependencies: @remix-run/router@1.19.2 react-router@6.26.2 6.26.1 Patch Changes Rename unstable_patchRoutesOnMiss to unstable_patchRoutesOnNavigation to match new behavior ( #11888 ) Updated dependencies: @remix-run/router@1.19.1 react-router@6.26.1 6.26.0 Minor Changes Add a new replace(url, init?) alternative to redirect(url, init?) that performs a history.replaceState instead of a history.pushState on client-side navigation redirects ( #11811 ) Patch Changes Fix initial hydration behavior when using future.v7_partialHydration along with unstable_patchRoutesOnMiss ( #11838 ) During initial hydration, router.state.matches will now include any partial matches so that we can render ancestor HydrateFallback components Updated dependencies: @remix-run/router@1.19.0 react-router@6.26.0 6.25.1 Patch Changes Memoize some RouterProvider internals to reduce unnecessary re-renders ( #11803 ) Updated dependencies: react-router@6.25.1 6.25.0 Minor Changes Stabilize future.unstable_skipActionErrorRevalidation as future.v7_skipActionErrorRevalidation ( #11769 ) When this flag is enabled, actions will not automatically trigger a revalidation if they return/throw a Response with a 4xx / 5xx status code You may still opt-into revalidation via shouldRevalidate This also changes shouldRevalidate 's unstable_actionStatus parameter to actionStatus Patch Changes Updated dependencies: react-router@6.25.0 @remix-run/router@1.18.0 6.24.1 Patch Changes Remove polyfill.io reference from warning message because the domain was sold and has since been determined to serve malware ( #11741 ) See https://sansec.io/research/polyfill-supply-chain-attack Export NavLinkRenderProps type for easier typing of custom NavLink callback ( #11553 ) Updated dependencies: @remix-run/router@1.17.1 react-router@6.24.1 6.24.0 Minor Changes Add support for Lazy Route Discovery (a.k.a. Fog of War) ( #11626 ) RFC: https://github.com/remix-run/react-router/discussions/11113 unstable_patchRoutesOnMiss docs: https://reactrouter.com/en/main/routers/create-browser-router Patch Changes Fix fetcher.submit types - remove incorrect navigate / fetcherKey / unstable_viewTransition options because they are only relevant for useSubmit ( #11631 ) Allow falsy location.state values passed to <StaticRouter> ( #11495 ) Updated dependencies: react-router@6.24.0 @remix-run/router@1.17.0 6.23.1 Patch Changes Check for document existence when checking startViewTransition ( #11544 ) Change the react-router-dom/server import back to react-router-dom instead of index.ts ( #11514 ) Updated dependencies: @remix-run/router@1.16.1 react-router@6.23.1 6.23.0 Minor Changes Add a new unstable_dataStrategy configuration option ( #11098 ) This option allows Data Router applications to take control over the approach for executing route loaders and actions The default implementation is today's behavior, to fetch all loaders in parallel, but this option allows users to implement more advanced data flows including Remix single-fetch, middleware/context APIs, automatic loader caching, and more Patch Changes Updated dependencies: @remix-run/router@1.16.0 react-router@6.23.0 6.22.3 Patch Changes Updated dependencies: @remix-run/router@1.15.3 react-router@6.22.3 6.22.2 Patch Changes Updated dependencies: @remix-run/router@1.15.2 react-router@6.22.2 6.22.1 Patch Changes Updated dependencies: react-router@6.22.1 @remix-run/router@1.15.1 6.22.0 Minor Changes Include a window__reactRouterVersion tag for CWV Report detection ( #11222 ) Patch Changes Updated dependencies: @remix-run/router@1.15.0 react-router@6.22.0 6.21.3 Patch Changes Fix NavLink isPending when a basename is used ( #11195 ) Remove leftover unstable_ prefix from Blocker / BlockerFunction types ( #11187 ) Updated dependencies: react-router@6.21.3 6.21.2 Patch Changes Leverage useId for internal fetcher keys when available ( #11166 ) Updated dependencies: @remix-run/router@1.14.2 react-router@6.21.2 6.21.1 Patch Changes Updated dependencies: react-router@6.21.1 @remix-run/router@1.14.1 6.21.0 Minor Changes Add a new future.v7_relativeSplatPath flag to implement a breaking bug fix to relative routing when inside a splat route. ( #11087 ) This fix was originally added in #10983 and was later reverted in #11078 because it was determined that a large number of existing applications were relying on the buggy behavior (see #11052 ) The Bug The buggy behavior is that without this flag, the default behavior when resolving relative paths is to ignore any splat ( * ) portion of the current route path. The Background This decision was originally made thinking that it would make the concept of nested different sections of your apps in <Routes> easier if relative routing would replace the current splat: jsx <BrowserRouter> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"dashboard/*\" element={<Dashboard />} /> </Routes> </BrowserRouter> Any paths like /dashboard , /dashboard/team , /dashboard/projects will match the Dashboard route. The dashboard component itself can then render nested <Routes> : ```jsx function Dashboard() { return ( Dashboard Dashboard Home Team Projects <Routes> <Route path=\"/\" element={<DashboardHome />} /> <Route path=\"team\" element={<DashboardTeam />} /> <Route path=\"projects\" element={<DashboardProjects />} /> </Routes> </div> ); } ``` Now, all links and route paths are relative to the router above them. This makes code splitting and compartmentalizing your app really easy. You could render the Dashboard as its own independent app, or embed it into your large app without making any changes to it. The Problem The problem is that this concept of ignoring part of a path breaks a lot of other assumptions in React Router - namely that \".\" always means the current location pathname for that route. When we ignore the splat portion, we start getting invalid paths when using \".\" : ```jsx // If we are on URL /dashboard/team, and we want to link to /dashboard/team: function DashboardTeam() { // \u274c This is broken and results in return A broken link to the Current URL ; // \u2705 This is fixed but super unintuitive since we're already at /dashboard/team! return <Link to=\"./team\">A broken link to the Current URL</Link>; } ``` We've also introduced an issue that we can no longer move our DashboardTeam component around our route hierarchy easily - since it behaves differently if we're underneath a non-splat route, such as /dashboard/:widget . Now, our \".\" links will, properly point to ourself inclusive of the dynamic param value so behavior will break from it's corresponding usage in a /dashboard/* route. Even worse, consider a nested splat route configuration: jsx <BrowserRouter> <Routes> <Route path=\"dashboard\"> <Route path=\"*\" element={<Dashboard />} /> </Route> </Routes> </BrowserRouter> Now, a <Link to=\".\"> and a <Link to=\"..\"> inside the Dashboard component go to the same place! That is definitely not correct! Another common issue arose in Data Routers (and Remix) where any <Form> should post to it's own route action if you the user doesn't specify a form action: jsx let router = createBrowserRouter({ path: \"/dashboard\", children: [ { path: \"*\", action: dashboardAction, Component() { // \u274c This form is broken! It throws a 405 error when it submits because // it tries to submit to /dashboard (without the splat value) and the parent // `/dashboard` route doesn't have an action return <Form method=\"post\">...</Form>; }, }, ], }); This is just a compounded issue from the above because the default location for a Form to submit to is itself ( \".\" ) - and if we ignore the splat portion, that now resolves to the parent route. The Solution If you are leveraging this behavior, it's recommended to enable the future flag, move your splat to it's own route, and leverage ../ for any links to \"sibling\" pages: ```jsx } /> function Dashboard() { return ( Dashboard Dashboard Home Team Projects <Routes> <Route path=\"/\" element={<DashboardHome />} /> <Route path=\"team\" element={<DashboardTeam />} /> <Route path=\"projects\" element={<DashboardProjects />} /> </Router> </div> ); } ``` This way, . means \"the full current pathname for my route\" in all cases (including static, dynamic, and splat routes) and .. always means \"my parents pathname\". Patch Changes Updated dependencies: @remix-run/router@1.14.0 react-router@6.21.0 6.20.1 Patch Changes Revert the useResolvedPath fix for splat routes due to a large number of applications that were relying on the buggy behavior (see https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329 ). We plan to re-introduce this fix behind a future flag in the next minor version. ( #11078 ) Updated dependencies: react-router@6.20.1 @remix-run/router@1.13.1 6.20.0 Minor Changes Export the PathParam type from the public API ( #10719 ) Patch Changes Updated dependencies: react-router@6.20.0 @remix-run/router@1.13.0 6.19.0 Minor Changes Add unstable_flushSync option to useNavigate / useSumbit / fetcher.load / fetcher.submit to opt-out of React.startTransition and into ReactDOM.flushSync for state updates ( #11005 ) Allow unstable_usePrompt to accept a BlockerFunction in addition to a boolean ( #10991 ) Patch Changes Fix issue where a changing fetcher key in a useFetcher that remains mounted wasn't getting picked up ( #11009 ) Fix useFormAction which was incorrectly inheriting the ?index query param from child route action submissions ( #11025 ) Fix NavLink active logic when to location has a trailing slash ( #10734 ) Updated dependencies: react-router@6.19.0 @remix-run/router@1.12.0 6.18.0 Minor Changes Add support for manual fetcher key specification via useFetcher({ key: string }) so you can access the same fetcher instance from different components in your application without prop-drilling ( RFC ) ( #10960 ) Fetcher keys are now also exposed on the fetchers returned from useFetchers so that they can be looked up by key Add navigate / fetcherKey params/props to useSumbit / Form to support kicking off a fetcher submission under the hood with an optionally user-specified key ( #10960 ) Invoking a fetcher in this way is ephemeral and stateless If you need to access the state of one of these fetchers, you will need to leverage useFetcher({ key }) to look it up elsewhere Patch Changes Adds a fetcher context to RouterProvider that holds completed fetcher data, in preparation for the upcoming future flag that will change the fetcher persistence/cleanup behavior ( #10961 ) Fix the future prop on BrowserRouter , HashRouter and MemoryRouter so that it accepts a Partial<FutureConfig> instead of requiring all flags to be included. ( #10962 ) Updated dependencies: @remix-run/router@1.11.0 react-router@6.18.0 6.17.0 Minor Changes Add experimental support for the View Transitions API via document.startViewTransition to enable CSS animated transitions on SPA navigations in your application. ( #10916 ) The simplest approach to enabling a View Transition in your React Router app is via the new <Link unstable_viewTransition> prop. This will cause the navigation DOM update to be wrapped in document.startViewTransition which will enable transitions for the DOM update. Without any additional CSS styles, you'll get a basic cross-fade animation for your page. If you need to apply more fine-grained styles for your animations, you can leverage the unstable_useViewTransitionState hook which will tell you when a transition is in progress and you can use that to apply classes or styles: jsx function ImageLink(to, src, alt) { let isTransitioning = unstable_useViewTransitionState(to); return ( <Link to={to} unstable_viewTransition> <img src={src} alt={alt} style={{ viewTransitionName: isTransitioning ? \"image-expand\" : \"\", }} /> </Link> ); } You can also use the <NavLink unstable_viewTransition> shorthand which will manage the hook usage for you and automatically add a transitioning class to the <a> during the transition: css a.transitioning img { view-transition-name: \"image-expand\"; } jsx <NavLink to={to} unstable_viewTransition> <img src={src} alt={alt} /> </NavLink> For an example usage of View Transitions with React Router, check out our fork of the Astro Records demo. For more information on using the View Transitions API, please refer to the Smooth and simple transitions with the View Transitions API guide from the Google Chrome team. Please note, that because the ViewTransition API is a DOM API, we now export a specific RouterProvider from react-router-dom with this functionality. If you are importing RouterProvider from react-router , then it will not support view transitions. ( #10928 Patch Changes Log a warning and fail gracefully in ScrollRestoration when sessionStorage is unavailable ( #10848 ) Updated dependencies: @remix-run/router@1.10.0 react-router@6.17.0 6.16.0 Minor Changes Updated dependencies: @remix-run/router@1.9.0 react-router@6.16.0 Patch Changes Properly encode rendered URIs in server rendering to avoid hydration errors ( #10769 ) 6.15.0 Minor Changes Add's a new redirectDocument() function which allows users to specify that a redirect from a loader / action should trigger a document reload (via window.location ) instead of attempting to navigate to the redirected location via React Router ( #10705 ) Patch Changes Fixes an edge-case affecting web extensions in Firefox that use URLSearchParams and the useSearchParams hook. ( #10620 ) Do not include hash in useFormAction() for unspecified actions since it cannot be determined on the server and causes hydration issues ( #10758 ) Reorder effects in unstable_usePrompt to avoid throwing an exception if the prompt is unblocked and a navigation is performed synchronously ( #10687 , #10718 ) Updated dependencies: @remix-run/router@1.8.0 react-router@6.15.0 6.14.2 Patch Changes Properly decode element id when emulating hash scrolling via <ScrollRestoration> ( #10682 ) Add missing <Form state> prop to populate history.state on submission navigations ( #10630 ) Support proper hydration of Error subclasses such as ReferenceError / TypeError ( #10633 ) Updated dependencies: @remix-run/router@1.7.2 react-router@6.14.2 6.14.1 Patch Changes Updated dependencies: react-router@6.14.1 @remix-run/router@1.7.1 6.14.0 Minor Changes Add support for application/json and text/plain encodings for useSubmit / fetcher.submit . To reflect these additional types, useNavigation / useFetcher now also contain navigation.json / navigation.text and fetcher.json / fetcher.text which include the json/text submission if applicable ( #10413 ) ```jsx // The default behavior will still serialize as FormData function Component() { let navigation = useNavigation(); let submit = useSubmit(); submit({ key: \"value\" }, { method: \"post\" }); // navigation.formEncType => \"application/x-www-form-urlencoded\" // navigation.formData => FormData instance } async function action({ request }) { // request.headers.get(\"Content-Type\") => \"application/x-www-form-urlencoded\" // await request.formData() => FormData instance } ``` ``js // Opt-into JSON encoding with encType: \"application/json\"` function Component() { let navigation = useNavigation(); let submit = useSubmit(); submit({ key: \"value\" }, { method: \"post\", encType: \"application/json\" }); // navigation.formEncType => \"application/json\" // navigation.json => { key: \"value\" } } async function action({ request }) { // request.headers.get(\"Content-Type\") => \"application/json\" // await request.json() => { key: \"value\" } } ``` ``js // Opt-into text encoding with encType: \"text/plain\"` function Component() { let navigation = useNavigation(); let submit = useSubmit(); submit(\"Text submission\", { method: \"post\", encType: \"text/plain\" }); // navigation.formEncType => \"text/plain\" // navigation.text => \"Text submission\" } async function action({ request }) { // request.headers.get(\"Content-Type\") => \"text/plain\" // await request.text() => \"Text submission\" } ``` Patch Changes When submitting a form from a submitter element, prefer the built-in new FormData(form, submitter) instead of the previous manual approach in modern browsers (those that support the new submitter parameter) ( #9865 , #10627 ) For browsers that don't support it, we continue to just append the submit button's entry to the end, and we also add rudimentary support for type=\"image\" buttons If developers want full spec-compliant support for legacy browsers, they can use the formdata-submitter-polyfill Call window.history.pushState/replaceState before updating React Router state (instead of after) so that window.location matches useLocation during synchronous React 17 rendering ( #10448 ) \u26a0\ufe0f However, generally apps should not be relying on window.location and should always reference useLocation when possible, as window.location will not be in sync 100% of the time (due to popstate events, concurrent mode, etc.) Fix tsc --skipLibCheck:false issues on React 17 ( #10622 ) Upgrade typescript to 5.1 ( #10581 ) Updated dependencies: react-router@6.14.0 @remix-run/router@1.7.0 6.13.0 Minor Changes Move React.startTransition usage behind a future flag to avoid issues with existing incompatible Suspense usages. We recommend folks adopting this flag to be better compatible with React concurrent mode, but if you run into issues you can continue without the use of startTransition until v7. Issues usually boils down to creating net-new promises during the render cycle, so if you run into issues you should either lift your promise creation out of the render cycle or put it behind a useMemo . ( #10596 ) Existing behavior will no longer include React.startTransition : ```jsx {/ ... /} ``` If you wish to enable React.startTransition , pass the future flag to your component: ```jsx {/ ... /} ``` Patch Changes Work around webpack/terser React.startTransition minification bug in production mode ( #10588 ) Updated dependencies: react-router@6.13.0 6.12.1 [!WARNING] Please use version 6.13.0 or later instead of 6.12.1 . This version suffers from a webpack / terser minification issue resulting in invalid minified code in your resulting production bundles which can cause issues in your application. See #10579 for more details. Patch Changes Adjust feature detection of React.startTransition to fix webpack + react 17 compilation error ( #10569 ) Updated dependencies: react-router@6.12.1 6.12.0 Minor Changes Wrap internal router state updates with React.startTransition if it exists ( #10438 ) Patch Changes Re-throw DOMException ( DataCloneError ) when attempting to perform a PUSH navigation with non-serializable state. ( #10427 ) Updated dependencies: @remix-run/router@1.6.3 react-router@6.12.0 6.11.2 Patch Changes Export SetURLSearchParams type ( #10444 ) Updated dependencies: react-router@6.11.2 @remix-run/router@1.6.2 6.11.1 Patch Changes Updated dependencies: react-router@6.11.1 @remix-run/router@1.6.1 6.11.0 Minor Changes Enable basename support in useFetcher ( #10336 ) If you were previously working around this issue by manually prepending the basename then you will need to remove the manually prepended basename from your fetcher calls ( fetcher.load('/basename/route') -> fetcher.load('/route') ) Patch Changes Fix inadvertent re-renders when using Component instead of element on a route definition ( #10287 ) Fail gracefully on <Link to=\"//\"> and other invalid URL values ( #10367 ) Switched from useSyncExternalStore to useState for internal @remix-run/router router state syncing in <RouterProvider> . We found some subtle bugs where router state updates got propagated before other normal useState updates, which could lead to footguns in useEffect calls. ( #10377 , #10409 ) Add static prop to StaticRouterProvider 's internal Router component ( #10401 ) When using a RouterProvider , useNavigate / useSubmit / fetcher.submit are now stable across location changes, since we can handle relative routing via the @remix-run/router instance and get rid of our dependence on useLocation() . When using BrowserRouter , these hooks remain unstable across location changes because they still rely on useLocation() . ( #10336 ) Updated dependencies: react-router@6.11.0 @remix-run/router@1.6.0 6.10.0 Minor Changes Added support for Future Flags in React Router. The first flag being introduced is future.v7_normalizeFormMethod which will normalize the exposed useNavigation()/useFetcher() formMethod fields as uppercase HTTP methods to align with the fetch() behavior. ( #10207 ) When future.v7_normalizeFormMethod === false (default v6 behavior), useNavigation().formMethod is lowercase useFetcher().formMethod is lowercase When future.v7_normalizeFormMethod === true : useNavigation().formMethod is uppercase useFetcher().formMethod is uppercase Patch Changes Fix createStaticHandler to also check for ErrorBoundary on routes in addition to errorElement ( #10190 ) Updated dependencies: @remix-run/router@1.5.0 react-router@6.10.0 6.9.0 Minor Changes React Router now supports an alternative way to define your route element and errorElement fields as React Components instead of React Elements. You can instead pass a React Component to the new Component and ErrorBoundary fields if you choose. There is no functional difference between the two, so use whichever approach you prefer \ud83d\ude00. You shouldn't be defining both, but if you do Component / ErrorBoundary will \"win\". ( #10045 ) Example JSON Syntax ```jsx // Both of these work the same: const elementRoutes = [{ path: '/', element: , errorElement: , }] const componentRoutes = [{ path: '/', Component: Home, ErrorBoundary: HomeError, }] function Home() { ... } function HomeError() { ... } ``` Example JSX Syntax ```jsx // Both of these work the same: const elementRoutes = createRoutesFromElements( } errorElement={\\ } /> ); const componentRoutes = createRoutesFromElements( ); function Home() { ... } function HomeError() { ... } ``` Introducing Lazy Route Modules! ( #10045 ) In order to keep your application bundles small and support code-splitting of your routes, we've introduced a new lazy() route property. This is an async function that resolves the non-route-matching portions of your route definition ( loader , action , element / Component , errorElement / ErrorBoundary , shouldRevalidate , handle ). Lazy routes are resolved on initial load and during the loading or submitting phase of a navigation or fetcher call. You cannot lazily define route-matching properties ( path , index , children ) since we only execute your lazy route functions after we've matched known routes. Your lazy functions will typically return the result of a dynamic import. jsx // In this example, we assume most folks land on the homepage so we include that // in our critical-path bundle, but then we lazily load modules for /a and /b so // they don't load until the user navigates to those routes let routes = createRoutesFromElements( <Route path=\"/\" element={<Layout />}> <Route index element={<Home />} /> <Route path=\"a\" lazy={() => import(\"./a\")} /> <Route path=\"b\" lazy={() => import(\"./b\")} /> </Route> ); Then in your lazy route modules, export the properties you want defined for the route: ```jsx export async function loader({ request }) { let data = await fetchData(request); return json(data); } // Export a Component directly instead of needing to create a React Element from it export function Component() { let data = useLoaderData(); return ( <> <h1>You made it!</h1> <p>{data}</p> ); } // Export an ErrorBoundary directly instead of needing to create a React Element from it export function ErrorBoundary() { let error = useRouteError(); return isRouteErrorResponse(error) ? ( {error.status} {error.statusText} ) : ( {error.message || error} ); } ``` An example of this in action can be found in the examples/lazy-loading-router-provider directory of the repository. \ud83d\ude4c Huge thanks to @rossipedia for the Initial Proposal and POC Implementation . Updated dependencies: react-router@6.9.0 @remix-run/router@1.4.0 6.8.2 Patch Changes Treat same-origin absolute URLs in <Link to> as external if they are outside of the router basename ( #10135 ) Fix useBlocker to return IDLE_BLOCKER during SSR ( #10046 ) Fix SSR of absolute <Link to> urls ( #10112 ) Properly escape HTML characters in StaticRouterProvider serialized hydration data ( #10068 ) Updated dependencies: @remix-run/router@1.3.3 react-router@6.8.2 6.8.1 Patch Changes Improved absolute url detection in Link component (now also supports mailto: urls) ( #9994 ) Fix partial object (search or hash only) pathnames losing current path value ( #10029 ) Updated dependencies: react-router@6.8.1 @remix-run/router@1.3.2 6.8.0 Minor Changes Support absolute URLs in <Link to> . If the URL is for the current origin, it will still do a client-side navigation. If the URL is for a different origin then it will do a fresh document request for the new origin. ( #9900 ) tsx <Link to=\"https://neworigin.com/some/path\"> {/* Document request */} <Link to=\"//neworigin.com/some/path\"> {/* Document request */} <Link to=\"https://www.currentorigin.com/path\"> {/* Client-side navigation */} Patch Changes Fix bug with search params removal via useSearchParams ( #9969 ) Respect preventScrollReset on <fetcher.Form> ( #9963 ) Fix navigation for hash routers on manual URL changes ( #9980 ) Use pagehide instead of beforeunload for <ScrollRestoration> . This has better cross-browser support, specifically on Mobile Safari. ( #9945 ) Updated dependencies: @remix-run/router@1.3.1 react-router@6.8.0 6.7.0 Minor Changes Add unstable_useBlocker hook for blocking navigations within the app's location origin ( #9709 ) Add unstable_usePrompt hook for blocking navigations within the app's location origin ( #9932 ) Add preventScrollReset prop to <Form> ( #9886 ) Patch Changes Added pass-through event listener options argument to useBeforeUnload ( #9709 ) Streamline jsdom bug workaround in tests ( #9824 ) Updated dependencies: @remix-run/router@1.3.0 react-router@6.7.0 6.6.2 Patch Changes Ensure useId consistency during SSR ( #9805 ) Updated dependencies: react-router@6.6.2 6.6.1 Patch Changes Updated dependencies: @remix-run/router@1.2.1 react-router@6.6.1 6.6.0 Minor Changes Add useBeforeUnload() hook ( #9664 ) Remove unstable_ prefix from createStaticHandler / createStaticRouter / StaticRouterProvider ( #9738 ) Patch Changes Proper hydration of Error objects from StaticRouterProvider ( #9664 ) Support uppercase <Form method> and useSubmit method values ( #9664 ) Skip initial scroll restoration for SSR apps with hydrationData ( #9664 ) Fix <button formmethod> form submission overriddes ( #9664 ) Updated dependencies: @remix-run/router@1.2.0 react-router@6.6.0 6.5.0 Patch Changes Updated dependencies: react-router@6.5.0 @remix-run/router@1.1.0 6.4.5 Patch Changes Updated dependencies: @remix-run/router@1.0.5 react-router@6.4.5 6.4.4 Patch Changes Fix issues with encoded characters in NavLink and descendant <Routes> ( #9589 , #9647 ) Properly serialize/deserialize ErrorResponse instances when using built-in hydration ( #9593 ) Support basename in static data routers ( #9591 ) Updated dependencies: @remix-run/router@1.0.4 react-router@6.4.4 6.4.3 Patch Changes Fix hrefs generated for createHashRouter ( #9409 ) fix encoding/matching issues with special chars ( #9477 , #9496 ) Properly support index routes with a path in useResolvedPath ( #9486 ) Respect relative=path prop on NavLink ( #9453 ) Fix NavLink behavior for root urls ( #9497 ) Updated dependencies: @remix-run/router@1.0.3 react-router@6.4.3 6.4.2 Patch Changes Respect basename in useFormAction ( #9352 ) Enhance console error messages for invalid usage of data router hooks ( #9311 ) If an index route has children, it will result in a runtime error. We have strengthened our RouteObject / RouteProps types to surface the error in TypeScript. ( #9366 ) Updated dependencies: react-router@6.4.2 @remix-run/router@1.0.2 6.4.1 Patch Changes Updated dependencies: react-router@6.4.1 @remix-run/router@1.0.1 6.4.0 Whoa this is a big one! 6.4.0 brings all the data loading and mutation APIs over from Remix. Here's a quick high level overview, but it's recommended you go check out the docs , especially the feature overview and the tutorial . New APIs Create your router with createMemoryRouter / createBrowserRouter / createHashRouter Render your router with <RouterProvider> Load data with a Route loader and mutate with a Route action Handle errors with Route errorElement Submit data with the new <Form> component Perform in-page data loads and mutations with useFetcher() Defer non-critical data with defer and Await Manage scroll position with <ScrollRestoration> New Features Perform path-relative navigations with <Link relative=\"path\"> (#9160) Bug Fixes Path resolution is now trailing slash agnostic (#8861) useLocation returns the scoped location inside a <Routes location> component (#9094) respect the <Link replace> prop if it is defined (#8779) Updated Dependencies react-router@6.4.0","title":"react-router-dom"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#react-router-dom","text":"","title":"react-router-dom"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6270","text":"","title":"6.27.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes","text":"Stabilize unstable_patchRoutesOnNavigation ( #11973 ) Add new PatchRoutesOnNavigationFunctionArgs type for convenience ( #11967 ) Stabilize unstable_dataStrategy ( #11974 ) Stabilize the unstable_flushSync option for navigations and fetchers ( #11989 ) Stabilize the unstable_viewTransition option for navigations and the corresponding unstable_useViewTransitionState hook ( #11989 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes","text":"Fix bug when submitting to the current contextual route (parent route with an index child) when an ?index param already exists from a prior submission ( #12003 ) Fix useFormAction bug - when removing ?index param it would not keep other non-Remix index params ( #12003 ) Fix types for RouteObject within PatchRoutesOnNavigationFunction 's patch method so it doesn't expect agnostic route objects passed to patch ( #11967 ) Updated dependencies: react-router@6.27.0 @remix-run/router@1.20.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6262","text":"","title":"6.26.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_1","text":"Updated dependencies: @remix-run/router@1.19.2 react-router@6.26.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6261","text":"","title":"6.26.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_2","text":"Rename unstable_patchRoutesOnMiss to unstable_patchRoutesOnNavigation to match new behavior ( #11888 ) Updated dependencies: @remix-run/router@1.19.1 react-router@6.26.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6260","text":"","title":"6.26.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_1","text":"Add a new replace(url, init?) alternative to redirect(url, init?) that performs a history.replaceState instead of a history.pushState on client-side navigation redirects ( #11811 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_3","text":"Fix initial hydration behavior when using future.v7_partialHydration along with unstable_patchRoutesOnMiss ( #11838 ) During initial hydration, router.state.matches will now include any partial matches so that we can render ancestor HydrateFallback components Updated dependencies: @remix-run/router@1.19.0 react-router@6.26.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6251","text":"","title":"6.25.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_4","text":"Memoize some RouterProvider internals to reduce unnecessary re-renders ( #11803 ) Updated dependencies: react-router@6.25.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6250","text":"","title":"6.25.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_2","text":"Stabilize future.unstable_skipActionErrorRevalidation as future.v7_skipActionErrorRevalidation ( #11769 ) When this flag is enabled, actions will not automatically trigger a revalidation if they return/throw a Response with a 4xx / 5xx status code You may still opt-into revalidation via shouldRevalidate This also changes shouldRevalidate 's unstable_actionStatus parameter to actionStatus","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_5","text":"Updated dependencies: react-router@6.25.0 @remix-run/router@1.18.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6241","text":"","title":"6.24.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_6","text":"Remove polyfill.io reference from warning message because the domain was sold and has since been determined to serve malware ( #11741 ) See https://sansec.io/research/polyfill-supply-chain-attack Export NavLinkRenderProps type for easier typing of custom NavLink callback ( #11553 ) Updated dependencies: @remix-run/router@1.17.1 react-router@6.24.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6240","text":"","title":"6.24.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_3","text":"Add support for Lazy Route Discovery (a.k.a. Fog of War) ( #11626 ) RFC: https://github.com/remix-run/react-router/discussions/11113 unstable_patchRoutesOnMiss docs: https://reactrouter.com/en/main/routers/create-browser-router","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_7","text":"Fix fetcher.submit types - remove incorrect navigate / fetcherKey / unstable_viewTransition options because they are only relevant for useSubmit ( #11631 ) Allow falsy location.state values passed to <StaticRouter> ( #11495 ) Updated dependencies: react-router@6.24.0 @remix-run/router@1.17.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6231","text":"","title":"6.23.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_8","text":"Check for document existence when checking startViewTransition ( #11544 ) Change the react-router-dom/server import back to react-router-dom instead of index.ts ( #11514 ) Updated dependencies: @remix-run/router@1.16.1 react-router@6.23.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6230","text":"","title":"6.23.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_4","text":"Add a new unstable_dataStrategy configuration option ( #11098 ) This option allows Data Router applications to take control over the approach for executing route loaders and actions The default implementation is today's behavior, to fetch all loaders in parallel, but this option allows users to implement more advanced data flows including Remix single-fetch, middleware/context APIs, automatic loader caching, and more","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_9","text":"Updated dependencies: @remix-run/router@1.16.0 react-router@6.23.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6223","text":"","title":"6.22.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_10","text":"Updated dependencies: @remix-run/router@1.15.3 react-router@6.22.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6222","text":"","title":"6.22.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_11","text":"Updated dependencies: @remix-run/router@1.15.2 react-router@6.22.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6221","text":"","title":"6.22.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_12","text":"Updated dependencies: react-router@6.22.1 @remix-run/router@1.15.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6220","text":"","title":"6.22.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_5","text":"Include a window__reactRouterVersion tag for CWV Report detection ( #11222 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_13","text":"Updated dependencies: @remix-run/router@1.15.0 react-router@6.22.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6213","text":"","title":"6.21.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_14","text":"Fix NavLink isPending when a basename is used ( #11195 ) Remove leftover unstable_ prefix from Blocker / BlockerFunction types ( #11187 ) Updated dependencies: react-router@6.21.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6212","text":"","title":"6.21.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_15","text":"Leverage useId for internal fetcher keys when available ( #11166 ) Updated dependencies: @remix-run/router@1.14.2 react-router@6.21.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6211","text":"","title":"6.21.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_16","text":"Updated dependencies: react-router@6.21.1 @remix-run/router@1.14.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6210","text":"","title":"6.21.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_6","text":"Add a new future.v7_relativeSplatPath flag to implement a breaking bug fix to relative routing when inside a splat route. ( #11087 ) This fix was originally added in #10983 and was later reverted in #11078 because it was determined that a large number of existing applications were relying on the buggy behavior (see #11052 ) The Bug The buggy behavior is that without this flag, the default behavior when resolving relative paths is to ignore any splat ( * ) portion of the current route path. The Background This decision was originally made thinking that it would make the concept of nested different sections of your apps in <Routes> easier if relative routing would replace the current splat: jsx <BrowserRouter> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"dashboard/*\" element={<Dashboard />} /> </Routes> </BrowserRouter> Any paths like /dashboard , /dashboard/team , /dashboard/projects will match the Dashboard route. The dashboard component itself can then render nested <Routes> : ```jsx function Dashboard() { return (","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_17","text":"Updated dependencies: @remix-run/router@1.14.0 react-router@6.21.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6201","text":"","title":"6.20.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_18","text":"Revert the useResolvedPath fix for splat routes due to a large number of applications that were relying on the buggy behavior (see https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329 ). We plan to re-introduce this fix behind a future flag in the next minor version. ( #11078 ) Updated dependencies: react-router@6.20.1 @remix-run/router@1.13.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6200","text":"","title":"6.20.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_7","text":"Export the PathParam type from the public API ( #10719 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_19","text":"Updated dependencies: react-router@6.20.0 @remix-run/router@1.13.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6190","text":"","title":"6.19.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_8","text":"Add unstable_flushSync option to useNavigate / useSumbit / fetcher.load / fetcher.submit to opt-out of React.startTransition and into ReactDOM.flushSync for state updates ( #11005 ) Allow unstable_usePrompt to accept a BlockerFunction in addition to a boolean ( #10991 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_20","text":"Fix issue where a changing fetcher key in a useFetcher that remains mounted wasn't getting picked up ( #11009 ) Fix useFormAction which was incorrectly inheriting the ?index query param from child route action submissions ( #11025 ) Fix NavLink active logic when to location has a trailing slash ( #10734 ) Updated dependencies: react-router@6.19.0 @remix-run/router@1.12.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6180","text":"","title":"6.18.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_9","text":"Add support for manual fetcher key specification via useFetcher({ key: string }) so you can access the same fetcher instance from different components in your application without prop-drilling ( RFC ) ( #10960 ) Fetcher keys are now also exposed on the fetchers returned from useFetchers so that they can be looked up by key Add navigate / fetcherKey params/props to useSumbit / Form to support kicking off a fetcher submission under the hood with an optionally user-specified key ( #10960 ) Invoking a fetcher in this way is ephemeral and stateless If you need to access the state of one of these fetchers, you will need to leverage useFetcher({ key }) to look it up elsewhere","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_21","text":"Adds a fetcher context to RouterProvider that holds completed fetcher data, in preparation for the upcoming future flag that will change the fetcher persistence/cleanup behavior ( #10961 ) Fix the future prop on BrowserRouter , HashRouter and MemoryRouter so that it accepts a Partial<FutureConfig> instead of requiring all flags to be included. ( #10962 ) Updated dependencies: @remix-run/router@1.11.0 react-router@6.18.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6170","text":"","title":"6.17.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_10","text":"Add experimental support for the View Transitions API via document.startViewTransition to enable CSS animated transitions on SPA navigations in your application. ( #10916 ) The simplest approach to enabling a View Transition in your React Router app is via the new <Link unstable_viewTransition> prop. This will cause the navigation DOM update to be wrapped in document.startViewTransition which will enable transitions for the DOM update. Without any additional CSS styles, you'll get a basic cross-fade animation for your page. If you need to apply more fine-grained styles for your animations, you can leverage the unstable_useViewTransitionState hook which will tell you when a transition is in progress and you can use that to apply classes or styles: jsx function ImageLink(to, src, alt) { let isTransitioning = unstable_useViewTransitionState(to); return ( <Link to={to} unstable_viewTransition> <img src={src} alt={alt} style={{ viewTransitionName: isTransitioning ? \"image-expand\" : \"\", }} /> </Link> ); } You can also use the <NavLink unstable_viewTransition> shorthand which will manage the hook usage for you and automatically add a transitioning class to the <a> during the transition: css a.transitioning img { view-transition-name: \"image-expand\"; } jsx <NavLink to={to} unstable_viewTransition> <img src={src} alt={alt} /> </NavLink> For an example usage of View Transitions with React Router, check out our fork of the Astro Records demo. For more information on using the View Transitions API, please refer to the Smooth and simple transitions with the View Transitions API guide from the Google Chrome team. Please note, that because the ViewTransition API is a DOM API, we now export a specific RouterProvider from react-router-dom with this functionality. If you are importing RouterProvider from react-router , then it will not support view transitions. ( #10928","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_22","text":"Log a warning and fail gracefully in ScrollRestoration when sessionStorage is unavailable ( #10848 ) Updated dependencies: @remix-run/router@1.10.0 react-router@6.17.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6160","text":"","title":"6.16.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_11","text":"Updated dependencies: @remix-run/router@1.9.0 react-router@6.16.0","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_23","text":"Properly encode rendered URIs in server rendering to avoid hydration errors ( #10769 )","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6150","text":"","title":"6.15.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_12","text":"Add's a new redirectDocument() function which allows users to specify that a redirect from a loader / action should trigger a document reload (via window.location ) instead of attempting to navigate to the redirected location via React Router ( #10705 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_24","text":"Fixes an edge-case affecting web extensions in Firefox that use URLSearchParams and the useSearchParams hook. ( #10620 ) Do not include hash in useFormAction() for unspecified actions since it cannot be determined on the server and causes hydration issues ( #10758 ) Reorder effects in unstable_usePrompt to avoid throwing an exception if the prompt is unblocked and a navigation is performed synchronously ( #10687 , #10718 ) Updated dependencies: @remix-run/router@1.8.0 react-router@6.15.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6142","text":"","title":"6.14.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_25","text":"Properly decode element id when emulating hash scrolling via <ScrollRestoration> ( #10682 ) Add missing <Form state> prop to populate history.state on submission navigations ( #10630 ) Support proper hydration of Error subclasses such as ReferenceError / TypeError ( #10633 ) Updated dependencies: @remix-run/router@1.7.2 react-router@6.14.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6141","text":"","title":"6.14.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_26","text":"Updated dependencies: react-router@6.14.1 @remix-run/router@1.7.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6140","text":"","title":"6.14.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_13","text":"Add support for application/json and text/plain encodings for useSubmit / fetcher.submit . To reflect these additional types, useNavigation / useFetcher now also contain navigation.json / navigation.text and fetcher.json / fetcher.text which include the json/text submission if applicable ( #10413 ) ```jsx // The default behavior will still serialize as FormData function Component() { let navigation = useNavigation(); let submit = useSubmit(); submit({ key: \"value\" }, { method: \"post\" }); // navigation.formEncType => \"application/x-www-form-urlencoded\" // navigation.formData => FormData instance } async function action({ request }) { // request.headers.get(\"Content-Type\") => \"application/x-www-form-urlencoded\" // await request.formData() => FormData instance } ``` ``js // Opt-into JSON encoding with encType: \"application/json\"` function Component() { let navigation = useNavigation(); let submit = useSubmit(); submit({ key: \"value\" }, { method: \"post\", encType: \"application/json\" }); // navigation.formEncType => \"application/json\" // navigation.json => { key: \"value\" } } async function action({ request }) { // request.headers.get(\"Content-Type\") => \"application/json\" // await request.json() => { key: \"value\" } } ``` ``js // Opt-into text encoding with encType: \"text/plain\"` function Component() { let navigation = useNavigation(); let submit = useSubmit(); submit(\"Text submission\", { method: \"post\", encType: \"text/plain\" }); // navigation.formEncType => \"text/plain\" // navigation.text => \"Text submission\" } async function action({ request }) { // request.headers.get(\"Content-Type\") => \"text/plain\" // await request.text() => \"Text submission\" } ```","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_27","text":"When submitting a form from a submitter element, prefer the built-in new FormData(form, submitter) instead of the previous manual approach in modern browsers (those that support the new submitter parameter) ( #9865 , #10627 ) For browsers that don't support it, we continue to just append the submit button's entry to the end, and we also add rudimentary support for type=\"image\" buttons If developers want full spec-compliant support for legacy browsers, they can use the formdata-submitter-polyfill Call window.history.pushState/replaceState before updating React Router state (instead of after) so that window.location matches useLocation during synchronous React 17 rendering ( #10448 ) \u26a0\ufe0f However, generally apps should not be relying on window.location and should always reference useLocation when possible, as window.location will not be in sync 100% of the time (due to popstate events, concurrent mode, etc.) Fix tsc --skipLibCheck:false issues on React 17 ( #10622 ) Upgrade typescript to 5.1 ( #10581 ) Updated dependencies: react-router@6.14.0 @remix-run/router@1.7.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6130","text":"","title":"6.13.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_14","text":"Move React.startTransition usage behind a future flag to avoid issues with existing incompatible Suspense usages. We recommend folks adopting this flag to be better compatible with React concurrent mode, but if you run into issues you can continue without the use of startTransition until v7. Issues usually boils down to creating net-new promises during the render cycle, so if you run into issues you should either lift your promise creation out of the render cycle or put it behind a useMemo . ( #10596 ) Existing behavior will no longer include React.startTransition : ```jsx {/ ... /} ``` If you wish to enable React.startTransition , pass the future flag to your component: ```jsx {/ ... /} ```","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_28","text":"Work around webpack/terser React.startTransition minification bug in production mode ( #10588 ) Updated dependencies: react-router@6.13.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6121","text":"[!WARNING] Please use version 6.13.0 or later instead of 6.12.1 . This version suffers from a webpack / terser minification issue resulting in invalid minified code in your resulting production bundles which can cause issues in your application. See #10579 for more details.","title":"6.12.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_29","text":"Adjust feature detection of React.startTransition to fix webpack + react 17 compilation error ( #10569 ) Updated dependencies: react-router@6.12.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6120","text":"","title":"6.12.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_15","text":"Wrap internal router state updates with React.startTransition if it exists ( #10438 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_30","text":"Re-throw DOMException ( DataCloneError ) when attempting to perform a PUSH navigation with non-serializable state. ( #10427 ) Updated dependencies: @remix-run/router@1.6.3 react-router@6.12.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6112","text":"","title":"6.11.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_31","text":"Export SetURLSearchParams type ( #10444 ) Updated dependencies: react-router@6.11.2 @remix-run/router@1.6.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6111","text":"","title":"6.11.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_32","text":"Updated dependencies: react-router@6.11.1 @remix-run/router@1.6.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6110","text":"","title":"6.11.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_16","text":"Enable basename support in useFetcher ( #10336 ) If you were previously working around this issue by manually prepending the basename then you will need to remove the manually prepended basename from your fetcher calls ( fetcher.load('/basename/route') -> fetcher.load('/route') )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_33","text":"Fix inadvertent re-renders when using Component instead of element on a route definition ( #10287 ) Fail gracefully on <Link to=\"//\"> and other invalid URL values ( #10367 ) Switched from useSyncExternalStore to useState for internal @remix-run/router router state syncing in <RouterProvider> . We found some subtle bugs where router state updates got propagated before other normal useState updates, which could lead to footguns in useEffect calls. ( #10377 , #10409 ) Add static prop to StaticRouterProvider 's internal Router component ( #10401 ) When using a RouterProvider , useNavigate / useSubmit / fetcher.submit are now stable across location changes, since we can handle relative routing via the @remix-run/router instance and get rid of our dependence on useLocation() . When using BrowserRouter , these hooks remain unstable across location changes because they still rely on useLocation() . ( #10336 ) Updated dependencies: react-router@6.11.0 @remix-run/router@1.6.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#6100","text":"","title":"6.10.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_17","text":"Added support for Future Flags in React Router. The first flag being introduced is future.v7_normalizeFormMethod which will normalize the exposed useNavigation()/useFetcher() formMethod fields as uppercase HTTP methods to align with the fetch() behavior. ( #10207 ) When future.v7_normalizeFormMethod === false (default v6 behavior), useNavigation().formMethod is lowercase useFetcher().formMethod is lowercase When future.v7_normalizeFormMethod === true : useNavigation().formMethod is uppercase useFetcher().formMethod is uppercase","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_34","text":"Fix createStaticHandler to also check for ErrorBoundary on routes in addition to errorElement ( #10190 ) Updated dependencies: @remix-run/router@1.5.0 react-router@6.10.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#690","text":"","title":"6.9.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_18","text":"React Router now supports an alternative way to define your route element and errorElement fields as React Components instead of React Elements. You can instead pass a React Component to the new Component and ErrorBoundary fields if you choose. There is no functional difference between the two, so use whichever approach you prefer \ud83d\ude00. You shouldn't be defining both, but if you do Component / ErrorBoundary will \"win\". ( #10045 ) Example JSON Syntax ```jsx // Both of these work the same: const elementRoutes = [{ path: '/', element: , errorElement: , }] const componentRoutes = [{ path: '/', Component: Home, ErrorBoundary: HomeError, }] function Home() { ... } function HomeError() { ... } ``` Example JSX Syntax ```jsx // Both of these work the same: const elementRoutes = createRoutesFromElements( } errorElement={\\ } /> ); const componentRoutes = createRoutesFromElements( ); function Home() { ... } function HomeError() { ... } ``` Introducing Lazy Route Modules! ( #10045 ) In order to keep your application bundles small and support code-splitting of your routes, we've introduced a new lazy() route property. This is an async function that resolves the non-route-matching portions of your route definition ( loader , action , element / Component , errorElement / ErrorBoundary , shouldRevalidate , handle ). Lazy routes are resolved on initial load and during the loading or submitting phase of a navigation or fetcher call. You cannot lazily define route-matching properties ( path , index , children ) since we only execute your lazy route functions after we've matched known routes. Your lazy functions will typically return the result of a dynamic import. jsx // In this example, we assume most folks land on the homepage so we include that // in our critical-path bundle, but then we lazily load modules for /a and /b so // they don't load until the user navigates to those routes let routes = createRoutesFromElements( <Route path=\"/\" element={<Layout />}> <Route index element={<Home />} /> <Route path=\"a\" lazy={() => import(\"./a\")} /> <Route path=\"b\" lazy={() => import(\"./b\")} /> </Route> ); Then in your lazy route modules, export the properties you want defined for the route: ```jsx export async function loader({ request }) { let data = await fetchData(request); return json(data); } // Export a Component directly instead of needing to create a React Element from it export function Component() { let data = useLoaderData(); return ( <> <h1>You made it!</h1> <p>{data}</p> ); } // Export an ErrorBoundary directly instead of needing to create a React Element from it export function ErrorBoundary() { let error = useRouteError(); return isRouteErrorResponse(error) ? (","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#682","text":"","title":"6.8.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_35","text":"Treat same-origin absolute URLs in <Link to> as external if they are outside of the router basename ( #10135 ) Fix useBlocker to return IDLE_BLOCKER during SSR ( #10046 ) Fix SSR of absolute <Link to> urls ( #10112 ) Properly escape HTML characters in StaticRouterProvider serialized hydration data ( #10068 ) Updated dependencies: @remix-run/router@1.3.3 react-router@6.8.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#681","text":"","title":"6.8.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_36","text":"Improved absolute url detection in Link component (now also supports mailto: urls) ( #9994 ) Fix partial object (search or hash only) pathnames losing current path value ( #10029 ) Updated dependencies: react-router@6.8.1 @remix-run/router@1.3.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#680","text":"","title":"6.8.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_19","text":"Support absolute URLs in <Link to> . If the URL is for the current origin, it will still do a client-side navigation. If the URL is for a different origin then it will do a fresh document request for the new origin. ( #9900 ) tsx <Link to=\"https://neworigin.com/some/path\"> {/* Document request */} <Link to=\"//neworigin.com/some/path\"> {/* Document request */} <Link to=\"https://www.currentorigin.com/path\"> {/* Client-side navigation */}","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_37","text":"Fix bug with search params removal via useSearchParams ( #9969 ) Respect preventScrollReset on <fetcher.Form> ( #9963 ) Fix navigation for hash routers on manual URL changes ( #9980 ) Use pagehide instead of beforeunload for <ScrollRestoration> . This has better cross-browser support, specifically on Mobile Safari. ( #9945 ) Updated dependencies: @remix-run/router@1.3.1 react-router@6.8.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#670","text":"","title":"6.7.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_20","text":"Add unstable_useBlocker hook for blocking navigations within the app's location origin ( #9709 ) Add unstable_usePrompt hook for blocking navigations within the app's location origin ( #9932 ) Add preventScrollReset prop to <Form> ( #9886 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_38","text":"Added pass-through event listener options argument to useBeforeUnload ( #9709 ) Streamline jsdom bug workaround in tests ( #9824 ) Updated dependencies: @remix-run/router@1.3.0 react-router@6.7.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#662","text":"","title":"6.6.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_39","text":"Ensure useId consistency during SSR ( #9805 ) Updated dependencies: react-router@6.6.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#661","text":"","title":"6.6.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_40","text":"Updated dependencies: @remix-run/router@1.2.1 react-router@6.6.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#660","text":"","title":"6.6.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#minor-changes_21","text":"Add useBeforeUnload() hook ( #9664 ) Remove unstable_ prefix from createStaticHandler / createStaticRouter / StaticRouterProvider ( #9738 )","title":"Minor Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_41","text":"Proper hydration of Error objects from StaticRouterProvider ( #9664 ) Support uppercase <Form method> and useSubmit method values ( #9664 ) Skip initial scroll restoration for SSR apps with hydrationData ( #9664 ) Fix <button formmethod> form submission overriddes ( #9664 ) Updated dependencies: @remix-run/router@1.2.0 react-router@6.6.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#650","text":"","title":"6.5.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_42","text":"Updated dependencies: react-router@6.5.0 @remix-run/router@1.1.0","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#645","text":"","title":"6.4.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_43","text":"Updated dependencies: @remix-run/router@1.0.5 react-router@6.4.5","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#644","text":"","title":"6.4.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_44","text":"Fix issues with encoded characters in NavLink and descendant <Routes> ( #9589 , #9647 ) Properly serialize/deserialize ErrorResponse instances when using built-in hydration ( #9593 ) Support basename in static data routers ( #9591 ) Updated dependencies: @remix-run/router@1.0.4 react-router@6.4.4","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#643","text":"","title":"6.4.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_45","text":"Fix hrefs generated for createHashRouter ( #9409 ) fix encoding/matching issues with special chars ( #9477 , #9496 ) Properly support index routes with a path in useResolvedPath ( #9486 ) Respect relative=path prop on NavLink ( #9453 ) Fix NavLink behavior for root urls ( #9497 ) Updated dependencies: @remix-run/router@1.0.3 react-router@6.4.3","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#642","text":"","title":"6.4.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_46","text":"Respect basename in useFormAction ( #9352 ) Enhance console error messages for invalid usage of data router hooks ( #9311 ) If an index route has children, it will result in a runtime error. We have strengthened our RouteObject / RouteProps types to surface the error in TypeScript. ( #9366 ) Updated dependencies: react-router@6.4.2 @remix-run/router@1.0.2","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#641","text":"","title":"6.4.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#patch-changes_47","text":"Updated dependencies: react-router@6.4.1 @remix-run/router@1.0.1","title":"Patch Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/CHANGELOG/#640","text":"Whoa this is a big one! 6.4.0 brings all the data loading and mutation APIs over from Remix. Here's a quick high level overview, but it's recommended you go check out the docs , especially the feature overview and the tutorial . New APIs Create your router with createMemoryRouter / createBrowserRouter / createHashRouter Render your router with <RouterProvider> Load data with a Route loader and mutate with a Route action Handle errors with Route errorElement Submit data with the new <Form> component Perform in-page data loads and mutations with useFetcher() Defer non-critical data with defer and Await Manage scroll position with <ScrollRestoration> New Features Perform path-relative navigations with <Link relative=\"path\"> (#9160) Bug Fixes Path resolution is now trailing slash agnostic (#8861) useLocation returns the scoped location inside a <Routes location> component (#9094) respect the <Link replace> prop if it is defined (#8779) Updated Dependencies react-router@6.4.0","title":"6.4.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/react-router-dom/LICENSE/","text":"MIT License Copyright (c) React Training LLC 2015-2019 Copyright (c) Remix Software Inc. 2020-2021 Copyright (c) Shopify Inc. 2022-2023 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/","text":"reflect.getprototypeof An ES2015 mostly-spec-compliant Reflect.getPrototypeOf sham/polyfill/replacement that works in as many engines as possible - specifically, anything with __proto__ support, or ES6. Built-in types will also work correctly in older engines. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Example var getPrototypeOf = require('reflect.getprototypeof'); var assert = require('assert'); assert.throws(() => getPrototypeOf(true)); assert.throws(() => getPrototypeOf(42)); assert.throws(() => getPrototypeOf('')); assert.equal(getPrototypeOf(/a/g), RegExp.prototype); assert.equal(getPrototypeOf(new Date()), Date.prototype); assert.equal(getPrototypeOf(function () {}), Function.prototype); assert.equal(getPrototypeOf([]), Array.prototype); assert.equal(getPrototypeOf({}), Object.prototype); var getPrototypeOf = require('reflect.getprototypeof'); var assert = require('assert'); /* when Reflect or Reflect.getPrototypeOf is not present */ if (typeof Reflect === 'object') { delete Reflect.getPrototypeOf; } delete globalThis.Reflect; var shimmed = getPrototypeOf.shim(); assert.equal(shimmed, getPrototypeOf.getPolyfill()); assert.throws(() => Reflect.getPrototypeOf(true)); assert.throws(() => Reflect.getPrototypeOf(42)); assert.throws(() => Reflect.getPrototypeOf('')); assert.equal(Reflect.getPrototypeOf(/a/g), RegExp.prototype); assert.equal(Reflect.getPrototypeOf(new Date()), Date.prototype); assert.equal(Reflect.getPrototypeOf(function () {}), Function.prototype); assert.equal(Reflect.getPrototypeOf([]), Array.prototype); assert.equal(Reflect.getPrototypeOf({}), Object.prototype); var getPrototypeOf = require('reflect.getprototypeof'); var assert = require('assert'); /* when Reflect.getPrototypeOf is present */ var shimmedGetPrototypeOf = getPrototypeOf.shim(); assert.equal(shimmedGetPrototypeOf, Reflect.getPrototypeOf); assert.equal(Reflect.getPrototypeOf([]), Array.prototype); Tests Simply clone the repo, npm install , and run npm test","title":"reflect.getprototypeof Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/#reflectgetprototypeof","text":"An ES2015 mostly-spec-compliant Reflect.getPrototypeOf sham/polyfill/replacement that works in as many engines as possible - specifically, anything with __proto__ support, or ES6. Built-in types will also work correctly in older engines. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec .","title":"reflect.getprototypeof"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/#example","text":"var getPrototypeOf = require('reflect.getprototypeof'); var assert = require('assert'); assert.throws(() => getPrototypeOf(true)); assert.throws(() => getPrototypeOf(42)); assert.throws(() => getPrototypeOf('')); assert.equal(getPrototypeOf(/a/g), RegExp.prototype); assert.equal(getPrototypeOf(new Date()), Date.prototype); assert.equal(getPrototypeOf(function () {}), Function.prototype); assert.equal(getPrototypeOf([]), Array.prototype); assert.equal(getPrototypeOf({}), Object.prototype); var getPrototypeOf = require('reflect.getprototypeof'); var assert = require('assert'); /* when Reflect or Reflect.getPrototypeOf is not present */ if (typeof Reflect === 'object') { delete Reflect.getPrototypeOf; } delete globalThis.Reflect; var shimmed = getPrototypeOf.shim(); assert.equal(shimmed, getPrototypeOf.getPolyfill()); assert.throws(() => Reflect.getPrototypeOf(true)); assert.throws(() => Reflect.getPrototypeOf(42)); assert.throws(() => Reflect.getPrototypeOf('')); assert.equal(Reflect.getPrototypeOf(/a/g), RegExp.prototype); assert.equal(Reflect.getPrototypeOf(new Date()), Date.prototype); assert.equal(Reflect.getPrototypeOf(function () {}), Function.prototype); assert.equal(Reflect.getPrototypeOf([]), Array.prototype); assert.equal(Reflect.getPrototypeOf({}), Object.prototype); var getPrototypeOf = require('reflect.getprototypeof'); var assert = require('assert'); /* when Reflect.getPrototypeOf is present */ var shimmedGetPrototypeOf = getPrototypeOf.shim(); assert.equal(shimmedGetPrototypeOf, Reflect.getPrototypeOf); assert.equal(Reflect.getPrototypeOf([]), Array.prototype);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.6 - 2024-03-16 Commits [meta] remove useless ESM cc16ab1 [Deps] update call-bind , es-abstract , es-errors , get-intrinsic ece7445 [Dev Deps] update tape a894b62 v1.0.5 - 2024-02-04 Commits [Refactor] use es-errors where possible, so things that only need those do not need get-intrinsic 08735cb [Deps] update call-bind , define-properties , es-abstract , get-intrinsic b5700ec [Dev Deps] update aud , npmignore , tape f80fcbb v1.0.4 - 2023-08-30 Commits [Deps] update define-properties , es-abstract , get-intrinsic 325044f [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 56b9555 v1.0.3 - 2022-11-07 Commits [actions] reuse common workflows 0a76d97 [meta] use npmignore to autogenerate an npmignore file c4861b4 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape e5352ab [actions] update codecov uploader dbcedf8 [Deps] update define-properties , es-abstract , globalthis , which-builtin-type 84fbfab [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 75dc8a3 [actions] update rebase action to use reusable workflow 49463a7 [Dev Deps] update @es-shims/api adf75cb v1.0.2 - 2021-10-03 Commits [Deps] update es-abstract 947bbb1 [actions] update workflows [ af4708d`](https://github.com/es-shims/Reflect.getPrototypeOf/commit/af4708d75212ee5781b549b1ff86f903fc659e3f) v1.0.1 - 2021-09-08 Commits [actions] use node/install instead of node/run ; use codecov action 86f4aa3 [Refactor] remove unnecessary ESM files 162e4bf [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 5515a8d [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape db05b43 [readme] add github actions/codecov badges d9ea295 [Deps] update es-abstract , which-builtin-type 1753dee [Dev Deps] update eslint , tape 4bce2db [Deps] update es-abstract , get-intrinsic 1dca685 [meta] use prepublishOnly script for npm 7+ 1108273 [actions] update workflows 8674d66 [Deps] update es-abstract 4e4fdcf v1.0.0 - 2021-01-12 Commits es-shims initial commit ffd0b98 Initial commit 64c868f [meta] add Automatic Rebase and Require Allow Edits workflows 6a006b4 [meta] Only apps should have lockfiles d1a29b5 [Deps] update call-bind bfcc1a0","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v106-2024-03-16","text":"","title":"v1.0.6 - 2024-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits","text":"[meta] remove useless ESM cc16ab1 [Deps] update call-bind , es-abstract , es-errors , get-intrinsic ece7445 [Dev Deps] update tape a894b62","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v105-2024-02-04","text":"","title":"v1.0.5 - 2024-02-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits_1","text":"[Refactor] use es-errors where possible, so things that only need those do not need get-intrinsic 08735cb [Deps] update call-bind , define-properties , es-abstract , get-intrinsic b5700ec [Dev Deps] update aud , npmignore , tape f80fcbb","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v104-2023-08-30","text":"","title":"v1.0.4 - 2023-08-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits_2","text":"[Deps] update define-properties , es-abstract , get-intrinsic 325044f [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 56b9555","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v103-2022-11-07","text":"","title":"v1.0.3 - 2022-11-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits_3","text":"[actions] reuse common workflows 0a76d97 [meta] use npmignore to autogenerate an npmignore file c4861b4 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape e5352ab [actions] update codecov uploader dbcedf8 [Deps] update define-properties , es-abstract , globalthis , which-builtin-type 84fbfab [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 75dc8a3 [actions] update rebase action to use reusable workflow 49463a7 [Dev Deps] update @es-shims/api adf75cb","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v102-2021-10-03","text":"","title":"v1.0.2 - 2021-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits_4","text":"[Deps] update es-abstract 947bbb1 [actions] update workflows [ af4708d`](https://github.com/es-shims/Reflect.getPrototypeOf/commit/af4708d75212ee5781b549b1ff86f903fc659e3f)","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v101-2021-09-08","text":"","title":"v1.0.1 - 2021-09-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits_5","text":"[actions] use node/install instead of node/run ; use codecov action 86f4aa3 [Refactor] remove unnecessary ESM files 162e4bf [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 5515a8d [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape db05b43 [readme] add github actions/codecov badges d9ea295 [Deps] update es-abstract , which-builtin-type 1753dee [Dev Deps] update eslint , tape 4bce2db [Deps] update es-abstract , get-intrinsic 1dca685 [meta] use prepublishOnly script for npm 7+ 1108273 [actions] update workflows 8674d66 [Deps] update es-abstract 4e4fdcf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#v100-2021-01-12","text":"","title":"v1.0.0 - 2021-01-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/reflect.getprototypeof/CHANGELOG/#commits_6","text":"es-shims initial commit ffd0b98 Initial commit 64c868f [meta] add Automatic Rebase and Require Allow Edits workflows 6a006b4 [meta] Only apps should have lockfiles d1a29b5 [Deps] update call-bind bfcc1a0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/","text":"RegExp.prototype.flags An ES6 spec-compliant RegExp.prototype.flags shim. Invoke its \"shim\" method to shim RegExp.prototype.flags if it is unavailable. Note : RegExp#flags requires a true ES5 environment - specifically, one with ES5 getters. This package implements the es-shim API interface. It works in an ES5-supported environment and complies with the spec . Most common usage: var flags = require('regexp.prototype.flags'); var assert = require('assert'); assert(flags(/a/) === ''); assert(flags(new RegExp('a')) === ''); assert(flags(/a/mig) === 'gim'); assert(flags(new RegExp('a', 'mig')) === 'gim'); if (!RegExp.prototype.flags) { flags.shim(); } assert(flags(/a/) === /a/.flags); assert(flags(new RegExp('a')) === new RegExp('a').flags); assert(flags(/a/mig) === /a/mig.flags); assert(flags(new RegExp('a', 'mig')) === new RegExp('a', 'mig').flags); Tests Simply clone the repo, npm install , and run npm test","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.5.3 - 2024-10-03 Fixed [Fix] avoid unnecessary polyfill #31 Commits [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape 9e8bc20 [Dev Deps] update @es-shims/api , auto-changelog , es-value-fixtures , tape c32be8e [readme] fix typos 195c32e [Deps] update call-bind , set-function-name 207517f [Dev Deps] update available-regexp-flags , tape b3854f7 [Tests] replace aud with npm audit d3ee951 [Dev Deps] update hasown 9e407c4 [Dev Deps] add missing peer dep 0199bfd v1.5.2 - 2024-02-11 Commits [Tests] increase coverage c692c88 [Dev Deps] use hasown instead of has fb5b350 [Dev Deps] update aud , hasown , npmignore , tape fd0ddd9 [Deps] update call-bind , define-properties , set-function-name ca53f66 [Dev Deps] update object-inspect , tape 4491680 [Refactor] use es-errors 1d03d22 [Fix] properly check for a non-object receiver 024d442 [Deps] update call-bind f222ce0 v1.5.1 - 2023-09-12 Commits [Refactor] use set-function-name 1384147 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , available-regexp-flags , tape 07bf9a2 [Dev Deps] add missing npmignore dep 8ca9dfe v1.5.0 - 2023-04-18 Commits [meta] use npmignore to autogenerate an npmignore file f7438ad [New] add unicodeSets / v flag f922170 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , available-regexp-flags , object-inspect , tape 1203078 [actions] update rebase action to use reusable workflow c562ea2 [Dev Deps] update aud , object-inspect , tape f3ae811 [Deps] update define-properties , functions-have-names 2d0476e [Tests] use for-each instead of foreach d9f30da [Deps] update define-properties 81c1c20 v1.4.3 - 2022-04-14 Commits [Fix] when shimmed, name must be get flags fcefd00 v1.4.2 - 2022-04-12 Commits [Fix] ensure hasIndices is patched properly, and getter order is correct a1af45a [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , tape 24f5a0c v1.4.1 - 2022-01-13 Commits [Fix] polyfill : do not throw in a descriptorless environment e2d24e7 v1.4.0 - 2022-01-13 Commits [Tests] use available-regexp-flags 95af246 [New] add hasIndices / d flag 89959ca v1.3.2 - 2022-01-13 Commits [actions] reuse common workflows 6665b5d [actions] use node/install instead of node/run ; use codecov action babce94 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , object-inspect , safe-publish-latest , tape 52132d9 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , object-inspect , tape c16687c [actions] update codecov uploader 0a3c904 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 3fce7f2 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 75ca498 [actions] update workflows 300f321 [meta] better eccheck command 5f735ab [Dev Deps] update eslint , tape 3059637 [actions] update workflows [ dbd8ab4`](https://github.com/es-shims/RegExp.prototype.flags/commit/dbd8ab49fa2196dd74791107825c43e4481cdfd2) [meta] use prepublishOnly script for npm 7+ 5cc8652 [Fix] use polyfill, not implementation, in main export 15ab4b8 [meta] remove audit-level config, which breaks npm 7 installs 1cb98ae v1.3.1 - 2021-01-15 Commits [Tests] run nyc on all tests; use tape runner; add full es-shims test suite 047a1e8 [Tests] migrate tests to Github Actions e4e391f [meta] use auto-changelog for changelog afbcd06 [actions] add Require Allow Edits workflow 0db5d50 [meta] do not publish github action workflow files 53f2902 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud 05f2a85 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 2a197b8 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add safe-publish-latest e40bd37 [Refactor] use call-bind instead of es-abstract e6eac90 [Deps] update es-abstract f198075 [actions] switch Automatic Rebase workflow to pull_request_target event 2d21727 [Deps] update es-abstract 7e7ddc6 v1.3.0 - 2019-12-14 Commits [Tests] remove jscs 4a09ab4 [Tests] use shared travis-ci configs 8afa6a9 [Dev Deps] update eslint , @ljharb/eslint-config , covert , has , tape 13a9fc9 [Refactor] use callBind helper from es-abstract c3a3727 [actions] add automatic rebasing / merge commit blocking 51e3f93 [Tests] use npx aud instead of nsp or npm audit with hoops 7e1ee50 [meta] add funding field c99cbec [New] add auto entry point 1e53e85 [Tests] use eclint instead of editorconfig-tools 8600bfe [Deps] update define-properties ad221fa v1.2.0 - 2017-10-24 Commits [Tests] up to node v8.8 , v7.10 , v6.11 , v4.8 ; improve matrix; use nvm install-latest-npm so new npm doesn\u2019t break old node 5a9653d [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config ; add has 556de86 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 726772c [New] add support for dotAll regex flag. fcbd64f [Dev Deps] update eslint , jscs , nsp , tape , @ljharb/eslint-config , @es-shims/api 0272934 [Dev Deps] update jscs , nsp , eslint e4cd264 [Dev Deps] update jscs , nsp , eslint , @es-shims/api baf5169 [Dev Deps] update tape , nsp , eslint , @ljharb/eslint-config 97cea15 [Dev Deps] update tape , discs , eslint , @ljharb/eslint-config b6872f4 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 14702cc [Dev Deps] update jscs , @es-shims/api cd060a6 [Tests] up to node v6.2 , v5.11 14638bd [Tests] up to io.js v3.3 , node v4.1 b0a5ffb [Tests] npm run silently 35804d4 [Tests] up to node v5.9 , v4.4 e0fe80d [Tests] up to node v5.7 , v4.3 9739c42 [Dev Deps] update jscs 4aa1699 [Dev Deps] update tape , jscs , nsp , @ljharb/eslint-config 8bc5e6b [Tests] fix npm upgrades on older nodes ae00bb9 Only apps should have lockfiles. 6d14965 [Tests] use pretest/posttest for better organization 0520cfd [Tests] up to node v5.5 810f62b [Tests] on node v5.3 f839662 [Dev Deps] update eslint , @ljharb/eslint-config 78ecaa5 [Tests] up to node v5.2 c04d762 [Tests] up to node v5.0 7c0d5b9 [Tests] on node v5.10 40ddafd [Deps] update define-properties 98ea89d v1.1.1 - 2015-08-16 Commits [Fix] cover the case where there is no descriptor on the prototype 67014c3 v1.1.0 - 2015-08-16 Commits Update jscs , eslint ; use my personal shared eslint config. 37ca379 Update eslint , tape , editorconfig-tools , nsp cb92d6e Implement the es-shim API . 15eb821 Refactoring to reduce complexity. aeb4785 Move implementation to implementation.js a698925 Update eslint , jscs 277a4a1 Update nsp , eslint c9f3866 Update tape , eslint a08795b Make some things a bit more robust. 450abb4 Update eslint 25d898f Test on latest two io.js versions. 2e17ca3 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 4a2a548 Update eslint 64df4e0 Update eslint ac05ae5 Clean up supportsDescriptors check. e44d0de [Dev Deps] Update jscs 8741758 Update tape , jscs , nsp , eslint db1f658 Test on io.js v2.3 18c948f Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. c37e79f Update tape , jscs , eslint 4b652bf [Dev Deps] Update tape , eslint 29d4ac0 Test up to io.js v2.1 9f9e342 Update covert , jscs c98f3b4 Update jscs 9e5e220 [Dev Deps] update tape cdd3af2 [Dev Deps] update tape d42d0bf Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. a5e7453 Update tape 2a675ec Test on io.js v2.5 448cbdb Test on io.js v2.4 948e511 Test on io.js v2.2 4793278 Update eslint 0f463da Update eslint 5a16967 Test on io.js v3.0 7ba8706 Test on iojs-v1.2 b521e09 v1.0.1 - 2014-12-13 Merged Match the spec properly: throw when not an object; make getter generic. #3 Fixed Match the spec properly #1 Commits Speed up the \u201cis object\u201d check in case of null or undefined 77137f9 v1.0.0 - 2014-12-10 Commits Adding dotfiles 313812e Tests 625a042 Add package.json 8b98257 Adding the README 884798b Implementation. 4186cc9 Adding LICENSE and CHANGELOG f87fa81 Fixing README URLs b821703 Clean up dependencies; update tape , jscs , nsp 0e13fc1 Initial commit. 8a9e35e","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v153-2024-10-03","text":"","title":"v1.5.3 - 2024-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#fixed","text":"[Fix] avoid unnecessary polyfill #31","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits","text":"[Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , object-inspect , tape 9e8bc20 [Dev Deps] update @es-shims/api , auto-changelog , es-value-fixtures , tape c32be8e [readme] fix typos 195c32e [Deps] update call-bind , set-function-name 207517f [Dev Deps] update available-regexp-flags , tape b3854f7 [Tests] replace aud with npm audit d3ee951 [Dev Deps] update hasown 9e407c4 [Dev Deps] add missing peer dep 0199bfd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v152-2024-02-11","text":"","title":"v1.5.2 - 2024-02-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_1","text":"[Tests] increase coverage c692c88 [Dev Deps] use hasown instead of has fb5b350 [Dev Deps] update aud , hasown , npmignore , tape fd0ddd9 [Deps] update call-bind , define-properties , set-function-name ca53f66 [Dev Deps] update object-inspect , tape 4491680 [Refactor] use es-errors 1d03d22 [Fix] properly check for a non-object receiver 024d442 [Deps] update call-bind f222ce0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v151-2023-09-12","text":"","title":"v1.5.1 - 2023-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_2","text":"[Refactor] use set-function-name 1384147 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , available-regexp-flags , tape 07bf9a2 [Dev Deps] add missing npmignore dep 8ca9dfe","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v150-2023-04-18","text":"","title":"v1.5.0 - 2023-04-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_3","text":"[meta] use npmignore to autogenerate an npmignore file f7438ad [New] add unicodeSets / v flag f922170 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , available-regexp-flags , object-inspect , tape 1203078 [actions] update rebase action to use reusable workflow c562ea2 [Dev Deps] update aud , object-inspect , tape f3ae811 [Deps] update define-properties , functions-have-names 2d0476e [Tests] use for-each instead of foreach d9f30da [Deps] update define-properties 81c1c20","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v143-2022-04-14","text":"","title":"v1.4.3 - 2022-04-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_4","text":"[Fix] when shimmed, name must be get flags fcefd00","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v142-2022-04-12","text":"","title":"v1.4.2 - 2022-04-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_5","text":"[Fix] ensure hasIndices is patched properly, and getter order is correct a1af45a [Dev Deps] update eslint , @ljharb/eslint-config , auto-changelog , tape 24f5a0c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v141-2022-01-13","text":"","title":"v1.4.1 - 2022-01-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_6","text":"[Fix] polyfill : do not throw in a descriptorless environment e2d24e7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v140-2022-01-13","text":"","title":"v1.4.0 - 2022-01-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_7","text":"[Tests] use available-regexp-flags 95af246 [New] add hasIndices / d flag 89959ca","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v132-2022-01-13","text":"","title":"v1.3.2 - 2022-01-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_8","text":"[actions] reuse common workflows 6665b5d [actions] use node/install instead of node/run ; use codecov action babce94 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , object-inspect , safe-publish-latest , tape 52132d9 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , object-inspect , tape c16687c [actions] update codecov uploader 0a3c904 [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , tape 3fce7f2 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 75ca498 [actions] update workflows 300f321 [meta] better eccheck command 5f735ab [Dev Deps] update eslint , tape 3059637 [actions] update workflows [ dbd8ab4`](https://github.com/es-shims/RegExp.prototype.flags/commit/dbd8ab49fa2196dd74791107825c43e4481cdfd2) [meta] use prepublishOnly script for npm 7+ 5cc8652 [Fix] use polyfill, not implementation, in main export 15ab4b8 [meta] remove audit-level config, which breaks npm 7 installs 1cb98ae","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v131-2021-01-15","text":"","title":"v1.3.1 - 2021-01-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_9","text":"[Tests] run nyc on all tests; use tape runner; add full es-shims test suite 047a1e8 [Tests] migrate tests to Github Actions e4e391f [meta] use auto-changelog for changelog afbcd06 [actions] add Require Allow Edits workflow 0db5d50 [meta] do not publish github action workflow files 53f2902 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add aud 05f2a85 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape 2a197b8 [Dev Deps] update eslint , @ljharb/eslint-config , tape ; add safe-publish-latest e40bd37 [Refactor] use call-bind instead of es-abstract e6eac90 [Deps] update es-abstract f198075 [actions] switch Automatic Rebase workflow to pull_request_target event 2d21727 [Deps] update es-abstract 7e7ddc6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v130-2019-12-14","text":"","title":"v1.3.0 - 2019-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_10","text":"[Tests] remove jscs 4a09ab4 [Tests] use shared travis-ci configs 8afa6a9 [Dev Deps] update eslint , @ljharb/eslint-config , covert , has , tape 13a9fc9 [Refactor] use callBind helper from es-abstract c3a3727 [actions] add automatic rebasing / merge commit blocking 51e3f93 [Tests] use npx aud instead of nsp or npm audit with hoops 7e1ee50 [meta] add funding field c99cbec [New] add auto entry point 1e53e85 [Tests] use eclint instead of editorconfig-tools 8600bfe [Deps] update define-properties ad221fa","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v120-2017-10-24","text":"","title":"v1.2.0 - 2017-10-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_11","text":"[Tests] up to node v8.8 , v7.10 , v6.11 , v4.8 ; improve matrix; use nvm install-latest-npm so new npm doesn\u2019t break old node 5a9653d [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config ; add has 556de86 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 726772c [New] add support for dotAll regex flag. fcbd64f [Dev Deps] update eslint , jscs , nsp , tape , @ljharb/eslint-config , @es-shims/api 0272934 [Dev Deps] update jscs , nsp , eslint e4cd264 [Dev Deps] update jscs , nsp , eslint , @es-shims/api baf5169 [Dev Deps] update tape , nsp , eslint , @ljharb/eslint-config 97cea15 [Dev Deps] update tape , discs , eslint , @ljharb/eslint-config b6872f4 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 14702cc [Dev Deps] update jscs , @es-shims/api cd060a6 [Tests] up to node v6.2 , v5.11 14638bd [Tests] up to io.js v3.3 , node v4.1 b0a5ffb [Tests] npm run silently 35804d4 [Tests] up to node v5.9 , v4.4 e0fe80d [Tests] up to node v5.7 , v4.3 9739c42 [Dev Deps] update jscs 4aa1699 [Dev Deps] update tape , jscs , nsp , @ljharb/eslint-config 8bc5e6b [Tests] fix npm upgrades on older nodes ae00bb9 Only apps should have lockfiles. 6d14965 [Tests] use pretest/posttest for better organization 0520cfd [Tests] up to node v5.5 810f62b [Tests] on node v5.3 f839662 [Dev Deps] update eslint , @ljharb/eslint-config 78ecaa5 [Tests] up to node v5.2 c04d762 [Tests] up to node v5.0 7c0d5b9 [Tests] on node v5.10 40ddafd [Deps] update define-properties 98ea89d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v111-2015-08-16","text":"","title":"v1.1.1 - 2015-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_12","text":"[Fix] cover the case where there is no descriptor on the prototype 67014c3","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v110-2015-08-16","text":"","title":"v1.1.0 - 2015-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_13","text":"Update jscs , eslint ; use my personal shared eslint config. 37ca379 Update eslint , tape , editorconfig-tools , nsp cb92d6e Implement the es-shim API . 15eb821 Refactoring to reduce complexity. aeb4785 Move implementation to implementation.js a698925 Update eslint , jscs 277a4a1 Update nsp , eslint c9f3866 Update tape , eslint a08795b Make some things a bit more robust. 450abb4 Update eslint 25d898f Test on latest two io.js versions. 2e17ca3 All grade A-supported node / iojs versions now ship with an npm that understands ^ . 4a2a548 Update eslint 64df4e0 Update eslint ac05ae5 Clean up supportsDescriptors check. e44d0de [Dev Deps] Update jscs 8741758 Update tape , jscs , nsp , eslint db1f658 Test on io.js v2.3 18c948f Run travis-ci tests on iojs and node v0.12; speed up builds; allow 0.8 failures. c37e79f Update tape , jscs , eslint 4b652bf [Dev Deps] Update tape , eslint 29d4ac0 Test up to io.js v2.1 9f9e342 Update covert , jscs c98f3b4 Update jscs 9e5e220 [Dev Deps] update tape cdd3af2 [Dev Deps] update tape d42d0bf Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. a5e7453 Update tape 2a675ec Test on io.js v2.5 448cbdb Test on io.js v2.4 948e511 Test on io.js v2.2 4793278 Update eslint 0f463da Update eslint 5a16967 Test on io.js v3.0 7ba8706 Test on iojs-v1.2 b521e09","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v101-2014-12-13","text":"","title":"v1.0.1 - 2014-12-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#merged","text":"Match the spec properly: throw when not an object; make getter generic. #3","title":"Merged"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#fixed_1","text":"Match the spec properly #1","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_14","text":"Speed up the \u201cis object\u201d check in case of null or undefined 77137f9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#v100-2014-12-10","text":"","title":"v1.0.0 - 2014-12-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/regexp.prototype.flags/CHANGELOG/#commits_15","text":"Adding dotfiles 313812e Tests 625a042 Add package.json 8b98257 Adding the README 884798b Implementation. 4186cc9 Adding LICENSE and CHANGELOG f87fa81 Fixing README URLs b821703 Clean up dependencies; update tape , jscs , nsp 0e13fc1 Initial commit. 8a9e35e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/SECURITY/","text":"Security Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/SECURITY/#security","text":"Please email @ljharb or see https://tidelift.com/security if you have a potential security vulnerability to report.","title":"Security"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/","text":"resolve implements the node require.resolve() algorithm such that you can require.resolve() on behalf of a file asynchronously and synchronously example asynchronously resolve: var resolve = require('resolve/async'); // or, require('resolve') resolve('tap', { basedir: __dirname }, function (err, res) { if (err) console.error(err); else console.log(res); }); $ node example/async.js /home/substack/projects/node-resolve/node_modules/tap/lib/main.js synchronously resolve: var resolve = require('resolve/sync'); // or, `require('resolve').sync var res = resolve('tap', { basedir: __dirname }); console.log(res); $ node example/sync.js /home/substack/projects/node-resolve/node_modules/tap/lib/main.js methods var resolve = require('resolve'); var async = require('resolve/async'); var sync = require('resolve/sync'); For both the synchronous and asynchronous methods, errors may have any of the following err.code values: MODULE_NOT_FOUND : the given path string ( id ) could not be resolved to a module INVALID_BASEDIR : the specified opts.basedir doesn't exist, or is not a directory INVALID_PACKAGE_MAIN : a package.json was encountered with an invalid main property (eg. not a string) resolve(id, opts={}, cb) Asynchronously resolve the module path string id into cb(err, res [, pkg]) , where pkg (if defined) is the data from package.json . options are: opts.basedir - directory to begin resolving from opts.package - package.json data applicable to the module being loaded opts.extensions - array of file extensions to search in order opts.includeCoreModules - set to false to exclude node core modules (e.g. fs ) from the search opts.readFile - how to read files asynchronously opts.isFile - function to asynchronously test whether a file exists opts.isDirectory - function to asynchronously test whether a file exists and is a directory opts.realpath - function to asynchronously resolve a potential symlink to its real path opts.readPackage(readFile, pkgfile, cb) - function to asynchronously read and parse a package.json file readFile - the passed opts.readFile or fs.readFile if not specified pkgfile - path to package.json cb - callback. a SyntaxError error argument will be ignored, all other error arguments will be treated as an error. opts.packageFilter(pkg, pkgfile, dir) - transform the parsed package.json contents before looking at the \"main\" field pkg - package data pkgfile - path to package.json dir - directory that contains package.json opts.pathFilter(pkg, path, relativePath) - transform a path within a package pkg - package data path - the path being resolved relativePath - the path relative from the package.json location returns - a relative path that will be joined from the package.json location opts.paths - require.paths array to use if nothing is found on the normal node_modules recursive walk (probably don't use this) For advanced users, paths can also be a opts.paths(request, start, opts) function * request - the import specifier being resolved * start - lookup path * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard node_modules resolution * opts - the resolution options opts.packageIterator(request, start, opts) - return the list of candidate paths where the packages sources may be found (probably don't use this) request - the import specifier being resolved start - lookup path getPackageCandidates - a thunk (no-argument function) that returns the paths using standard node_modules resolution opts - the resolution options opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: \"node_modules\" opts.preserveSymlinks - if true, doesn't resolve basedir to real path before resolving. This is the way Node resolves dependencies when executed with the --preserve-symlinks flag. default opts values: { paths: [], basedir: __dirname, extensions: ['.js'], includeCoreModules: true, readFile: fs.readFile, isFile: function isFile(file, cb) { fs.stat(file, function (err, stat) { if (!err) { return cb(null, stat.isFile() || stat.isFIFO()); } if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false); return cb(err); }); }, isDirectory: function isDirectory(dir, cb) { fs.stat(dir, function (err, stat) { if (!err) { return cb(null, stat.isDirectory()); } if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false); return cb(err); }); }, realpath: function realpath(file, cb) { var realpath = typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath; realpath(file, function (realPathErr, realPath) { if (realPathErr && realPathErr.code !== 'ENOENT') cb(realPathErr); else cb(null, realPathErr ? file : realPath); }); }, readPackage: function defaultReadPackage(readFile, pkgfile, cb) { readFile(pkgfile, function (readFileErr, body) { if (readFileErr) cb(readFileErr); else { try { var pkg = JSON.parse(body); cb(null, pkg); } catch (jsonErr) { cb(jsonErr); } } }); }, moduleDirectory: 'node_modules', preserveSymlinks: false } resolve.sync(id, opts) Synchronously resolve the module path string id , returning the result and throwing an error when id can't be resolved. options are: opts.basedir - directory to begin resolving from opts.extensions - array of file extensions to search in order opts.includeCoreModules - set to false to exclude node core modules (e.g. fs ) from the search opts.readFileSync - how to read files synchronously opts.isFile - function to synchronously test whether a file exists opts.isDirectory - function to synchronously test whether a file exists and is a directory opts.realpathSync - function to synchronously resolve a potential symlink to its real path opts.readPackageSync(readFileSync, pkgfile) - function to synchronously read and parse a package.json file. a thrown SyntaxError will be ignored, all other exceptions will propagate. readFileSync - the passed opts.readFileSync or fs.readFileSync if not specified pkgfile - path to package.json opts.packageFilter(pkg, pkgfile, dir) - transform the parsed package.json contents before looking at the \"main\" field pkg - package data pkgfile - path to package.json dir - directory that contains package.json opts.pathFilter(pkg, path, relativePath) - transform a path within a package pkg - package data path - the path being resolved relativePath - the path relative from the package.json location returns - a relative path that will be joined from the package.json location opts.paths - require.paths array to use if nothing is found on the normal node_modules recursive walk (probably don't use this) For advanced users, paths can also be a opts.paths(request, start, opts) function * request - the import specifier being resolved * start - lookup path * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard node_modules resolution * opts - the resolution options opts.packageIterator(request, start, opts) - return the list of candidate paths where the packages sources may be found (probably don't use this) request - the import specifier being resolved start - lookup path getPackageCandidates - a thunk (no-argument function) that returns the paths using standard node_modules resolution opts - the resolution options opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: \"node_modules\" opts.preserveSymlinks - if true, doesn't resolve basedir to real path before resolving. This is the way Node resolves dependencies when executed with the --preserve-symlinks flag. default opts values: { paths: [], basedir: __dirname, extensions: ['.js'], includeCoreModules: true, readFileSync: fs.readFileSync, isFile: function isFile(file) { try { var stat = fs.statSync(file); } catch (e) { if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false; throw e; } return stat.isFile() || stat.isFIFO(); }, isDirectory: function isDirectory(dir) { try { var stat = fs.statSync(dir); } catch (e) { if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false; throw e; } return stat.isDirectory(); }, realpathSync: function realpathSync(file) { try { var realpath = typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync; return realpath(file); } catch (realPathErr) { if (realPathErr.code !== 'ENOENT') { throw realPathErr; } } return file; }, readPackageSync: function defaultReadPackageSync(readFileSync, pkgfile) { return JSON.parse(readFileSync(pkgfile)); }, moduleDirectory: 'node_modules', preserveSymlinks: false } install With npm do: npm install resolve license MIT","title":"resolve Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#resolve","text":"implements the node require.resolve() algorithm such that you can require.resolve() on behalf of a file asynchronously and synchronously","title":"resolve"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#example","text":"asynchronously resolve: var resolve = require('resolve/async'); // or, require('resolve') resolve('tap', { basedir: __dirname }, function (err, res) { if (err) console.error(err); else console.log(res); }); $ node example/async.js /home/substack/projects/node-resolve/node_modules/tap/lib/main.js synchronously resolve: var resolve = require('resolve/sync'); // or, `require('resolve').sync var res = resolve('tap', { basedir: __dirname }); console.log(res); $ node example/sync.js /home/substack/projects/node-resolve/node_modules/tap/lib/main.js","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#methods","text":"var resolve = require('resolve'); var async = require('resolve/async'); var sync = require('resolve/sync'); For both the synchronous and asynchronous methods, errors may have any of the following err.code values: MODULE_NOT_FOUND : the given path string ( id ) could not be resolved to a module INVALID_BASEDIR : the specified opts.basedir doesn't exist, or is not a directory INVALID_PACKAGE_MAIN : a package.json was encountered with an invalid main property (eg. not a string)","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#resolveid-opts-cb","text":"Asynchronously resolve the module path string id into cb(err, res [, pkg]) , where pkg (if defined) is the data from package.json . options are: opts.basedir - directory to begin resolving from opts.package - package.json data applicable to the module being loaded opts.extensions - array of file extensions to search in order opts.includeCoreModules - set to false to exclude node core modules (e.g. fs ) from the search opts.readFile - how to read files asynchronously opts.isFile - function to asynchronously test whether a file exists opts.isDirectory - function to asynchronously test whether a file exists and is a directory opts.realpath - function to asynchronously resolve a potential symlink to its real path opts.readPackage(readFile, pkgfile, cb) - function to asynchronously read and parse a package.json file readFile - the passed opts.readFile or fs.readFile if not specified pkgfile - path to package.json cb - callback. a SyntaxError error argument will be ignored, all other error arguments will be treated as an error. opts.packageFilter(pkg, pkgfile, dir) - transform the parsed package.json contents before looking at the \"main\" field pkg - package data pkgfile - path to package.json dir - directory that contains package.json opts.pathFilter(pkg, path, relativePath) - transform a path within a package pkg - package data path - the path being resolved relativePath - the path relative from the package.json location returns - a relative path that will be joined from the package.json location opts.paths - require.paths array to use if nothing is found on the normal node_modules recursive walk (probably don't use this) For advanced users, paths can also be a opts.paths(request, start, opts) function * request - the import specifier being resolved * start - lookup path * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard node_modules resolution * opts - the resolution options opts.packageIterator(request, start, opts) - return the list of candidate paths where the packages sources may be found (probably don't use this) request - the import specifier being resolved start - lookup path getPackageCandidates - a thunk (no-argument function) that returns the paths using standard node_modules resolution opts - the resolution options opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: \"node_modules\" opts.preserveSymlinks - if true, doesn't resolve basedir to real path before resolving. This is the way Node resolves dependencies when executed with the --preserve-symlinks flag. default opts values: { paths: [], basedir: __dirname, extensions: ['.js'], includeCoreModules: true, readFile: fs.readFile, isFile: function isFile(file, cb) { fs.stat(file, function (err, stat) { if (!err) { return cb(null, stat.isFile() || stat.isFIFO()); } if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false); return cb(err); }); }, isDirectory: function isDirectory(dir, cb) { fs.stat(dir, function (err, stat) { if (!err) { return cb(null, stat.isDirectory()); } if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false); return cb(err); }); }, realpath: function realpath(file, cb) { var realpath = typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath; realpath(file, function (realPathErr, realPath) { if (realPathErr && realPathErr.code !== 'ENOENT') cb(realPathErr); else cb(null, realPathErr ? file : realPath); }); }, readPackage: function defaultReadPackage(readFile, pkgfile, cb) { readFile(pkgfile, function (readFileErr, body) { if (readFileErr) cb(readFileErr); else { try { var pkg = JSON.parse(body); cb(null, pkg); } catch (jsonErr) { cb(jsonErr); } } }); }, moduleDirectory: 'node_modules', preserveSymlinks: false }","title":"resolve(id, opts={}, cb)"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#resolvesyncid-opts","text":"Synchronously resolve the module path string id , returning the result and throwing an error when id can't be resolved. options are: opts.basedir - directory to begin resolving from opts.extensions - array of file extensions to search in order opts.includeCoreModules - set to false to exclude node core modules (e.g. fs ) from the search opts.readFileSync - how to read files synchronously opts.isFile - function to synchronously test whether a file exists opts.isDirectory - function to synchronously test whether a file exists and is a directory opts.realpathSync - function to synchronously resolve a potential symlink to its real path opts.readPackageSync(readFileSync, pkgfile) - function to synchronously read and parse a package.json file. a thrown SyntaxError will be ignored, all other exceptions will propagate. readFileSync - the passed opts.readFileSync or fs.readFileSync if not specified pkgfile - path to package.json opts.packageFilter(pkg, pkgfile, dir) - transform the parsed package.json contents before looking at the \"main\" field pkg - package data pkgfile - path to package.json dir - directory that contains package.json opts.pathFilter(pkg, path, relativePath) - transform a path within a package pkg - package data path - the path being resolved relativePath - the path relative from the package.json location returns - a relative path that will be joined from the package.json location opts.paths - require.paths array to use if nothing is found on the normal node_modules recursive walk (probably don't use this) For advanced users, paths can also be a opts.paths(request, start, opts) function * request - the import specifier being resolved * start - lookup path * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard node_modules resolution * opts - the resolution options opts.packageIterator(request, start, opts) - return the list of candidate paths where the packages sources may be found (probably don't use this) request - the import specifier being resolved start - lookup path getPackageCandidates - a thunk (no-argument function) that returns the paths using standard node_modules resolution opts - the resolution options opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: \"node_modules\" opts.preserveSymlinks - if true, doesn't resolve basedir to real path before resolving. This is the way Node resolves dependencies when executed with the --preserve-symlinks flag. default opts values: { paths: [], basedir: __dirname, extensions: ['.js'], includeCoreModules: true, readFileSync: fs.readFileSync, isFile: function isFile(file) { try { var stat = fs.statSync(file); } catch (e) { if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false; throw e; } return stat.isFile() || stat.isFIFO(); }, isDirectory: function isDirectory(dir) { try { var stat = fs.statSync(dir); } catch (e) { if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false; throw e; } return stat.isDirectory(); }, realpathSync: function realpathSync(file) { try { var realpath = typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync; return realpath(file); } catch (realPathErr) { if (realPathErr.code !== 'ENOENT') { throw realPathErr; } } return file; }, readPackageSync: function defaultReadPackageSync(readFileSync, pkgfile) { return JSON.parse(readFileSync(pkgfile)); }, moduleDirectory: 'node_modules', preserveSymlinks: false }","title":"resolve.sync(id, opts)"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#install","text":"With npm do: npm install resolve","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve/readme/#license","text":"MIT","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/","text":"resolve-from Resolve the path of a module like require.resolve() but from a given path Install $ npm install resolve-from Usage const resolveFrom = require('resolve-from'); // There is a file at `./foo/bar.js` resolveFrom('foo', './bar'); //=> '/Users/sindresorhus/dev/test/foo/bar.js' API resolveFrom(fromDir, moduleId) Like require() , throws when the module can't be found. resolveFrom.silent(fromDir, moduleId) Returns null instead of throwing when the module can't be found. fromDir Type: string Directory to resolve from. moduleId Type: string What you would use in require() . Tip Create a partial using a bound function if you want to resolve from the same fromDir multiple times: const resolveFromFoo = resolveFrom.bind(null, 'foo'); resolveFromFoo('./bar'); resolveFromFoo('./baz'); Related resolve-cwd - Resolve the path of a module from the current working directory import-from - Import a module from a given path import-cwd - Import a module from the current working directory resolve-pkg - Resolve the path of a package regardless of it having an entry point import-lazy - Import a module lazily resolve-global - Resolve the path of a globally installed module License MIT \u00a9 Sindre Sorhus","title":"resolve-from Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#resolve-from","text":"Resolve the path of a module like require.resolve() but from a given path","title":"resolve-from"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#install","text":"$ npm install resolve-from","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#usage","text":"const resolveFrom = require('resolve-from'); // There is a file at `./foo/bar.js` resolveFrom('foo', './bar'); //=> '/Users/sindresorhus/dev/test/foo/bar.js'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#resolvefromfromdir-moduleid","text":"Like require() , throws when the module can't be found.","title":"resolveFrom(fromDir, moduleId)"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#resolvefromsilentfromdir-moduleid","text":"Returns null instead of throwing when the module can't be found.","title":"resolveFrom.silent(fromDir, moduleId)"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#fromdir","text":"Type: string Directory to resolve from.","title":"fromDir"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#moduleid","text":"Type: string What you would use in require() .","title":"moduleId"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#tip","text":"Create a partial using a bound function if you want to resolve from the same fromDir multiple times: const resolveFromFoo = resolveFrom.bind(null, 'foo'); resolveFromFoo('./bar'); resolveFromFoo('./baz');","title":"Tip"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#related","text":"resolve-cwd - Resolve the path of a module from the current working directory import-from - Import a module from a given path import-cwd - Import a module from the current working directory resolve-pkg - Resolve the path of a package regardless of it having an entry point import-lazy - Import a module lazily resolve-global - Resolve the path of a globally installed module","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/resolve-from/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/","text":"Rollup Overview Rollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today. Quick Start Guide Install with npm install --global rollup . Rollup can be used either through a command line interface with an optional configuration file or else through its JavaScript API . Run rollup --help to see the available options and parameters. The starter project templates, rollup-starter-lib and rollup-starter-app , demonstrate common configuration options, and more detailed instructions are available throughout the user guide . Commands These commands assume the entry point to your application is named main.js, and that you'd like all imports compiled into a single file named bundle.js. For browsers: # compile to a <script> containing a self-executing function rollup main.js --format iife --name \"myBundle\" --file bundle.js For Node.js: # compile to a CommonJS module rollup main.js --format cjs --file bundle.js For both browsers and Node.js: # UMD format requires a bundle name rollup main.js --format umd --name \"myBundle\" --file bundle.js Why Developing software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you'll need to solve, and simply writing smaller projects in the first place isn't necessarily the answer . Unfortunately, JavaScript has not historically included this capability as a core feature in the language. This finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. Most browsers and Node.js support ES modules. However, Node.js releases before 12.17 support ES modules only behind the --experimental-modules flag, and older browsers like Internet Explorer do not support ES modules at all. Rollup allows you to write your code using ES modules, and run your application even in environments that do not support ES modules natively. For environments that support them, Rollup can output optimized ES modules; for environments that don't, Rollup can compile your code to other formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to write future-proof code , and you also get the tremendous benefits of... Tree Shaking In addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn't actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project. For example, with CommonJS, the entire tool or library must be imported . // import the entire utils object with CommonJS var utils = require('node:utils'); var query = 'Rollup'; // use the ajax method of the utils object utils.ajax('https://api.example.com?search=' + query).then(handleResponse); But with ES modules, instead of importing the whole utils object, we can just import the one ajax function we need: // import the ajax function with an ES import statement import { ajax } from 'node:utils'; var query = 'Rollup'; // call the ajax function ajax('https://api.example.com?search=' + query).then(handleResponse); Because Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit import and export statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code. Compatibility Importing CommonJS Rollup can import existing CommonJS modules through a plugin . Publishing ES Modules To make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the main property in your package.json file. If your package.json file also has a module field, ES-module-aware tools like Rollup and webpack will import the ES module version directly. Contributors This project exists thanks to all the people who contribute. [ Contribute ]. . If you want to contribute yourself, head over to the contribution guidelines . Backers Thank you to all our backers! \ud83d\ude4f [ Become a backer ] Sponsors Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [ Become a sponsor ] Special Sponsor TNG has been supporting the work of Lukas Taegert-Atkinson on Rollup since 2017. License MIT","title":"Index"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#overview","text":"Rollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.","title":"Overview"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#quick-start-guide","text":"Install with npm install --global rollup . Rollup can be used either through a command line interface with an optional configuration file or else through its JavaScript API . Run rollup --help to see the available options and parameters. The starter project templates, rollup-starter-lib and rollup-starter-app , demonstrate common configuration options, and more detailed instructions are available throughout the user guide .","title":"Quick Start Guide"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#commands","text":"These commands assume the entry point to your application is named main.js, and that you'd like all imports compiled into a single file named bundle.js. For browsers: # compile to a <script> containing a self-executing function rollup main.js --format iife --name \"myBundle\" --file bundle.js For Node.js: # compile to a CommonJS module rollup main.js --format cjs --file bundle.js For both browsers and Node.js: # UMD format requires a bundle name rollup main.js --format umd --name \"myBundle\" --file bundle.js","title":"Commands"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#why","text":"Developing software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you'll need to solve, and simply writing smaller projects in the first place isn't necessarily the answer . Unfortunately, JavaScript has not historically included this capability as a core feature in the language. This finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. Most browsers and Node.js support ES modules. However, Node.js releases before 12.17 support ES modules only behind the --experimental-modules flag, and older browsers like Internet Explorer do not support ES modules at all. Rollup allows you to write your code using ES modules, and run your application even in environments that do not support ES modules natively. For environments that support them, Rollup can output optimized ES modules; for environments that don't, Rollup can compile your code to other formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to write future-proof code , and you also get the tremendous benefits of...","title":"Why"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#tree-shaking","text":"In addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn't actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project. For example, with CommonJS, the entire tool or library must be imported . // import the entire utils object with CommonJS var utils = require('node:utils'); var query = 'Rollup'; // use the ajax method of the utils object utils.ajax('https://api.example.com?search=' + query).then(handleResponse); But with ES modules, instead of importing the whole utils object, we can just import the one ajax function we need: // import the ajax function with an ES import statement import { ajax } from 'node:utils'; var query = 'Rollup'; // call the ajax function ajax('https://api.example.com?search=' + query).then(handleResponse); Because Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit import and export statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code.","title":"Tree Shaking"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#compatibility","text":"","title":"Compatibility"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#importing-commonjs","text":"Rollup can import existing CommonJS modules through a plugin .","title":"Importing CommonJS"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#publishing-es-modules","text":"To make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the main property in your package.json file. If your package.json file also has a module field, ES-module-aware tools like Rollup and webpack will import the ES module version directly.","title":"Publishing ES Modules"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#contributors","text":"This project exists thanks to all the people who contribute. [ Contribute ]. . If you want to contribute yourself, head over to the contribution guidelines .","title":"Contributors"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#backers","text":"Thank you to all our backers! \ud83d\ude4f [ Become a backer ]","title":"Backers"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#sponsors","text":"Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [ Become a sponsor ]","title":"Sponsors"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#special-sponsor","text":"TNG has been supporting the work of Lukas Taegert-Atkinson on Rollup since 2017.","title":"Special Sponsor"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/","text":"Rollup core license Rollup is released under the MIT license: The MIT License (MIT) Copyright (c) 2017 these people Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Licenses of bundled dependencies The published Rollup artifact additionally contains code with the following licenses: MIT, ISC Bundled dependencies: @jridgewell/sourcemap-codec License: MIT By: Rich Harris Repository: git+https://github.com/jridgewell/sourcemap-codec.git The MIT License Copyright (c) 2015 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @rollup/pluginutils License: MIT By: Rich Harris Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. anymatch License: ISC By: Elan Shanker Repository: https://github.com/micromatch/anymatch The ISC License Copyright (c) 2019 Elan Shanker, Paul Miller (https://paulmillr.com) Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. binary-extensions License: MIT By: Sindre Sorhus Repository: sindresorhus/binary-extensions MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Copyright (c) Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. braces License: MIT By: Jon Schlinkert, Brian Woodward, Elan Shanker, Eugene Sharygin, hemanth.hm Repository: micromatch/braces The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. builtin-modules License: MIT By: Sindre Sorhus Repository: sindresorhus/builtin-modules MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. chokidar License: MIT By: Paul Miller, Elan Shanker Repository: git+https://github.com/paulmillr/chokidar.git The MIT License (MIT) Copyright (c) 2012-2019 Paul Miller (https://paulmillr.com), Elan Shanker Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. colorette License: MIT By: Jorge Bucaran Repository: jorgebucaran/colorette Copyright \u00a9 Jorge Bucaran < https://jorgebucaran.com > Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. date-time License: MIT By: Sindre Sorhus Repository: sindresorhus/date-time MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. fill-range License: MIT By: Jon Schlinkert, Edo Rivai, Paul Miller, Rouven We\u00dfling Repository: jonschlinkert/fill-range The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. flru License: MIT By: Luke Edwards Repository: lukeed/flru MIT License Copyright (c) Luke Edwards luke.edwards05@gmail.com (lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. glob-parent License: ISC By: Gulp Team, Elan Shanker, Blaine Bublitz Repository: gulpjs/glob-parent The ISC License Copyright (c) 2015, 2019 Elan Shanker Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. is-binary-path License: MIT By: Sindre Sorhus Repository: sindresorhus/is-binary-path MIT License Copyright (c) 2019 Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com), Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-extglob License: MIT By: Jon Schlinkert Repository: jonschlinkert/is-extglob The MIT License (MIT) Copyright (c) 2014-2016, Jon Schlinkert Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-glob License: MIT By: Jon Schlinkert, Brian Woodward, Daniel Perez Repository: micromatch/is-glob The MIT License (MIT) Copyright (c) 2014-2017, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-number License: MIT By: Jon Schlinkert, Olsten Larck, Rouven We\u00dfling Repository: jonschlinkert/is-number The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-reference License: MIT By: Rich Harris Repository: git+https://github.com/Rich-Harris/is-reference.git locate-character License: MIT By: Rich Harris Repository: git+https://gitlab.com/Rich-Harris/locate-character.git magic-string License: MIT By: Rich Harris Repository: https://github.com/rich-harris/magic-string Copyright 2018 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. normalize-path License: MIT By: Jon Schlinkert, Blaine Bublitz Repository: jonschlinkert/normalize-path The MIT License (MIT) Copyright (c) 2014-2018, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. parse-ms License: MIT By: Sindre Sorhus Repository: sindresorhus/parse-ms MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. picomatch License: MIT By: Jon Schlinkert Repository: micromatch/picomatch The MIT License (MIT) Copyright (c) 2017-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. pretty-bytes License: MIT By: Sindre Sorhus Repository: sindresorhus/pretty-bytes MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. pretty-ms License: MIT By: Sindre Sorhus Repository: sindresorhus/pretty-ms MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. readdirp License: MIT By: Thorsten Lorenz, Paul Miller Repository: git://github.com/paulmillr/readdirp.git MIT License Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. signal-exit License: ISC By: Ben Coe Repository: https://github.com/tapjs/signal-exit.git The ISC License Copyright (c) 2015-2023 Benjamin Coe, Isaac Z. Schlueter, and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. time-zone License: MIT By: Sindre Sorhus Repository: sindresorhus/time-zone MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. to-regex-range License: MIT By: Jon Schlinkert, Rouven We\u00dfling Repository: micromatch/to-regex-range The MIT License (MIT) Copyright (c) 2015-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. yargs-parser License: ISC By: Ben Coe Repository: https://github.com/yargs/yargs-parser.git Copyright (c) 2016, Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"Rollup core license"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#rollup-core-license","text":"Rollup is released under the MIT license: The MIT License (MIT) Copyright (c) 2017 these people Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Rollup core license"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#licenses-of-bundled-dependencies","text":"The published Rollup artifact additionally contains code with the following licenses: MIT, ISC","title":"Licenses of bundled dependencies"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#bundled-dependencies","text":"","title":"Bundled dependencies:"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#jridgewellsourcemap-codec","text":"License: MIT By: Rich Harris Repository: git+https://github.com/jridgewell/sourcemap-codec.git The MIT License Copyright (c) 2015 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@jridgewell/sourcemap-codec"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#rolluppluginutils","text":"License: MIT By: Rich Harris Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@rollup/pluginutils"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#anymatch","text":"License: ISC By: Elan Shanker Repository: https://github.com/micromatch/anymatch The ISC License Copyright (c) 2019 Elan Shanker, Paul Miller (https://paulmillr.com) Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"anymatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#binary-extensions","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/binary-extensions MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Copyright (c) Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"binary-extensions"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#braces","text":"License: MIT By: Jon Schlinkert, Brian Woodward, Elan Shanker, Eugene Sharygin, hemanth.hm Repository: micromatch/braces The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"braces"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#builtin-modules","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/builtin-modules MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"builtin-modules"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#chokidar","text":"License: MIT By: Paul Miller, Elan Shanker Repository: git+https://github.com/paulmillr/chokidar.git The MIT License (MIT) Copyright (c) 2012-2019 Paul Miller (https://paulmillr.com), Elan Shanker Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"chokidar"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#colorette","text":"License: MIT By: Jorge Bucaran Repository: jorgebucaran/colorette Copyright \u00a9 Jorge Bucaran < https://jorgebucaran.com > Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"colorette"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#date-time","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/date-time MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"date-time"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#fill-range","text":"License: MIT By: Jon Schlinkert, Edo Rivai, Paul Miller, Rouven We\u00dfling Repository: jonschlinkert/fill-range The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"fill-range"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#flru","text":"License: MIT By: Luke Edwards Repository: lukeed/flru MIT License Copyright (c) Luke Edwards luke.edwards05@gmail.com (lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"flru"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#glob-parent","text":"License: ISC By: Gulp Team, Elan Shanker, Blaine Bublitz Repository: gulpjs/glob-parent The ISC License Copyright (c) 2015, 2019 Elan Shanker Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"glob-parent"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#is-binary-path","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/is-binary-path MIT License Copyright (c) 2019 Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com), Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-binary-path"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#is-extglob","text":"License: MIT By: Jon Schlinkert Repository: jonschlinkert/is-extglob The MIT License (MIT) Copyright (c) 2014-2016, Jon Schlinkert Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-extglob"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#is-glob","text":"License: MIT By: Jon Schlinkert, Brian Woodward, Daniel Perez Repository: micromatch/is-glob The MIT License (MIT) Copyright (c) 2014-2017, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-glob"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#is-number","text":"License: MIT By: Jon Schlinkert, Olsten Larck, Rouven We\u00dfling Repository: jonschlinkert/is-number The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-number"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#is-reference","text":"License: MIT By: Rich Harris Repository: git+https://github.com/Rich-Harris/is-reference.git","title":"is-reference"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#locate-character","text":"License: MIT By: Rich Harris Repository: git+https://gitlab.com/Rich-Harris/locate-character.git","title":"locate-character"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#magic-string","text":"License: MIT By: Rich Harris Repository: https://github.com/rich-harris/magic-string Copyright 2018 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"magic-string"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#normalize-path","text":"License: MIT By: Jon Schlinkert, Blaine Bublitz Repository: jonschlinkert/normalize-path The MIT License (MIT) Copyright (c) 2014-2018, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"normalize-path"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#parse-ms","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/parse-ms MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"parse-ms"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#picomatch","text":"License: MIT By: Jon Schlinkert Repository: micromatch/picomatch The MIT License (MIT) Copyright (c) 2017-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"picomatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#pretty-bytes","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/pretty-bytes MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"pretty-bytes"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#pretty-ms","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/pretty-ms MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"pretty-ms"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#readdirp","text":"License: MIT By: Thorsten Lorenz, Paul Miller Repository: git://github.com/paulmillr/readdirp.git MIT License Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"readdirp"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#signal-exit","text":"License: ISC By: Ben Coe Repository: https://github.com/tapjs/signal-exit.git The ISC License Copyright (c) 2015-2023 Benjamin Coe, Isaac Z. Schlueter, and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"signal-exit"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#time-zone","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/time-zone MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"time-zone"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#to-regex-range","text":"License: MIT By: Jon Schlinkert, Rouven We\u00dfling Repository: micromatch/to-regex-range The MIT License (MIT) Copyright (c) 2015-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"to-regex-range"},{"location":"_Disciplina/Code/my-react-app/node_modules/rollup/LICENSE/#yargs-parser","text":"License: ISC By: Ben Coe Repository: https://github.com/yargs/yargs-parser.git Copyright (c) 2016, Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"yargs-parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/","text":"safe-array-concat Array.prototype.concat , but made safe by ignoring Symbol.isConcatSpreadable Getting started npm install --save safe-array-concat Usage/Examples var safeConcat = require('safe-array-concat'); var assert = require('assert'); assert.deepEqual([].concat([1, 2], 3, [[4]]), [1, 2, 3, [4]], 'arrays spread as expected with normal concat'); assert.deepEqual(safeConcat([1, 2], 3, [[4]]), [1, 2, 3, [4]], 'arrays spread as expected with safe concat'); String.prototype[Symbol.isConcatSpreadable] = true; assert.deepEqual([].concat('foo', Object('bar')), ['foo', 'b', 'a', 'r'], 'spreadable String objects are spread with normal concat!!!'); assert.deepEqual(safeConcat('foo', Object('bar')), ['foo', Object('bar')], 'spreadable String objects are not spread with safe concat'); Array.prototype[Symbol.isConcatSpreadable] = false; assert.deepEqual([].concat([1, 2], 3, [[4]]), [[], [1, 2], 3, [[4]]], 'non-concat-spreadable arrays do not spread with normal concat!!!'); assert.deepEqual(safeConcat([1, 2], 3, [[4]]), [1, 2, 3, [4]], 'non-concat-spreadable arrays still spread with safe concat'); Tests Simply clone the repo, npm install , and run npm test","title":"safe-array-concat Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/#safe-array-concat","text":"Array.prototype.concat , but made safe by ignoring Symbol.isConcatSpreadable","title":"safe-array-concat"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/#getting-started","text":"npm install --save safe-array-concat","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/#usageexamples","text":"var safeConcat = require('safe-array-concat'); var assert = require('assert'); assert.deepEqual([].concat([1, 2], 3, [[4]]), [1, 2, 3, [4]], 'arrays spread as expected with normal concat'); assert.deepEqual(safeConcat([1, 2], 3, [[4]]), [1, 2, 3, [4]], 'arrays spread as expected with safe concat'); String.prototype[Symbol.isConcatSpreadable] = true; assert.deepEqual([].concat('foo', Object('bar')), ['foo', 'b', 'a', 'r'], 'spreadable String objects are spread with normal concat!!!'); assert.deepEqual(safeConcat('foo', Object('bar')), ['foo', Object('bar')], 'spreadable String objects are not spread with safe concat'); Array.prototype[Symbol.isConcatSpreadable] = false; assert.deepEqual([].concat([1, 2], 3, [[4]]), [[], [1, 2], 3, [[4]]], 'non-concat-spreadable arrays do not spread with normal concat!!!'); assert.deepEqual(safeConcat([1, 2], 3, [[4]]), [1, 2, 3, [4]], 'non-concat-spreadable arrays still spread with safe concat');","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.2 - 2024-03-09 Commits [types] use a generic a1d744d [Dev Deps] update @ljharb/tsconfig , set-function-length 3d3da0a v1.1.1 - 2024-03-09 Commits [types] use shared config f509f80 [actions] remove redundant finisher; use reusable workflows b5f5ff4 [types] use handwritten d.ts instead of emit e717048 [Dev Deps] update set-function-length , tape dde26a7 [Deps] update call-bind , get-intrinsic d5d2cde [Dev Deps] update tape 9454c5a [Tests] add @arethetypeswrong/cli [ 00a5243`](https://github.com/ljharb/safe-array-concat/commit/00a5243a5b923ff2b694b3b5ef4ce39027e30f6e) [Deps] update get-intrinsic c935764 v1.1.0 - 2024-01-15 Commits [New] add types bd92413 [Dev Deps] update aud , mock-property , npmignore , set-function-length , tape 497ffcb [Deps] update call-bind , get-intrinsic 770f870 [Dev Deps] update mock-property , tape be76bd9 [Tests] use set-function-length/env 89b1167 [meta] add missing npmrc values 3185cc7 [meta] add sideEffects flag df6c7eb v1.0.1 - 2023-09-05 Fixed [Perf] set Symbol.isConcatSpreadable only when required #2 Commits [Dev Deps] update @ljharb/eslint-config , aud , tape c0791b0 [Deps] update get-intrinsic 7d07ae6 v1.0.0 - 2023-04-20 Commits Initial implementation, tests, readme 31b8e70 Initial commit 83d38c6 npm init 516fdc2 Only apps should have lockfiles 9cfa07b","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#v112-2024-03-09","text":"","title":"v1.1.2 - 2024-03-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#commits","text":"[types] use a generic a1d744d [Dev Deps] update @ljharb/tsconfig , set-function-length 3d3da0a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#v111-2024-03-09","text":"","title":"v1.1.1 - 2024-03-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#commits_1","text":"[types] use shared config f509f80 [actions] remove redundant finisher; use reusable workflows b5f5ff4 [types] use handwritten d.ts instead of emit e717048 [Dev Deps] update set-function-length , tape dde26a7 [Deps] update call-bind , get-intrinsic d5d2cde [Dev Deps] update tape 9454c5a [Tests] add @arethetypeswrong/cli [ 00a5243`](https://github.com/ljharb/safe-array-concat/commit/00a5243a5b923ff2b694b3b5ef4ce39027e30f6e) [Deps] update get-intrinsic c935764","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#v110-2024-01-15","text":"","title":"v1.1.0 - 2024-01-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#commits_2","text":"[New] add types bd92413 [Dev Deps] update aud , mock-property , npmignore , set-function-length , tape 497ffcb [Deps] update call-bind , get-intrinsic 770f870 [Dev Deps] update mock-property , tape be76bd9 [Tests] use set-function-length/env 89b1167 [meta] add missing npmrc values 3185cc7 [meta] add sideEffects flag df6c7eb","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#v101-2023-09-05","text":"","title":"v1.0.1 - 2023-09-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#fixed","text":"[Perf] set Symbol.isConcatSpreadable only when required #2","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#commits_3","text":"[Dev Deps] update @ljharb/eslint-config , aud , tape c0791b0 [Deps] update get-intrinsic 7d07ae6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#v100-2023-04-20","text":"","title":"v1.0.0 - 2023-04-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-array-concat/CHANGELOG/#commits_4","text":"Initial implementation, tests, readme 31b8e70 Initial commit 83d38c6 npm init 516fdc2 Only apps should have lockfiles 9cfa07b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/","text":"safe-regex-test Give a regex, get a robust predicate function that tests it against a string. This will work even if RegExp.prototype is altered later. Getting started npm install --save safe-regex-test Usage/Examples var regexTester = require('safe-regex-test'); var assert = require('assert'); var tester = regexTester('a'); assert.ok(tester('a')); assert.notOk(tester('b')); Tests Simply clone the repo, npm install , and run npm test","title":"safe-regex-test Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/#safe-regex-test","text":"Give a regex, get a robust predicate function that tests it against a string. This will work even if RegExp.prototype is altered later.","title":"safe-regex-test"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/#getting-started","text":"npm install --save safe-regex-test","title":"Getting started"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/#usageexamples","text":"var regexTester = require('safe-regex-test'); var assert = require('assert'); var tester = regexTester('a'); assert.ok(tester('a')); assert.notOk(tester('b'));","title":"Usage/Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.3 - 2024-02-06 Commits [Refactor] use es-errors , so things that only need those do not need get-intrinsic d6ba2f9 [Deps] update call-bind , get-intrinsic 5a3b1d7 [Dev Deps] update tape 75fb719 v1.0.2 - 2024-01-11 Commits [meta] package.json sideEffects should be boolean 094bb88 v1.0.1 - 2024-01-09 Commits [Tests] add nyc for coverage 7e3f525 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape e7e0169 [actions] update rebase action 2962694 [readme] add testing badges; remove david-dm badges e9dfd83 [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape 496fe99 [Deps] update call-bind , get-intrinsic d94c5ba [meta] add missing engines.node f3d4711 [Deps] update get-intrinsic 0eeedd7 [meta] add sideEffects flag fe1655f v1.0.0 - 2022-09-22 Commits Initial implementation, tests, readme 0273e9f Initial commit b6c1edf npm init c7f5765 Only apps should have lockfiles 1162bf0","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#v103-2024-02-06","text":"","title":"v1.0.3 - 2024-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#commits","text":"[Refactor] use es-errors , so things that only need those do not need get-intrinsic d6ba2f9 [Deps] update call-bind , get-intrinsic 5a3b1d7 [Dev Deps] update tape 75fb719","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#v102-2024-01-11","text":"","title":"v1.0.2 - 2024-01-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#commits_1","text":"[meta] package.json sideEffects should be boolean 094bb88","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#v101-2024-01-09","text":"","title":"v1.0.1 - 2024-01-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#commits_2","text":"[Tests] add nyc for coverage 7e3f525 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape e7e0169 [actions] update rebase action 2962694 [readme] add testing badges; remove david-dm badges e9dfd83 [Dev Deps] update @ljharb/eslint-config , aud , object-inspect , tape 496fe99 [Deps] update call-bind , get-intrinsic d94c5ba [meta] add missing engines.node f3d4711 [Deps] update get-intrinsic 0eeedd7 [meta] add sideEffects flag fe1655f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#v100-2022-09-22","text":"","title":"v1.0.0 - 2022-09-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/safe-regex-test/CHANGELOG/#commits_3","text":"Initial implementation, tests, readme 0273e9f Initial commit b6c1edf npm init c7f5765 Only apps should have lockfiles 1162bf0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/scheduler/","text":"scheduler This is a package for cooperative scheduling in a browser environment. It is currently used internally by React, but we plan to make it more generic. The public API for this package is not yet finalized. Thanks The React team thanks Anton Podviaznikov for donating the scheduler package name.","title":"scheduler"},{"location":"_Disciplina/Code/my-react-app/node_modules/scheduler/#scheduler","text":"This is a package for cooperative scheduling in a browser environment. It is currently used internally by React, but we plan to make it more generic. The public API for this package is not yet finalized.","title":"scheduler"},{"location":"_Disciplina/Code/my-react-app/node_modules/scheduler/#thanks","text":"The React team thanks Anton Podviaznikov for donating the scheduler package name.","title":"Thanks"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/","text":"semver(1) -- The semantic versioner for npm Install npm install semver ```` ## Usage As a node module: ```js const semver = require('semver') semver.valid('1.2.3') // '1.2.3' semver.valid('a.b.c') // null semver.clean(' =v1.2.3 ') // '1.2.3' semver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true semver.gt('1.2.3', '9.8.7') // false semver.lt('1.2.3', '9.8.7') // true semver.minVersion('>=1.0.0') // '1.0.0' semver.valid(semver.coerce('v2')) // '2.0.0' semver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7' As a command-line utility: $ semver -h A JavaScript implementation of the https://semver.org/ specification Copyright Isaac Z. Schlueter Usage: semver [options] <version> [<version> [...]] Prints valid versions sorted by SemVer precedence Options: -r --range <range> Print versions that match the specified range. -i --increment [<level>] Increment a version by the specified level. Level can be one of: major, minor, patch, premajor, preminor, prepatch, or prerelease. Default level is 'patch'. Only one version may be specified. --preid <identifier> Identifier to be used to prefix premajor, preminor, prepatch or prerelease version increments. -l --loose Interpret versions and ranges loosely -p --include-prerelease Always include prerelease versions in range matching -c --coerce Coerce a string into SemVer if possible (does not imply --loose) --rtl Coerce version strings right to left --ltr Coerce version strings left to right (default) Program exits successfully if any valid version satisfies all supplied ranges, and prints all satisfying versions. If no satisfying versions are found, then exits failure. Versions are printed in ascending order, so supplying multiple versions to the utility will just sort them. Versions A \"version\" is described by the v2.0.0 specification found at https://semver.org/ . A leading \"=\" or \"v\" character is stripped off and ignored. Ranges A version range is a set of comparators which specify versions that satisfy the range. A comparator is composed of an operator and a version . The set of primitive operators is: < Less than <= Less than or equal to > Greater than >= Greater than or equal to = Equal. If no operator is specified, then equality is assumed, so this operator is optional, but MAY be included. For example, the comparator >=1.2.7 would match the versions 1.2.7 , 1.2.8 , 2.5.3 , and 1.3.9 , but not the versions 1.2.6 or 1.1.0 . Comparators can be joined by whitespace to form a comparator set , which is satisfied by the intersection of all of the comparators it includes. A range is composed of one or more comparator sets, joined by || . A version matches a range if and only if every comparator in at least one of the || -separated comparator sets is satisfied by the version. For example, the range >=1.2.7 <1.3.0 would match the versions 1.2.7 , 1.2.8 , and 1.2.99 , but not the versions 1.2.6 , 1.3.0 , or 1.1.0 . The range 1.2.7 || >=1.2.9 <2.0.0 would match the versions 1.2.7 , 1.2.9 , and 1.4.6 , but not the versions 1.2.8 or 2.0.0 . Prerelease Tags If a version has a prerelease tag (for example, 1.2.3-alpha.3 ) then it will only be allowed to satisfy comparator sets if at least one comparator with the same [major, minor, patch] tuple also has a prerelease tag. For example, the range >1.2.3-alpha.3 would be allowed to match the version 1.2.3-alpha.7 , but it would not be satisfied by 3.4.5-alpha.9 , even though 3.4.5-alpha.9 is technically \"greater than\" 1.2.3-alpha.3 according to the SemVer sort rules. The version range only accepts prerelease tags on the 1.2.3 version. The version 3.4.5 would satisfy the range, because it does not have a prerelease flag, and 3.4.5 is greater than 1.2.3-alpha.7 . The purpose for this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range matching semantics. Second, a user who has opted into using a prerelease version has clearly indicated the intent to use that specific set of alpha/beta/rc versions. By including a prerelease tag in the range, the user is indicating that they are aware of the risk. However, it is still not appropriate to assume that they have opted into taking a similar risk on the next set of prerelease versions. Note that this behavior can be suppressed (treating all prerelease versions as if they were normal versions, for the purpose of range matching) by setting the includePrerelease flag on the options object to any functions that do range matching. Prerelease Identifiers The method .inc takes an additional identifier string argument that will append the value of the string as a prerelease identifier: semver.inc('1.2.3', 'prerelease', 'beta') // '1.2.4-beta.0' command-line example: $ semver 1.2.3 -i prerelease --preid beta 1.2.4-beta.0 Which then can be used to increment further: $ semver 1.2.4-beta.0 -i prerelease 1.2.4-beta.1 Advanced Range Syntax Advanced range syntax desugars to primitive comparators in deterministic ways. Advanced ranges may be combined in the same way as primitive comparators using white space or || . Hyphen Ranges X.Y.Z - A.B.C Specifies an inclusive set. 1.2.3 - 2.3.4 := >=1.2.3 <=2.3.4 If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes. 1.2 - 2.3.4 := >=1.2.0 <=2.3.4 If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts. 1.2.3 - 2.3 := >=1.2.3 <2.4.0 1.2.3 - 2 := >=1.2.3 <3.0.0 X-Ranges 1.2.x 1.X 1.2.* * Any of X , x , or * may be used to \"stand in\" for one of the numeric values in the [major, minor, patch] tuple. * := >=0.0.0 (Any version satisfies) 1.x := >=1.0.0 <2.0.0 (Matching major version) 1.2.x := >=1.2.0 <1.3.0 (Matching major and minor versions) A partial version range is treated as an X-Range, so the special character is in fact optional. \"\" (empty string) := * := >=0.0.0 1 := 1.x.x := >=1.0.0 <2.0.0 1.2 := 1.2.x := >=1.2.0 <1.3.0 Tilde Ranges ~1.2.3 ~1.2 ~1 Allows patch-level changes if a minor version is specified on the comparator. Allows minor-level changes if not. ~1.2.3 := >=1.2.3 <1.(2+1).0 := >=1.2.3 <1.3.0 ~1.2 := >=1.2.0 <1.(2+1).0 := >=1.2.0 <1.3.0 (Same as 1.2.x ) ~1 := >=1.0.0 <(1+1).0.0 := >=1.0.0 <2.0.0 (Same as 1.x ) ~0.2.3 := >=0.2.3 <0.(2+1).0 := >=0.2.3 <0.3.0 ~0.2 := >=0.2.0 <0.(2+1).0 := >=0.2.0 <0.3.0 (Same as 0.2.x ) ~0 := >=0.0.0 <(0+1).0.0 := >=0.0.0 <1.0.0 (Same as 0.x ) ~1.2.3-beta.2 := >=1.2.3-beta.2 <1.3.0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple. Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4 Allows changes that do not modify the left-most non-zero element in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0 , and no updates for versions 0.0.X . Many authors treat a 0.x version as if the x were the major \"breaking-change\" indicator. Caret ranges are ideal when an author may make breaking changes between 0.2.4 and 0.3.0 releases, which is a common practice. However, it presumes that there will not be breaking changes between 0.2.4 and 0.2.5 . It allows for changes that are presumed to be additive (but non-breaking), according to commonly observed practices. ^1.2.3 := >=1.2.3 <2.0.0 ^0.2.3 := >=0.2.3 <0.3.0 ^0.0.3 := >=0.0.3 <0.0.4 ^1.2.3-beta.2 := >=1.2.3-beta.2 <2.0.0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple. ^0.0.3-beta := >=0.0.3-beta <0.0.4 Note that prereleases in the 0.0.3 version only will be allowed, if they are greater than or equal to beta . So, 0.0.3-pr.2 would be allowed. When parsing caret ranges, a missing patch value desugars to the number 0 , but will allow flexibility within that value, even if the major and minor versions are both 0 . ^1.2.x := >=1.2.0 <2.0.0 ^0.0.x := >=0.0.0 <0.1.0 ^0.0 := >=0.0.0 <0.1.0 A missing minor and patch values will desugar to zero, but also allow flexibility within those values, even if the major version is zero. ^1.x := >=1.0.0 <2.0.0 ^0.x := >=0.0.0 <1.0.0 Range Grammar Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors: range-set ::= range ( logical-or range ) * logical-or ::= ( ' ' ) * '||' ( ' ' ) * range ::= hyphen | simple ( ' ' simple ) * | '' hyphen ::= partial ' - ' partial simple ::= primitive | partial | tilde | caret primitive ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial partial ::= xr ( '.' xr ( '.' xr qualifier ? )? )? xr ::= 'x' | 'X' | '*' | nr nr ::= '0' | ['1'-'9'] ( ['0'-'9'] ) * tilde ::= '~' partial caret ::= '^' partial qualifier ::= ( '-' pre )? ( '+' build )? pre ::= parts build ::= parts parts ::= part ( '.' part ) * part ::= nr | [-0-9A-Za-z]+ Functions All methods and classes take a final options object argument. All options in this object are false by default. The options supported are: loose Be more forgiving about not-quite-valid semver strings. (Any resulting output will always be 100% strict compliant, of course.) For backwards compatibility reasons, if the options argument is a boolean value instead of an object, it is interpreted to be the loose param. includePrerelease Set to suppress the default behavior of excluding prerelease tagged versions from ranges unless they are explicitly opted into. Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse. valid(v) : Return the parsed version, or null if it's not valid. inc(v, release) : Return the version incremented by the release type ( major , premajor , minor , preminor , patch , prepatch , or prerelease ), or null if it's not valid premajor in one call will bump the version up to the next major version and down to a prerelease of that major version. preminor , and prepatch work the same way. If called from a non-prerelease version, the prerelease will work the same as prepatch . It increments the patch version, then makes a prerelease. If the input version is already a prerelease it simply increments it. prerelease(v) : Returns an array of prerelease components, or null if none exist. Example: prerelease('1.2.3-alpha.1') -> ['alpha', 1] major(v) : Return the major version number. minor(v) : Return the minor version number. patch(v) : Return the patch version number. intersects(r1, r2, loose) : Return true if the two supplied ranges or comparators intersect. parse(v) : Attempt to parse a string as a semantic version, returning either a SemVer object or null . Comparison gt(v1, v2) : v1 > v2 gte(v1, v2) : v1 >= v2 lt(v1, v2) : v1 < v2 lte(v1, v2) : v1 <= v2 eq(v1, v2) : v1 == v2 This is true if they're logically equivalent, even if they're not the exact same string. You already know how to compare strings. neq(v1, v2) : v1 != v2 The opposite of eq . cmp(v1, comparator, v2) : Pass in a comparison string, and it'll call the corresponding function above. \"===\" and \"!==\" do simple string comparison, but are included for completeness. Throws if an invalid comparison string is provided. compare(v1, v2) : Return 0 if v1 == v2 , or 1 if v1 is greater, or -1 if v2 is greater. Sorts in ascending order if passed to Array.sort() . rcompare(v1, v2) : The reverse of compare. Sorts an array of versions in descending order when passed to Array.sort() . compareBuild(v1, v2) : The same as compare but considers build when two versions are equal. Sorts in ascending order if passed to Array.sort() . v2 is greater. Sorts in ascending order if passed to Array.sort() . diff(v1, v2) : Returns difference between two versions by the release type ( major , premajor , minor , preminor , patch , prepatch , or prerelease ), or null if the versions are the same. Comparators intersects(comparator) : Return true if the comparators intersect Ranges validRange(range) : Return the valid range or null if it's not valid satisfies(version, range) : Return true if the version satisfies the range. maxSatisfying(versions, range) : Return the highest version in the list that satisfies the range, or null if none of them do. minSatisfying(versions, range) : Return the lowest version in the list that satisfies the range, or null if none of them do. minVersion(range) : Return the lowest version that can possibly match the given range. gtr(version, range) : Return true if version is greater than all the versions possible in the range. ltr(version, range) : Return true if version is less than all the versions possible in the range. outside(version, range, hilo) : Return true if the version is outside the bounds of the range in either the high or low direction. The hilo argument must be either the string '>' or '<' . (This is the function called by gtr and ltr .) intersects(range) : Return true if any of the ranges comparators intersect Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, or satisfy a range! For example, the range 1.2 <1.2.9 || >2.0.0 would have a hole from 1.2.9 until 2.0.0 , so the version 1.2.10 would not be greater than the range (because 2.0.1 satisfies, which is higher), nor less than the range (since 1.2.8 satisfies, which is lower), and it also does not satisfy the range. If you want to know if a version satisfies or does not satisfy a range, use the satisfies(version, range) function. Coercion coerce(version, options) : Coerces a string to semver if possible This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string, and consumes all remaining characters which satisfy at least a partial semver (e.g., 1 , 1.2 , 1.2.3 ) up to the max permitted length (256 characters). Longer versions are simply truncated ( 4.6.3.9.2-alpha2 becomes 4.6.3 ). All surrounding text is simply ignored ( v3.4 replaces v3.3.1 becomes 3.4.0 ). Only text which lacks digits will fail coercion ( version one is not valid). The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored ( 10000000000000000.4.7.4 becomes 4.7.4 ). The maximum value for any semver component is Integer.MAX_SAFE_INTEGER || (2**53 - 1) ; higher value components are invalid ( 9999999999999999.4.7.4 is likely invalid). If the options.rtl flag is set, then coerce will return the right-most coercible tuple that does not share an ending index with a longer coercible tuple. For example, 1.2.3.4 will return 2.3.4 in rtl mode, not 4.0.0 . 1.2.3/4 will return 4.0.0 , because the 4 is not a part of any other overlapping SemVer tuple. Clean clean(version) : Clean a string to be a valid semver if possible This will return a cleaned and trimmed semver version. If the provided version is not valid a null will be returned. This does not work for ranges. ex. * s.clean(' = v 2.1.5foo') : null * s.clean(' = v 2.1.5foo', { loose: true }) : '2.1.5-foo' * s.clean(' = v 2.1.5-foo') : null * s.clean(' = v 2.1.5-foo', { loose: true }) : '2.1.5-foo' * s.clean('=v2.1.5') : '2.1.5' * s.clean(' =v2.1.5') : 2.1.5 * s.clean(' 2.1.5 ') : '2.1.5' * s.clean('~1.0.0') : null","title":"semver(1) -- The semantic versioner for npm"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#semver1-the-semantic-versioner-for-npm","text":"","title":"semver(1) -- The semantic versioner for npm"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#install","text":"npm install semver ```` ## Usage As a node module: ```js const semver = require('semver') semver.valid('1.2.3') // '1.2.3' semver.valid('a.b.c') // null semver.clean(' =v1.2.3 ') // '1.2.3' semver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true semver.gt('1.2.3', '9.8.7') // false semver.lt('1.2.3', '9.8.7') // true semver.minVersion('>=1.0.0') // '1.0.0' semver.valid(semver.coerce('v2')) // '2.0.0' semver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7' As a command-line utility: $ semver -h A JavaScript implementation of the https://semver.org/ specification Copyright Isaac Z. Schlueter Usage: semver [options] <version> [<version> [...]] Prints valid versions sorted by SemVer precedence Options: -r --range <range> Print versions that match the specified range. -i --increment [<level>] Increment a version by the specified level. Level can be one of: major, minor, patch, premajor, preminor, prepatch, or prerelease. Default level is 'patch'. Only one version may be specified. --preid <identifier> Identifier to be used to prefix premajor, preminor, prepatch or prerelease version increments. -l --loose Interpret versions and ranges loosely -p --include-prerelease Always include prerelease versions in range matching -c --coerce Coerce a string into SemVer if possible (does not imply --loose) --rtl Coerce version strings right to left --ltr Coerce version strings left to right (default) Program exits successfully if any valid version satisfies all supplied ranges, and prints all satisfying versions. If no satisfying versions are found, then exits failure. Versions are printed in ascending order, so supplying multiple versions to the utility will just sort them.","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#versions","text":"A \"version\" is described by the v2.0.0 specification found at https://semver.org/ . A leading \"=\" or \"v\" character is stripped off and ignored.","title":"Versions"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#ranges","text":"A version range is a set of comparators which specify versions that satisfy the range. A comparator is composed of an operator and a version . The set of primitive operators is: < Less than <= Less than or equal to > Greater than >= Greater than or equal to = Equal. If no operator is specified, then equality is assumed, so this operator is optional, but MAY be included. For example, the comparator >=1.2.7 would match the versions 1.2.7 , 1.2.8 , 2.5.3 , and 1.3.9 , but not the versions 1.2.6 or 1.1.0 . Comparators can be joined by whitespace to form a comparator set , which is satisfied by the intersection of all of the comparators it includes. A range is composed of one or more comparator sets, joined by || . A version matches a range if and only if every comparator in at least one of the || -separated comparator sets is satisfied by the version. For example, the range >=1.2.7 <1.3.0 would match the versions 1.2.7 , 1.2.8 , and 1.2.99 , but not the versions 1.2.6 , 1.3.0 , or 1.1.0 . The range 1.2.7 || >=1.2.9 <2.0.0 would match the versions 1.2.7 , 1.2.9 , and 1.4.6 , but not the versions 1.2.8 or 2.0.0 .","title":"Ranges"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#prerelease-tags","text":"If a version has a prerelease tag (for example, 1.2.3-alpha.3 ) then it will only be allowed to satisfy comparator sets if at least one comparator with the same [major, minor, patch] tuple also has a prerelease tag. For example, the range >1.2.3-alpha.3 would be allowed to match the version 1.2.3-alpha.7 , but it would not be satisfied by 3.4.5-alpha.9 , even though 3.4.5-alpha.9 is technically \"greater than\" 1.2.3-alpha.3 according to the SemVer sort rules. The version range only accepts prerelease tags on the 1.2.3 version. The version 3.4.5 would satisfy the range, because it does not have a prerelease flag, and 3.4.5 is greater than 1.2.3-alpha.7 . The purpose for this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range matching semantics. Second, a user who has opted into using a prerelease version has clearly indicated the intent to use that specific set of alpha/beta/rc versions. By including a prerelease tag in the range, the user is indicating that they are aware of the risk. However, it is still not appropriate to assume that they have opted into taking a similar risk on the next set of prerelease versions. Note that this behavior can be suppressed (treating all prerelease versions as if they were normal versions, for the purpose of range matching) by setting the includePrerelease flag on the options object to any functions that do range matching.","title":"Prerelease Tags"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#prerelease-identifiers","text":"The method .inc takes an additional identifier string argument that will append the value of the string as a prerelease identifier: semver.inc('1.2.3', 'prerelease', 'beta') // '1.2.4-beta.0' command-line example: $ semver 1.2.3 -i prerelease --preid beta 1.2.4-beta.0 Which then can be used to increment further: $ semver 1.2.4-beta.0 -i prerelease 1.2.4-beta.1","title":"Prerelease Identifiers"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#advanced-range-syntax","text":"Advanced range syntax desugars to primitive comparators in deterministic ways. Advanced ranges may be combined in the same way as primitive comparators using white space or || .","title":"Advanced Range Syntax"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#hyphen-ranges-xyz-abc","text":"Specifies an inclusive set. 1.2.3 - 2.3.4 := >=1.2.3 <=2.3.4 If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes. 1.2 - 2.3.4 := >=1.2.0 <=2.3.4 If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts. 1.2.3 - 2.3 := >=1.2.3 <2.4.0 1.2.3 - 2 := >=1.2.3 <3.0.0","title":"Hyphen Ranges X.Y.Z - A.B.C"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#x-ranges-12x-1x-12","text":"Any of X , x , or * may be used to \"stand in\" for one of the numeric values in the [major, minor, patch] tuple. * := >=0.0.0 (Any version satisfies) 1.x := >=1.0.0 <2.0.0 (Matching major version) 1.2.x := >=1.2.0 <1.3.0 (Matching major and minor versions) A partial version range is treated as an X-Range, so the special character is in fact optional. \"\" (empty string) := * := >=0.0.0 1 := 1.x.x := >=1.0.0 <2.0.0 1.2 := 1.2.x := >=1.2.0 <1.3.0","title":"X-Ranges 1.2.x 1.X 1.2.* *"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#tilde-ranges-123-12-1","text":"Allows patch-level changes if a minor version is specified on the comparator. Allows minor-level changes if not. ~1.2.3 := >=1.2.3 <1.(2+1).0 := >=1.2.3 <1.3.0 ~1.2 := >=1.2.0 <1.(2+1).0 := >=1.2.0 <1.3.0 (Same as 1.2.x ) ~1 := >=1.0.0 <(1+1).0.0 := >=1.0.0 <2.0.0 (Same as 1.x ) ~0.2.3 := >=0.2.3 <0.(2+1).0 := >=0.2.3 <0.3.0 ~0.2 := >=0.2.0 <0.(2+1).0 := >=0.2.0 <0.3.0 (Same as 0.2.x ) ~0 := >=0.0.0 <(0+1).0.0 := >=0.0.0 <1.0.0 (Same as 0.x ) ~1.2.3-beta.2 := >=1.2.3-beta.2 <1.3.0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple.","title":"Tilde Ranges ~1.2.3 ~1.2 ~1"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#caret-ranges-123-025-004","text":"Allows changes that do not modify the left-most non-zero element in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0 , and no updates for versions 0.0.X . Many authors treat a 0.x version as if the x were the major \"breaking-change\" indicator. Caret ranges are ideal when an author may make breaking changes between 0.2.4 and 0.3.0 releases, which is a common practice. However, it presumes that there will not be breaking changes between 0.2.4 and 0.2.5 . It allows for changes that are presumed to be additive (but non-breaking), according to commonly observed practices. ^1.2.3 := >=1.2.3 <2.0.0 ^0.2.3 := >=0.2.3 <0.3.0 ^0.0.3 := >=0.0.3 <0.0.4 ^1.2.3-beta.2 := >=1.2.3-beta.2 <2.0.0 Note that prereleases in the 1.2.3 version will be allowed, if they are greater than or equal to beta.2 . So, 1.2.3-beta.4 would be allowed, but 1.2.4-beta.2 would not, because it is a prerelease of a different [major, minor, patch] tuple. ^0.0.3-beta := >=0.0.3-beta <0.0.4 Note that prereleases in the 0.0.3 version only will be allowed, if they are greater than or equal to beta . So, 0.0.3-pr.2 would be allowed. When parsing caret ranges, a missing patch value desugars to the number 0 , but will allow flexibility within that value, even if the major and minor versions are both 0 . ^1.2.x := >=1.2.0 <2.0.0 ^0.0.x := >=0.0.0 <0.1.0 ^0.0 := >=0.0.0 <0.1.0 A missing minor and patch values will desugar to zero, but also allow flexibility within those values, even if the major version is zero. ^1.x := >=1.0.0 <2.0.0 ^0.x := >=0.0.0 <1.0.0","title":"Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#range-grammar","text":"Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors: range-set ::= range ( logical-or range ) * logical-or ::= ( ' ' ) * '||' ( ' ' ) * range ::= hyphen | simple ( ' ' simple ) * | '' hyphen ::= partial ' - ' partial simple ::= primitive | partial | tilde | caret primitive ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial partial ::= xr ( '.' xr ( '.' xr qualifier ? )? )? xr ::= 'x' | 'X' | '*' | nr nr ::= '0' | ['1'-'9'] ( ['0'-'9'] ) * tilde ::= '~' partial caret ::= '^' partial qualifier ::= ( '-' pre )? ( '+' build )? pre ::= parts build ::= parts parts ::= part ( '.' part ) * part ::= nr | [-0-9A-Za-z]+","title":"Range Grammar"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#functions","text":"All methods and classes take a final options object argument. All options in this object are false by default. The options supported are: loose Be more forgiving about not-quite-valid semver strings. (Any resulting output will always be 100% strict compliant, of course.) For backwards compatibility reasons, if the options argument is a boolean value instead of an object, it is interpreted to be the loose param. includePrerelease Set to suppress the default behavior of excluding prerelease tagged versions from ranges unless they are explicitly opted into. Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse. valid(v) : Return the parsed version, or null if it's not valid. inc(v, release) : Return the version incremented by the release type ( major , premajor , minor , preminor , patch , prepatch , or prerelease ), or null if it's not valid premajor in one call will bump the version up to the next major version and down to a prerelease of that major version. preminor , and prepatch work the same way. If called from a non-prerelease version, the prerelease will work the same as prepatch . It increments the patch version, then makes a prerelease. If the input version is already a prerelease it simply increments it. prerelease(v) : Returns an array of prerelease components, or null if none exist. Example: prerelease('1.2.3-alpha.1') -> ['alpha', 1] major(v) : Return the major version number. minor(v) : Return the minor version number. patch(v) : Return the patch version number. intersects(r1, r2, loose) : Return true if the two supplied ranges or comparators intersect. parse(v) : Attempt to parse a string as a semantic version, returning either a SemVer object or null .","title":"Functions"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#comparison","text":"gt(v1, v2) : v1 > v2 gte(v1, v2) : v1 >= v2 lt(v1, v2) : v1 < v2 lte(v1, v2) : v1 <= v2 eq(v1, v2) : v1 == v2 This is true if they're logically equivalent, even if they're not the exact same string. You already know how to compare strings. neq(v1, v2) : v1 != v2 The opposite of eq . cmp(v1, comparator, v2) : Pass in a comparison string, and it'll call the corresponding function above. \"===\" and \"!==\" do simple string comparison, but are included for completeness. Throws if an invalid comparison string is provided. compare(v1, v2) : Return 0 if v1 == v2 , or 1 if v1 is greater, or -1 if v2 is greater. Sorts in ascending order if passed to Array.sort() . rcompare(v1, v2) : The reverse of compare. Sorts an array of versions in descending order when passed to Array.sort() . compareBuild(v1, v2) : The same as compare but considers build when two versions are equal. Sorts in ascending order if passed to Array.sort() . v2 is greater. Sorts in ascending order if passed to Array.sort() . diff(v1, v2) : Returns difference between two versions by the release type ( major , premajor , minor , preminor , patch , prepatch , or prerelease ), or null if the versions are the same.","title":"Comparison"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#comparators","text":"intersects(comparator) : Return true if the comparators intersect","title":"Comparators"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#ranges_1","text":"validRange(range) : Return the valid range or null if it's not valid satisfies(version, range) : Return true if the version satisfies the range. maxSatisfying(versions, range) : Return the highest version in the list that satisfies the range, or null if none of them do. minSatisfying(versions, range) : Return the lowest version in the list that satisfies the range, or null if none of them do. minVersion(range) : Return the lowest version that can possibly match the given range. gtr(version, range) : Return true if version is greater than all the versions possible in the range. ltr(version, range) : Return true if version is less than all the versions possible in the range. outside(version, range, hilo) : Return true if the version is outside the bounds of the range in either the high or low direction. The hilo argument must be either the string '>' or '<' . (This is the function called by gtr and ltr .) intersects(range) : Return true if any of the ranges comparators intersect Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, or satisfy a range! For example, the range 1.2 <1.2.9 || >2.0.0 would have a hole from 1.2.9 until 2.0.0 , so the version 1.2.10 would not be greater than the range (because 2.0.1 satisfies, which is higher), nor less than the range (since 1.2.8 satisfies, which is lower), and it also does not satisfy the range. If you want to know if a version satisfies or does not satisfy a range, use the satisfies(version, range) function.","title":"Ranges"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#coercion","text":"coerce(version, options) : Coerces a string to semver if possible This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string, and consumes all remaining characters which satisfy at least a partial semver (e.g., 1 , 1.2 , 1.2.3 ) up to the max permitted length (256 characters). Longer versions are simply truncated ( 4.6.3.9.2-alpha2 becomes 4.6.3 ). All surrounding text is simply ignored ( v3.4 replaces v3.3.1 becomes 3.4.0 ). Only text which lacks digits will fail coercion ( version one is not valid). The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored ( 10000000000000000.4.7.4 becomes 4.7.4 ). The maximum value for any semver component is Integer.MAX_SAFE_INTEGER || (2**53 - 1) ; higher value components are invalid ( 9999999999999999.4.7.4 is likely invalid). If the options.rtl flag is set, then coerce will return the right-most coercible tuple that does not share an ending index with a longer coercible tuple. For example, 1.2.3.4 will return 2.3.4 in rtl mode, not 4.0.0 . 1.2.3/4 will return 4.0.0 , because the 4 is not a part of any other overlapping SemVer tuple.","title":"Coercion"},{"location":"_Disciplina/Code/my-react-app/node_modules/semver/#clean","text":"clean(version) : Clean a string to be a valid semver if possible This will return a cleaned and trimmed semver version. If the provided version is not valid a null will be returned. This does not work for ranges. ex. * s.clean(' = v 2.1.5foo') : null * s.clean(' = v 2.1.5foo', { loose: true }) : '2.1.5-foo' * s.clean(' = v 2.1.5-foo') : null * s.clean(' = v 2.1.5-foo', { loose: true }) : '2.1.5-foo' * s.clean('=v2.1.5') : '2.1.5' * s.clean(' =v2.1.5') : 2.1.5 * s.clean(' 2.1.5 ') : '2.1.5' * s.clean('~1.0.0') : null","title":"Clean"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/","text":"set-function-length Set a function\u2019s length. Arguments: - fn : the function - length : the new length. Must be an integer between 0 and 2**32. - loose : Optional. If true, and the length fails to be set, do not throw. Default false. Returns fn . Usage var setFunctionLength = require('set-function-length'); var assert = require('assert'); function zero() {} function one(_) {} function two(_, __) {} assert.equal(zero.length, 0); assert.equal(one.length, 1); assert.equal(two.length, 2); assert.equal(setFunctionLength(zero, 10), zero); assert.equal(setFunctionLength(one, 11), one); assert.equal(setFunctionLength(two, 12), two); assert.equal(zero.length, 10); assert.equal(one.length, 11); assert.equal(two.length, 12);","title":"set-function-length Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/#set-function-length","text":"Set a function\u2019s length. Arguments: - fn : the function - length : the new length. Must be an integer between 0 and 2**32. - loose : Optional. If true, and the length fails to be set, do not throw. Default false. Returns fn .","title":"set-function-length"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/#usage","text":"var setFunctionLength = require('set-function-length'); var assert = require('assert'); function zero() {} function one(_) {} function two(_, __) {} assert.equal(zero.length, 0); assert.equal(one.length, 1); assert.equal(two.length, 2); assert.equal(setFunctionLength(zero, 10), zero); assert.equal(setFunctionLength(one, 11), one); assert.equal(setFunctionLength(two, 12), two); assert.equal(zero.length, 10); assert.equal(one.length, 11); assert.equal(two.length, 12);","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.2 - 2024-03-09 Commits [types] use shared config 027032f [actions] remove redundant finisher; use reusable workflow 1fd4fb1 [types] use a handwritten d.ts file instead of emit 01b9761 [Deps] update define-data-property , get-intrinsic , has-property-descriptors bee8eaf [Dev Deps] update call-bind , tape 5dae579 [Tests] use @arethetypeswrong/cli 7e22425 v1.2.1 - 2024-02-06 Commits [Dev Deps] update call-bind , tape , typescript d9a4601 [Deps] update define-data-property , get-intrinsic 38d39ae [Refactor] use es-errors , so things that only need those do not need get-intrinsic b4bfe5a v1.2.0 - 2024-01-14 Commits [New] add types f6d9088 [Fix] ensure env properties are always booleans 0c42f84 [Dev Deps] update aud , call-bind , npmignore , tape 2b75f75 [Deps] update get-intrinsic , has-property-descriptors 19bf0fc [meta] add sideEffects flag 8bb9b78 v1.1.1 - 2023-10-19 Fixed [Fix] move define-data-property to runtime deps #2 Commits [Dev Deps] update object-inspect ; add missing call-bind 5aecf79 v1.1.0 - 2023-10-13 Commits [New] add env entry point 475c87a [Tests] add coverage with nyc 14f0bf8 [eslint] fix linting failure fb516f9 [Deps] update define-data-property d727e7c v1.0.1 - 2023-10-12 Commits [Refactor] use get-intrinsic , since it\u2018s in the dep graph anyways 278a954 [meta] add exports 72acfe5 v1.0.0 - 2023-10-12 Commits Initial implementation, tests, readme fce14e1 Initial commit ca7ba85 npm init 6a7e493 Only apps should have lockfiles d2bf6c4","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v122-2024-03-09","text":"","title":"v1.2.2 - 2024-03-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits","text":"[types] use shared config 027032f [actions] remove redundant finisher; use reusable workflow 1fd4fb1 [types] use a handwritten d.ts file instead of emit 01b9761 [Deps] update define-data-property , get-intrinsic , has-property-descriptors bee8eaf [Dev Deps] update call-bind , tape 5dae579 [Tests] use @arethetypeswrong/cli 7e22425","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v121-2024-02-06","text":"","title":"v1.2.1 - 2024-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits_1","text":"[Dev Deps] update call-bind , tape , typescript d9a4601 [Deps] update define-data-property , get-intrinsic 38d39ae [Refactor] use es-errors , so things that only need those do not need get-intrinsic b4bfe5a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v120-2024-01-14","text":"","title":"v1.2.0 - 2024-01-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits_2","text":"[New] add types f6d9088 [Fix] ensure env properties are always booleans 0c42f84 [Dev Deps] update aud , call-bind , npmignore , tape 2b75f75 [Deps] update get-intrinsic , has-property-descriptors 19bf0fc [meta] add sideEffects flag 8bb9b78","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v111-2023-10-19","text":"","title":"v1.1.1 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#fixed","text":"[Fix] move define-data-property to runtime deps #2","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits_3","text":"[Dev Deps] update object-inspect ; add missing call-bind 5aecf79","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v110-2023-10-13","text":"","title":"v1.1.0 - 2023-10-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits_4","text":"[New] add env entry point 475c87a [Tests] add coverage with nyc 14f0bf8 [eslint] fix linting failure fb516f9 [Deps] update define-data-property d727e7c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v101-2023-10-12","text":"","title":"v1.0.1 - 2023-10-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits_5","text":"[Refactor] use get-intrinsic , since it\u2018s in the dep graph anyways 278a954 [meta] add exports 72acfe5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#v100-2023-10-12","text":"","title":"v1.0.0 - 2023-10-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-length/CHANGELOG/#commits_6","text":"Initial implementation, tests, readme fce14e1 Initial commit ca7ba85 npm init 6a7e493 Only apps should have lockfiles d2bf6c4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/","text":"set-function-name Set a function\u2019s name. Arguments: - fn : the function - name : the new name - loose : Optional. If true, and the name fails to be set, do not throw. Default false. Returns fn . Usage var setFunctionName = require('set-function-name'); var assert = require('assert'); const obj = { concise() {}, arrow: () => {}, named: function named() {}, anon: function () {}, }; assert.equal(obj.concise.name, 'concise'); assert.equal(obj.arrow.name, 'arrow'); assert.equal(obj.named.name, 'named'); assert.equal(obj.anon.name, 'anon'); assert.equal(setFunctionName(obj.concise, 'brief'), obj.concise); assert.equal(setFunctionName(obj.arrow, 'pointy'), obj.arrow); assert.equal(setFunctionName(obj.named, ''), obj.named); assert.equal(setFunctionName(obj.anon, 'anonymous'), obj.anon); assert.equal(obj.concise.name, 'brief'); assert.equal(obj.arrow.name, 'pointy'); assert.equal(obj.named.name, ''); assert.equal(obj.anon.name, 'anonymous');","title":"set-function-name Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/#set-function-name","text":"Set a function\u2019s name. Arguments: - fn : the function - name : the new name - loose : Optional. If true, and the name fails to be set, do not throw. Default false. Returns fn .","title":"set-function-name"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/#usage","text":"var setFunctionName = require('set-function-name'); var assert = require('assert'); const obj = { concise() {}, arrow: () => {}, named: function named() {}, anon: function () {}, }; assert.equal(obj.concise.name, 'concise'); assert.equal(obj.arrow.name, 'arrow'); assert.equal(obj.named.name, 'named'); assert.equal(obj.anon.name, 'anon'); assert.equal(setFunctionName(obj.concise, 'brief'), obj.concise); assert.equal(setFunctionName(obj.arrow, 'pointy'), obj.arrow); assert.equal(setFunctionName(obj.named, ''), obj.named); assert.equal(setFunctionName(obj.anon, 'anonymous'), obj.anon); assert.equal(obj.concise.name, 'brief'); assert.equal(obj.arrow.name, 'pointy'); assert.equal(obj.named.name, ''); assert.equal(obj.anon.name, 'anonymous');","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v2.0.2 - 2024-02-19 Commits [meta] add types ae747cd [Dev Deps] update aud , npmignore , object-inspect , tape 01aafcb [Deps] update define-data-property , has-property-descriptors 0ef6338 [Refactor] use es-errors 0b23e87 v2.0.1 - 2023-09-13 Commits [Fix] move functions-have-names to runtime deps db2eda8 v2.0.0 - 2023-09-12 Commits [eslint] add npm run lint 23e1fcd [actions] add reused GHA 525127e [meta] add .gitignore aa3abdf [Tests] switch tests to use tape; add posttest 8ad6d30 [readme] add readme 732c46c [New] add optional loose argument f5e4771 [meta] relicense package to MIT; fix repo URLs 13948f8 [meta] add auto-changelog 7ab201c [Breaking] throw if a non-function is provided cf6fc8f [Breaking] drop UMD, just use CJS 47abfe8 [Refactor] use define-data-property and has-property-descriptors 9921c2b [meta] use npmignore to autogenerate an npmignore file c5dbe4f Only apps should have lockfiles 98bbfa1 [meta] add safe-publish-latest 8916cd8 [meta] add engines 2427c8e v1.0.0 - 2017-09-14 Commits Initial commit. Including tests. f26a1f2 add .npmignore to ignore test directory 9cac96f","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#v202-2024-02-19","text":"","title":"v2.0.2 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#commits","text":"[meta] add types ae747cd [Dev Deps] update aud , npmignore , object-inspect , tape 01aafcb [Deps] update define-data-property , has-property-descriptors 0ef6338 [Refactor] use es-errors 0b23e87","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#v201-2023-09-13","text":"","title":"v2.0.1 - 2023-09-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#commits_1","text":"[Fix] move functions-have-names to runtime deps db2eda8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#v200-2023-09-12","text":"","title":"v2.0.0 - 2023-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#commits_2","text":"[eslint] add npm run lint 23e1fcd [actions] add reused GHA 525127e [meta] add .gitignore aa3abdf [Tests] switch tests to use tape; add posttest 8ad6d30 [readme] add readme 732c46c [New] add optional loose argument f5e4771 [meta] relicense package to MIT; fix repo URLs 13948f8 [meta] add auto-changelog 7ab201c [Breaking] throw if a non-function is provided cf6fc8f [Breaking] drop UMD, just use CJS 47abfe8 [Refactor] use define-data-property and has-property-descriptors 9921c2b [meta] use npmignore to autogenerate an npmignore file c5dbe4f Only apps should have lockfiles 98bbfa1 [meta] add safe-publish-latest 8916cd8 [meta] add engines 2427c8e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#v100-2017-09-14","text":"","title":"v1.0.0 - 2017-09-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/set-function-name/CHANGELOG/#commits_3","text":"Initial commit. Including tests. f26a1f2 add .npmignore to ignore test directory 9cac96f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/","text":"shebang-command Get the command from a shebang Install $ npm install shebang-command Usage const shebangCommand = require('shebang-command'); shebangCommand('#!/usr/bin/env node'); //=> 'node' shebangCommand('#!/bin/bash'); //=> 'bash' API shebangCommand(string) string Type: string String containing a shebang.","title":"shebang-command Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/#shebang-command","text":"Get the command from a shebang","title":"shebang-command"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/#install","text":"$ npm install shebang-command","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/#usage","text":"const shebangCommand = require('shebang-command'); shebangCommand('#!/usr/bin/env node'); //=> 'node' shebangCommand('#!/bin/bash'); //=> 'bash'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/#shebangcommandstring","text":"","title":"shebangCommand(string)"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-command/readme/#string","text":"Type: string String containing a shebang.","title":"string"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-regex/readme/","text":"shebang-regex Regular expression for matching a shebang line Install $ npm install shebang-regex Usage const shebangRegex = require('shebang-regex'); const string = '#!/usr/bin/env node\\nconsole.log(\"unicorns\");'; shebangRegex.test(string); //=> true shebangRegex.exec(string)[0]; //=> '#!/usr/bin/env node' shebangRegex.exec(string)[1]; //=> '/usr/bin/env node' License MIT \u00a9 Sindre Sorhus","title":"shebang-regex Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-regex/readme/#shebang-regex","text":"Regular expression for matching a shebang line","title":"shebang-regex"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-regex/readme/#install","text":"$ npm install shebang-regex","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-regex/readme/#usage","text":"const shebangRegex = require('shebang-regex'); const string = '#!/usr/bin/env node\\nconsole.log(\"unicorns\");'; shebangRegex.test(string); //=> true shebangRegex.exec(string)[0]; //=> '#!/usr/bin/env node' shebangRegex.exec(string)[1]; //=> '/usr/bin/env node'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/shebang-regex/readme/#license","text":"MIT \u00a9 Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/","text":"side-channel Store information about any JS value in a side channel. Uses WeakMap if available.","title":"side-channel"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/#side-channel","text":"Store information about any JS value in a side channel. Uses WeakMap if available.","title":"side-channel"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.6 - 2024-02-29 Commits add types 9beef66 [meta] simplify exports 4334cf9 [Deps] update call-bind d6043c4 [Dev Deps] update tape 6aca376 v1.0.5 - 2024-02-06 Commits [actions] reuse common workflows 3d2e1ff [meta] use npmignore to autogenerate an npmignore file 04296ea [meta] add .editorconfig ; add eclint 130f0a6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape d480c2f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ecbe70e [actions] update rebase action 75240b9 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape ae8d281 [Dev Deps] update @ljharb/eslint-config , aud , tape 7125b88 [Deps] update call-bind , get-intrinsic , object-inspect 82577c9 [Deps] update call-bind , get-intrinsic , object-inspect 550aadf [Tests] increase coverage 5130877 [Deps] update get-intrinsic , object-inspect ba0194c [meta] add missing engines.node 985fd24 [Refactor] use es-errors , so things that only need those do not need get-intrinsic 40227a8 [Deps] update get-intrinsic a989b40 [Deps] update object-inspect aec42d2 v1.0.4 - 2020-12-29 Commits [Tests] migrate tests to Github Actions 10909cb [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning 195613f [meta] do not publish github action workflow files 290ec29 [Tests] run nyc on all tests; use tape runner ea6d030 [actions] add \"Allow Edits\" workflow d464d8f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 02daca8 [Refactor] use call-bind and get-intrinsic instead of es-abstract e09d481 [Deps] update object.assign ee83aa8 [actions] update rebase action to use checkout v2 7726b0b v1.0.3 - 2020-08-23 Commits [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 1f10561 [Deps] update es-abstract , object-inspect bc20159 [Dev Deps] update @ljharb/eslint-config , tape b9b2b22 [Dev Deps] update eslint , @ljharb/eslint-config , tape 7055ab4 [Dev Deps] update auto-changelog ; add aud d278c37 [actions] switch Automatic Rebase workflow to pull_request_target event 3bcf982 [Tests] only audit prod deps 18d01c4 [Deps] update es-abstract 6ab096d [Dev Deps] update tape 9dc174c [Deps] update es-abstract 431d0f0 [Deps] update es-abstract 49869fd [meta] Add package.json to package's exports 77d9cdc v1.0.2 - 2019-12-20 Commits [Dev Deps] update @ljharb/eslint-config , tape 4a526df [Deps] update es-abstract d4f6e62 v1.0.1 - 2019-12-01 Commits [Fix] add missing \"exports\" d212907 v1.0.0 - 2019-12-01 Commits Initial implementation dbebd3a Initial tests 73bdefe Initial commit 43c03e1 npm init 5c090a7 [meta] add auto-changelog a5c4e56 [actions] add automatic rebasing / merge commit blocking bab1683 [meta] add funding field; create FUNDING.yml 63d7aea [Tests] add npm run lint 46a5a81 Only apps should have lockfiles 8b16b03 [meta] add safe-publish-latest 2f098ef","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v106-2024-02-29","text":"","title":"v1.0.6 - 2024-02-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits","text":"add types 9beef66 [meta] simplify exports 4334cf9 [Deps] update call-bind d6043c4 [Dev Deps] update tape 6aca376","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v105-2024-02-06","text":"","title":"v1.0.5 - 2024-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits_1","text":"[actions] reuse common workflows 3d2e1ff [meta] use npmignore to autogenerate an npmignore file 04296ea [meta] add .editorconfig ; add eclint 130f0a6 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , safe-publish-latest , tape d480c2f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape ecbe70e [actions] update rebase action 75240b9 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , tape ae8d281 [Dev Deps] update @ljharb/eslint-config , aud , tape 7125b88 [Deps] update call-bind , get-intrinsic , object-inspect 82577c9 [Deps] update call-bind , get-intrinsic , object-inspect 550aadf [Tests] increase coverage 5130877 [Deps] update get-intrinsic , object-inspect ba0194c [meta] add missing engines.node 985fd24 [Refactor] use es-errors , so things that only need those do not need get-intrinsic 40227a8 [Deps] update get-intrinsic a989b40 [Deps] update object-inspect aec42d2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v104-2020-12-29","text":"","title":"v1.0.4 - 2020-12-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits_2","text":"[Tests] migrate tests to Github Actions 10909cb [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning 195613f [meta] do not publish github action workflow files 290ec29 [Tests] run nyc on all tests; use tape runner ea6d030 [actions] add \"Allow Edits\" workflow d464d8f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog 02daca8 [Refactor] use call-bind and get-intrinsic instead of es-abstract e09d481 [Deps] update object.assign ee83aa8 [actions] update rebase action to use checkout v2 7726b0b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v103-2020-08-23","text":"","title":"v1.0.3 - 2020-08-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits_3","text":"[Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape 1f10561 [Deps] update es-abstract , object-inspect bc20159 [Dev Deps] update @ljharb/eslint-config , tape b9b2b22 [Dev Deps] update eslint , @ljharb/eslint-config , tape 7055ab4 [Dev Deps] update auto-changelog ; add aud d278c37 [actions] switch Automatic Rebase workflow to pull_request_target event 3bcf982 [Tests] only audit prod deps 18d01c4 [Deps] update es-abstract 6ab096d [Dev Deps] update tape 9dc174c [Deps] update es-abstract 431d0f0 [Deps] update es-abstract 49869fd [meta] Add package.json to package's exports 77d9cdc","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v102-2019-12-20","text":"","title":"v1.0.2 - 2019-12-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits_4","text":"[Dev Deps] update @ljharb/eslint-config , tape 4a526df [Deps] update es-abstract d4f6e62","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v101-2019-12-01","text":"","title":"v1.0.1 - 2019-12-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits_5","text":"[Fix] add missing \"exports\" d212907","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#v100-2019-12-01","text":"","title":"v1.0.0 - 2019-12-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/side-channel/CHANGELOG/#commits_6","text":"Initial implementation dbebd3a Initial tests 73bdefe Initial commit 43c03e1 npm init 5c090a7 [meta] add auto-changelog a5c4e56 [actions] add automatic rebasing / merge commit blocking bab1683 [meta] add funding field; create FUNDING.yml 63d7aea [Tests] add npm run lint 46a5a81 Only apps should have lockfiles 8b16b03 [meta] add safe-publish-latest 2f098ef","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/","text":"Source Map JS Difference between original source-map : TL,DR: it's fork of original source-map@0.6, but with perfomance optimizations. This journey starts from source-map@0.7.0 . Some part of it was rewritten to Rust and WASM and API became async. It's still a major block for many libraries like PostCSS or Sass for example because they need to migrate the whole API to the async way. This is the reason why 0.6.1 has 2x more downloads than 0.7.3 while it's faster several times. More important that WASM version has some optimizations in JS code too. This is why community asked to create branch for 0.6 version and port these optimizations but, sadly, the answer was \u00abno\u00bb. A bit later I discovered the issue created by Ben Rothman (@benthemonkey) with no response at all. Roman Dvornov (@lahmatiy) wrote a serveral posts (russian, only, sorry) about source-map library in his own Telegram channel. He mentioned the article \u00abMaybe you don't need Rust and WASM to speed up your JS\u00bb written by Vyacheslav Egorov (@mraleph) . This article contains optimizations and hacks that lead to almost the same performance compare to WASM implementation. I decided to fork the original source-map and port these optimizations from the article and several others PR from the original source-map. This is a library to generate and consume the source map format described here . Use with Node $ npm install source-map-js Table of Contents Examples Consuming a source map Generating a source map With SourceNode (high level API) With SourceMapGenerator (low level API) API SourceMapConsumer new SourceMapConsumer(rawSourceMap) SourceMapConsumer.prototype.computeColumnSpans() SourceMapConsumer.prototype.originalPositionFor(generatedPosition) SourceMapConsumer.prototype.generatedPositionFor(originalPosition) SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition) SourceMapConsumer.prototype.hasContentsOfAllSources() SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing]) SourceMapConsumer.prototype.eachMapping(callback, context, order) SourceMapGenerator new SourceMapGenerator([startOfSourceMap]) SourceMapGenerator.fromSourceMap(sourceMapConsumer) SourceMapGenerator.prototype.addMapping(mapping) SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent) SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]]) SourceMapGenerator.prototype.toString() SourceNode new SourceNode([line, column, source[, chunk[, name]]]) SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath]) SourceNode.prototype.add(chunk) SourceNode.prototype.prepend(chunk) SourceNode.prototype.setSourceContent(sourceFile, sourceContent) SourceNode.prototype.walk(fn) SourceNode.prototype.walkSourceContents(fn) SourceNode.prototype.join(sep) SourceNode.prototype.replaceRight(pattern, replacement) SourceNode.prototype.toString() SourceNode.prototype.toStringWithSourceMap([startOfSourceMap]) Examples Consuming a source map var rawSourceMap = { version: 3, file: 'min.js', names: ['bar', 'baz', 'n'], sources: ['one.js', 'two.js'], sourceRoot: 'http://example.com/www/js/', mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA' }; var smc = new SourceMapConsumer(rawSourceMap); console.log(smc.sources); // [ 'http://example.com/www/js/one.js', // 'http://example.com/www/js/two.js' ] console.log(smc.originalPositionFor({ line: 2, column: 28 })); // { source: 'http://example.com/www/js/two.js', // line: 2, // column: 10, // name: 'n' } console.log(smc.generatedPositionFor({ source: 'http://example.com/www/js/two.js', line: 2, column: 10 })); // { line: 2, column: 28 } smc.eachMapping(function (m) { // ... }); Generating a source map In depth guide: Compiling to JavaScript, and Debugging with Source Maps With SourceNode (high level API) function compile(ast) { switch (ast.type) { case 'BinaryExpression': return new SourceNode( ast.location.line, ast.location.column, ast.location.source, [compile(ast.left), \" + \", compile(ast.right)] ); case 'Literal': return new SourceNode( ast.location.line, ast.location.column, ast.location.source, String(ast.value) ); // ... default: throw new Error(\"Bad AST\"); } } var ast = parse(\"40 + 2\", \"add.js\"); console.log(compile(ast).toStringWithSourceMap({ file: 'add.js' })); // { code: '40 + 2', // map: [object SourceMapGenerator] } With SourceMapGenerator (low level API) var map = new SourceMapGenerator({ file: \"source-mapped.js\" }); map.addMapping({ generated: { line: 10, column: 35 }, source: \"foo.js\", original: { line: 33, column: 2 }, name: \"christopher\" }); console.log(map.toString()); // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}' API Get a reference to the module: // Node.js var sourceMap = require('source-map'); // Browser builds var sourceMap = window.sourceMap; // Inside Firefox const sourceMap = require(\"devtools/toolkit/sourcemap/source-map.js\"); SourceMapConsumer A SourceMapConsumer instance represents a parsed source map which we can query for information about the original file positions by giving it a file position in the generated source. new SourceMapConsumer(rawSourceMap) The only parameter is the raw source map (either as a string which can be JSON.parse 'd, or an object). According to the spec, source maps have the following attributes: version : Which version of the source map spec this map is following. sources : An array of URLs to the original source files. names : An array of identifiers which can be referenced by individual mappings. sourceRoot : Optional. The URL root from which all sources are relative. sourcesContent : Optional. An array of contents of the original source files. mappings : A string of base64 VLQs which contain the actual mappings. file : Optional. The generated filename this source map is associated with. var consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData); SourceMapConsumer.prototype.computeColumnSpans() Compute the last column for each generated mapping. The last column is inclusive. // Before: consumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" }) // [ { line: 2, // column: 1 }, // { line: 2, // column: 10 }, // { line: 2, // column: 20 } ] consumer.computeColumnSpans(); // After: consumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" }) // [ { line: 2, // column: 1, // lastColumn: 9 }, // { line: 2, // column: 10, // lastColumn: 19 }, // { line: 2, // column: 20, // lastColumn: Infinity } ] SourceMapConsumer.prototype.originalPositionFor(generatedPosition) Returns the original source, line, and column information for the generated source's line and column positions provided. The only argument is an object with the following properties: line : The line number in the generated source. Line numbers in this library are 1-based (note that the underlying source map specification uses 0-based line numbers -- this library handles the translation). column : The column number in the generated source. Column numbers in this library are 0-based. bias : Either SourceMapConsumer.GREATEST_LOWER_BOUND or SourceMapConsumer.LEAST_UPPER_BOUND . Specifies whether to return the closest element that is smaller than or greater than the one we are searching for, respectively, if the exact element cannot be found. Defaults to SourceMapConsumer.GREATEST_LOWER_BOUND . and an object is returned with the following properties: source : The original source file, or null if this information is not available. line : The line number in the original source, or null if this information is not available. The line number is 1-based. column : The column number in the original source, or null if this information is not available. The column number is 0-based. name : The original identifier, or null if this information is not available. consumer.originalPositionFor({ line: 2, column: 10 }) // { source: 'foo.coffee', // line: 2, // column: 2, // name: null } consumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 }) // { source: null, // line: null, // column: null, // name: null } SourceMapConsumer.prototype.generatedPositionFor(originalPosition) Returns the generated line and column information for the original source, line, and column positions provided. The only argument is an object with the following properties: source : The filename of the original source. line : The line number in the original source. The line number is 1-based. column : The column number in the original source. The column number is 0-based. and an object is returned with the following properties: line : The line number in the generated source, or null. The line number is 1-based. column : The column number in the generated source, or null. The column number is 0-based. consumer.generatedPositionFor({ source: \"example.js\", line: 2, column: 10 }) // { line: 1, // column: 56 } SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition) Returns all generated line and column information for the original source, line, and column provided. If no column is provided, returns all mappings corresponding to a either the line we are searching for or the next closest line that has any mappings. Otherwise, returns all mappings corresponding to the given line and either the column we are searching for or the next closest column that has any offsets. The only argument is an object with the following properties: source : The filename of the original source. line : The line number in the original source. The line number is 1-based. column : Optional. The column number in the original source. The column number is 0-based. and an array of objects is returned, each with the following properties: line : The line number in the generated source, or null. The line number is 1-based. column : The column number in the generated source, or null. The column number is 0-based. consumer.allGeneratedpositionsfor({ line: 2, source: \"foo.coffee\" }) // [ { line: 2, // column: 1 }, // { line: 2, // column: 10 }, // { line: 2, // column: 20 } ] SourceMapConsumer.prototype.hasContentsOfAllSources() Return true if we have the embedded source content for every source listed in the source map, false otherwise. In other words, if this method returns true , then consumer.sourceContentFor(s) will succeed for every source s in consumer.sources . // ... if (consumer.hasContentsOfAllSources()) { consumerReadyCallback(consumer); } else { fetchSources(consumer, consumerReadyCallback); } // ... SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing]) Returns the original source content for the source provided. The only argument is the URL of the original source file. If the source content for the given source is not found, then an error is thrown. Optionally, pass true as the second param to have null returned instead. consumer.sources // [ \"my-cool-lib.clj\" ] consumer.sourceContentFor(\"my-cool-lib.clj\") // \"...\" consumer.sourceContentFor(\"this is not in the source map\"); // Error: \"this is not in the source map\" is not in the source map consumer.sourceContentFor(\"this is not in the source map\", true); // null SourceMapConsumer.prototype.eachMapping(callback, context, order) Iterate over each mapping between an original source/line/column and a generated line/column in this source map. callback : The function that is called with each mapping. Mappings have the form { source, generatedLine, generatedColumn, originalLine, originalColumn, name } context : Optional. If specified, this object will be the value of this every time that callback is called. order : Either SourceMapConsumer.GENERATED_ORDER or SourceMapConsumer.ORIGINAL_ORDER . Specifies whether you want to iterate over the mappings sorted by the generated file's line/column order or the original's source/line/column order, respectively. Defaults to SourceMapConsumer.GENERATED_ORDER . consumer.eachMapping(function (m) { console.log(m); }) // ... // { source: 'illmatic.js', // generatedLine: 1, // generatedColumn: 0, // originalLine: 1, // originalColumn: 0, // name: null } // { source: 'illmatic.js', // generatedLine: 2, // generatedColumn: 0, // originalLine: 2, // originalColumn: 0, // name: null } // ... SourceMapGenerator An instance of the SourceMapGenerator represents a source map which is being built incrementally. new SourceMapGenerator([startOfSourceMap]) You may pass an object with the following properties: file : The filename of the generated source that this source map is associated with. sourceRoot : A root for all relative URLs in this source map. skipValidation : Optional. When true , disables validation of mappings as they are added. This can improve performance but should be used with discretion, as a last resort. Even then, one should avoid using this flag when running tests, if possible. ignoreInvalidMapping : Optional. When true , instead of throwing error on invalid mapping, it will be ignored. var generator = new sourceMap.SourceMapGenerator({ file: \"my-generated-javascript-file.js\", sourceRoot: \"http://example.com/app/js/\" }); SourceMapGenerator.fromSourceMap(sourceMapConsumer, sourceMapGeneratorOptions) Creates a new SourceMapGenerator from an existing SourceMapConsumer instance. sourceMapConsumer The SourceMap. sourceMapGeneratorOptions options that will be passed to the SourceMapGenerator constructor which used under the hood. var generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer, { ignoreInvalidMapping: true, }); SourceMapGenerator.prototype.addMapping(mapping) Add a single mapping from original source line and column to the generated source's line and column for this source map being created. The mapping object should have the following properties: generated : An object with the generated line and column positions. original : An object with the original line and column positions. source : The original source file (relative to the sourceRoot). name : An optional original token name for this mapping. generator.addMapping({ source: \"module-one.scm\", original: { line: 128, column: 0 }, generated: { line: 3, column: 456 } }) SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent) Set the source content for an original source file. sourceFile the URL of the original source file. sourceContent the content of the source file. generator.setSourceContent(\"module-one.scm\", fs.readFileSync(\"path/to/module-one.scm\")) SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]]) Applies a SourceMap for a source file to the SourceMap. Each mapping to the supplied source file is rewritten using the supplied SourceMap. Note: The resolution for the resulting mappings is the minimum of this map and the supplied map. sourceMapConsumer : The SourceMap to be applied. sourceFile : Optional. The filename of the source file. If omitted, sourceMapConsumer.file will be used, if it exists. Otherwise an error will be thrown. sourceMapPath : Optional. The dirname of the path to the SourceMap to be applied. If relative, it is relative to the SourceMap. This parameter is needed when the two SourceMaps aren't in the same directory, and the SourceMap to be applied contains relative source paths. If so, those relative source paths need to be rewritten relative to the SourceMap. If omitted, it is assumed that both SourceMaps are in the same directory, thus not needing any rewriting. (Supplying '.' has the same effect.) SourceMapGenerator.prototype.toString() Renders the source map being generated to a string. generator.toString() // '{\"version\":3,\"sources\":[\"module-one.scm\"],\"names\":[],\"mappings\":\"...snip...\",\"file\":\"my-generated-javascript-file.js\",\"sourceRoot\":\"http://example.com/app/js/\"}' SourceNode SourceNodes provide a way to abstract over interpolating and/or concatenating snippets of generated JavaScript source code, while maintaining the line and column information associated between those snippets and the original source code. This is useful as the final intermediate representation a compiler might use before outputting the generated JS and source map. new SourceNode([line, column, source[, chunk[, name]]]) line : The original line number associated with this source node, or null if it isn't associated with an original line. The line number is 1-based. column : The original column number associated with this source node, or null if it isn't associated with an original column. The column number is 0-based. source : The original source's filename; null if no filename is provided. chunk : Optional. Is immediately passed to SourceNode.prototype.add , see below. name : Optional. The original identifier. var node = new SourceNode(1, 2, \"a.cpp\", [ new SourceNode(3, 4, \"b.cpp\", \"extern int status;\\n\"), new SourceNode(5, 6, \"c.cpp\", \"std::string* make_string(size_t n);\\n\"), new SourceNode(7, 8, \"d.cpp\", \"int main(int argc, char** argv) {}\\n\"), ]); SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath]) Creates a SourceNode from generated code and a SourceMapConsumer. code : The generated code sourceMapConsumer The SourceMap for the generated code relativePath The optional path that relative sources in sourceMapConsumer should be relative to. var consumer = new SourceMapConsumer(fs.readFileSync(\"path/to/my-file.js.map\", \"utf8\")); var node = SourceNode.fromStringWithSourceMap(fs.readFileSync(\"path/to/my-file.js\"), consumer); SourceNode.prototype.add(chunk) Add a chunk of generated JS to this source node. chunk : A string snippet of generated JS code, another instance of SourceNode , or an array where each member is one of those things. node.add(\" + \"); node.add(otherNode); node.add([leftHandOperandNode, \" + \", rightHandOperandNode]); SourceNode.prototype.prepend(chunk) Prepend a chunk of generated JS to this source node. chunk : A string snippet of generated JS code, another instance of SourceNode , or an array where each member is one of those things. node.prepend(\"/** Build Id: f783haef86324gf **/\\n\\n\"); SourceNode.prototype.setSourceContent(sourceFile, sourceContent) Set the source content for a source file. This will be added to the SourceMap in the sourcesContent field. sourceFile : The filename of the source file sourceContent : The content of the source file node.setSourceContent(\"module-one.scm\", fs.readFileSync(\"path/to/module-one.scm\")) SourceNode.prototype.walk(fn) Walk over the tree of JS snippets in this node and its children. The walking function is called once for each snippet of JS and is passed that snippet and the its original associated source's line/column location. fn : The traversal function. var node = new SourceNode(1, 2, \"a.js\", [ new SourceNode(3, 4, \"b.js\", \"uno\"), \"dos\", [ \"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\") ] ]); node.walk(function (code, loc) { console.log(\"WALK:\", code, loc); }) // WALK: uno { source: 'b.js', line: 3, column: 4, name: null } // WALK: dos { source: 'a.js', line: 1, column: 2, name: null } // WALK: tres { source: 'a.js', line: 1, column: 2, name: null } // WALK: quatro { source: 'c.js', line: 5, column: 6, name: null } SourceNode.prototype.walkSourceContents(fn) Walk over the tree of SourceNodes. The walking function is called for each source file content and is passed the filename and source content. fn : The traversal function. var a = new SourceNode(1, 2, \"a.js\", \"generated from a\"); a.setSourceContent(\"a.js\", \"original a\"); var b = new SourceNode(1, 2, \"b.js\", \"generated from b\"); b.setSourceContent(\"b.js\", \"original b\"); var c = new SourceNode(1, 2, \"c.js\", \"generated from c\"); c.setSourceContent(\"c.js\", \"original c\"); var node = new SourceNode(null, null, null, [a, b, c]); node.walkSourceContents(function (source, contents) { console.log(\"WALK:\", source, \":\", contents); }) // WALK: a.js : original a // WALK: b.js : original b // WALK: c.js : original c SourceNode.prototype.join(sep) Like Array.prototype.join except for SourceNodes. Inserts the separator between each of this source node's children. sep : The separator. var lhs = new SourceNode(1, 2, \"a.rs\", \"my_copy\"); var operand = new SourceNode(3, 4, \"a.rs\", \"=\"); var rhs = new SourceNode(5, 6, \"a.rs\", \"orig.clone()\"); var node = new SourceNode(null, null, null, [ lhs, operand, rhs ]); var joinedNode = node.join(\" \"); SourceNode.prototype.replaceRight(pattern, replacement) Call String.prototype.replace on the very right-most source snippet. Useful for trimming white space from the end of a source node, etc. pattern : The pattern to replace. replacement : The thing to replace the pattern with. // Trim trailing white space. node.replaceRight(/\\s*$/, \"\"); SourceNode.prototype.toString() Return the string representation of this source node. Walks over the tree and concatenates all the various snippets together to one string. var node = new SourceNode(1, 2, \"a.js\", [ new SourceNode(3, 4, \"b.js\", \"uno\"), \"dos\", [ \"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\") ] ]); node.toString() // 'unodostresquatro' SourceNode.prototype.toStringWithSourceMap([startOfSourceMap]) Returns the string representation of this tree of source nodes, plus a SourceMapGenerator which contains all the mappings between the generated and original sources. The arguments are the same as those to new SourceMapGenerator . var node = new SourceNode(1, 2, \"a.js\", [ new SourceNode(3, 4, \"b.js\", \"uno\"), \"dos\", [ \"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\") ] ]); node.toStringWithSourceMap({ file: \"my-output-file.js\" }) // { code: 'unodostresquatro', // map: [object SourceMapGenerator] }","title":"Source Map JS"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#source-map-js","text":"Difference between original source-map : TL,DR: it's fork of original source-map@0.6, but with perfomance optimizations. This journey starts from source-map@0.7.0 . Some part of it was rewritten to Rust and WASM and API became async. It's still a major block for many libraries like PostCSS or Sass for example because they need to migrate the whole API to the async way. This is the reason why 0.6.1 has 2x more downloads than 0.7.3 while it's faster several times. More important that WASM version has some optimizations in JS code too. This is why community asked to create branch for 0.6 version and port these optimizations but, sadly, the answer was \u00abno\u00bb. A bit later I discovered the issue created by Ben Rothman (@benthemonkey) with no response at all. Roman Dvornov (@lahmatiy) wrote a serveral posts (russian, only, sorry) about source-map library in his own Telegram channel. He mentioned the article \u00abMaybe you don't need Rust and WASM to speed up your JS\u00bb written by Vyacheslav Egorov (@mraleph) . This article contains optimizations and hacks that lead to almost the same performance compare to WASM implementation. I decided to fork the original source-map and port these optimizations from the article and several others PR from the original source-map. This is a library to generate and consume the source map format described here .","title":"Source Map JS"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#use-with-node","text":"$ npm install source-map-js","title":"Use with Node"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#table-of-contents","text":"Examples Consuming a source map Generating a source map With SourceNode (high level API) With SourceMapGenerator (low level API) API SourceMapConsumer new SourceMapConsumer(rawSourceMap) SourceMapConsumer.prototype.computeColumnSpans() SourceMapConsumer.prototype.originalPositionFor(generatedPosition) SourceMapConsumer.prototype.generatedPositionFor(originalPosition) SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition) SourceMapConsumer.prototype.hasContentsOfAllSources() SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing]) SourceMapConsumer.prototype.eachMapping(callback, context, order) SourceMapGenerator new SourceMapGenerator([startOfSourceMap]) SourceMapGenerator.fromSourceMap(sourceMapConsumer) SourceMapGenerator.prototype.addMapping(mapping) SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent) SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]]) SourceMapGenerator.prototype.toString() SourceNode new SourceNode([line, column, source[, chunk[, name]]]) SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath]) SourceNode.prototype.add(chunk) SourceNode.prototype.prepend(chunk) SourceNode.prototype.setSourceContent(sourceFile, sourceContent) SourceNode.prototype.walk(fn) SourceNode.prototype.walkSourceContents(fn) SourceNode.prototype.join(sep) SourceNode.prototype.replaceRight(pattern, replacement) SourceNode.prototype.toString() SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])","title":"Table of Contents"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#examples","text":"","title":"Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#consuming-a-source-map","text":"var rawSourceMap = { version: 3, file: 'min.js', names: ['bar', 'baz', 'n'], sources: ['one.js', 'two.js'], sourceRoot: 'http://example.com/www/js/', mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA' }; var smc = new SourceMapConsumer(rawSourceMap); console.log(smc.sources); // [ 'http://example.com/www/js/one.js', // 'http://example.com/www/js/two.js' ] console.log(smc.originalPositionFor({ line: 2, column: 28 })); // { source: 'http://example.com/www/js/two.js', // line: 2, // column: 10, // name: 'n' } console.log(smc.generatedPositionFor({ source: 'http://example.com/www/js/two.js', line: 2, column: 10 })); // { line: 2, column: 28 } smc.eachMapping(function (m) { // ... });","title":"Consuming a source map"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#generating-a-source-map","text":"In depth guide: Compiling to JavaScript, and Debugging with Source Maps","title":"Generating a source map"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#with-sourcenode-high-level-api","text":"function compile(ast) { switch (ast.type) { case 'BinaryExpression': return new SourceNode( ast.location.line, ast.location.column, ast.location.source, [compile(ast.left), \" + \", compile(ast.right)] ); case 'Literal': return new SourceNode( ast.location.line, ast.location.column, ast.location.source, String(ast.value) ); // ... default: throw new Error(\"Bad AST\"); } } var ast = parse(\"40 + 2\", \"add.js\"); console.log(compile(ast).toStringWithSourceMap({ file: 'add.js' })); // { code: '40 + 2', // map: [object SourceMapGenerator] }","title":"With SourceNode (high level API)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#with-sourcemapgenerator-low-level-api","text":"var map = new SourceMapGenerator({ file: \"source-mapped.js\" }); map.addMapping({ generated: { line: 10, column: 35 }, source: \"foo.js\", original: { line: 33, column: 2 }, name: \"christopher\" }); console.log(map.toString()); // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'","title":"With SourceMapGenerator (low level API)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#api","text":"Get a reference to the module: // Node.js var sourceMap = require('source-map'); // Browser builds var sourceMap = window.sourceMap; // Inside Firefox const sourceMap = require(\"devtools/toolkit/sourcemap/source-map.js\");","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumer","text":"A SourceMapConsumer instance represents a parsed source map which we can query for information about the original file positions by giving it a file position in the generated source.","title":"SourceMapConsumer"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#new-sourcemapconsumerrawsourcemap","text":"The only parameter is the raw source map (either as a string which can be JSON.parse 'd, or an object). According to the spec, source maps have the following attributes: version : Which version of the source map spec this map is following. sources : An array of URLs to the original source files. names : An array of identifiers which can be referenced by individual mappings. sourceRoot : Optional. The URL root from which all sources are relative. sourcesContent : Optional. An array of contents of the original source files. mappings : A string of base64 VLQs which contain the actual mappings. file : Optional. The generated filename this source map is associated with. var consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData);","title":"new SourceMapConsumer(rawSourceMap)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypecomputecolumnspans","text":"Compute the last column for each generated mapping. The last column is inclusive. // Before: consumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" }) // [ { line: 2, // column: 1 }, // { line: 2, // column: 10 }, // { line: 2, // column: 20 } ] consumer.computeColumnSpans(); // After: consumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" }) // [ { line: 2, // column: 1, // lastColumn: 9 }, // { line: 2, // column: 10, // lastColumn: 19 }, // { line: 2, // column: 20, // lastColumn: Infinity } ]","title":"SourceMapConsumer.prototype.computeColumnSpans()"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypeoriginalpositionforgeneratedposition","text":"Returns the original source, line, and column information for the generated source's line and column positions provided. The only argument is an object with the following properties: line : The line number in the generated source. Line numbers in this library are 1-based (note that the underlying source map specification uses 0-based line numbers -- this library handles the translation). column : The column number in the generated source. Column numbers in this library are 0-based. bias : Either SourceMapConsumer.GREATEST_LOWER_BOUND or SourceMapConsumer.LEAST_UPPER_BOUND . Specifies whether to return the closest element that is smaller than or greater than the one we are searching for, respectively, if the exact element cannot be found. Defaults to SourceMapConsumer.GREATEST_LOWER_BOUND . and an object is returned with the following properties: source : The original source file, or null if this information is not available. line : The line number in the original source, or null if this information is not available. The line number is 1-based. column : The column number in the original source, or null if this information is not available. The column number is 0-based. name : The original identifier, or null if this information is not available. consumer.originalPositionFor({ line: 2, column: 10 }) // { source: 'foo.coffee', // line: 2, // column: 2, // name: null } consumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 }) // { source: null, // line: null, // column: null, // name: null }","title":"SourceMapConsumer.prototype.originalPositionFor(generatedPosition)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypegeneratedpositionfororiginalposition","text":"Returns the generated line and column information for the original source, line, and column positions provided. The only argument is an object with the following properties: source : The filename of the original source. line : The line number in the original source. The line number is 1-based. column : The column number in the original source. The column number is 0-based. and an object is returned with the following properties: line : The line number in the generated source, or null. The line number is 1-based. column : The column number in the generated source, or null. The column number is 0-based. consumer.generatedPositionFor({ source: \"example.js\", line: 2, column: 10 }) // { line: 1, // column: 56 }","title":"SourceMapConsumer.prototype.generatedPositionFor(originalPosition)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypeallgeneratedpositionsfororiginalposition","text":"Returns all generated line and column information for the original source, line, and column provided. If no column is provided, returns all mappings corresponding to a either the line we are searching for or the next closest line that has any mappings. Otherwise, returns all mappings corresponding to the given line and either the column we are searching for or the next closest column that has any offsets. The only argument is an object with the following properties: source : The filename of the original source. line : The line number in the original source. The line number is 1-based. column : Optional. The column number in the original source. The column number is 0-based. and an array of objects is returned, each with the following properties: line : The line number in the generated source, or null. The line number is 1-based. column : The column number in the generated source, or null. The column number is 0-based. consumer.allGeneratedpositionsfor({ line: 2, source: \"foo.coffee\" }) // [ { line: 2, // column: 1 }, // { line: 2, // column: 10 }, // { line: 2, // column: 20 } ]","title":"SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypehascontentsofallsources","text":"Return true if we have the embedded source content for every source listed in the source map, false otherwise. In other words, if this method returns true , then consumer.sourceContentFor(s) will succeed for every source s in consumer.sources . // ... if (consumer.hasContentsOfAllSources()) { consumerReadyCallback(consumer); } else { fetchSources(consumer, consumerReadyCallback); } // ...","title":"SourceMapConsumer.prototype.hasContentsOfAllSources()"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypesourcecontentforsource-returnnullonmissing","text":"Returns the original source content for the source provided. The only argument is the URL of the original source file. If the source content for the given source is not found, then an error is thrown. Optionally, pass true as the second param to have null returned instead. consumer.sources // [ \"my-cool-lib.clj\" ] consumer.sourceContentFor(\"my-cool-lib.clj\") // \"...\" consumer.sourceContentFor(\"this is not in the source map\"); // Error: \"this is not in the source map\" is not in the source map consumer.sourceContentFor(\"this is not in the source map\", true); // null","title":"SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapconsumerprototypeeachmappingcallback-context-order","text":"Iterate over each mapping between an original source/line/column and a generated line/column in this source map. callback : The function that is called with each mapping. Mappings have the form { source, generatedLine, generatedColumn, originalLine, originalColumn, name } context : Optional. If specified, this object will be the value of this every time that callback is called. order : Either SourceMapConsumer.GENERATED_ORDER or SourceMapConsumer.ORIGINAL_ORDER . Specifies whether you want to iterate over the mappings sorted by the generated file's line/column order or the original's source/line/column order, respectively. Defaults to SourceMapConsumer.GENERATED_ORDER . consumer.eachMapping(function (m) { console.log(m); }) // ... // { source: 'illmatic.js', // generatedLine: 1, // generatedColumn: 0, // originalLine: 1, // originalColumn: 0, // name: null } // { source: 'illmatic.js', // generatedLine: 2, // generatedColumn: 0, // originalLine: 2, // originalColumn: 0, // name: null } // ...","title":"SourceMapConsumer.prototype.eachMapping(callback, context, order)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapgenerator","text":"An instance of the SourceMapGenerator represents a source map which is being built incrementally.","title":"SourceMapGenerator"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#new-sourcemapgeneratorstartofsourcemap","text":"You may pass an object with the following properties: file : The filename of the generated source that this source map is associated with. sourceRoot : A root for all relative URLs in this source map. skipValidation : Optional. When true , disables validation of mappings as they are added. This can improve performance but should be used with discretion, as a last resort. Even then, one should avoid using this flag when running tests, if possible. ignoreInvalidMapping : Optional. When true , instead of throwing error on invalid mapping, it will be ignored. var generator = new sourceMap.SourceMapGenerator({ file: \"my-generated-javascript-file.js\", sourceRoot: \"http://example.com/app/js/\" });","title":"new SourceMapGenerator([startOfSourceMap])"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapgeneratorfromsourcemapsourcemapconsumer-sourcemapgeneratoroptions","text":"Creates a new SourceMapGenerator from an existing SourceMapConsumer instance. sourceMapConsumer The SourceMap. sourceMapGeneratorOptions options that will be passed to the SourceMapGenerator constructor which used under the hood. var generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer, { ignoreInvalidMapping: true, });","title":"SourceMapGenerator.fromSourceMap(sourceMapConsumer, sourceMapGeneratorOptions)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapgeneratorprototypeaddmappingmapping","text":"Add a single mapping from original source line and column to the generated source's line and column for this source map being created. The mapping object should have the following properties: generated : An object with the generated line and column positions. original : An object with the original line and column positions. source : The original source file (relative to the sourceRoot). name : An optional original token name for this mapping. generator.addMapping({ source: \"module-one.scm\", original: { line: 128, column: 0 }, generated: { line: 3, column: 456 } })","title":"SourceMapGenerator.prototype.addMapping(mapping)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent","text":"Set the source content for an original source file. sourceFile the URL of the original source file. sourceContent the content of the source file. generator.setSourceContent(\"module-one.scm\", fs.readFileSync(\"path/to/module-one.scm\"))","title":"SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapgeneratorprototypeapplysourcemapsourcemapconsumer-sourcefile-sourcemappath","text":"Applies a SourceMap for a source file to the SourceMap. Each mapping to the supplied source file is rewritten using the supplied SourceMap. Note: The resolution for the resulting mappings is the minimum of this map and the supplied map. sourceMapConsumer : The SourceMap to be applied. sourceFile : Optional. The filename of the source file. If omitted, sourceMapConsumer.file will be used, if it exists. Otherwise an error will be thrown. sourceMapPath : Optional. The dirname of the path to the SourceMap to be applied. If relative, it is relative to the SourceMap. This parameter is needed when the two SourceMaps aren't in the same directory, and the SourceMap to be applied contains relative source paths. If so, those relative source paths need to be rewritten relative to the SourceMap. If omitted, it is assumed that both SourceMaps are in the same directory, thus not needing any rewriting. (Supplying '.' has the same effect.)","title":"SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcemapgeneratorprototypetostring","text":"Renders the source map being generated to a string. generator.toString() // '{\"version\":3,\"sources\":[\"module-one.scm\"],\"names\":[],\"mappings\":\"...snip...\",\"file\":\"my-generated-javascript-file.js\",\"sourceRoot\":\"http://example.com/app/js/\"}'","title":"SourceMapGenerator.prototype.toString()"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenode","text":"SourceNodes provide a way to abstract over interpolating and/or concatenating snippets of generated JavaScript source code, while maintaining the line and column information associated between those snippets and the original source code. This is useful as the final intermediate representation a compiler might use before outputting the generated JS and source map.","title":"SourceNode"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#new-sourcenodeline-column-source-chunk-name","text":"line : The original line number associated with this source node, or null if it isn't associated with an original line. The line number is 1-based. column : The original column number associated with this source node, or null if it isn't associated with an original column. The column number is 0-based. source : The original source's filename; null if no filename is provided. chunk : Optional. Is immediately passed to SourceNode.prototype.add , see below. name : Optional. The original identifier. var node = new SourceNode(1, 2, \"a.cpp\", [ new SourceNode(3, 4, \"b.cpp\", \"extern int status;\\n\"), new SourceNode(5, 6, \"c.cpp\", \"std::string* make_string(size_t n);\\n\"), new SourceNode(7, 8, \"d.cpp\", \"int main(int argc, char** argv) {}\\n\"), ]);","title":"new SourceNode([line, column, source[, chunk[, name]]])"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodefromstringwithsourcemapcode-sourcemapconsumer-relativepath","text":"Creates a SourceNode from generated code and a SourceMapConsumer. code : The generated code sourceMapConsumer The SourceMap for the generated code relativePath The optional path that relative sources in sourceMapConsumer should be relative to. var consumer = new SourceMapConsumer(fs.readFileSync(\"path/to/my-file.js.map\", \"utf8\")); var node = SourceNode.fromStringWithSourceMap(fs.readFileSync(\"path/to/my-file.js\"), consumer);","title":"SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypeaddchunk","text":"Add a chunk of generated JS to this source node. chunk : A string snippet of generated JS code, another instance of SourceNode , or an array where each member is one of those things. node.add(\" + \"); node.add(otherNode); node.add([leftHandOperandNode, \" + \", rightHandOperandNode]);","title":"SourceNode.prototype.add(chunk)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypeprependchunk","text":"Prepend a chunk of generated JS to this source node. chunk : A string snippet of generated JS code, another instance of SourceNode , or an array where each member is one of those things. node.prepend(\"/** Build Id: f783haef86324gf **/\\n\\n\");","title":"SourceNode.prototype.prepend(chunk)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent","text":"Set the source content for a source file. This will be added to the SourceMap in the sourcesContent field. sourceFile : The filename of the source file sourceContent : The content of the source file node.setSourceContent(\"module-one.scm\", fs.readFileSync(\"path/to/module-one.scm\"))","title":"SourceNode.prototype.setSourceContent(sourceFile, sourceContent)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypewalkfn","text":"Walk over the tree of JS snippets in this node and its children. The walking function is called once for each snippet of JS and is passed that snippet and the its original associated source's line/column location. fn : The traversal function. var node = new SourceNode(1, 2, \"a.js\", [ new SourceNode(3, 4, \"b.js\", \"uno\"), \"dos\", [ \"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\") ] ]); node.walk(function (code, loc) { console.log(\"WALK:\", code, loc); }) // WALK: uno { source: 'b.js', line: 3, column: 4, name: null } // WALK: dos { source: 'a.js', line: 1, column: 2, name: null } // WALK: tres { source: 'a.js', line: 1, column: 2, name: null } // WALK: quatro { source: 'c.js', line: 5, column: 6, name: null }","title":"SourceNode.prototype.walk(fn)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypewalksourcecontentsfn","text":"Walk over the tree of SourceNodes. The walking function is called for each source file content and is passed the filename and source content. fn : The traversal function. var a = new SourceNode(1, 2, \"a.js\", \"generated from a\"); a.setSourceContent(\"a.js\", \"original a\"); var b = new SourceNode(1, 2, \"b.js\", \"generated from b\"); b.setSourceContent(\"b.js\", \"original b\"); var c = new SourceNode(1, 2, \"c.js\", \"generated from c\"); c.setSourceContent(\"c.js\", \"original c\"); var node = new SourceNode(null, null, null, [a, b, c]); node.walkSourceContents(function (source, contents) { console.log(\"WALK:\", source, \":\", contents); }) // WALK: a.js : original a // WALK: b.js : original b // WALK: c.js : original c","title":"SourceNode.prototype.walkSourceContents(fn)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypejoinsep","text":"Like Array.prototype.join except for SourceNodes. Inserts the separator between each of this source node's children. sep : The separator. var lhs = new SourceNode(1, 2, \"a.rs\", \"my_copy\"); var operand = new SourceNode(3, 4, \"a.rs\", \"=\"); var rhs = new SourceNode(5, 6, \"a.rs\", \"orig.clone()\"); var node = new SourceNode(null, null, null, [ lhs, operand, rhs ]); var joinedNode = node.join(\" \");","title":"SourceNode.prototype.join(sep)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypereplacerightpattern-replacement","text":"Call String.prototype.replace on the very right-most source snippet. Useful for trimming white space from the end of a source node, etc. pattern : The pattern to replace. replacement : The thing to replace the pattern with. // Trim trailing white space. node.replaceRight(/\\s*$/, \"\");","title":"SourceNode.prototype.replaceRight(pattern, replacement)"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypetostring","text":"Return the string representation of this source node. Walks over the tree and concatenates all the various snippets together to one string. var node = new SourceNode(1, 2, \"a.js\", [ new SourceNode(3, 4, \"b.js\", \"uno\"), \"dos\", [ \"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\") ] ]); node.toString() // 'unodostresquatro'","title":"SourceNode.prototype.toString()"},{"location":"_Disciplina/Code/my-react-app/node_modules/source-map-js/#sourcenodeprototypetostringwithsourcemapstartofsourcemap","text":"Returns the string representation of this tree of source nodes, plus a SourceMapGenerator which contains all the mappings between the generated and original sources. The arguments are the same as those to new SourceMapGenerator . var node = new SourceNode(1, 2, \"a.js\", [ new SourceNode(3, 4, \"b.js\", \"uno\"), \"dos\", [ \"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\") ] ]); node.toStringWithSourceMap({ file: \"my-output-file.js\" }) // { code: 'unodostresquatro', // map: [object SourceMapGenerator] }","title":"SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/","text":"string.prototype.matchall ES2020 spec-compliant shim for String.prototype.matchAll. Invoke its \"shim\" method to shim String.prototype.matchAll if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment, and complies with the spec . Most common usage: const assert = require('assert'); const matchAll = require('string.prototype.matchall'); const str = 'aabc'; const nonRegexStr = 'ab'; const globalRegex = /[ac]/g; const nonGlobalRegex = /[bc]/i; // non-regex arguments are coerced into a global regex assert.deepEqual( [...matchAll(str, nonRegexStr)], [...matchAll(str, new RegExp(nonRegexStr, 'g'))] ); assert.deepEqual([...matchAll(str, globalRegex)], [ Object.assign(['a'], { index: 0, input: str, groups: undefined }), Object.assign(['a'], { index: 1, input: str, groups: undefined }), Object.assign(['c'], { index: 3, input: str, groups: undefined }), ]); assert.throws(() => matchAll(str, nonGlobalRegex)); // non-global regexes throw matchAll.shim(); // will be a no-op if not needed // non-regex arguments are coerced into a global regex assert.deepEqual( [...str.matchAll(nonRegexStr)], [...str.matchAll(new RegExp(nonRegexStr, 'g'))] ); assert.deepEqual([...str.matchAll(globalRegex)], [ Object.assign(['a'], { index: 0, input: str, groups: undefined }), Object.assign(['a'], { index: 1, input: str, groups: undefined }), Object.assign(['c'], { index: 3, input: str, groups: undefined }), ]); assert.throws(() => matchAll(str, nonGlobalRegex)); // non-global regexes throw Tests Simply clone the repo, npm install , and run npm test","title":"string.prototype.matchall Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/#stringprototypematchall","text":"ES2020 spec-compliant shim for String.prototype.matchAll. Invoke its \"shim\" method to shim String.prototype.matchAll if it is unavailable or noncompliant. This package implements the es-shim API interface. It works in an ES3-supported environment, and complies with the spec . Most common usage: const assert = require('assert'); const matchAll = require('string.prototype.matchall'); const str = 'aabc'; const nonRegexStr = 'ab'; const globalRegex = /[ac]/g; const nonGlobalRegex = /[bc]/i; // non-regex arguments are coerced into a global regex assert.deepEqual( [...matchAll(str, nonRegexStr)], [...matchAll(str, new RegExp(nonRegexStr, 'g'))] ); assert.deepEqual([...matchAll(str, globalRegex)], [ Object.assign(['a'], { index: 0, input: str, groups: undefined }), Object.assign(['a'], { index: 1, input: str, groups: undefined }), Object.assign(['c'], { index: 3, input: str, groups: undefined }), ]); assert.throws(() => matchAll(str, nonGlobalRegex)); // non-global regexes throw matchAll.shim(); // will be a no-op if not needed // non-regex arguments are coerced into a global regex assert.deepEqual( [...str.matchAll(nonRegexStr)], [...str.matchAll(new RegExp(nonRegexStr, 'g'))] ); assert.deepEqual([...str.matchAll(globalRegex)], [ Object.assign(['a'], { index: 0, input: str, groups: undefined }), Object.assign(['a'], { index: 1, input: str, groups: undefined }), Object.assign(['c'], { index: 3, input: str, groups: undefined }), ]); assert.throws(() => matchAll(str, nonGlobalRegex)); // non-global regexes throw","title":"string.prototype.matchall"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v4.0.11 - 2024-03-19 Commits [Deps] update call-bind , define-properties , es-abstract , get-intrinsic , internal-slot , regexp.prototype.flags , set-function-name , side-channel 628a475 [Dev Deps] update aud , mock-property , npmignore , object-inspect , object.assign , object.entries , tape 21b67f2 [actions] remove redundant finisher 27e8b80 [Robustness] better cache original RegExp 92e9c59 [Robustness] use es-errors f6de643 [Refactor] use gopd 965a357 [Refactor] use es-object-atoms where possible 1d15123 [meta] add missing engines.node 04bdb31 v4.0.10 - 2023-09-12 Commits [Refactor] use set-function-name a851cbb v4.0.9 - 2023-08-28 Commits [Deps] update define-properties , es-abstract , get-intrinsic , internal-slot , regexp.prototype.flags 819a5dd [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , es6-shim , object-inspect , object.entries , tape 6f479ee v4.0.8 - 2022-11-07 Commits [meta] use npmignore to autogenerate an npmignore file a08a8a1 [Deps] update define-properties , es-abstract , get-intrinsic , regexp.prototype.flags 6273f0f [Tests] use mock-property 94e83a3 [Dev Deps] update @ljharb/eslint-config , aud , es5-shim , functions-have-names , object-inspect , object.assign , object.entries , tape 8024497 [actions] update rebase action to use reusable workflow 028abc0 [Tests] use for-each instead of foreach f68b771 v4.0.7 - 2022-03-18 Commits [actions] reuse common workflows 798d359 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape 8733fa4 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 2f0ac7d [actions] update codecov uploader 40ea9ce [Robustness] use call-bound indexOf b035fdc [Deps] update has-symbols , regexp.prototype.flags 95768f2 v4.0.6 - 2021-10-04 Commits [Refactor] use CreateRegExpStringIterator from es-abstract 5c2cf33 [patch] remove unused helpers 280f47e [meta] add auto-changelog 2d26eda [Deps] update es-abstract 857c8b0 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , es5-shim , object-inspect , object.entries , tape 9349ea2 v4.0.5 - 2021-05-25 Commits [actions] use node/install instead of node/run ; use codecov action a6a7af2 [readme] update badges, spec year 9532ccc [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect 8ea3e71 [Deps] update es-abstract , has-symbols e906e75 [Dev Deps] update eslint , tape fcf2270 [actions] update workflows ba642c5 [Refactor] use get-intrinsic directly fca987f [meta] use prepublishOnly script for npm 7+ 4c5ba45 [Deps] update es-abstract 39d34df 4.0.4 / 2021-02-21 [readme] fix repo URLs; remove travis badge [meta] gitignore coverage output [Deps] update call-bind , es-abstract , internal-slot , regexp.prototype.flags , side-channel [Dev Deps] update eslint , @ljharb/eslint-config , aud , es5-shim , functions-have-names , object-inspect , object.entries , tape [Tests] increase coverage [actions] update workflows 4.0.3 / 2020-11-19 [meta] do not publish github action workflow files [Deps] update es-abstract , side-channel ; use call-bind where applicable; remove function-bind [Dev Deps] update eslint , @ljharb/eslint-config , aud , es5-shim , es6-shim , functions-have-names , object-inspect , object.assign , object.entries , tape [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] run es-shim-api in postlint; use tape runner [Tests] only audit prod deps 4.0.2 / 2019-12-22 [Refactor] use internal-slot [Refactor] use side-channel instead of \"hidden\" helper [Deps] update es-abstract , internal-slot , regexp.prototype.flags , side-channel [Dev Deps] update eslint , @ljharb/eslint-config , tape 4.0.1 / 2019-12-13 [Refactor] use split-up es-abstract (61% bundle size decrease) [Fix] fix error message: matchAll requires global [Deps] update es-abstract , has-symbols [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , object-inspect , evalmd , object.entries ; add safe-publish-latest [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking 4.0.0 / 2019-10-03 [Breaking] throw on non-global/nullish flags [Deps] update es-abstract 3.0.2 / 2019-10-02 [Fix] ensure that flagsGetter is only used when there is no flags property on the regex [Fix] RegExp.prototype[Symbol.matchAll] : ToString the flags property [Refactor] provide a consistent way to determine the polyfill for RegExp.prototype[Symbol.matchAll] [meta] create FUNDING.yml [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , evalmd , functions-have-names , es5-shim , es6-shim , object.entries , tape [Tests] up to node v12.11 , v11.15 , v10.16 , v8.16 , v6.17 [Tests] use functions-have-names [Tests] bump audit level, due to https://github.com/reggi/evalmd/issues/13 [Tests] use npx aud instead of npm audit with hoops 3.0.1 / 2018-12-11 [Fix] update spec to follow committee feedback [Deps] update define-properties [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , es6-shim , tape [Tests] use npm audit instead of nsp [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15 3.0.0 / 2018-05-31 [Breaking] update to match latest spec [Deps] update es-abstract [Dev Deps] update eslint , nsp , object-inspect , tape [Tests] up to node v10.3 , v9.11 , v8.11 , v6.14 , v4.9 [Tests] regexes now have a \"groups\" property in ES2018 [Tests] run evalmd in prelint 2.0.0 / 2018-01-24 [Breaking] change to handle nonmatching regexes [Breaking] non-regex arguments that are thus coerced to RegExp now get the global flag [Deps] update es-abstract , regexp.prototype.flags [Dev Deps] update es5-shim , eslint , object.assign [Tests] up to node v9.4 , v8.9 , v6.12 ; pin included builds to LTS [Tests] improve and correct tests and failure messages 1.0.0 / 2017-09-28 Initial release","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v4011-2024-03-19","text":"","title":"v4.0.11 - 2024-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits","text":"[Deps] update call-bind , define-properties , es-abstract , get-intrinsic , internal-slot , regexp.prototype.flags , set-function-name , side-channel 628a475 [Dev Deps] update aud , mock-property , npmignore , object-inspect , object.assign , object.entries , tape 21b67f2 [actions] remove redundant finisher 27e8b80 [Robustness] better cache original RegExp 92e9c59 [Robustness] use es-errors f6de643 [Refactor] use gopd 965a357 [Refactor] use es-object-atoms where possible 1d15123 [meta] add missing engines.node 04bdb31","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v4010-2023-09-12","text":"","title":"v4.0.10 - 2023-09-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits_1","text":"[Refactor] use set-function-name a851cbb","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v409-2023-08-28","text":"","title":"v4.0.9 - 2023-08-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits_2","text":"[Deps] update define-properties , es-abstract , get-intrinsic , internal-slot , regexp.prototype.flags 819a5dd [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , es6-shim , object-inspect , object.entries , tape 6f479ee","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v408-2022-11-07","text":"","title":"v4.0.8 - 2022-11-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits_3","text":"[meta] use npmignore to autogenerate an npmignore file a08a8a1 [Deps] update define-properties , es-abstract , get-intrinsic , regexp.prototype.flags 6273f0f [Tests] use mock-property 94e83a3 [Dev Deps] update @ljharb/eslint-config , aud , es5-shim , functions-have-names , object-inspect , object.assign , object.entries , tape 8024497 [actions] update rebase action to use reusable workflow 028abc0 [Tests] use for-each instead of foreach f68b771","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v407-2022-03-18","text":"","title":"v4.0.7 - 2022-03-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits_4","text":"[actions] reuse common workflows 798d359 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , es5-shim , object-inspect , tape 8733fa4 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 2f0ac7d [actions] update codecov uploader 40ea9ce [Robustness] use call-bound indexOf b035fdc [Deps] update has-symbols , regexp.prototype.flags 95768f2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v406-2021-10-04","text":"","title":"v4.0.6 - 2021-10-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits_5","text":"[Refactor] use CreateRegExpStringIterator from es-abstract 5c2cf33 [patch] remove unused helpers 280f47e [meta] add auto-changelog 2d26eda [Deps] update es-abstract 857c8b0 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , es5-shim , object-inspect , object.entries , tape 9349ea2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#v405-2021-05-25","text":"","title":"v4.0.5 - 2021-05-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#commits_6","text":"[actions] use node/install instead of node/run ; use codecov action a6a7af2 [readme] update badges, spec year 9532ccc [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect 8ea3e71 [Deps] update es-abstract , has-symbols e906e75 [Dev Deps] update eslint , tape fcf2270 [actions] update workflows ba642c5 [Refactor] use get-intrinsic directly fca987f [meta] use prepublishOnly script for npm 7+ 4c5ba45 [Deps] update es-abstract 39d34df","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#404-2021-02-21","text":"[readme] fix repo URLs; remove travis badge [meta] gitignore coverage output [Deps] update call-bind , es-abstract , internal-slot , regexp.prototype.flags , side-channel [Dev Deps] update eslint , @ljharb/eslint-config , aud , es5-shim , functions-have-names , object-inspect , object.entries , tape [Tests] increase coverage [actions] update workflows","title":"4.0.4 / 2021-02-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#403-2020-11-19","text":"[meta] do not publish github action workflow files [Deps] update es-abstract , side-channel ; use call-bind where applicable; remove function-bind [Dev Deps] update eslint , @ljharb/eslint-config , aud , es5-shim , es6-shim , functions-have-names , object-inspect , object.assign , object.entries , tape [actions] add \"Allow Edits\" workflow [actions] switch Automatic Rebase workflow to pull_request_target event [Tests] migrate tests to Github Actions [Tests] run nyc on all tests [Tests] run es-shim-api in postlint; use tape runner [Tests] only audit prod deps","title":"4.0.3 / 2020-11-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#402-2019-12-22","text":"[Refactor] use internal-slot [Refactor] use side-channel instead of \"hidden\" helper [Deps] update es-abstract , internal-slot , regexp.prototype.flags , side-channel [Dev Deps] update eslint , @ljharb/eslint-config , tape","title":"4.0.2 / 2019-12-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#401-2019-12-13","text":"[Refactor] use split-up es-abstract (61% bundle size decrease) [Fix] fix error message: matchAll requires global [Deps] update es-abstract , has-symbols [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , object-inspect , evalmd , object.entries ; add safe-publish-latest [meta] add funding field [Tests] use shared travis-ci configs [actions] add automatic rebasing / merge commit blocking","title":"4.0.1 / 2019-12-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#400-2019-10-03","text":"[Breaking] throw on non-global/nullish flags [Deps] update es-abstract","title":"4.0.0 / 2019-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#302-2019-10-02","text":"[Fix] ensure that flagsGetter is only used when there is no flags property on the regex [Fix] RegExp.prototype[Symbol.matchAll] : ToString the flags property [Refactor] provide a consistent way to determine the polyfill for RegExp.prototype[Symbol.matchAll] [meta] create FUNDING.yml [Deps] update es-abstract [Dev Deps] update eslint , @ljharb/eslint-config , evalmd , functions-have-names , es5-shim , es6-shim , object.entries , tape [Tests] up to node v12.11 , v11.15 , v10.16 , v8.16 , v6.17 [Tests] use functions-have-names [Tests] bump audit level, due to https://github.com/reggi/evalmd/issues/13 [Tests] use npx aud instead of npm audit with hoops","title":"3.0.2 / 2019-10-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#301-2018-12-11","text":"[Fix] update spec to follow committee feedback [Deps] update define-properties [Dev Deps] update eslint , @ljharb/eslint-config , es5-shim , es6-shim , tape [Tests] use npm audit instead of nsp [Tests] up to node v11.4 , v10.14 , v8.14 , v6.15","title":"3.0.1 / 2018-12-11"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#300-2018-05-31","text":"[Breaking] update to match latest spec [Deps] update es-abstract [Dev Deps] update eslint , nsp , object-inspect , tape [Tests] up to node v10.3 , v9.11 , v8.11 , v6.14 , v4.9 [Tests] regexes now have a \"groups\" property in ES2018 [Tests] run evalmd in prelint","title":"3.0.0 / 2018-05-31"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#200-2018-01-24","text":"[Breaking] change to handle nonmatching regexes [Breaking] non-regex arguments that are thus coerced to RegExp now get the global flag [Deps] update es-abstract , regexp.prototype.flags [Dev Deps] update es5-shim , eslint , object.assign [Tests] up to node v9.4 , v8.9 , v6.12 ; pin included builds to LTS [Tests] improve and correct tests and failure messages","title":"2.0.0 / 2018-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.matchall/CHANGELOG/#100-2017-09-28","text":"Initial release","title":"1.0.0 / 2017-09-28"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.repeat/","text":"ES6 String.prototype.repeat polyfill A robust & optimized polyfill for the String.prototype.repeat method in ECMAScript 6 . This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Other polyfills for String.prototype.repeat are available: https://github.com/paulmillr/es6-shim/blob/d8c4ec246a15e7df55da60b7f9b745af84ca9021/es6-shim.js#L146-L154 by Paul Miller (~~ fails 8 tests ~~ now passes all tests) Installation Via npm : npm install string.prototype.repeat Then, in Node.js : var repeat = require('string.prototype.repeat'); In a browser: <script src=\"https://bundle.run/string.prototype.repeat\"></script> NOTE : It's recommended that you install this module using a package manager such as npm , because loading multiple polyfills from a CDN (such as bundle.run ) will lead to duplicated code. Author Mathias Bynens License This polyfill is available under the MIT license.","title":"ES6 String.prototype.repeat polyfill Build status"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.repeat/#es6-stringprototyperepeat-polyfill","text":"A robust & optimized polyfill for the String.prototype.repeat method in ECMAScript 6 . This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . Other polyfills for String.prototype.repeat are available: https://github.com/paulmillr/es6-shim/blob/d8c4ec246a15e7df55da60b7f9b745af84ca9021/es6-shim.js#L146-L154 by Paul Miller (~~ fails 8 tests ~~ now passes all tests)","title":"ES6 String.prototype.repeat polyfill"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.repeat/#installation","text":"Via npm : npm install string.prototype.repeat Then, in Node.js : var repeat = require('string.prototype.repeat'); In a browser: <script src=\"https://bundle.run/string.prototype.repeat\"></script> NOTE : It's recommended that you install this module using a package manager such as npm , because loading multiple polyfills from a CDN (such as bundle.run ) will lead to duplicated code.","title":"Installation"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.repeat/#author","text":"Mathias Bynens","title":"Author"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.repeat/#license","text":"This polyfill is available under the MIT license.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/","text":"String.prototype.trim ![npm badge][npm-badge-png] An ES5 spec-compliant String.prototype.trim shim. Invoke its \"shim\" method to shim String.prototype.trim if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec (both ES5 and current ). Most common usage: var assert = require('assert'); var trim = require('string.prototype.trim'); assert(trim(' \\t\\na \\t\\n') === 'a'); trim.shim(); // will be a no-op if not needed assert(trim(' \\t\\na \\t\\n') === ' \\t\\na \\t\\n'.trim()); Engine Bugs Some implementations of String#trim incorrectly trim zero-width spaces. This shim detects and corrects this behavior. Tests Simply clone the repo, npm install , and run npm test","title":"String.prototype.trim Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/#stringprototypetrim","text":"![npm badge][npm-badge-png] An ES5 spec-compliant String.prototype.trim shim. Invoke its \"shim\" method to shim String.prototype.trim if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec (both ES5 and current ). Most common usage: var assert = require('assert'); var trim = require('string.prototype.trim'); assert(trim(' \\t\\na \\t\\n') === 'a'); trim.shim(); // will be a no-op if not needed assert(trim(' \\t\\na \\t\\n') === ' \\t\\na \\t\\n'.trim());","title":"String.prototype.trim"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/#engine-bugs","text":"Some implementations of String#trim incorrectly trim zero-width spaces. This shim detects and corrects this behavior.","title":"Engine Bugs"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.2.9 - 2024-03-16 Commits [Refactor] use es-object-atoms ; update call-bind , define-properties , es-abstract f6fe1af [Dev Deps] update aud , npmignore , tape d4e2b81 v1.2.8 - 2023-09-07 Commits [Tests] add passing test cases 2ab172c [Deps] update es-abstract 8c16598 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 2b99fad [Dev Deps] update @ljharb/eslint-config , @ljharb/eslint-config , aud , tape 97be2b5 [Deps] update define-properties , es-abstract 1fdc65f v1.2.7 - 2022-11-07 Commits [meta] use npmignore to autogenerate an npmignore file 3e6de84 [actions] update rebase action to use reusable workflow b725a04 [Deps] update es-abstract b707a17 [Dev Deps] update aud , tape 5295419 v1.2.6 - 2022-04-24 Commits [actions] reuse common workflows dbfc093 [Fix] as of unicode v6, the mongolian vowel separator is no longer whitespace 56bbb86 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 7fa437e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , functions-have-names , tape 716a060 [actions] update codecov uploader 9a39958 [Fix] ensure main entry point properly checks the receiver in ES3 engines 24220c4 [Deps] update define-properties , es-abstract c6008ea v1.2.5 - 2021-10-03 Commits [actions] use node/install instead of node/run ; use codecov action 37d5a61 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 4c4a85e [readme] add github actions/codecov badges 9980eee [Deps] update es-abstract 6c1da80 [readme] remove defunct testling badge 8d282d1 [Dev Deps] update eslint , tape 8856c26 [actions] update workflows 62cd341 [meta] use prepublishOnly script for npm 7+ abd99c4 [Deps] update es-abstract 802cb7b v1.2.4 - 2021-02-21 Commits [meta] do not publish github action workflow files 936161b [readme] remove travis badge 9a28c39 [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape 7b4be8d [Tests] increase coverage 31b8735 [actions] update workflows eda6ab7 [Deps] update call-bind , es-abstract 083f88f v1.2.3 - 2020-11-21 Commits [Tests] migrate tests to Github Actions 6768c8d [Tests] run nyc on all tests 2fd5baa [Deps] update es-abstract ; use call-bind where applicable e4e8c6e [Dev Deps] update eslint , aud , auto-changelog a21c1d5 v1.2.2 - 2020-09-15 Commits [Tests] use nyc for coverage [ 0884270`](https://github.com/es-shims/String.prototype.trim/commit/0884270b26f7e6f7602d9f355dc3b4d5cd12d97e) [Tests] add implementation tests 475c480 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape d70d913 [actions] add \"Allow Edits\" workflow 6e6be23 [Refactor] use RequireObjectCoercible instead of CheckObjectCoercible 5bfaf17 [Dev Deps] update eslint , @ljharb/eslint-config , tape , functions-have-names ; add safe-publish-latest 65be600 [Deps] update es-abstract , remove function-bind 5f4d1ec [Refactor] switch from 2019 to 2020 AOs 4c2d5d2 [Dev Deps] update auto-changelog , tape c7fc9e2 [Dev Deps] update auto-changelog ; add aud e1dec36 [actions] switch Automatic Rebase workflow to pull_request_target event 35826c2 [Deps] update es-abstract 54095ef [Deps] update es-abstract 486dd9c v1.2.1 - 2019-12-16 Commits [Tests] use shared travis-ci configs 52f7e64 [meta] add auto-changelog 6284c06 [meta] remove unused Makefile and associated utilities 8c781cd [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names c54b481 [Refactor] use split-up es-abstract (57% bundle size decrease) b0378c9 [actions] add automatic rebasing / merge commit blocking bffe893 [meta] add funding field 0559449 [Deps] update es-abstract c44d307 v1.2.0 - 2019-07-24 Commits [Tests] up to node v12.6 , v11.15 , v10.16 , v9.11 , v8.16 , v7.10 , v6.17 , 4.9 ; use nvm install-latest-npm b857148 [Tests] remove jscs ad1dea7 [Dev Deps] update eslint , @ljharb/eslint-config , covert , replace , semver , tape fcbc11d [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 06a4ffa [Dev Deps] update jscs , nsp , eslint , @es-shims/api 3554fb1 [Dev Deps] update nsp , eslint , @ljharb/eslint-config 804b2f2 [Dev Deps] update tape , jscs , nsp , eslint , semver , @ljharb/eslint-config 6a69408 [Dev Deps] update jscs , eslint , @ljharb/eslint-config e89adee [Dev Deps] update jscs , eslint , @ljharb/eslint-config 1280e56 [New] add auto entry point bb00b15 [Tests] fix tests for the mongolian vowel separator a35f627 [Tests] up to node v5.9 , v4.4 b541b9b [Dev Deps] update jscs , nsp , eslint b52022d [Tests] use pretest/posttest for linting/security 39f5684 [Tests] use npx aud instead of nsp or npm audit with hoops 8c358c2 [Tests] up to node v6.2 2ac7e1f Only apps should have lockfiles cb15ed5 [Deps] update define-properties , es-abstract , function-bind 5e0371a [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api 37bae7f [Tests] on node v5.6 , v4.3 33017cf [Tests] allow coverage to fail 0d7b1e3 [Tests] use functions-have-names 3e68777 [Tests] on node v5.12 32ea49d [Deps] update es-abstract 15f7f24 [Tests] on node v5.10 080c50f [Deps] update function-bind 532480e v1.1.2 - 2016-02-06 Commits [Dev Deps] update tape , jscs , nsp , eslint , semver , @ljharb/eslint-config df94d07 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config ef78d89 [Dev Deps] update jscs , eslint , @ljharb/eslint-config b746516 package.json: use object form of \"authors\", add \"contributors\" a799df1 [Tests] up to node v5.5 , don\u2019t allow 0.8 to fail 7fea308 [Dev Deps] update jscs , nsp , eslint , semver , @ljharb/eslint-config d14c7c1 [Tests] up to io.js v3.3 , node v4.1 2903359 [Tests] fix npm upgrades for older nodes 0a6cbfa [Deps] update define-properties , es-abstract 39ccb08 [Deps] update es-abstract c40e4fb Use the polyfill, not the implementation, as the default export. 0fe847e [Tests] on node v4.2 589743c [Deps] update es-abstract 85bad8e added assert aa81ac5 v1.1.1 - 2015-08-16 Commits [Docs] remove \"if\" around .shim call in example b9ce088 v1.1.0 - 2015-08-16 Commits Implement the es-shim API . 5812703 Move implementation to implementation.js e455b2a Fix make release efd2071 [Dev Deps] update jscs 6c2fa95 [Deps] update es-abstract de4cd87 [Dev Deps] update tape 2d07fe1 [Dev Deps] update tape e697efe Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 6065103 v1.0.0 - 2015-08-08 Commits Dotfiles / Makefile b7f0e52 Tests 4d61441 package.json 2a2e0f2 Initial commit 51aa18f Read me 5681192 Implementation 87f08c5","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v129-2024-03-16","text":"","title":"v1.2.9 - 2024-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits","text":"[Refactor] use es-object-atoms ; update call-bind , define-properties , es-abstract f6fe1af [Dev Deps] update aud , npmignore , tape d4e2b81","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v128-2023-09-07","text":"","title":"v1.2.8 - 2023-09-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_1","text":"[Tests] add passing test cases 2ab172c [Deps] update es-abstract 8c16598 [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 2b99fad [Dev Deps] update @ljharb/eslint-config , @ljharb/eslint-config , aud , tape 97be2b5 [Deps] update define-properties , es-abstract 1fdc65f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v127-2022-11-07","text":"","title":"v1.2.7 - 2022-11-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_2","text":"[meta] use npmignore to autogenerate an npmignore file 3e6de84 [actions] update rebase action to use reusable workflow b725a04 [Deps] update es-abstract b707a17 [Dev Deps] update aud , tape 5295419","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v126-2022-04-24","text":"","title":"v1.2.6 - 2022-04-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_3","text":"[actions] reuse common workflows dbfc093 [Fix] as of unicode v6, the mongolian vowel separator is no longer whitespace 56bbb86 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 7fa437e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , functions-have-names , tape 716a060 [actions] update codecov uploader 9a39958 [Fix] ensure main entry point properly checks the receiver in ES3 engines 24220c4 [Deps] update define-properties , es-abstract c6008ea","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v125-2021-10-03","text":"","title":"v1.2.5 - 2021-10-03"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_4","text":"[actions] use node/install instead of node/run ; use codecov action 37d5a61 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 4c4a85e [readme] add github actions/codecov badges 9980eee [Deps] update es-abstract 6c1da80 [readme] remove defunct testling badge 8d282d1 [Dev Deps] update eslint , tape 8856c26 [actions] update workflows 62cd341 [meta] use prepublishOnly script for npm 7+ abd99c4 [Deps] update es-abstract 802cb7b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v124-2021-02-21","text":"","title":"v1.2.4 - 2021-02-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_5","text":"[meta] do not publish github action workflow files 936161b [readme] remove travis badge 9a28c39 [Dev Deps] update eslint , @ljharb/eslint-config , aud , functions-have-names , has-strict-mode , tape 7b4be8d [Tests] increase coverage 31b8735 [actions] update workflows eda6ab7 [Deps] update call-bind , es-abstract 083f88f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v123-2020-11-21","text":"","title":"v1.2.3 - 2020-11-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_6","text":"[Tests] migrate tests to Github Actions 6768c8d [Tests] run nyc on all tests 2fd5baa [Deps] update es-abstract ; use call-bind where applicable e4e8c6e [Dev Deps] update eslint , aud , auto-changelog a21c1d5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v122-2020-09-15","text":"","title":"v1.2.2 - 2020-09-15"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_7","text":"[Tests] use nyc for coverage [ 0884270`](https://github.com/es-shims/String.prototype.trim/commit/0884270b26f7e6f7602d9f355dc3b4d5cd12d97e) [Tests] add implementation tests 475c480 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape d70d913 [actions] add \"Allow Edits\" workflow 6e6be23 [Refactor] use RequireObjectCoercible instead of CheckObjectCoercible 5bfaf17 [Dev Deps] update eslint , @ljharb/eslint-config , tape , functions-have-names ; add safe-publish-latest 65be600 [Deps] update es-abstract , remove function-bind 5f4d1ec [Refactor] switch from 2019 to 2020 AOs 4c2d5d2 [Dev Deps] update auto-changelog , tape c7fc9e2 [Dev Deps] update auto-changelog ; add aud e1dec36 [actions] switch Automatic Rebase workflow to pull_request_target event 35826c2 [Deps] update es-abstract 54095ef [Deps] update es-abstract 486dd9c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v121-2019-12-16","text":"","title":"v1.2.1 - 2019-12-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_8","text":"[Tests] use shared travis-ci configs 52f7e64 [meta] add auto-changelog 6284c06 [meta] remove unused Makefile and associated utilities 8c781cd [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names c54b481 [Refactor] use split-up es-abstract (57% bundle size decrease) b0378c9 [actions] add automatic rebasing / merge commit blocking bffe893 [meta] add funding field 0559449 [Deps] update es-abstract c44d307","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v120-2019-07-24","text":"","title":"v1.2.0 - 2019-07-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_9","text":"[Tests] up to node v12.6 , v11.15 , v10.16 , v9.11 , v8.16 , v7.10 , v6.17 , 4.9 ; use nvm install-latest-npm b857148 [Tests] remove jscs ad1dea7 [Dev Deps] update eslint , @ljharb/eslint-config , covert , replace , semver , tape fcbc11d [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config 06a4ffa [Dev Deps] update jscs , nsp , eslint , @es-shims/api 3554fb1 [Dev Deps] update nsp , eslint , @ljharb/eslint-config 804b2f2 [Dev Deps] update tape , jscs , nsp , eslint , semver , @ljharb/eslint-config 6a69408 [Dev Deps] update jscs , eslint , @ljharb/eslint-config e89adee [Dev Deps] update jscs , eslint , @ljharb/eslint-config 1280e56 [New] add auto entry point bb00b15 [Tests] fix tests for the mongolian vowel separator a35f627 [Tests] up to node v5.9 , v4.4 b541b9b [Dev Deps] update jscs , nsp , eslint b52022d [Tests] use pretest/posttest for linting/security 39f5684 [Tests] use npx aud instead of nsp or npm audit with hoops 8c358c2 [Tests] up to node v6.2 2ac7e1f Only apps should have lockfiles cb15ed5 [Deps] update define-properties , es-abstract , function-bind 5e0371a [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api 37bae7f [Tests] on node v5.6 , v4.3 33017cf [Tests] allow coverage to fail 0d7b1e3 [Tests] use functions-have-names 3e68777 [Tests] on node v5.12 32ea49d [Deps] update es-abstract 15f7f24 [Tests] on node v5.10 080c50f [Deps] update function-bind 532480e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v112-2016-02-06","text":"","title":"v1.1.2 - 2016-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_10","text":"[Dev Deps] update tape , jscs , nsp , eslint , semver , @ljharb/eslint-config df94d07 [Dev Deps] update tape , jscs , eslint , @ljharb/eslint-config ef78d89 [Dev Deps] update jscs , eslint , @ljharb/eslint-config b746516 package.json: use object form of \"authors\", add \"contributors\" a799df1 [Tests] up to node v5.5 , don\u2019t allow 0.8 to fail 7fea308 [Dev Deps] update jscs , nsp , eslint , semver , @ljharb/eslint-config d14c7c1 [Tests] up to io.js v3.3 , node v4.1 2903359 [Tests] fix npm upgrades for older nodes 0a6cbfa [Deps] update define-properties , es-abstract 39ccb08 [Deps] update es-abstract c40e4fb Use the polyfill, not the implementation, as the default export. 0fe847e [Tests] on node v4.2 589743c [Deps] update es-abstract 85bad8e added assert aa81ac5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v111-2015-08-16","text":"","title":"v1.1.1 - 2015-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_11","text":"[Docs] remove \"if\" around .shim call in example b9ce088","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v110-2015-08-16","text":"","title":"v1.1.0 - 2015-08-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_12","text":"Implement the es-shim API . 5812703 Move implementation to implementation.js e455b2a Fix make release efd2071 [Dev Deps] update jscs 6c2fa95 [Deps] update es-abstract de4cd87 [Dev Deps] update tape 2d07fe1 [Dev Deps] update tape e697efe Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG. 6065103","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#v100-2015-08-08","text":"","title":"v1.0.0 - 2015-08-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trim/CHANGELOG/#commits_13","text":"Dotfiles / Makefile b7f0e52 Tests 4d61441 package.json 2a2e0f2 Initial commit 51aa18f Read me 5681192 Implementation 87f08c5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/","text":"String.prototype.trimEnd An ES2019-spec-compliant String.prototype.trimEnd shim. Invoke its \"shim\" method to shim String.prototype.trimEnd if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . In an ES6 environment, it will also work properly with Symbol s. Most common usage: var trimEnd = require('string.prototype.trimend'); assert(trimEnd(' \\t\\na \\t\\n') === 'a \\t\\n'); if (!String.prototype.trimEnd) { trimEnd.shim(); } assert(trimEnd(' \\t\\na \\t\\n ') === ' \\t\\na \\t\\n '.trimEnd()); Tests Simply clone the repo, npm install , and run npm test","title":"String.prototype.trimEnd Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/#stringprototypetrimend","text":"An ES2019-spec-compliant String.prototype.trimEnd shim. Invoke its \"shim\" method to shim String.prototype.trimEnd if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . In an ES6 environment, it will also work properly with Symbol s. Most common usage: var trimEnd = require('string.prototype.trimend'); assert(trimEnd(' \\t\\na \\t\\n') === 'a \\t\\n'); if (!String.prototype.trimEnd) { trimEnd.shim(); } assert(trimEnd(' \\t\\na \\t\\n ') === ' \\t\\na \\t\\n '.trimEnd());","title":"String.prototype.trimEnd"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.8 - 2024-03-16 Commits [Refactor] replace es-abstract with es-object-atoms 0df2b01 [Dev Deps] update aud , npmignore , tape 190e9c5 v1.0.7 - 2023-09-07 Commits [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 1a10293 [Deps] update define-properties , es-abstract 6ba2e19 v1.0.6 - 2022-11-07 Commits [meta] use npmignore to autogenerate an npmignore file 1d1e717 [actions] update rebase action to use reusable workflow 83f2683 [Dev Deps] update aud , tape a3a9129 [Deps] update es-abstract a6e476d v1.0.5 - 2022-05-02 Commits [actions] reuse common workflows 69a56ce [actions] use node/install instead of node/run ; use codecov action 5d7db31 [Fix] ensure main entry point properly checks the receiver in ES3 engines bb1983d [Fix] as of unicode v6, the mongolian vowel separator is no longer whitespace 10a1091 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape a08e14b [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , functions-have-names , tape 1c4c8da [actions] update codecov uploader 70c4a7c [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 4b08ed7 [readme] add github actions/codecov badges 9805501 [Dev Deps] update eslint , tape 50ec335 [actions] update workflows bf9c32e [meta] use prepublishOnly script for npm 7+ 9d921bd [Deps] update define-properties 15617ce v1.0.4 - 2021-02-23 Commits [meta] do not publish github action workflow files 08e735c [readme] remove travis badge 10e0e47 [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , has-strict-mode , tape 0871432 [Tests] increase coverage 711e6a6 [actions] update workflows deb0d06 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape e250b4a [meta] gitignore coverage output 55231df [Deps] update call-bind 0580f5f v1.0.3 - 2020-11-21 Commits [Tests] migrate tests to Github Actions 23e7a09 [Tests] add implementation test; run es-shim-api in postlint; use tape runner 26e8623 [Tests] run nyc on all tests a72a546 [Deps] replace es-abstract with call-bind f07b87d [Dev Deps] update eslint , aud ; add safe-publish-latest 122ecb7 v1.0.2 - 2020-10-20 Commits [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape a003e71 [actions] add \"Allow Edits\" workflow 0b4b43c [Deps] update es-abstract 75ca6b0 [actions] switch Automatic Rebase workflow to pull_request_target event 552016c v1.0.1 - 2020-04-09 Commits [meta] add some missing repo metadata 6abe248 [Dev Deps] update auto-changelog e2eaab2 v1.0.0 - 2020-03-30 Commits [Breaking] convert to es-shim API 2c6ef13 [meta] add auto-changelog 6f1fcc1 [meta] update readme ed4ce0d [Tests] add npm run lint eadaf2c Only apps should have lockfiles 44d355f [actions] add automatic rebasing / merge commit blocking e78bf8e [Tests] use shared travis-ci configs 983c563 [meta] add funding field 35139d6 [meta] fix non-updated version number a2d308b v0.1.0 - 2017-12-19 Commits updated README f1c71a0 v0.0.1 - 2017-12-19 Commits finished polyfill e58d550 created README file f78628a Initial commit 9199478 typo d1f4558","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v108-2024-03-16","text":"","title":"v1.0.8 - 2024-03-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits","text":"[Refactor] replace es-abstract with es-object-atoms 0df2b01 [Dev Deps] update aud , npmignore , tape 190e9c5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v107-2023-09-07","text":"","title":"v1.0.7 - 2023-09-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_1","text":"[Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 1a10293 [Deps] update define-properties , es-abstract 6ba2e19","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v106-2022-11-07","text":"","title":"v1.0.6 - 2022-11-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_2","text":"[meta] use npmignore to autogenerate an npmignore file 1d1e717 [actions] update rebase action to use reusable workflow 83f2683 [Dev Deps] update aud , tape a3a9129 [Deps] update es-abstract a6e476d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v105-2022-05-02","text":"","title":"v1.0.5 - 2022-05-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_3","text":"[actions] reuse common workflows 69a56ce [actions] use node/install instead of node/run ; use codecov action 5d7db31 [Fix] ensure main entry point properly checks the receiver in ES3 engines bb1983d [Fix] as of unicode v6, the mongolian vowel separator is no longer whitespace 10a1091 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape a08e14b [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , functions-have-names , tape 1c4c8da [actions] update codecov uploader 70c4a7c [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 4b08ed7 [readme] add github actions/codecov badges 9805501 [Dev Deps] update eslint , tape 50ec335 [actions] update workflows bf9c32e [meta] use prepublishOnly script for npm 7+ 9d921bd [Deps] update define-properties 15617ce","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v104-2021-02-23","text":"","title":"v1.0.4 - 2021-02-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_4","text":"[meta] do not publish github action workflow files 08e735c [readme] remove travis badge 10e0e47 [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , has-strict-mode , tape 0871432 [Tests] increase coverage 711e6a6 [actions] update workflows deb0d06 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape e250b4a [meta] gitignore coverage output 55231df [Deps] update call-bind 0580f5f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v103-2020-11-21","text":"","title":"v1.0.3 - 2020-11-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_5","text":"[Tests] migrate tests to Github Actions 23e7a09 [Tests] add implementation test; run es-shim-api in postlint; use tape runner 26e8623 [Tests] run nyc on all tests a72a546 [Deps] replace es-abstract with call-bind f07b87d [Dev Deps] update eslint , aud ; add safe-publish-latest 122ecb7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v102-2020-10-20","text":"","title":"v1.0.2 - 2020-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_6","text":"[Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape a003e71 [actions] add \"Allow Edits\" workflow 0b4b43c [Deps] update es-abstract 75ca6b0 [actions] switch Automatic Rebase workflow to pull_request_target event 552016c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v101-2020-04-09","text":"","title":"v1.0.1 - 2020-04-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_7","text":"[meta] add some missing repo metadata 6abe248 [Dev Deps] update auto-changelog e2eaab2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v100-2020-03-30","text":"","title":"v1.0.0 - 2020-03-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_8","text":"[Breaking] convert to es-shim API 2c6ef13 [meta] add auto-changelog 6f1fcc1 [meta] update readme ed4ce0d [Tests] add npm run lint eadaf2c Only apps should have lockfiles 44d355f [actions] add automatic rebasing / merge commit blocking e78bf8e [Tests] use shared travis-ci configs 983c563 [meta] add funding field 35139d6 [meta] fix non-updated version number a2d308b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v010-2017-12-19","text":"","title":"v0.1.0 - 2017-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_9","text":"updated README f1c71a0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#v001-2017-12-19","text":"","title":"v0.0.1 - 2017-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimend/CHANGELOG/#commits_10","text":"finished polyfill e58d550 created README file f78628a Initial commit 9199478 typo d1f4558","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/","text":"String.prototype.trimStart An ES2019-spec-compliant String.prototype.trimStart shim. Invoke its \"shim\" method to shim String.prototype.trimStart if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . In an ES6 environment, it will also work properly with Symbol s. Most common usage: var trimStart = require('string.prototype.trimstart'); assert(trimStart(' \\t\\na \\t\\n') === 'a \\t\\n'); if (!String.prototype.trimStart) { trimStart.shim(); } assert(trimStart(' \\t\\na \\t\\n') === ' \\t\\na \\t\\n'.trimStart()); Tests Simply clone the repo, npm install , and run npm test","title":"String.prototype.trimStart Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/#stringprototypetrimstart","text":"An ES2019-spec-compliant String.prototype.trimStart shim. Invoke its \"shim\" method to shim String.prototype.trimStart if it is unavailable. This package implements the es-shim API interface. It works in an ES3-supported environment and complies with the spec . In an ES6 environment, it will also work properly with Symbol s. Most common usage: var trimStart = require('string.prototype.trimstart'); assert(trimStart(' \\t\\na \\t\\n') === 'a \\t\\n'); if (!String.prototype.trimStart) { trimStart.shim(); } assert(trimStart(' \\t\\na \\t\\n') === ' \\t\\na \\t\\n'.trimStart());","title":"String.prototype.trimStart"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.8 - 2024-03-21 Commits [actions] use reusable workflows d139c11 [Dev Deps] update aud , npmignore , tape 16ff815 [Deps] update call-bind , define-properties 8dd308d [Refactor] use es-object-atoms instead of es-abstract 4868f56 [meta] add missing engines.node 8c1cce6 v1.0.7 - 2023-09-04 Commits [Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 58e7aa6 [Deps] update define-properties , es-abstract 8d9a7bf v1.0.6 - 2022-11-07 Commits [meta] use npmignore to autogenerate an npmignore file 0838ae4 [actions] update rebase action to use reusable workflow d6bb784 [Dev Deps] update aud , tape 8734d9a [Deps] update es-abstract 30f593f v1.0.5 - 2022-05-02 Commits [actions] reuse common workflows 61d4009 [actions] use node/install instead of node/run ; use codecov action bfe39c4 [Fix] ensure main entry point properly checks the receiver in ES3 engines 36e3730 [Fix] as of unicode v6, the mongolian vowel separator is no longer whitespace 4f77eed [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 59fcb99 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , functions-have-names , tape 486ffcf [actions] update codecov uploader b33ac48 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 3c89fa5 [readme] add github actions/codecov badges 00be6b3 [Dev Deps] update eslint , tape 13a08f5 [actions] update workflows 6ac576d [meta] use prepublishOnly script for npm 7+ fa382ca [Deps] update define-properties d57bffe v1.0.4 - 2021-02-23 Commits [meta] do not publish github action workflow files 9c434ec [readme] remove travis badge 7843160 [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , has-strict-mode , tape 8b52646 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape badeda2 [Tests] increase coverage bf8777d [actions] update workflows 61be1c6 [meta] gitignore coverage output c9c98d7 [Deps] update call-bind c8645e8 v1.0.3 - 2020-11-21 Commits [Tests] migrate tests to Github Actions fbc7519 [Tests] add implementation test; run es-shim-api in postlint; use tape runner 3c9330b [Tests] run nyc on all tests 52229ca [Deps] replace es-abstract with call-bind 5e5068d [Dev Deps] update eslint , aud ; add safe-publish-latest 42a853e v1.0.2 - 2020-10-20 Commits [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape d032b38 [actions] add \"Allow Edits\" workflow 83e30ba [Deps] update es-abstract 707d85d [actions] switch Automatic Rebase workflow to pull_request_target event 096c6d9 v1.0.1 - 2020-04-09 Commits [meta] add some missing repo metadata 3385da3 [Dev Deps] update auto-changelog 879377d v1.0.0 - 2020-03-30 Commits [Breaking] convert to es-shim API 970922c [meta] add auto-changelog ff30c09 [meta] update readme 816291d [Tests] add npm run lint 3341104 Only apps should have lockfiles f008df7 [actions] add automatic rebasing / merge commit blocking e5ba35c [Tests] use shared travis-ci configs 46516b1 [meta] add funding field 34ae856 [meta] fix non-updated version number 3b0e262 v0.1.0 - 2017-12-19 Commits updated README ab2f6ac v0.0.1 - 2017-12-19 Commits finished polyfill 1c7ca20 created README file: 192ecad Initial commit 14044f8 updated README d4fb6be","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v108-2024-03-21","text":"","title":"v1.0.8 - 2024-03-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits","text":"[actions] use reusable workflows d139c11 [Dev Deps] update aud , npmignore , tape 16ff815 [Deps] update call-bind , define-properties 8dd308d [Refactor] use es-object-atoms instead of es-abstract 4868f56 [meta] add missing engines.node 8c1cce6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v107-2023-09-04","text":"","title":"v1.0.7 - 2023-09-04"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_1","text":"[Dev Deps] update @es-shims/api , @ljharb/eslint-config , aud , tape 58e7aa6 [Deps] update define-properties , es-abstract 8d9a7bf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v106-2022-11-07","text":"","title":"v1.0.6 - 2022-11-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_2","text":"[meta] use npmignore to autogenerate an npmignore file 0838ae4 [actions] update rebase action to use reusable workflow d6bb784 [Dev Deps] update aud , tape 8734d9a [Deps] update es-abstract 30f593f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v105-2022-05-02","text":"","title":"v1.0.5 - 2022-05-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_3","text":"[actions] reuse common workflows 61d4009 [actions] use node/install instead of node/run ; use codecov action bfe39c4 [Fix] ensure main entry point properly checks the receiver in ES3 engines 36e3730 [Fix] as of unicode v6, the mongolian vowel separator is no longer whitespace 4f77eed [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 59fcb99 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , functions-have-names , tape 486ffcf [actions] update codecov uploader b33ac48 [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , aud , auto-changelog , tape 3c89fa5 [readme] add github actions/codecov badges 00be6b3 [Dev Deps] update eslint , tape 13a08f5 [actions] update workflows 6ac576d [meta] use prepublishOnly script for npm 7+ fa382ca [Deps] update define-properties d57bffe","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v104-2021-02-23","text":"","title":"v1.0.4 - 2021-02-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_4","text":"[meta] do not publish github action workflow files 9c434ec [readme] remove travis badge 7843160 [Dev Deps] update eslint , @ljharb/eslint-config , functions-have-names , has-strict-mode , tape 8b52646 [Dev Deps] update eslint , @ljharb/eslint-config , aud , tape badeda2 [Tests] increase coverage bf8777d [actions] update workflows 61be1c6 [meta] gitignore coverage output c9c98d7 [Deps] update call-bind c8645e8","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v103-2020-11-21","text":"","title":"v1.0.3 - 2020-11-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_5","text":"[Tests] migrate tests to Github Actions fbc7519 [Tests] add implementation test; run es-shim-api in postlint; use tape runner 3c9330b [Tests] run nyc on all tests 52229ca [Deps] replace es-abstract with call-bind 5e5068d [Dev Deps] update eslint , aud ; add safe-publish-latest 42a853e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v102-2020-10-20","text":"","title":"v1.0.2 - 2020-10-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_6","text":"[Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape d032b38 [actions] add \"Allow Edits\" workflow 83e30ba [Deps] update es-abstract 707d85d [actions] switch Automatic Rebase workflow to pull_request_target event 096c6d9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v101-2020-04-09","text":"","title":"v1.0.1 - 2020-04-09"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_7","text":"[meta] add some missing repo metadata 3385da3 [Dev Deps] update auto-changelog 879377d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v100-2020-03-30","text":"","title":"v1.0.0 - 2020-03-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_8","text":"[Breaking] convert to es-shim API 970922c [meta] add auto-changelog ff30c09 [meta] update readme 816291d [Tests] add npm run lint 3341104 Only apps should have lockfiles f008df7 [actions] add automatic rebasing / merge commit blocking e5ba35c [Tests] use shared travis-ci configs 46516b1 [meta] add funding field 34ae856 [meta] fix non-updated version number 3b0e262","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v010-2017-12-19","text":"","title":"v0.1.0 - 2017-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_9","text":"updated README ab2f6ac","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#v001-2017-12-19","text":"","title":"v0.0.1 - 2017-12-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/string.prototype.trimstart/CHANGELOG/#commits_10","text":"finished polyfill 1c7ca20 created README file: 192ecad Initial commit 14044f8 updated README d4fb6be","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/","text":"strip-json-comments Strip comments from JSON. Lets you use comments in your JSON files! This is now possible: { // Rainbows \"unicorn\": /* \u2764 */ \"cake\" } It will replace single-line comments // and multi-line comments /**/ with whitespace. This allows JSON error positions to remain as close as possible to the original source. Also available as a Gulp / Grunt / Broccoli plugin. Install $ npm install strip-json-comments Usage const json = `{ // Rainbows \"unicorn\": /* \u2764 */ \"cake\" }`; JSON.parse(stripJsonComments(json)); //=> {unicorn: 'cake'} API stripJsonComments(jsonString, options?) jsonString Type: string Accepts a string with JSON and returns a string without comments. options Type: object whitespace Type: boolean \\ Default: true Replace comments with whitespace instead of stripping them entirely. Benchmark $ npm run bench Related strip-json-comments-cli - CLI for this module strip-css-comments - Strip comments from CSS Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"strip-json-comments Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#strip-json-comments","text":"Strip comments from JSON. Lets you use comments in your JSON files! This is now possible: { // Rainbows \"unicorn\": /* \u2764 */ \"cake\" } It will replace single-line comments // and multi-line comments /**/ with whitespace. This allows JSON error positions to remain as close as possible to the original source. Also available as a Gulp / Grunt / Broccoli plugin.","title":"strip-json-comments"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#install","text":"$ npm install strip-json-comments","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#usage","text":"const json = `{ // Rainbows \"unicorn\": /* \u2764 */ \"cake\" }`; JSON.parse(stripJsonComments(json)); //=> {unicorn: 'cake'}","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#stripjsoncommentsjsonstring-options","text":"","title":"stripJsonComments(jsonString, options?)"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#jsonstring","text":"Type: string Accepts a string with JSON and returns a string without comments.","title":"jsonString"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#options","text":"Type: object","title":"options"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#whitespace","text":"Type: boolean \\ Default: true Replace comments with whitespace instead of stripping them entirely.","title":"whitespace"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#benchmark","text":"$ npm run bench","title":"Benchmark"},{"location":"_Disciplina/Code/my-react-app/node_modules/strip-json-comments/readme/#related","text":"strip-json-comments-cli - CLI for this module strip-css-comments - Strip comments from CSS Get professional support for this package with a Tidelift subscription Tidelift helps make open source sustainable for maintainers while giving companies assurances about security, maintenance, and licensing for their dependencies.","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/","text":"supports-color Detect whether a terminal supports color Install $ npm install supports-color Usage const supportsColor = require('supports-color'); if (supportsColor.stdout) { console.log('Terminal stdout supports color'); } if (supportsColor.stdout.has256) { console.log('Terminal stdout supports 256 colors'); } if (supportsColor.stderr.has16m) { console.log('Terminal stderr supports 16 million colors (truecolor)'); } API Returns an Object with a stdout and stderr property for testing either streams. Each property is an Object , or false if color is not supported. The stdout / stderr objects specifies a level of support for color through a .level property and a corresponding flag: .level = 1 and .hasBasic = true : Basic color support (16 colors) .level = 2 and .has256 = true : 256 color support .level = 3 and .has16m = true : Truecolor support (16 million colors) Info It obeys the --color and --no-color CLI flags. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively. Related supports-color-cli - CLI for this module chalk - Terminal string styling done right Maintainers Sindre Sorhus Josh Junon License MIT","title":"supports-color Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#supports-color","text":"Detect whether a terminal supports color","title":"supports-color"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#install","text":"$ npm install supports-color","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#usage","text":"const supportsColor = require('supports-color'); if (supportsColor.stdout) { console.log('Terminal stdout supports color'); } if (supportsColor.stdout.has256) { console.log('Terminal stdout supports 256 colors'); } if (supportsColor.stderr.has16m) { console.log('Terminal stderr supports 16 million colors (truecolor)'); }","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#api","text":"Returns an Object with a stdout and stderr property for testing either streams. Each property is an Object , or false if color is not supported. The stdout / stderr objects specifies a level of support for color through a .level property and a corresponding flag: .level = 1 and .hasBasic = true : Basic color support (16 colors) .level = 2 and .has256 = true : 256 color support .level = 3 and .has16m = true : Truecolor support (16 million colors)","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#info","text":"It obeys the --color and --no-color CLI flags. Can be overridden by the user with the flags --color and --no-color . For situations where using --color is not possible, add the environment variable FORCE_COLOR=1 to forcefully enable color or FORCE_COLOR=0 to forcefully disable. The use of FORCE_COLOR overrides all other color support checks. Explicit 256/Truecolor mode can be enabled using the --color=256 and --color=16m flags, respectively.","title":"Info"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#related","text":"supports-color-cli - CLI for this module chalk - Terminal string styling done right","title":"Related"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#maintainers","text":"Sindre Sorhus Josh Junon","title":"Maintainers"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-color/readme/#license","text":"MIT","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/","text":"node-supports-preserve-symlinks-flag Determine if the current node version supports the --preserve-symlinks flag. Example var supportsPreserveSymlinks = require('node-supports-preserve-symlinks-flag'); var assert = require('assert'); assert.equal(supportsPreserveSymlinks, null); // in a browser assert.equal(supportsPreserveSymlinks, false); // in node < v6.2 assert.equal(supportsPreserveSymlinks, true); // in node v6.2+ Tests Simply clone the repo, npm install , and run npm test","title":"node-supports-preserve-symlinks-flag Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/#node-supports-preserve-symlinks-flag","text":"Determine if the current node version supports the --preserve-symlinks flag.","title":"node-supports-preserve-symlinks-flag"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/#example","text":"var supportsPreserveSymlinks = require('node-supports-preserve-symlinks-flag'); var assert = require('assert'); assert.equal(supportsPreserveSymlinks, null); // in a browser assert.equal(supportsPreserveSymlinks, false); // in node < v6.2 assert.equal(supportsPreserveSymlinks, true); // in node v6.2+","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.0 - 2022-01-02 Commits Tests e2f59ad Initial commit dc222aa [meta] do not publish workflow files 5ef77f7 npm init 992b068 read me 6c9afa9 Initial implementation 2f98925 [meta] add auto-changelog 6c476ae [Dev Deps] add eslint , @ljharb/eslint-config d0fffc8 Only apps should have lockfiles ab318ed [meta] add safe-publish-latest 2bb23b3 [meta] add sideEffects flag 600223b","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/CHANGELOG/#v100-2022-01-02","text":"","title":"v1.0.0 - 2022-01-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/supports-preserve-symlinks-flag/CHANGELOG/#commits","text":"Tests e2f59ad Initial commit dc222aa [meta] do not publish workflow files 5ef77f7 npm init 992b068 read me 6c9afa9 Initial implementation 2f98925 [meta] add auto-changelog 6c476ae [Dev Deps] add eslint , @ljharb/eslint-config d0fffc8 Only apps should have lockfiles ab318ed [meta] add safe-publish-latest 2bb23b3 [meta] add sideEffects flag 600223b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/","text":"text-table generate borderless text table strings suitable for printing to stdout example default align var table = require('text-table'); var t = table([ [ 'master', '0123456789abcdef' ], [ 'staging', 'fedcba9876543210' ] ]); console.log(t); master 0123456789abcdef staging fedcba9876543210 left-right align var table = require('text-table'); var t = table([ [ 'beep', '1024' ], [ 'boop', '33450' ], [ 'foo', '1006' ], [ 'bar', '45' ] ], { align: [ 'l', 'r' ] }); console.log(t); beep 1024 boop 33450 foo 1006 bar 45 dotted align var table = require('text-table'); var t = table([ [ 'beep', '1024' ], [ 'boop', '334.212' ], [ 'foo', '1006' ], [ 'bar', '45.6' ], [ 'baz', '123.' ] ], { align: [ 'l', '.' ] }); console.log(t); beep 1024 boop 334.212 foo 1006 bar 45.6 baz 123. centered var table = require('text-table'); var t = table([ [ 'beep', '1024', 'xyz' ], [ 'boop', '3388450', 'tuv' ], [ 'foo', '10106', 'qrstuv' ], [ 'bar', '45', 'lmno' ] ], { align: [ 'l', 'c', 'l' ] }); console.log(t); beep 1024 xyz boop 3388450 tuv foo 10106 qrstuv bar 45 lmno methods var table = require('text-table') var s = table(rows, opts={}) Return a formatted table string s from an array of rows and some options opts . rows should be an array of arrays containing strings, numbers, or other printable values. options can be: opts.hsep - separator to use between columns, default ' ' opts.align - array of alignment types for each column, default ['l','l',...] opts.stringLength - callback function to use when calculating the string length alignment types are: 'l' - left 'r' - right 'c' - center '.' - decimal install With npm do: npm install text-table Use with ANSI-colors Since the string length of ANSI color schemes does not equal the length JavaScript sees internally it is necessary to pass the a custom string length calculator during the main function call. See the test/ansi-colors.js file for an example. license MIT","title":"text-table"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#text-table","text":"generate borderless text table strings suitable for printing to stdout","title":"text-table"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#example","text":"","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#default-align","text":"var table = require('text-table'); var t = table([ [ 'master', '0123456789abcdef' ], [ 'staging', 'fedcba9876543210' ] ]); console.log(t); master 0123456789abcdef staging fedcba9876543210","title":"default align"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#left-right-align","text":"var table = require('text-table'); var t = table([ [ 'beep', '1024' ], [ 'boop', '33450' ], [ 'foo', '1006' ], [ 'bar', '45' ] ], { align: [ 'l', 'r' ] }); console.log(t); beep 1024 boop 33450 foo 1006 bar 45","title":"left-right align"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#dotted-align","text":"var table = require('text-table'); var t = table([ [ 'beep', '1024' ], [ 'boop', '334.212' ], [ 'foo', '1006' ], [ 'bar', '45.6' ], [ 'baz', '123.' ] ], { align: [ 'l', '.' ] }); console.log(t); beep 1024 boop 334.212 foo 1006 bar 45.6 baz 123.","title":"dotted align"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#centered","text":"var table = require('text-table'); var t = table([ [ 'beep', '1024', 'xyz' ], [ 'boop', '3388450', 'tuv' ], [ 'foo', '10106', 'qrstuv' ], [ 'bar', '45', 'lmno' ] ], { align: [ 'l', 'c', 'l' ] }); console.log(t); beep 1024 xyz boop 3388450 tuv foo 10106 qrstuv bar 45 lmno","title":"centered"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#methods","text":"var table = require('text-table')","title":"methods"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#var-s-tablerows-opts","text":"Return a formatted table string s from an array of rows and some options opts . rows should be an array of arrays containing strings, numbers, or other printable values. options can be: opts.hsep - separator to use between columns, default ' ' opts.align - array of alignment types for each column, default ['l','l',...] opts.stringLength - callback function to use when calculating the string length alignment types are: 'l' - left 'r' - right 'c' - center '.' - decimal","title":"var s = table(rows, opts={})"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#install","text":"With npm do: npm install text-table","title":"install"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#use-with-ansi-colors","text":"Since the string length of ANSI color schemes does not equal the length JavaScript sees internally it is necessary to pass the a custom string length calculator during the main function call. See the test/ansi-colors.js file for an example.","title":"Use with ANSI-colors"},{"location":"_Disciplina/Code/my-react-app/node_modules/text-table/readme/#license","text":"MIT","title":"license"},{"location":"_Disciplina/Code/my-react-app/node_modules/to-fast-properties/readme/","text":"to-fast-properties Force V8 to use fast properties for an object Read more. Use %HasFastProperties(object) and --allow-natives-syntax to check whether an object already has fast properties. Install $ npm install --save to-fast-properties Usage const toFastProperties = require('to-fast-properties'); const obj = { foo: true, bar: true }; delete obj.foo; // `obj` now has slow properties toFastProperties(obj); // `obj` now has fast properties License MIT \u00a9 Petka Antonov, John-David Dalton, Sindre Sorhus","title":"to-fast-properties Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/to-fast-properties/readme/#to-fast-properties","text":"Force V8 to use fast properties for an object Read more. Use %HasFastProperties(object) and --allow-natives-syntax to check whether an object already has fast properties.","title":"to-fast-properties"},{"location":"_Disciplina/Code/my-react-app/node_modules/to-fast-properties/readme/#install","text":"$ npm install --save to-fast-properties","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/to-fast-properties/readme/#usage","text":"const toFastProperties = require('to-fast-properties'); const obj = { foo: true, bar: true }; delete obj.foo; // `obj` now has slow properties toFastProperties(obj); // `obj` now has fast properties","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/to-fast-properties/readme/#license","text":"MIT \u00a9 Petka Antonov, John-David Dalton, Sindre Sorhus","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/","text":"type-check type-check is a library which allows you to check the types of JavaScript values at runtime with a Haskell like type syntax. It is great for checking external input, for testing, or even for adding a bit of safety to your internal code. It is a major component of levn . MIT license. Version 0.4.0. Check out the demo . For updates on type-check , follow me on twitter . npm install type-check Quick Examples // Basic types: var typeCheck = require('type-check').typeCheck; typeCheck('Number', 1); // true typeCheck('Number', 'str'); // false typeCheck('Error', new Error); // true typeCheck('Undefined', undefined); // true // Comment typeCheck('count::Number', 1); // true // One type OR another type: typeCheck('Number | String', 2); // true typeCheck('Number | String', 'str'); // true // Wildcard, matches all types: typeCheck('*', 2) // true // Array, all elements of a single type: typeCheck('[Number]', [1, 2, 3]); // true typeCheck('[Number]', [1, 'str', 3]); // false // Tuples, or fixed length arrays with elements of different types: typeCheck('(String, Number)', ['str', 2]); // true typeCheck('(String, Number)', ['str']); // false typeCheck('(String, Number)', ['str', 2, 5]); // false // Object properties: typeCheck('{x: Number, y: Boolean}', {x: 2, y: false}); // true typeCheck('{x: Number, y: Boolean}', {x: 2}); // false typeCheck('{x: Number, y: Maybe Boolean}', {x: 2}); // true typeCheck('{x: Number, y: Boolean}', {x: 2, y: false, z: 3}); // false typeCheck('{x: Number, y: Boolean, ...}', {x: 2, y: false, z: 3}); // true // A particular type AND object properties: typeCheck('RegExp{source: String, ...}', /re/i); // true typeCheck('RegExp{source: String, ...}', {source: 're'}); // false // Custom types: var opt = {customTypes: {Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; }}}}; typeCheck('Even', 2, opt); // true // Nested: var type = '{a: (String, [Number], {y: Array, ...}), b: Error{message: String, ...}}' typeCheck(type, {a: ['hi', [1, 2, 3], {y: [1, 'ms']}], b: new Error('oh no')}); // true Check out the type syntax format and guide . Usage require('type-check'); returns an object that exposes four properties. VERSION is the current version of the library as a string. typeCheck , parseType , and parsedTypeCheck are functions. // typeCheck(type, input, options); typeCheck('Number', 2); // true // parseType(type); var parsedType = parseType('Number'); // object // parsedTypeCheck(parsedType, input, options); parsedTypeCheck(parsedType, 2); // true typeCheck(type, input, options) typeCheck checks a JavaScript value input against type written in the type format (and taking account the optional options ) and returns whether the input matches the type . arguments type - String - the type written in the type format which to check against input - * - any JavaScript value, which is to be checked against the type options - Maybe Object - an optional parameter specifying additional options, currently the only available option is specifying custom types returns Boolean - whether the input matches the type example typeCheck('Number', 2); // true parseType(type) parseType parses string type written in the type format into an object representing the parsed type. arguments type - String - the type written in the type format which to parse returns Object - an object in the parsed type format representing the parsed type example parseType('Number'); // [{type: 'Number'}] parsedTypeCheck(parsedType, input, options) parsedTypeCheck checks a JavaScript value input against parsed type in the parsed type format (and taking account the optional options ) and returns whether the input matches the type . Use this in conjunction with parseType if you are going to use a type more than once. arguments type - Object - the type in the parsed type format which to check against input - * - any JavaScript value, which is to be checked against the type options - Maybe Object - an optional parameter specifying additional options, currently the only available option is specifying custom types returns Boolean - whether the input matches the type example parsedTypeCheck([{type: 'Number'}], 2); // true var parsedType = parseType('String'); parsedTypeCheck(parsedType, 'str'); // true Type Format Syntax White space is ignored. The root node is a Types . Identifier = [\\$\\w]+ - a group of any lower or upper case letters, numbers, underscores, or dollar signs - eg. String Type = an Identifier , an Identifier followed by a Structure , just a Structure , or a wildcard * - eg. String , Object{x: Number} , {x: Number} , Array{0: String, 1: Boolean, length: Number} , * Types = optionally a comment (an Identifier followed by a :: ), optionally the identifier Maybe , one or more Type , separated by | - eg. Number , String | Date , Maybe Number , Maybe Boolean | String Structure = Fields , or a Tuple , or an Array - eg. {x: Number} , (String, Number) , [Date] Fields = a { , followed one or more Field separated by a comma , (trailing comma , is permitted), optionally an ... (always preceded by a comma , ), followed by a } - eg. {x: Number, y: String} , {k: Function, ...} Field = an Identifier , followed by a colon : , followed by Types - eg. x: Date | String , y: Boolean Tuple = a ( , followed by one or more Types separated by a comma , (trailing comma , is permitted), followed by a ) - eg (Date) , (Number, Date) Array = a [ followed by exactly one Types followed by a ] - eg. [Boolean] , [Boolean | Null] Guide type-check uses Object.toString to find out the basic type of a value. Specifically, {}.toString.call(VALUE).slice(8, -1) {}.toString.call(true).slice(8, -1) // 'Boolean' A basic type, eg. Number , uses this check. This is much more versatile than using typeof - for example, with document , typeof produces 'object' which isn't that useful, and our technique produces 'HTMLDocument' . You may check for multiple types by separating types with a | . The checker proceeds from left to right, and passes if the value is any of the types - eg. String | Boolean first checks if the value is a string, and then if it is a boolean. If it is none of those, then it returns false. Adding a Maybe in front of a list of multiple types is the same as also checking for Null and Undefined - eg. Maybe String is equivalent to Undefined | Null | String . You may add a comment to remind you of what the type is for by following an identifier with a :: before a type (or multiple types). The comment is simply thrown out. The wildcard * matches all types. There are three types of structures for checking the contents of a value: 'fields', 'tuple', and 'array'. If used by itself, a 'fields' structure will pass with any type of object as long as it is an instance of Object and the properties pass - this allows for duck typing - eg. {x: Boolean} . To check if the properties pass, and the value is of a certain type, you can specify the type - eg. Error{message: String} . If you want to make a field optional, you can simply use Maybe - eg. {x: Boolean, y: Maybe String} will still pass if y is undefined (or null). If you don't care if the value has properties beyond what you have specified, you can use the 'etc' operator ... - eg. {x: Boolean, ...} will match an object with an x property that is a boolean, and with zero or more other properties. For an array, you must specify one or more types (separated by | ) - it will pass for something of any length as long as each element passes the types provided - eg. [Number] , [Number | String] . A tuple checks for a fixed number of elements, each of a potentially different type. Each element is separated by a comma - eg. (String, Number) . An array and tuple structure check that the value is of type Array by default, but if another type is specified, they will check for that instead - eg. Int32Array[Number] . You can use the wildcard * to search for any type at all. Check out the type precedence library for type-check. Options Options is an object. It is an optional parameter to the typeCheck and parsedTypeCheck functions. The only current option is customTypes . Custom Types Example: var options = { customTypes: { Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; } } } }; typeCheck('Even', 2, options); // true typeCheck('Even', 3, options); // false customTypes allows you to set up custom types for validation. The value of this is an object. The keys of the object are the types you will be matching. Each value of the object will be an object having a typeOf property - a string, and validate property - a function. The typeOf property is the type the value should be (optional - if not set only validate will be used), and validate is a function which should return true if the value is of that type. validate receives one parameter, which is the value that we are checking. Technical About type-check is written in LiveScript - a language that compiles to JavaScript. It also uses the prelude.ls library.","title":"type-check Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#type-check","text":"type-check is a library which allows you to check the types of JavaScript values at runtime with a Haskell like type syntax. It is great for checking external input, for testing, or even for adding a bit of safety to your internal code. It is a major component of levn . MIT license. Version 0.4.0. Check out the demo . For updates on type-check , follow me on twitter . npm install type-check","title":"type-check"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#quick-examples","text":"// Basic types: var typeCheck = require('type-check').typeCheck; typeCheck('Number', 1); // true typeCheck('Number', 'str'); // false typeCheck('Error', new Error); // true typeCheck('Undefined', undefined); // true // Comment typeCheck('count::Number', 1); // true // One type OR another type: typeCheck('Number | String', 2); // true typeCheck('Number | String', 'str'); // true // Wildcard, matches all types: typeCheck('*', 2) // true // Array, all elements of a single type: typeCheck('[Number]', [1, 2, 3]); // true typeCheck('[Number]', [1, 'str', 3]); // false // Tuples, or fixed length arrays with elements of different types: typeCheck('(String, Number)', ['str', 2]); // true typeCheck('(String, Number)', ['str']); // false typeCheck('(String, Number)', ['str', 2, 5]); // false // Object properties: typeCheck('{x: Number, y: Boolean}', {x: 2, y: false}); // true typeCheck('{x: Number, y: Boolean}', {x: 2}); // false typeCheck('{x: Number, y: Maybe Boolean}', {x: 2}); // true typeCheck('{x: Number, y: Boolean}', {x: 2, y: false, z: 3}); // false typeCheck('{x: Number, y: Boolean, ...}', {x: 2, y: false, z: 3}); // true // A particular type AND object properties: typeCheck('RegExp{source: String, ...}', /re/i); // true typeCheck('RegExp{source: String, ...}', {source: 're'}); // false // Custom types: var opt = {customTypes: {Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; }}}}; typeCheck('Even', 2, opt); // true // Nested: var type = '{a: (String, [Number], {y: Array, ...}), b: Error{message: String, ...}}' typeCheck(type, {a: ['hi', [1, 2, 3], {y: [1, 'ms']}], b: new Error('oh no')}); // true Check out the type syntax format and guide .","title":"Quick Examples"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#usage","text":"require('type-check'); returns an object that exposes four properties. VERSION is the current version of the library as a string. typeCheck , parseType , and parsedTypeCheck are functions. // typeCheck(type, input, options); typeCheck('Number', 2); // true // parseType(type); var parsedType = parseType('Number'); // object // parsedTypeCheck(parsedType, input, options); parsedTypeCheck(parsedType, 2); // true","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#typechecktype-input-options","text":"typeCheck checks a JavaScript value input against type written in the type format (and taking account the optional options ) and returns whether the input matches the type .","title":"typeCheck(type, input, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#arguments","text":"type - String - the type written in the type format which to check against input - * - any JavaScript value, which is to be checked against the type options - Maybe Object - an optional parameter specifying additional options, currently the only available option is specifying custom types","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#returns","text":"Boolean - whether the input matches the type","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#example","text":"typeCheck('Number', 2); // true","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#parsetypetype","text":"parseType parses string type written in the type format into an object representing the parsed type.","title":"parseType(type)"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#arguments_1","text":"type - String - the type written in the type format which to parse","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#returns_1","text":"Object - an object in the parsed type format representing the parsed type","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#example_1","text":"parseType('Number'); // [{type: 'Number'}]","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#parsedtypecheckparsedtype-input-options","text":"parsedTypeCheck checks a JavaScript value input against parsed type in the parsed type format (and taking account the optional options ) and returns whether the input matches the type . Use this in conjunction with parseType if you are going to use a type more than once.","title":"parsedTypeCheck(parsedType, input, options)"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#arguments_2","text":"type - Object - the type in the parsed type format which to check against input - * - any JavaScript value, which is to be checked against the type options - Maybe Object - an optional parameter specifying additional options, currently the only available option is specifying custom types","title":"arguments"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#returns_2","text":"Boolean - whether the input matches the type","title":"returns"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#example_2","text":"parsedTypeCheck([{type: 'Number'}], 2); // true var parsedType = parseType('String'); parsedTypeCheck(parsedType, 'str'); // true","title":"example"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#type-format","text":"","title":"Type Format"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#syntax","text":"White space is ignored. The root node is a Types . Identifier = [\\$\\w]+ - a group of any lower or upper case letters, numbers, underscores, or dollar signs - eg. String Type = an Identifier , an Identifier followed by a Structure , just a Structure , or a wildcard * - eg. String , Object{x: Number} , {x: Number} , Array{0: String, 1: Boolean, length: Number} , * Types = optionally a comment (an Identifier followed by a :: ), optionally the identifier Maybe , one or more Type , separated by | - eg. Number , String | Date , Maybe Number , Maybe Boolean | String Structure = Fields , or a Tuple , or an Array - eg. {x: Number} , (String, Number) , [Date] Fields = a { , followed one or more Field separated by a comma , (trailing comma , is permitted), optionally an ... (always preceded by a comma , ), followed by a } - eg. {x: Number, y: String} , {k: Function, ...} Field = an Identifier , followed by a colon : , followed by Types - eg. x: Date | String , y: Boolean Tuple = a ( , followed by one or more Types separated by a comma , (trailing comma , is permitted), followed by a ) - eg (Date) , (Number, Date) Array = a [ followed by exactly one Types followed by a ] - eg. [Boolean] , [Boolean | Null]","title":"Syntax"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#guide","text":"type-check uses Object.toString to find out the basic type of a value. Specifically, {}.toString.call(VALUE).slice(8, -1) {}.toString.call(true).slice(8, -1) // 'Boolean' A basic type, eg. Number , uses this check. This is much more versatile than using typeof - for example, with document , typeof produces 'object' which isn't that useful, and our technique produces 'HTMLDocument' . You may check for multiple types by separating types with a | . The checker proceeds from left to right, and passes if the value is any of the types - eg. String | Boolean first checks if the value is a string, and then if it is a boolean. If it is none of those, then it returns false. Adding a Maybe in front of a list of multiple types is the same as also checking for Null and Undefined - eg. Maybe String is equivalent to Undefined | Null | String . You may add a comment to remind you of what the type is for by following an identifier with a :: before a type (or multiple types). The comment is simply thrown out. The wildcard * matches all types. There are three types of structures for checking the contents of a value: 'fields', 'tuple', and 'array'. If used by itself, a 'fields' structure will pass with any type of object as long as it is an instance of Object and the properties pass - this allows for duck typing - eg. {x: Boolean} . To check if the properties pass, and the value is of a certain type, you can specify the type - eg. Error{message: String} . If you want to make a field optional, you can simply use Maybe - eg. {x: Boolean, y: Maybe String} will still pass if y is undefined (or null). If you don't care if the value has properties beyond what you have specified, you can use the 'etc' operator ... - eg. {x: Boolean, ...} will match an object with an x property that is a boolean, and with zero or more other properties. For an array, you must specify one or more types (separated by | ) - it will pass for something of any length as long as each element passes the types provided - eg. [Number] , [Number | String] . A tuple checks for a fixed number of elements, each of a potentially different type. Each element is separated by a comma - eg. (String, Number) . An array and tuple structure check that the value is of type Array by default, but if another type is specified, they will check for that instead - eg. Int32Array[Number] . You can use the wildcard * to search for any type at all. Check out the type precedence library for type-check.","title":"Guide"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#options","text":"Options is an object. It is an optional parameter to the typeCheck and parsedTypeCheck functions. The only current option is customTypes .","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#custom-types","text":"Example: var options = { customTypes: { Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; } } } }; typeCheck('Even', 2, options); // true typeCheck('Even', 3, options); // false customTypes allows you to set up custom types for validation. The value of this is an object. The keys of the object are the types you will be matching. Each value of the object will be an object having a typeOf property - a string, and validate property - a function. The typeOf property is the type the value should be (optional - if not set only validate will be used), and validate is a function which should return true if the value is of that type. validate receives one parameter, which is the value that we are checking.","title":"Custom Types"},{"location":"_Disciplina/Code/my-react-app/node_modules/type-check/#technical-about","text":"type-check is written in LiveScript - a language that compiles to JavaScript. It also uses the prelude.ls library.","title":"Technical About"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/","text":"typed-array-buffer Get the ArrayBuffer out of a TypedArray, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where TypedArray.prototype.buffer has been deleted after this module has loaded. Example const typedArrayBuffer = require('typed-array-buffer'); const assert = require('assert'); const arr = new Uint8Array(0); assert.equal(arr.buffer, typedArrayBuffer(arr)); Tests Simply clone the repo, npm install , and run npm test","title":"typed-array-buffer Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/#typed-array-buffer","text":"Get the ArrayBuffer out of a TypedArray, robustly. This will work in node <= 0.10 and < 0.11.4, where there's no prototype accessor, only a nonconfigurable own property. It will also work in modern engines where TypedArray.prototype.buffer has been deleted after this module has loaded.","title":"typed-array-buffer"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/#example","text":"const typedArrayBuffer = require('typed-array-buffer'); const assert = require('assert'); const arr = new Uint8Array(0); assert.equal(arr.buffer, typedArrayBuffer(arr));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-02-19 Commits add types 23c6fba [Deps] update available-typed-arrays 5f68ba1 [Deps] update call-bind 54a92ce [Dev Deps] update tape b0b3342 v1.0.1 - 2024-02-06 Commits [Dev Deps] update aud , available-typed-arrays , npmignore , object-inspect , tape 5334477 [Refactor] use es-errors , so things that only need those do not need get-intrinsic e2511e0 [Deps] update call-bind , get-intrinsic , is-typed-array 36c3b11 [meta] add sideEffects flag 46cc1f4 v1.0.0 - 2023-06-05 Commits Initial implementation, tests, readme 5bc2953 Initial commit 98b8ac9 npm init 6a4a73c Only apps should have lockfiles 7226abf","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#v102-2024-02-19","text":"","title":"v1.0.2 - 2024-02-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#commits","text":"add types 23c6fba [Deps] update available-typed-arrays 5f68ba1 [Deps] update call-bind 54a92ce [Dev Deps] update tape b0b3342","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#v101-2024-02-06","text":"","title":"v1.0.1 - 2024-02-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#commits_1","text":"[Dev Deps] update aud , available-typed-arrays , npmignore , object-inspect , tape 5334477 [Refactor] use es-errors , so things that only need those do not need get-intrinsic e2511e0 [Deps] update call-bind , get-intrinsic , is-typed-array 36c3b11 [meta] add sideEffects flag 46cc1f4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#v100-2023-06-05","text":"","title":"v1.0.0 - 2023-06-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-buffer/CHANGELOG/#commits_2","text":"Initial implementation, tests, readme 5bc2953 Initial commit 98b8ac9 npm init 6a4a73c Only apps should have lockfiles 7226abf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/","text":"typed-array-byte-offset Robustly get the byte offset of a Typed Array, or false if it is not a Typed Array. Works cross-realm, in every engine, even if the byteOffset property is overridden. Example var typedArrayByteOffset = require('typed-array-byte-offset'); var assert = require('assert'); assert.equal(false, typedArrayByteOffset(undefined)); assert.equal(false, typedArrayByteOffset(null)); assert.equal(false, typedArrayByteOffset(false)); assert.equal(false, typedArrayByteOffset(true)); assert.equal(false, typedArrayByteOffset([])); assert.equal(false, typedArrayByteOffset({})); assert.equal(false, typedArrayByteOffset(/a/g)); assert.equal(false, typedArrayByteOffset(new RegExp('a', 'g'))); assert.equal(false, typedArrayByteOffset(new Date())); assert.equal(false, typedArrayByteOffset(42)); assert.equal(false, typedArrayByteOffset(NaN)); assert.equal(false, typedArrayByteOffset(Infinity)); assert.equal(false, typedArrayByteOffset(new Number(42))); assert.equal(false, typedArrayByteOffset('foo')); assert.equal(false, typedArrayByteOffset(Object('foo'))); assert.equal(false, typedArrayByteOffset(function () {})); assert.equal(false, typedArrayByteOffset(function* () {})); assert.equal(false, typedArrayByteOffset(x => x * x)); assert.equal(false, typedArrayByteOffset([])); const buffer = new ArrayBuffer(32); assert.equal(8, typedArrayByteOffset(new Int8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8ClampedArray(buffer, 8))); assert.equal(4, typedArrayByteOffset(new Int16Array(buffer, 4))); assert.equal(4, typedArrayByteOffset(new Uint16Array(buffer, 4))); assert.equal(8, typedArrayByteOffset(new Int32Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint32Array(buffer, 8))); assert.equal(16, typedArrayByteOffset(new Float32Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new Float64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigInt64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigUint64Array(buffer, 16))); Tests Simply clone the repo, npm install , and run npm test","title":"typed-array-byte-offset Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/#typed-array-byte-offset","text":"Robustly get the byte offset of a Typed Array, or false if it is not a Typed Array. Works cross-realm, in every engine, even if the byteOffset property is overridden.","title":"typed-array-byte-offset"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/#example","text":"var typedArrayByteOffset = require('typed-array-byte-offset'); var assert = require('assert'); assert.equal(false, typedArrayByteOffset(undefined)); assert.equal(false, typedArrayByteOffset(null)); assert.equal(false, typedArrayByteOffset(false)); assert.equal(false, typedArrayByteOffset(true)); assert.equal(false, typedArrayByteOffset([])); assert.equal(false, typedArrayByteOffset({})); assert.equal(false, typedArrayByteOffset(/a/g)); assert.equal(false, typedArrayByteOffset(new RegExp('a', 'g'))); assert.equal(false, typedArrayByteOffset(new Date())); assert.equal(false, typedArrayByteOffset(42)); assert.equal(false, typedArrayByteOffset(NaN)); assert.equal(false, typedArrayByteOffset(Infinity)); assert.equal(false, typedArrayByteOffset(new Number(42))); assert.equal(false, typedArrayByteOffset('foo')); assert.equal(false, typedArrayByteOffset(Object('foo'))); assert.equal(false, typedArrayByteOffset(function () {})); assert.equal(false, typedArrayByteOffset(function* () {})); assert.equal(false, typedArrayByteOffset(x => x * x)); assert.equal(false, typedArrayByteOffset([])); const buffer = new ArrayBuffer(32); assert.equal(8, typedArrayByteOffset(new Int8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8ClampedArray(buffer, 8))); assert.equal(4, typedArrayByteOffset(new Int16Array(buffer, 4))); assert.equal(4, typedArrayByteOffset(new Uint16Array(buffer, 4))); assert.equal(8, typedArrayByteOffset(new Int32Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint32Array(buffer, 8))); assert.equal(16, typedArrayByteOffset(new Float32Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new Float64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigInt64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigUint64Array(buffer, 16)));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.1 - 2024-02-20 Commits add types 3144671 [actions] skip ls check on node < 10; remove redundant finisher 0f83947 [Refactor] use gopd 507b948 [Dev Deps] update aud , available-typed-arrays , npmignore , object-inspect , tape aba282d [Deps] update call-bind , has-proto , is-typed-array acfe4a9 [meta] add sideEffects flag 063a8a7 v1.0.0 - 2023-07-14 Commits Initial implementation, tests, readme b8800c8 Initial commit 72723d8 Only apps should have lockfiles a7dfc57","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/CHANGELOG/#v101-2024-02-20","text":"","title":"v1.0.1 - 2024-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/CHANGELOG/#commits","text":"add types 3144671 [actions] skip ls check on node < 10; remove redundant finisher 0f83947 [Refactor] use gopd 507b948 [Dev Deps] update aud , available-typed-arrays , npmignore , object-inspect , tape aba282d [Deps] update call-bind , has-proto , is-typed-array acfe4a9 [meta] add sideEffects flag 063a8a7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/CHANGELOG/#v100-2023-07-14","text":"","title":"v1.0.0 - 2023-07-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-length/CHANGELOG/#commits_1","text":"Initial implementation, tests, readme b8800c8 Initial commit 72723d8 Only apps should have lockfiles a7dfc57","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/","text":"typed-array-byte-offset Robustly get the byte offset of a Typed Array, or false if it is not a Typed Array. Works cross-realm, in every engine, even if the byteOffset property is overridden. Example var typedArrayByteOffset = require('typed-array-byte-offset'); var assert = require('assert'); assert.equal(false, typedArrayByteOffset(undefined)); assert.equal(false, typedArrayByteOffset(null)); assert.equal(false, typedArrayByteOffset(false)); assert.equal(false, typedArrayByteOffset(true)); assert.equal(false, typedArrayByteOffset([])); assert.equal(false, typedArrayByteOffset({})); assert.equal(false, typedArrayByteOffset(/a/g)); assert.equal(false, typedArrayByteOffset(new RegExp('a', 'g'))); assert.equal(false, typedArrayByteOffset(new Date())); assert.equal(false, typedArrayByteOffset(42)); assert.equal(false, typedArrayByteOffset(NaN)); assert.equal(false, typedArrayByteOffset(Infinity)); assert.equal(false, typedArrayByteOffset(new Number(42))); assert.equal(false, typedArrayByteOffset('foo')); assert.equal(false, typedArrayByteOffset(Object('foo'))); assert.equal(false, typedArrayByteOffset(function () {})); assert.equal(false, typedArrayByteOffset(function* () {})); assert.equal(false, typedArrayByteOffset(x => x * x)); assert.equal(false, typedArrayByteOffset([])); const buffer = new ArrayBuffer(32); assert.equal(8, typedArrayByteOffset(new Int8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8ClampedArray(buffer, 8))); assert.equal(4, typedArrayByteOffset(new Int16Array(buffer, 4))); assert.equal(4, typedArrayByteOffset(new Uint16Array(buffer, 4))); assert.equal(8, typedArrayByteOffset(new Int32Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint32Array(buffer, 8))); assert.equal(16, typedArrayByteOffset(new Float32Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new Float64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigInt64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigUint64Array(buffer, 16))); Tests Simply clone the repo, npm install , and run npm test","title":"typed-array-byte-offset Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/#typed-array-byte-offset","text":"Robustly get the byte offset of a Typed Array, or false if it is not a Typed Array. Works cross-realm, in every engine, even if the byteOffset property is overridden.","title":"typed-array-byte-offset"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/#example","text":"var typedArrayByteOffset = require('typed-array-byte-offset'); var assert = require('assert'); assert.equal(false, typedArrayByteOffset(undefined)); assert.equal(false, typedArrayByteOffset(null)); assert.equal(false, typedArrayByteOffset(false)); assert.equal(false, typedArrayByteOffset(true)); assert.equal(false, typedArrayByteOffset([])); assert.equal(false, typedArrayByteOffset({})); assert.equal(false, typedArrayByteOffset(/a/g)); assert.equal(false, typedArrayByteOffset(new RegExp('a', 'g'))); assert.equal(false, typedArrayByteOffset(new Date())); assert.equal(false, typedArrayByteOffset(42)); assert.equal(false, typedArrayByteOffset(NaN)); assert.equal(false, typedArrayByteOffset(Infinity)); assert.equal(false, typedArrayByteOffset(new Number(42))); assert.equal(false, typedArrayByteOffset('foo')); assert.equal(false, typedArrayByteOffset(Object('foo'))); assert.equal(false, typedArrayByteOffset(function () {})); assert.equal(false, typedArrayByteOffset(function* () {})); assert.equal(false, typedArrayByteOffset(x => x * x)); assert.equal(false, typedArrayByteOffset([])); const buffer = new ArrayBuffer(32); assert.equal(8, typedArrayByteOffset(new Int8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint8ClampedArray(buffer, 8))); assert.equal(4, typedArrayByteOffset(new Int16Array(buffer, 4))); assert.equal(4, typedArrayByteOffset(new Uint16Array(buffer, 4))); assert.equal(8, typedArrayByteOffset(new Int32Array(buffer, 8))); assert.equal(8, typedArrayByteOffset(new Uint32Array(buffer, 8))); assert.equal(16, typedArrayByteOffset(new Float32Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new Float64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigInt64Array(buffer, 16))); assert.equal(16, typedArrayByteOffset(new BigUint64Array(buffer, 16)));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-02-20 Commits add types 9eecdd2 [actions] skip ls check on node < 10; remove redundant finisher 4fb4c91 [Deps] update available-typed-arrays , has-proto 805cee2 v1.0.1 - 2024-02-17 Commits [Dev Deps] update aud , npmignore , object-inspect , tape ffe7494 [Deps] update available-typed-arrays , call-bind , is-typed-array 3006bd7 [Refactor] use gopd 45827ea [Dev Deps] update tape e33d080 [meta] add sideEffects flag f1dc0db v1.0.0 - 2023-06-06 Commits Initial implementation, tests, readme f227633 Initial commit 806bbaf npm init 1151981 Only apps should have lockfiles 5fa9933","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#v102-2024-02-20","text":"","title":"v1.0.2 - 2024-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#commits","text":"add types 9eecdd2 [actions] skip ls check on node < 10; remove redundant finisher 4fb4c91 [Deps] update available-typed-arrays , has-proto 805cee2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#v101-2024-02-17","text":"","title":"v1.0.1 - 2024-02-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#commits_1","text":"[Dev Deps] update aud , npmignore , object-inspect , tape ffe7494 [Deps] update available-typed-arrays , call-bind , is-typed-array 3006bd7 [Refactor] use gopd 45827ea [Dev Deps] update tape e33d080 [meta] add sideEffects flag f1dc0db","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#v100-2023-06-06","text":"","title":"v1.0.0 - 2023-06-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-byte-offset/CHANGELOG/#commits_2","text":"Initial implementation, tests, readme f227633 Initial commit 806bbaf npm init 1151981 Only apps should have lockfiles 5fa9933","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/","text":"typed-array-length Robustly get the length of a Typed Array, or false if it is not a Typed Array. Works cross-realm, in every engine, even if the length property is overridden. Example var typedArrayLength = require('typed-array-length'); var assert = require('assert'); assert.equal(false, typedArrayLength(undefined)); assert.equal(false, typedArrayLength(null)); assert.equal(false, typedArrayLength(false)); assert.equal(false, typedArrayLength(true)); assert.equal(false, typedArrayLength([])); assert.equal(false, typedArrayLength({})); assert.equal(false, typedArrayLength(/a/g)); assert.equal(false, typedArrayLength(new RegExp('a', 'g'))); assert.equal(false, typedArrayLength(new Date())); assert.equal(false, typedArrayLength(42)); assert.equal(false, typedArrayLength(NaN)); assert.equal(false, typedArrayLength(Infinity)); assert.equal(false, typedArrayLength(new Number(42))); assert.equal(false, typedArrayLength('foo')); assert.equal(false, typedArrayLength(Object('foo'))); assert.equal(false, typedArrayLength(function () {})); assert.equal(false, typedArrayLength(function* () {})); assert.equal(false, typedArrayLength(x => x * x)); assert.equal(false, typedArrayLength([])); assert.equal(1, typedArrayLength(new Int8Array(1))); assert.equal(2, typedArrayLength(new Uint8Array(2))); assert.equal(3, typedArrayLength(new Uint8ClampedArray(3))); assert.equal(4, typedArrayLength(new Int16Array(4))); assert.equal(5, typedArrayLength(new Uint16Array(5))); assert.equal(6, typedArrayLength(new Int32Array(6))); assert.equal(7, typedArrayLength(new Uint32Array(7))); assert.equal(8, typedArrayLength(new Float32Array(8))); assert.equal(9, typedArrayLength(new Float64Array(9))); assert.equal(10, typedArrayLength(new BigInt64Array(10))); assert.equal(11, typedArrayLength(new BigUint64Array(11))); Tests Simply clone the repo, npm install , and run npm test","title":"typed-array-length Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/#typed-array-length","text":"Robustly get the length of a Typed Array, or false if it is not a Typed Array. Works cross-realm, in every engine, even if the length property is overridden.","title":"typed-array-length"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/#example","text":"var typedArrayLength = require('typed-array-length'); var assert = require('assert'); assert.equal(false, typedArrayLength(undefined)); assert.equal(false, typedArrayLength(null)); assert.equal(false, typedArrayLength(false)); assert.equal(false, typedArrayLength(true)); assert.equal(false, typedArrayLength([])); assert.equal(false, typedArrayLength({})); assert.equal(false, typedArrayLength(/a/g)); assert.equal(false, typedArrayLength(new RegExp('a', 'g'))); assert.equal(false, typedArrayLength(new Date())); assert.equal(false, typedArrayLength(42)); assert.equal(false, typedArrayLength(NaN)); assert.equal(false, typedArrayLength(Infinity)); assert.equal(false, typedArrayLength(new Number(42))); assert.equal(false, typedArrayLength('foo')); assert.equal(false, typedArrayLength(Object('foo'))); assert.equal(false, typedArrayLength(function () {})); assert.equal(false, typedArrayLength(function* () {})); assert.equal(false, typedArrayLength(x => x * x)); assert.equal(false, typedArrayLength([])); assert.equal(1, typedArrayLength(new Int8Array(1))); assert.equal(2, typedArrayLength(new Uint8Array(2))); assert.equal(3, typedArrayLength(new Uint8ClampedArray(3))); assert.equal(4, typedArrayLength(new Int16Array(4))); assert.equal(5, typedArrayLength(new Uint16Array(5))); assert.equal(6, typedArrayLength(new Int32Array(6))); assert.equal(7, typedArrayLength(new Uint32Array(7))); assert.equal(8, typedArrayLength(new Float32Array(8))); assert.equal(9, typedArrayLength(new Float64Array(9))); assert.equal(10, typedArrayLength(new BigInt64Array(10))); assert.equal(11, typedArrayLength(new BigUint64Array(11)));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.6 - 2024-03-21 Commits [types] vastly improve types 9f68d36 [types] use shared config b6b3cbc [actions] remove redundant finisher c69896e [Tests] actually check types in tests, and add attw e2c3f94 v1.0.5 - 2024-02-20 Commits add types df51e65 [Refactor] use possible-typed-array-names for a single source of truth 84503a3 [actions] update rebase action to use reusable workflow f163023 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape 57ca930 [Dev Deps] update aud , is-callable , object-inspect , tape 99343f4 [Refactor] use gopd and has-proto b134a5c [Deps] update call-bind , is-typed-array 3b62f55 [meta] add missing engines.node ff3e9f7 [Deps] update is-typed-array 877f507 [meta] add sideEffects flag 6e91309 v1.0.4 - 2022-05-23 Commits [actions] reuse common workflows dfd4a37 [meta] use npmignore to autogenerate an npmignore file a837e80 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , is-callable , object-inspect , tape 7b05a87 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c495f6e [meta] simplify \"exports\" e42a6b6 [Fix] ensure for-each dependency is properly listed 8ec761c [Deps] update call-bind , is-typed-array 2cc173a [meta] add safe-publish-latest e8e3afa [Deps] update is-typed-array cd8084d v1.0.3 - 2020-12-05 Commits [Tests] migrate tests to Github Actions a578b83 [meta] avoid publishing github workflows f064a4b [Tests] run nyc on all tests 69b841e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 4594e83 [actions] add \"Allow Edits\" workflow 81e953b [Deps] update is-typed-array ; use call-bind instead of es-abstract e7da56b [readme] remove travis badge 6d610d8 [actions] switch Automatic Rebase workflow to pull_request_target event 2d0ad64 v1.0.2 - 2020-04-22 Commits [Dev Deps] update make-arrow-function , make-generator-function 4facf69 [Deps] update is-typed-array , es-abstract aaf3585 [Dev Deps] update aud , auto-changelog f10e298 [meta] allow package.json to be required/imported 104f4c6 [Tests] only audit prod deps c748ab5 [Deps] update es-abstract 6cd213e [Dev Deps] update tape 2b0b2ea [Dev Deps] update @ljharb/eslint-config cf462f3 [Deps] update is-typed-array ff46995 v1.0.1 - 2020-01-19 Commits readme d3643fd [meta] fix \"exports\" field 006e28b v1.0.0 - 2020-01-18 Commits Initial commit 5f9e2ec Tests 6b9cadb Implementation 6a3cb50 npm init 41d42cd [meta] add auto-changelog 4fd159b [meta] add funding field; create FUNDING.yml 6a9fca7 [actions] add automatic rebasing / merge commit blocking 8303296 [Tests] add npm run lint 47a9c21 [Tests] use shared travis-ci configs d0c8915 Only apps should have lockfiles 3eaef9c","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v106-2024-03-21","text":"","title":"v1.0.6 - 2024-03-21"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits","text":"[types] vastly improve types 9f68d36 [types] use shared config b6b3cbc [actions] remove redundant finisher c69896e [Tests] actually check types in tests, and add attw e2c3f94","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v105-2024-02-20","text":"","title":"v1.0.5 - 2024-02-20"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits_1","text":"add types df51e65 [Refactor] use possible-typed-array-names for a single source of truth 84503a3 [actions] update rebase action to use reusable workflow f163023 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape 57ca930 [Dev Deps] update aud , is-callable , object-inspect , tape 99343f4 [Refactor] use gopd and has-proto b134a5c [Deps] update call-bind , is-typed-array 3b62f55 [meta] add missing engines.node ff3e9f7 [Deps] update is-typed-array 877f507 [meta] add sideEffects flag 6e91309","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v104-2022-05-23","text":"","title":"v1.0.4 - 2022-05-23"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits_2","text":"[actions] reuse common workflows dfd4a37 [meta] use npmignore to autogenerate an npmignore file a837e80 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , is-callable , object-inspect , tape 7b05a87 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape c495f6e [meta] simplify \"exports\" e42a6b6 [Fix] ensure for-each dependency is properly listed 8ec761c [Deps] update call-bind , is-typed-array 2cc173a [meta] add safe-publish-latest e8e3afa [Deps] update is-typed-array cd8084d","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v103-2020-12-05","text":"","title":"v1.0.3 - 2020-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits_3","text":"[Tests] migrate tests to Github Actions a578b83 [meta] avoid publishing github workflows f064a4b [Tests] run nyc on all tests 69b841e [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 4594e83 [actions] add \"Allow Edits\" workflow 81e953b [Deps] update is-typed-array ; use call-bind instead of es-abstract e7da56b [readme] remove travis badge 6d610d8 [actions] switch Automatic Rebase workflow to pull_request_target event 2d0ad64","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v102-2020-04-22","text":"","title":"v1.0.2 - 2020-04-22"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits_4","text":"[Dev Deps] update make-arrow-function , make-generator-function 4facf69 [Deps] update is-typed-array , es-abstract aaf3585 [Dev Deps] update aud , auto-changelog f10e298 [meta] allow package.json to be required/imported 104f4c6 [Tests] only audit prod deps c748ab5 [Deps] update es-abstract 6cd213e [Dev Deps] update tape 2b0b2ea [Dev Deps] update @ljharb/eslint-config cf462f3 [Deps] update is-typed-array ff46995","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v101-2020-01-19","text":"","title":"v1.0.1 - 2020-01-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits_5","text":"readme d3643fd [meta] fix \"exports\" field 006e28b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#v100-2020-01-18","text":"","title":"v1.0.0 - 2020-01-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/typed-array-length/CHANGELOG/#commits_6","text":"Initial commit 5f9e2ec Tests 6b9cadb Implementation 6a3cb50 npm init 41d42cd [meta] add auto-changelog 4fd159b [meta] add funding field; create FUNDING.yml 6a9fca7 [actions] add automatic rebasing / merge commit blocking 8303296 [Tests] add npm run lint 47a9c21 [Tests] use shared travis-ci configs d0c8915 Only apps should have lockfiles 3eaef9c","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/","text":"unbox-primitive Unbox a boxed JS primitive value. This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and works despite ES6 Symbol.toStringTag. Example var unboxPrimitive = require('unbox-primitive'); var assert = require('assert'); assert.equal(unboxPrimitive(new Boolean(false)), false); assert.equal(unboxPrimitive(new String('f')), 'f'); assert.equal(unboxPrimitive(new Number(42)), 42); const s = Symbol(); assert.equal(unboxPrimitive(Object(s)), s); assert.equal(unboxPrimitive(new BigInt(42)), 42n); // any primitive, or non-boxed-primitive object, will throw Tests Simply clone the repo, npm install , and run npm test","title":"unbox-primitive Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/#unbox-primitive","text":"Unbox a boxed JS primitive value. This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and works despite ES6 Symbol.toStringTag.","title":"unbox-primitive"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/#example","text":"var unboxPrimitive = require('unbox-primitive'); var assert = require('assert'); assert.equal(unboxPrimitive(new Boolean(false)), false); assert.equal(unboxPrimitive(new String('f')), 'f'); assert.equal(unboxPrimitive(new Number(42)), 42); const s = Symbol(); assert.equal(unboxPrimitive(Object(s)), s); assert.equal(unboxPrimitive(new BigInt(42)), 42n); // any primitive, or non-boxed-primitive object, will throw","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2022-04-24 Commits [actions] reuse common workflows e6420b9 [actions] update codecov uploader b90aff2 [readme] add github actions/codecov badges; update URLs bcc39b9 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape a704a32 [Refactor] use call-bind instead of function-bind 0a609f1 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , safe-publish-latest , tape 6a45317 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 795c76f [Deps] update has-bigints , has-symbols 257a065 v1.0.1 - 2021-03-25 Commits [Tests] use shared travis-ci configs f977e5f [Tests] migrate tests to Github Actions b89def6 [meta] do not publish github action workflow files 325d1f1 readme 810cd70 [Tests] run nyc on all tests; use tape runner 2f5fb08 [meta] add auto-changelog 03ed375 [actions] add automatic rebasing / merge commit blocking 6dec48d [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , object-is , tape 528ed88 [actions] check out the entire repo 5095b29 [actions] add \"Allow Edits\" workflow 5aa26d7 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , object-is , safe-publish-latest , tape afc18c6 [readme] remove travis badge a025899 [Dev Deps] update auto-changelog 9219a32 [readme] Fix missing paren in example 73f5a33 [Dev Deps] update @ljharb/eslint-config , tape e450acc [Deps] update has-bigints , has-symbols , which-boxed-primitive a4279b5 [Dev Deps] update auto-changelog , in-publish , tape b351548 [actions] switch Automatic Rebase workflow to pull_request_target event f600382 [readme] fix travis links 4d02fa9 [Dev Deps] update auto-changelog ; add aud 07e74a3 [meta] add funding field 7ca4bd7 [Tests] only audit prod deps 47d8d5f [Deps] update has-symbols c70c15e v1.0.0 - 2019-08-10 Commits [Tests] add .travis.yml 8c9a5ef Initial commit feaff15 [Tests] add tests 3dd18d6 implementation 472fb41 npm init e9e426f [Tests] add linting 139e74b [meta] create FUNDING.yml a9509e1 Only apps should have lockfiles b3d0834","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#v102-2022-04-24","text":"","title":"v1.0.2 - 2022-04-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#commits","text":"[actions] reuse common workflows e6420b9 [actions] update codecov uploader b90aff2 [readme] add github actions/codecov badges; update URLs bcc39b9 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape a704a32 [Refactor] use call-bind instead of function-bind 0a609f1 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , safe-publish-latest , tape 6a45317 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 795c76f [Deps] update has-bigints , has-symbols 257a065","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#v101-2021-03-25","text":"","title":"v1.0.1 - 2021-03-25"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#commits_1","text":"[Tests] use shared travis-ci configs f977e5f [Tests] migrate tests to Github Actions b89def6 [meta] do not publish github action workflow files 325d1f1 readme 810cd70 [Tests] run nyc on all tests; use tape runner 2f5fb08 [meta] add auto-changelog 03ed375 [actions] add automatic rebasing / merge commit blocking 6dec48d [Dev Deps] update eslint , @ljharb/eslint-config , aud , object-inspect , object-is , tape 528ed88 [actions] check out the entire repo 5095b29 [actions] add \"Allow Edits\" workflow 5aa26d7 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , object-is , safe-publish-latest , tape afc18c6 [readme] remove travis badge a025899 [Dev Deps] update auto-changelog 9219a32 [readme] Fix missing paren in example 73f5a33 [Dev Deps] update @ljharb/eslint-config , tape e450acc [Deps] update has-bigints , has-symbols , which-boxed-primitive a4279b5 [Dev Deps] update auto-changelog , in-publish , tape b351548 [actions] switch Automatic Rebase workflow to pull_request_target event f600382 [readme] fix travis links 4d02fa9 [Dev Deps] update auto-changelog ; add aud 07e74a3 [meta] add funding field 7ca4bd7 [Tests] only audit prod deps 47d8d5f [Deps] update has-symbols c70c15e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#v100-2019-08-10","text":"","title":"v1.0.0 - 2019-08-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/unbox-primitive/CHANGELOG/#commits_2","text":"[Tests] add .travis.yml 8c9a5ef Initial commit feaff15 [Tests] add tests 3dd18d6 implementation 472fb41 npm init e9e426f [Tests] add linting 139e74b [meta] create FUNDING.yml a9509e1 Only apps should have lockfiles b3d0834","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/update-browserslist-db/","text":"Update Browserslist DB CLI tool to update caniuse-lite with browsers DB from Browserslist config. Some queries like last 2 versions or >1% depend on actual data from caniuse-lite . npx update-browserslist-db@latest Docs Read full docs here .","title":"Update Browserslist DB"},{"location":"_Disciplina/Code/my-react-app/node_modules/update-browserslist-db/#update-browserslist-db","text":"CLI tool to update caniuse-lite with browsers DB from Browserslist config. Some queries like last 2 versions or >1% depend on actual data from caniuse-lite . npx update-browserslist-db@latest","title":"Update Browserslist DB"},{"location":"_Disciplina/Code/my-react-app/node_modules/update-browserslist-db/#docs","text":"Read full docs here .","title":"Docs"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/","text":"URI.js URI.js is an RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for all JavaScript environments (browsers, Node.js, etc). It is also compliant with the IRI ( RFC 3987 ), IDNA ( RFC 5890 ), IPv6 Address ( RFC 5952 ), IPv6 Zone Identifier ( RFC 6874 ) specifications. URI.js has an extensive test suite, and works in all (Node.js, web) environments. It weighs in at 6.4kb (gzipped, 17kb deflated). API Parsing URI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\"); //returns: //{ // scheme : \"uri\", // userinfo : \"user:pass\", // host : \"example.com\", // port : 123, // path : \"/one/two.three\", // query : \"q1=a1&q2=a2\", // fragment : \"body\" //} Serializing URI.serialize({scheme : \"http\", host : \"example.com\", fragment : \"footer\"}) === \"http://example.com/#footer\" Resolving URI.resolve(\"uri://a/b/c/d?q\", \"../../g\") === \"uri://a/g\" Normalizing URI.normalize(\"HTTP://ABC.com:80/%7Esmith/home.html\") === \"http://abc.com/~smith/home.html\" Comparison URI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\") === true IP Support //IPv4 normalization URI.normalize(\"//192.068.001.000\") === \"//192.68.1.0\" //IPv6 normalization URI.normalize(\"//[2001:0:0DB8::0:0001]\") === \"//[2001:0:db8::1]\" //IPv6 zone identifier support URI.parse(\"//[2001:db8::7%25en1]\"); //returns: //{ // host : \"2001:db8::7%en1\" //} IRI Support //convert IRI to URI URI.serialize(URI.parse(\"http://exampl\u00e9.org/ros\u00e9\")) === \"http://xn--exampl-gva.org/ros%C3%A9\" //convert URI to IRI URI.serialize(URI.parse(\"http://xn--exampl-gva.org/ros%C3%A9\"), {iri:true}) === \"http://exampl\u00e9.org/ros\u00e9\" Options All of the above functions can accept an additional options argument that is an object that can contain one or more of the following properties: scheme (string) Indicates the scheme that the URI should be treated as, overriding the URI's normal scheme parsing behavior. reference (string) If set to \"suffix\" , it indicates that the URI is in the suffix format, and the validator will use the option's scheme property to determine the URI's scheme. tolerant (boolean, false) If set to true , the parser will relax URI resolving rules. absolutePath (boolean, false) If set to true , the serializer will not resolve a relative path component. iri (boolean, false) If set to true , the serializer will unescape non-ASCII characters as per RFC 3987 . unicodeSupport (boolean, false) If set to true , the parser will unescape non-ASCII characters in the parsed output as per RFC 3987 . domainHost (boolean, false) If set to true , the library will treat the host component as a domain name, and convert IDNs (International Domain Names) as per RFC 5891 . Scheme Extendable URI.js supports inserting custom scheme dependent processing rules. Currently, URI.js has built in support for the following schemes: http [ RFC 2616 ] https [ RFC 2818 ] ws [ RFC 6455 ] wss [ RFC 6455 ] mailto [ RFC 6068 ] urn [ RFC 2141 ] urn:uuid [ RFC 4122 ] HTTP/HTTPS Support URI.equal(\"HTTP://ABC.COM:80\", \"http://abc.com/\") === true URI.equal(\"https://abc.com\", \"HTTPS://ABC.COM:443/\") === true WS/WSS Support URI.parse(\"wss://example.com/foo?bar=baz\"); //returns: //{ // scheme : \"wss\", // host: \"example.com\", // resourceName: \"/foo?bar=baz\", // secure: true, //} URI.equal(\"WS://ABC.COM:80/chat#one\", \"ws://abc.com/chat\") === true Mailto Support URI.parse(\"mailto:alpha@example.com,bravo@example.com?subject=SUBSCRIBE&body=Sign%20me%20up!\"); //returns: //{ // scheme : \"mailto\", // to : [\"alpha@example.com\", \"bravo@example.com\"], // subject : \"SUBSCRIBE\", // body : \"Sign me up!\" //} URI.serialize({ scheme : \"mailto\", to : [\"alpha@example.com\"], subject : \"REMOVE\", body : \"Please remove me\", headers : { cc : \"charlie@example.com\" } }) === \"mailto:alpha@example.com?cc=charlie@example.com&subject=REMOVE&body=Please%20remove%20me\" URN Support URI.parse(\"urn:example:foo\"); //returns: //{ // scheme : \"urn\", // nid : \"example\", // nss : \"foo\", //} URN UUID Support URI.parse(\"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"); //returns: //{ // scheme : \"urn\", // nid : \"uuid\", // uuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\", //} Usage To load in a browser, use the following tag: <script type=\"text/javascript\" src=\"uri-js/dist/es5/uri.all.min.js\"></script> To load in a CommonJS/Module environment, first install with npm/yarn by running on the command line: npm install uri-js # OR yarn add uri-js Then, in your code, load it using: const URI = require(\"uri-js\"); If you are writing your code in ES6+ (ESNEXT) or TypeScript, you would load it using: import * as URI from \"uri-js\"; Or you can load just what you need using named exports: import { parse, serialize, resolve, resolveComponents, normalize, equal, removeDotSegments, pctEncChar, pctDecChars, escapeComponent, unescapeComponent } from \"uri-js\"; Breaking changes Breaking changes from 3.x URN parsing has been completely changed to better align with the specification. Scheme is now always urn , but has two new properties: nid which contains the Namspace Identifier, and nss which contains the Namespace Specific String. The nss property will be removed by higher order scheme handlers, such as the UUID URN scheme handler. The UUID of a URN can now be found in the uuid property. Breaking changes from 2.x URI validation has been removed as it was slow, exposed a vulnerabilty, and was generally not useful. Breaking changes from 1.x The errors array on parsed components is now an error string.","title":"URI.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#urijs","text":"URI.js is an RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for all JavaScript environments (browsers, Node.js, etc). It is also compliant with the IRI ( RFC 3987 ), IDNA ( RFC 5890 ), IPv6 Address ( RFC 5952 ), IPv6 Zone Identifier ( RFC 6874 ) specifications. URI.js has an extensive test suite, and works in all (Node.js, web) environments. It weighs in at 6.4kb (gzipped, 17kb deflated).","title":"URI.js"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#parsing","text":"URI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\"); //returns: //{ // scheme : \"uri\", // userinfo : \"user:pass\", // host : \"example.com\", // port : 123, // path : \"/one/two.three\", // query : \"q1=a1&q2=a2\", // fragment : \"body\" //}","title":"Parsing"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#serializing","text":"URI.serialize({scheme : \"http\", host : \"example.com\", fragment : \"footer\"}) === \"http://example.com/#footer\"","title":"Serializing"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#resolving","text":"URI.resolve(\"uri://a/b/c/d?q\", \"../../g\") === \"uri://a/g\"","title":"Resolving"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#normalizing","text":"URI.normalize(\"HTTP://ABC.com:80/%7Esmith/home.html\") === \"http://abc.com/~smith/home.html\"","title":"Normalizing"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#comparison","text":"URI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\") === true","title":"Comparison"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#ip-support","text":"//IPv4 normalization URI.normalize(\"//192.068.001.000\") === \"//192.68.1.0\" //IPv6 normalization URI.normalize(\"//[2001:0:0DB8::0:0001]\") === \"//[2001:0:db8::1]\" //IPv6 zone identifier support URI.parse(\"//[2001:db8::7%25en1]\"); //returns: //{ // host : \"2001:db8::7%en1\" //}","title":"IP Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#iri-support","text":"//convert IRI to URI URI.serialize(URI.parse(\"http://exampl\u00e9.org/ros\u00e9\")) === \"http://xn--exampl-gva.org/ros%C3%A9\" //convert URI to IRI URI.serialize(URI.parse(\"http://xn--exampl-gva.org/ros%C3%A9\"), {iri:true}) === \"http://exampl\u00e9.org/ros\u00e9\"","title":"IRI Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#options","text":"All of the above functions can accept an additional options argument that is an object that can contain one or more of the following properties: scheme (string) Indicates the scheme that the URI should be treated as, overriding the URI's normal scheme parsing behavior. reference (string) If set to \"suffix\" , it indicates that the URI is in the suffix format, and the validator will use the option's scheme property to determine the URI's scheme. tolerant (boolean, false) If set to true , the parser will relax URI resolving rules. absolutePath (boolean, false) If set to true , the serializer will not resolve a relative path component. iri (boolean, false) If set to true , the serializer will unescape non-ASCII characters as per RFC 3987 . unicodeSupport (boolean, false) If set to true , the parser will unescape non-ASCII characters in the parsed output as per RFC 3987 . domainHost (boolean, false) If set to true , the library will treat the host component as a domain name, and convert IDNs (International Domain Names) as per RFC 5891 .","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#scheme-extendable","text":"URI.js supports inserting custom scheme dependent processing rules. Currently, URI.js has built in support for the following schemes: http [ RFC 2616 ] https [ RFC 2818 ] ws [ RFC 6455 ] wss [ RFC 6455 ] mailto [ RFC 6068 ] urn [ RFC 2141 ] urn:uuid [ RFC 4122 ]","title":"Scheme Extendable"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#httphttps-support","text":"URI.equal(\"HTTP://ABC.COM:80\", \"http://abc.com/\") === true URI.equal(\"https://abc.com\", \"HTTPS://ABC.COM:443/\") === true","title":"HTTP/HTTPS Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#wswss-support","text":"URI.parse(\"wss://example.com/foo?bar=baz\"); //returns: //{ // scheme : \"wss\", // host: \"example.com\", // resourceName: \"/foo?bar=baz\", // secure: true, //} URI.equal(\"WS://ABC.COM:80/chat#one\", \"ws://abc.com/chat\") === true","title":"WS/WSS Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#mailto-support","text":"URI.parse(\"mailto:alpha@example.com,bravo@example.com?subject=SUBSCRIBE&body=Sign%20me%20up!\"); //returns: //{ // scheme : \"mailto\", // to : [\"alpha@example.com\", \"bravo@example.com\"], // subject : \"SUBSCRIBE\", // body : \"Sign me up!\" //} URI.serialize({ scheme : \"mailto\", to : [\"alpha@example.com\"], subject : \"REMOVE\", body : \"Please remove me\", headers : { cc : \"charlie@example.com\" } }) === \"mailto:alpha@example.com?cc=charlie@example.com&subject=REMOVE&body=Please%20remove%20me\"","title":"Mailto Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#urn-support","text":"URI.parse(\"urn:example:foo\"); //returns: //{ // scheme : \"urn\", // nid : \"example\", // nss : \"foo\", //}","title":"URN Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#urn-uuid-support","text":"URI.parse(\"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"); //returns: //{ // scheme : \"urn\", // nid : \"uuid\", // uuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\", //}","title":"URN UUID Support"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#usage","text":"To load in a browser, use the following tag: <script type=\"text/javascript\" src=\"uri-js/dist/es5/uri.all.min.js\"></script> To load in a CommonJS/Module environment, first install with npm/yarn by running on the command line: npm install uri-js # OR yarn add uri-js Then, in your code, load it using: const URI = require(\"uri-js\"); If you are writing your code in ES6+ (ESNEXT) or TypeScript, you would load it using: import * as URI from \"uri-js\"; Or you can load just what you need using named exports: import { parse, serialize, resolve, resolveComponents, normalize, equal, removeDotSegments, pctEncChar, pctDecChars, escapeComponent, unescapeComponent } from \"uri-js\";","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#breaking-changes","text":"","title":"Breaking changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#breaking-changes-from-3x","text":"URN parsing has been completely changed to better align with the specification. Scheme is now always urn , but has two new properties: nid which contains the Namspace Identifier, and nss which contains the Namespace Specific String. The nss property will be removed by higher order scheme handlers, such as the UUID URN scheme handler. The UUID of a URN can now be found in the uuid property.","title":"Breaking changes from 3.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#breaking-changes-from-2x","text":"URI validation has been removed as it was slow, exposed a vulnerabilty, and was generally not useful.","title":"Breaking changes from 2.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/uri-js/#breaking-changes-from-1x","text":"The errors array on parsed components is now an error string.","title":"Breaking changes from 1.x"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/","text":"vite \u26a1 Next Generation Frontend Tooling \ud83d\udca1 Instant Server Start \u26a1\ufe0f Lightning Fast HMR \ud83d\udee0\ufe0f Rich Features \ud83d\udce6 Optimized Build \ud83d\udd29 Universal Plugin Interface \ud83d\udd11 Fully Typed APIs Vite (French word for \"fast\", pronounced /vit/ ) is a new breed of frontend build tool that significantly improves the frontend development experience. It consists of two major parts: A dev server that serves your source files over native ES modules , with rich built-in features and astonishingly fast Hot Module Replacement (HMR) . A build command that bundles your code with Rollup , pre-configured to output highly optimized static assets for production. In addition, Vite is highly extensible via its Plugin API and JavaScript API with full typing support. Read the Docs to Learn More .","title":"vite \u26a1"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/#vite","text":"Next Generation Frontend Tooling \ud83d\udca1 Instant Server Start \u26a1\ufe0f Lightning Fast HMR \ud83d\udee0\ufe0f Rich Features \ud83d\udce6 Optimized Build \ud83d\udd29 Universal Plugin Interface \ud83d\udd11 Fully Typed APIs Vite (French word for \"fast\", pronounced /vit/ ) is a new breed of frontend build tool that significantly improves the frontend development experience. It consists of two major parts: A dev server that serves your source files over native ES modules , with rich built-in features and astonishingly fast Hot Module Replacement (HMR) . A build command that bundles your code with Rollup , pre-configured to output highly optimized static assets for production. In addition, Vite is highly extensible via its Plugin API and JavaScript API with full typing support. Read the Docs to Learn More .","title":"vite \u26a1"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/","text":"Vite core license Vite is released under the MIT license: MIT License Copyright (c) 2019-present, Yuxi (Evan) You and Vite contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Licenses of bundled dependencies The published Vite artifact additionally contains code with the following licenses: Apache-2.0, BSD-2-Clause, BlueOak-1.0.0, CC0-1.0, ISC, MIT Bundled dependencies: @ampproject/remapping License: Apache-2.0 By: Justin Ridgewell Repository: git+https://github.com/ampproject/remapping.git Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. @jridgewell/gen-mapping License: MIT By: Justin Ridgewell Repository: https://github.com/jridgewell/gen-mapping Copyright 2022 Justin Ridgewell jridgewell@google.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @jridgewell/resolve-uri License: MIT By: Justin Ridgewell Repository: https://github.com/jridgewell/resolve-uri Copyright 2019 Justin Ridgewell jridgewell@google.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @jridgewell/set-array License: MIT By: Justin Ridgewell Repository: https://github.com/jridgewell/set-array Copyright 2022 Justin Ridgewell jridgewell@google.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @jridgewell/sourcemap-codec License: MIT By: Rich Harris Repository: git+https://github.com/jridgewell/sourcemap-codec.git The MIT License Copyright (c) 2015 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @jridgewell/trace-mapping License: MIT By: Justin Ridgewell Repository: git+https://github.com/jridgewell/trace-mapping.git Copyright 2022 Justin Ridgewell justin@ridgewell.name Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @nodelib/fs.scandir License: MIT Repository: https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.scandir The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @nodelib/fs.stat License: MIT Repository: https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.stat The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @nodelib/fs.walk License: MIT Repository: https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.walk The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @polka/compression License: MIT Repository: lukeed/polka @polka/url License: MIT By: Luke Edwards Repository: lukeed/polka @rollup/plugin-alias License: MIT By: Johannes Stein Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @rollup/plugin-commonjs License: MIT By: Rich Harris Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @rollup/plugin-dynamic-import-vars License: MIT By: LarsDenBakker Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @rollup/pluginutils License: MIT By: Rich Harris Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ansi-regex License: MIT By: Sindre Sorhus Repository: chalk/ansi-regex MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. anymatch License: ISC By: Elan Shanker Repository: https://github.com/micromatch/anymatch The ISC License Copyright (c) 2019 Elan Shanker, Paul Miller (https://paulmillr.com) Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. artichokie License: MIT By: sapphi-red, Evan You Repository: git+https://github.com/sapphi-red/artichokie.git MIT License Copyright (c) 2020-present, Yuxi (Evan) You Copyright (c) 2023-present, sapphi-red Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. astring License: MIT By: David Bonnet Repository: https://github.com/davidbonnet/astring.git Copyright (c) 2015, David Bonnet david@bonnet.cc Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. balanced-match License: MIT By: Julian Gruber Repository: git://github.com/juliangruber/balanced-match.git (MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. binary-extensions License: MIT By: Sindre Sorhus Repository: sindresorhus/binary-extensions MIT License Copyright (c) 2019 Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com), Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. brace-expansion License: MIT By: Julian Gruber Repository: git://github.com/juliangruber/brace-expansion.git MIT License Copyright (c) 2013 Julian Gruber julian@juliangruber.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. braces License: MIT By: Jon Schlinkert, Brian Woodward, Elan Shanker, Eugene Sharygin, hemanth.hm Repository: micromatch/braces The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. cac License: MIT By: egoist Repository: egoist/cac The MIT License (MIT) Copyright (c) EGOIST 0x142857@gmail.com (https://github.com/egoist) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. chokidar License: MIT By: Paul Miller, Elan Shanker Repository: git+https://github.com/paulmillr/chokidar.git The MIT License (MIT) Copyright (c) 2012-2019 Paul Miller (https://paulmillr.com), Elan Shanker Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. commondir License: MIT By: James Halliday Repository: http://github.com/substack/node-commondir.git The MIT License Copyright (c) 2013 James Halliday (mail@substack.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. connect License: MIT By: TJ Holowaychuk, Douglas Christopher Wilson, Jonathan Ong, Tim Caswell Repository: senchalabs/connect (The MIT License) Copyright (c) 2010 Sencha Inc. Copyright (c) 2011 LearnBoost Copyright (c) 2011-2014 TJ Holowaychuk Copyright (c) 2015 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. convert-source-map License: MIT By: Thorsten Lorenz Repository: git://github.com/thlorenz/convert-source-map.git Copyright 2013 Thorsten Lorenz. All rights reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. cors License: MIT By: Troy Goode Repository: expressjs/cors (The MIT License) Copyright (c) 2013 Troy Goode troygoode@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. cross-spawn License: MIT By: Andr\u00e9 Cruz Repository: git@github.com:moxystudio/node-cross-spawn.git The MIT License (MIT) Copyright (c) 2018 Made With MOXY Lda hello@moxy.studio Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. cssesc License: MIT By: Mathias Bynens Repository: https://github.com/mathiasbynens/cssesc.git Copyright Mathias Bynens https://mathiasbynens.be/ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. debug License: MIT By: Josh Junon, TJ Holowaychuk, Nathan Rajlich, Andrew Rhyne Repository: git://github.com/debug-js/debug.git (The MIT License) Copyright (c) 2014-2017 TJ Holowaychuk tj@vision-media.ca Copyright (c) 2018-2021 Josh Junon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. define-lazy-prop License: MIT By: Sindre Sorhus Repository: sindresorhus/define-lazy-prop MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. dotenv License: BSD-2-Clause Repository: git://github.com/motdotla/dotenv.git Copyright (c) 2015, Scott Motte All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. dotenv-expand License: BSD-2-Clause By: motdotla Repository: https://github.com/motdotla/dotenv-expand Copyright (c) 2016, Scott Motte All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ee-first License: MIT By: Jonathan Ong, Douglas Christopher Wilson Repository: jonathanong/ee-first The MIT License (MIT) Copyright (c) 2014 Jonathan Ong me@jongleberry.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. encodeurl License: MIT By: Douglas Christopher Wilson Repository: pillarjs/encodeurl (The MIT License) Copyright (c) 2016 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. entities License: BSD-2-Clause By: Felix Boehm Repository: git://github.com/fb55/entities.git Copyright (c) Felix B\u00f6hm All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. es-module-lexer License: MIT By: Guy Bedford Repository: git+https://github.com/guybedford/es-module-lexer.git MIT License Copyright (C) 2018-2022 Guy Bedford Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. escape-html License: MIT Repository: component/escape-html (The MIT License) Copyright (c) 2012-2013 TJ Holowaychuk Copyright (c) 2015 Andreas Lubbe Copyright (c) 2015 Tiancheng \"Timothy\" Gu Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. estree-walker License: MIT By: Rich Harris Repository: https://github.com/Rich-Harris/estree-walker Copyright (c) 2015-20 these people Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. etag License: MIT By: Douglas Christopher Wilson, David Bj\u00f6rklund Repository: jshttp/etag (The MIT License) Copyright (c) 2014-2016 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. eventemitter3 License: MIT By: Arnout Kazemier Repository: git://github.com/primus/eventemitter3.git The MIT License (MIT) Copyright (c) 2014 Arnout Kazemier Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. fast-glob License: MIT By: Denis Malinochkin Repository: mrmlnc/fast-glob The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. fastq License: ISC By: Matteo Collina Repository: git+https://github.com/mcollina/fastq.git Copyright (c) 2015-2020, Matteo Collina matteo.collina@gmail.com Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. fill-range License: MIT By: Jon Schlinkert, Edo Rivai, Paul Miller, Rouven We\u00dfling Repository: jonschlinkert/fill-range The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. finalhandler License: MIT By: Douglas Christopher Wilson Repository: pillarjs/finalhandler (The MIT License) Copyright (c) 2014-2017 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. follow-redirects License: MIT By: Ruben Verborgh, Olivier Lalonde, James Talmage Repository: git@github.com:follow-redirects/follow-redirects.git Copyright 2014\u2013present Olivier Lalonde olalonde@gmail.com , James Talmage james@talmage.io , Ruben Verborgh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. generic-names License: MIT By: Alexey Litvinov Repository: git+https://github.com/css-modules/generic-names.git The MIT License (MIT) Copyright (c) 2015 Alexey Litvinov Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. glob License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/node-glob.git The ISC License Copyright (c) 2009-2023 Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. glob-parent License: ISC By: Gulp Team, Elan Shanker, Blaine Bublitz Repository: gulpjs/glob-parent The ISC License Copyright (c) 2015, 2019 Elan Shanker Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. http-proxy License: MIT By: Charlie Robbins, jcrugzz jcrugzz@gmail.com Repository: https://github.com/http-party/node-http-proxy.git node-http-proxy Copyright (c) 2010-2016 Charlie Robbins, Jarrett Cruger & the Contributors. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. icss-utils License: ISC By: Glen Maddern Repository: git+https://github.com/css-modules/icss-utils.git ISC License (ISC) Copyright 2018 Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. is-binary-path License: MIT By: Sindre Sorhus Repository: sindresorhus/is-binary-path MIT License Copyright (c) 2019 Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com), Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-docker License: MIT By: Sindre Sorhus Repository: sindresorhus/is-docker MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-extglob License: MIT By: Jon Schlinkert Repository: jonschlinkert/is-extglob The MIT License (MIT) Copyright (c) 2014-2016, Jon Schlinkert Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-glob License: MIT By: Jon Schlinkert, Brian Woodward, Daniel Perez Repository: micromatch/is-glob The MIT License (MIT) Copyright (c) 2014-2017, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-number License: MIT By: Jon Schlinkert, Olsten Larck, Rouven We\u00dfling Repository: jonschlinkert/is-number The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. is-reference License: MIT By: Rich Harris Repository: git+https://github.com/Rich-Harris/is-reference.git is-wsl License: MIT By: Sindre Sorhus Repository: sindresorhus/is-wsl MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. isexe License: ISC By: Isaac Z. Schlueter Repository: git+https://github.com/isaacs/isexe.git The ISC License Copyright (c) Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. js-tokens License: MIT By: Simon Lydell Repository: lydell/js-tokens The MIT License (MIT) Copyright (c) 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024 Simon Lydell Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. launch-editor License: MIT By: Evan You Repository: git+https://github.com/yyx990803/launch-editor.git The MIT License (MIT) Copyright (c) 2017-present, Yuxi (Evan) You Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. launch-editor-middleware License: MIT By: Evan You Repository: git+https://github.com/yyx990803/launch-editor.git The MIT License (MIT) Copyright (c) 2017-present, Yuxi (Evan) You Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. lilconfig License: MIT By: antonk52 Repository: https://github.com/antonk52/lilconfig MIT License Copyright (c) 2022 Anton Kastritskiy Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. loader-utils License: MIT By: Tobias Koppers @sokra Repository: https://github.com/webpack/loader-utils.git Copyright JS Foundation and other contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. lodash.camelcase License: MIT By: John-David Dalton, Blaine Bublitz, Mathias Bynens Repository: lodash/lodash Copyright jQuery Foundation and other contributors https://jquery.org/ Based on Underscore.js, copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors http://underscorejs.org/ This software consists of voluntary contributions made by many individuals. For exact contribution history, see the revision history available at https://github.com/lodash/lodash The following license applies to all parts of this software except as documented below: ==== Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ==== Copyright and related rights for sample code are waived via CC0. Sample code is defined as all source code displayed within the prose of the documentation. CC0: http://creativecommons.org/publicdomain/zero/1.0/ ==== Files located in the node_modules and vendor directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms above. lru-cache License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/node-lru-cache.git The ISC License Copyright (c) 2010-2023 Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. magic-string License: MIT By: Rich Harris Repository: https://github.com/rich-harris/magic-string Copyright 2018 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. merge2 License: MIT Repository: git@github.com:teambition/merge2.git The MIT License (MIT) Copyright (c) 2014-2020 Teambition Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. micromatch License: MIT By: Jon Schlinkert, Amila Welihinda, Bogdan Chadkin, Brian Woodward, Devon Govett, Elan Shanker, Fabr\u00edcio Matt\u00e9, Martin Kol\u00e1rik, Olsten Larck, Paul Miller, Tom Byrer, Tyler Akins, Peter Bright, Kuba Juszczyk Repository: micromatch/micromatch The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. minimatch License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/minimatch.git The ISC License Copyright (c) 2011-2023 Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. minipass License: ISC By: Isaac Z. Schlueter Repository: https://github.com/isaacs/minipass The ISC License Copyright (c) 2017-2023 npm, Inc., Isaac Z. Schlueter, and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. mlly License: MIT Repository: unjs/mlly MIT License Copyright (c) Pooya Parsa pooya@pi0.io Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. mrmime License: MIT By: Luke Edwards Repository: lukeed/mrmime The MIT License (MIT) Copyright (c) Luke Edwards luke.edwards05@gmail.com (https://lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ms License: MIT Repository: zeit/ms The MIT License (MIT) Copyright (c) 2016 Zeit, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. normalize-path License: MIT By: Jon Schlinkert, Blaine Bublitz Repository: jonschlinkert/normalize-path The MIT License (MIT) Copyright (c) 2014-2018, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. object-assign License: MIT By: Sindre Sorhus Repository: sindresorhus/object-assign The MIT License (MIT) Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. on-finished License: MIT By: Douglas Christopher Wilson, Jonathan Ong Repository: jshttp/on-finished (The MIT License) Copyright (c) 2013 Jonathan Ong me@jongleberry.com Copyright (c) 2014 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. open License: MIT By: Sindre Sorhus Repository: sindresorhus/open MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. parse5 License: MIT By: Ivan Nikulin, https://github.com/inikulin/parse5/graphs/contributors Repository: git://github.com/inikulin/parse5.git Copyright (c) 2013-2019 Ivan Nikulin (ifaaan@gmail.com, https://github.com/inikulin) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. parseurl License: MIT By: Douglas Christopher Wilson, Jonathan Ong Repository: pillarjs/parseurl (The MIT License) Copyright (c) 2014 Jonathan Ong me@jongleberry.com Copyright (c) 2014-2017 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. path-key License: MIT By: Sindre Sorhus Repository: sindresorhus/path-key MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. path-scurry License: BlueOak-1.0.0 By: Isaac Z. Schlueter Repository: git+https://github.com/isaacs/path-scurry Blue Oak Model License Version 1.0.0 Purpose This license gives everyone as much permission to work with this software as possible, while protecting contributors from liability. Acceptance In order to receive this license, you must agree to its rules. The rules of this license are both obligations under that agreement and conditions to your license. You must not do anything with this software that triggers a rule that you cannot or will not follow. Copyright Each contributor licenses you to do everything with this software that would otherwise infringe that contributor's copyright in it. Notices You must ensure that everyone who gets a copy of any part of this software from you, with or without changes, also gets the text of this license or a link to https://blueoakcouncil.org/license/1.0.0 . Excuse If anyone notifies you in writing that you have not complied with Notices , you can keep your license by taking all practical steps to comply within 30 days after the notice. If you do not do so, your license ends immediately. Patent Each contributor licenses you to do everything with this software that would otherwise infringe any patent claims they can license or become able to license. Reliability No contributor can revoke this license. No Liability As far as the law allows, this software comes as is, without any warranty or condition, and no contributor will be liable to anyone for any damages related to this software or this license, under any kind of legal claim. periscopic License: MIT Repository: Rich-Harris/periscopic Copyright (c) 2019 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. picocolors License: ISC By: Alexey Raspopov Repository: alexeyraspopov/picocolors ISC License Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. picomatch License: MIT By: Jon Schlinkert Repository: micromatch/picomatch The MIT License (MIT) Copyright (c) 2017-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. pify License: MIT By: Sindre Sorhus Repository: sindresorhus/pify The MIT License (MIT) Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. postcss-import License: MIT By: Maxime Thirouin Repository: https://github.com/postcss/postcss-import.git The MIT License (MIT) Copyright (c) 2014 Maxime Thirouin, Jason Campbell & Kevin M\u00e5rtensson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. postcss-load-config License: MIT By: Michael Ciniawky, Ryan Dunckel, Mateusz Derks, Dalton Santos, Patrick Gilday, Fran\u00e7ois Wouts Repository: postcss/postcss-load-config The MIT License (MIT) Copyright Michael Ciniawsky michael.ciniawsky@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. postcss-modules License: MIT By: Alexander Madyankin Repository: https://github.com/css-modules/postcss-modules.git The MIT License (MIT) Copyright 2015-present Alexander Madyankin alexander@madyankin.name Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. postcss-modules-extract-imports License: ISC By: Glen Maddern Repository: https://github.com/css-modules/postcss-modules-extract-imports.git Copyright 2015 Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. postcss-modules-local-by-default License: MIT By: Mark Dalgleish Repository: https://github.com/css-modules/postcss-modules-local-by-default.git The MIT License (MIT) Copyright 2015 Mark Dalgleish mark.john.dalgleish@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. postcss-modules-scope License: ISC By: Glen Maddern Repository: https://github.com/css-modules/postcss-modules-scope.git ISC License (ISC) Copyright (c) 2015, Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. postcss-modules-values License: ISC By: Glen Maddern Repository: git+https://github.com/css-modules/postcss-modules-values.git ISC License (ISC) Copyright (c) 2015, Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. postcss-selector-parser License: MIT By: Ben Briggs, Chris Eppstein Repository: postcss/postcss-selector-parser Copyright (c) Ben Briggs beneb.info@gmail.com (http://beneb.info) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. postcss-value-parser License: MIT By: Bogdan Chadkin Repository: https://github.com/TrySound/postcss-value-parser.git Copyright (c) Bogdan Chadkin trysound@yandex.ru Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. queue-microtask License: MIT By: Feross Aboukhadijeh Repository: git://github.com/feross/queue-microtask.git The MIT License (MIT) Copyright (c) Feross Aboukhadijeh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. read-cache License: MIT By: Bogdan Chadkin Repository: git+https://github.com/TrySound/read-cache.git The MIT License (MIT) Copyright 2016 Bogdan Chadkin trysound@yandex.ru Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. readdirp License: MIT By: Thorsten Lorenz, Paul Miller Repository: git://github.com/paulmillr/readdirp.git MIT License Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. requires-port License: MIT By: Arnout Kazemier Repository: https://github.com/unshiftio/requires-port The MIT License (MIT) Copyright (c) 2015 Unshift.io, Arnout Kazemier, the Contributors. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. resolve.exports License: MIT By: Luke Edwards Repository: lukeed/resolve.exports The MIT License (MIT) Copyright (c) Luke Edwards luke.edwards05@gmail.com (lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. reusify License: MIT By: Matteo Collina Repository: git+https://github.com/mcollina/reusify.git The MIT License (MIT) Copyright (c) 2015 Matteo Collina Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. run-parallel License: MIT By: Feross Aboukhadijeh Repository: git://github.com/feross/run-parallel.git The MIT License (MIT) Copyright (c) Feross Aboukhadijeh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. shebang-command License: MIT By: Kevin M\u00e5rtensson Repository: kevva/shebang-command MIT License Copyright (c) Kevin M\u00e5rtensson kevinmartensson@gmail.com (github.com/kevva) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. shebang-regex License: MIT By: Sindre Sorhus Repository: sindresorhus/shebang-regex MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. shell-quote License: MIT By: James Halliday Repository: http://github.com/ljharb/shell-quote.git The MIT License Copyright (c) 2013 James Halliday (mail@substack.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. sirv License: MIT By: Luke Edwards Repository: lukeed/sirv statuses License: MIT By: Douglas Christopher Wilson, Jonathan Ong Repository: jshttp/statuses The MIT License (MIT) Copyright (c) 2014 Jonathan Ong me@jongleberry.com Copyright (c) 2016 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. string-hash License: CC0-1.0 By: The Dark Sky Company Repository: git://github.com/darkskyapp/string-hash.git strip-ansi License: MIT By: Sindre Sorhus Repository: chalk/strip-ansi MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. strip-literal License: MIT By: Anthony Fu Repository: git+https://github.com/antfu/strip-literal.git MIT License Copyright (c) 2022 Anthony Fu https://github.com/antfu Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. to-regex-range License: MIT By: Jon Schlinkert, Rouven We\u00dfling Repository: micromatch/to-regex-range The MIT License (MIT) Copyright (c) 2015-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. totalist License: MIT By: Luke Edwards Repository: lukeed/totalist The MIT License (MIT) Copyright (c) Luke Edwards luke.edwards05@gmail.com (lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. tsconfck License: MIT By: dominikg Repository: git+https://github.com/dominikg/tsconfck.git MIT License Copyright (c) 2021-present dominikg and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. -- Licenses for 3rd-party code included in tsconfck -- strip-bom and strip-json-comments MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ufo License: MIT Repository: unjs/ufo MIT License Copyright (c) Pooya Parsa pooya@pi0.io Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. unpipe License: MIT By: Douglas Christopher Wilson Repository: stream-utils/unpipe (The MIT License) Copyright (c) 2015 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. util-deprecate License: MIT By: Nathan Rajlich Repository: git://github.com/TooTallNate/util-deprecate.git (The MIT License) Copyright (c) 2014 Nathan Rajlich nathan@tootallnate.net Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. utils-merge License: MIT By: Jared Hanson Repository: git://github.com/jaredhanson/utils-merge.git The MIT License (MIT) Copyright (c) 2013-2017 Jared Hanson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. vary License: MIT By: Douglas Christopher Wilson Repository: jshttp/vary (The MIT License) Copyright (c) 2014-2017 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. which License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/node-which.git The ISC License Copyright (c) Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. ws License: MIT By: Einar Otto Stangvik Repository: git+https://github.com/websockets/ws.git Copyright (c) 2011 Einar Otto Stangvik einaros@gmail.com Copyright (c) 2013 Arnout Kazemier and contributors Copyright (c) 2016 Luigi Pinca and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. yaml License: ISC By: Eemeli Aro Repository: github:eemeli/yaml Copyright Eemeli Aro eemeli@gmail.com Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"Vite core license"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#vite-core-license","text":"Vite is released under the MIT license: MIT License Copyright (c) 2019-present, Yuxi (Evan) You and Vite contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Vite core license"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#licenses-of-bundled-dependencies","text":"The published Vite artifact additionally contains code with the following licenses: Apache-2.0, BSD-2-Clause, BlueOak-1.0.0, CC0-1.0, ISC, MIT","title":"Licenses of bundled dependencies"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#bundled-dependencies","text":"","title":"Bundled dependencies:"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#ampprojectremapping","text":"License: Apache-2.0 By: Justin Ridgewell Repository: git+https://github.com/ampproject/remapping.git Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"@ampproject/remapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#jridgewellgen-mapping","text":"License: MIT By: Justin Ridgewell Repository: https://github.com/jridgewell/gen-mapping Copyright 2022 Justin Ridgewell jridgewell@google.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@jridgewell/gen-mapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#jridgewellresolve-uri","text":"License: MIT By: Justin Ridgewell Repository: https://github.com/jridgewell/resolve-uri Copyright 2019 Justin Ridgewell jridgewell@google.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@jridgewell/resolve-uri"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#jridgewellset-array","text":"License: MIT By: Justin Ridgewell Repository: https://github.com/jridgewell/set-array Copyright 2022 Justin Ridgewell jridgewell@google.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@jridgewell/set-array"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#jridgewellsourcemap-codec","text":"License: MIT By: Rich Harris Repository: git+https://github.com/jridgewell/sourcemap-codec.git The MIT License Copyright (c) 2015 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@jridgewell/sourcemap-codec"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#jridgewelltrace-mapping","text":"License: MIT By: Justin Ridgewell Repository: git+https://github.com/jridgewell/trace-mapping.git Copyright 2022 Justin Ridgewell justin@ridgewell.name Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@jridgewell/trace-mapping"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#nodelibfsscandir","text":"License: MIT Repository: https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.scandir The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@nodelib/fs.scandir"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#nodelibfsstat","text":"License: MIT Repository: https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.stat The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@nodelib/fs.stat"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#nodelibfswalk","text":"License: MIT Repository: https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.walk The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@nodelib/fs.walk"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#polkacompression","text":"License: MIT Repository: lukeed/polka","title":"@polka/compression"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#polkaurl","text":"License: MIT By: Luke Edwards Repository: lukeed/polka","title":"@polka/url"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#rollupplugin-alias","text":"License: MIT By: Johannes Stein Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@rollup/plugin-alias"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#rollupplugin-commonjs","text":"License: MIT By: Rich Harris Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@rollup/plugin-commonjs"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#rollupplugin-dynamic-import-vars","text":"License: MIT By: LarsDenBakker Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@rollup/plugin-dynamic-import-vars"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#rolluppluginutils","text":"License: MIT By: Rich Harris Repository: rollup/plugins The MIT License (MIT) Copyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"@rollup/pluginutils"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#ansi-regex","text":"License: MIT By: Sindre Sorhus Repository: chalk/ansi-regex MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"ansi-regex"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#anymatch","text":"License: ISC By: Elan Shanker Repository: https://github.com/micromatch/anymatch The ISC License Copyright (c) 2019 Elan Shanker, Paul Miller (https://paulmillr.com) Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"anymatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#artichokie","text":"License: MIT By: sapphi-red, Evan You Repository: git+https://github.com/sapphi-red/artichokie.git MIT License Copyright (c) 2020-present, Yuxi (Evan) You Copyright (c) 2023-present, sapphi-red Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"artichokie"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#astring","text":"License: MIT By: David Bonnet Repository: https://github.com/davidbonnet/astring.git Copyright (c) 2015, David Bonnet david@bonnet.cc Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"astring"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#balanced-match","text":"License: MIT By: Julian Gruber Repository: git://github.com/juliangruber/balanced-match.git (MIT) Copyright (c) 2013 Julian Gruber <julian@juliangruber.com> Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"balanced-match"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#binary-extensions","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/binary-extensions MIT License Copyright (c) 2019 Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com), Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"binary-extensions"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#brace-expansion","text":"License: MIT By: Julian Gruber Repository: git://github.com/juliangruber/brace-expansion.git MIT License Copyright (c) 2013 Julian Gruber julian@juliangruber.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"brace-expansion"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#braces","text":"License: MIT By: Jon Schlinkert, Brian Woodward, Elan Shanker, Eugene Sharygin, hemanth.hm Repository: micromatch/braces The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"braces"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#cac","text":"License: MIT By: egoist Repository: egoist/cac The MIT License (MIT) Copyright (c) EGOIST 0x142857@gmail.com (https://github.com/egoist) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"cac"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#chokidar","text":"License: MIT By: Paul Miller, Elan Shanker Repository: git+https://github.com/paulmillr/chokidar.git The MIT License (MIT) Copyright (c) 2012-2019 Paul Miller (https://paulmillr.com), Elan Shanker Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"chokidar"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#commondir","text":"License: MIT By: James Halliday Repository: http://github.com/substack/node-commondir.git The MIT License Copyright (c) 2013 James Halliday (mail@substack.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"commondir"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#connect","text":"License: MIT By: TJ Holowaychuk, Douglas Christopher Wilson, Jonathan Ong, Tim Caswell Repository: senchalabs/connect (The MIT License) Copyright (c) 2010 Sencha Inc. Copyright (c) 2011 LearnBoost Copyright (c) 2011-2014 TJ Holowaychuk Copyright (c) 2015 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"connect"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#convert-source-map","text":"License: MIT By: Thorsten Lorenz Repository: git://github.com/thlorenz/convert-source-map.git Copyright 2013 Thorsten Lorenz. All rights reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"convert-source-map"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#cors","text":"License: MIT By: Troy Goode Repository: expressjs/cors (The MIT License) Copyright (c) 2013 Troy Goode troygoode@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"cors"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#cross-spawn","text":"License: MIT By: Andr\u00e9 Cruz Repository: git@github.com:moxystudio/node-cross-spawn.git The MIT License (MIT) Copyright (c) 2018 Made With MOXY Lda hello@moxy.studio Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"cross-spawn"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#cssesc","text":"License: MIT By: Mathias Bynens Repository: https://github.com/mathiasbynens/cssesc.git Copyright Mathias Bynens https://mathiasbynens.be/ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"cssesc"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#debug","text":"License: MIT By: Josh Junon, TJ Holowaychuk, Nathan Rajlich, Andrew Rhyne Repository: git://github.com/debug-js/debug.git (The MIT License) Copyright (c) 2014-2017 TJ Holowaychuk tj@vision-media.ca Copyright (c) 2018-2021 Josh Junon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"debug"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#define-lazy-prop","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/define-lazy-prop MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"define-lazy-prop"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#dotenv","text":"License: BSD-2-Clause Repository: git://github.com/motdotla/dotenv.git Copyright (c) 2015, Scott Motte All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"dotenv"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#dotenv-expand","text":"License: BSD-2-Clause By: motdotla Repository: https://github.com/motdotla/dotenv-expand Copyright (c) 2016, Scott Motte All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"dotenv-expand"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#ee-first","text":"License: MIT By: Jonathan Ong, Douglas Christopher Wilson Repository: jonathanong/ee-first The MIT License (MIT) Copyright (c) 2014 Jonathan Ong me@jongleberry.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"ee-first"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#encodeurl","text":"License: MIT By: Douglas Christopher Wilson Repository: pillarjs/encodeurl (The MIT License) Copyright (c) 2016 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"encodeurl"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#entities","text":"License: BSD-2-Clause By: Felix Boehm Repository: git://github.com/fb55/entities.git Copyright (c) Felix B\u00f6hm All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"entities"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#es-module-lexer","text":"License: MIT By: Guy Bedford Repository: git+https://github.com/guybedford/es-module-lexer.git","title":"es-module-lexer"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#mit-license","text":"Copyright (C) 2018-2022 Guy Bedford Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#escape-html","text":"License: MIT Repository: component/escape-html (The MIT License) Copyright (c) 2012-2013 TJ Holowaychuk Copyright (c) 2015 Andreas Lubbe Copyright (c) 2015 Tiancheng \"Timothy\" Gu Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"escape-html"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#estree-walker","text":"License: MIT By: Rich Harris Repository: https://github.com/Rich-Harris/estree-walker Copyright (c) 2015-20 these people Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"estree-walker"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#etag","text":"License: MIT By: Douglas Christopher Wilson, David Bj\u00f6rklund Repository: jshttp/etag (The MIT License) Copyright (c) 2014-2016 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"etag"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#eventemitter3","text":"License: MIT By: Arnout Kazemier Repository: git://github.com/primus/eventemitter3.git The MIT License (MIT) Copyright (c) 2014 Arnout Kazemier Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"eventemitter3"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#fast-glob","text":"License: MIT By: Denis Malinochkin Repository: mrmlnc/fast-glob The MIT License (MIT) Copyright (c) Denis Malinochkin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"fast-glob"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#fastq","text":"License: ISC By: Matteo Collina Repository: git+https://github.com/mcollina/fastq.git Copyright (c) 2015-2020, Matteo Collina matteo.collina@gmail.com Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"fastq"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#fill-range","text":"License: MIT By: Jon Schlinkert, Edo Rivai, Paul Miller, Rouven We\u00dfling Repository: jonschlinkert/fill-range The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"fill-range"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#finalhandler","text":"License: MIT By: Douglas Christopher Wilson Repository: pillarjs/finalhandler (The MIT License) Copyright (c) 2014-2017 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"finalhandler"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#follow-redirects","text":"License: MIT By: Ruben Verborgh, Olivier Lalonde, James Talmage Repository: git@github.com:follow-redirects/follow-redirects.git Copyright 2014\u2013present Olivier Lalonde olalonde@gmail.com , James Talmage james@talmage.io , Ruben Verborgh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"follow-redirects"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#generic-names","text":"License: MIT By: Alexey Litvinov Repository: git+https://github.com/css-modules/generic-names.git The MIT License (MIT) Copyright (c) 2015 Alexey Litvinov Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"generic-names"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#glob","text":"License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/node-glob.git The ISC License Copyright (c) 2009-2023 Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"glob"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#glob-parent","text":"License: ISC By: Gulp Team, Elan Shanker, Blaine Bublitz Repository: gulpjs/glob-parent The ISC License Copyright (c) 2015, 2019 Elan Shanker Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"glob-parent"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#http-proxy","text":"License: MIT By: Charlie Robbins, jcrugzz jcrugzz@gmail.com Repository: https://github.com/http-party/node-http-proxy.git node-http-proxy Copyright (c) 2010-2016 Charlie Robbins, Jarrett Cruger & the Contributors. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"http-proxy"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#icss-utils","text":"License: ISC By: Glen Maddern Repository: git+https://github.com/css-modules/icss-utils.git ISC License (ISC) Copyright 2018 Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"icss-utils"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-binary-path","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/is-binary-path MIT License Copyright (c) 2019 Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com), Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-binary-path"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-docker","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/is-docker MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-docker"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-extglob","text":"License: MIT By: Jon Schlinkert Repository: jonschlinkert/is-extglob The MIT License (MIT) Copyright (c) 2014-2016, Jon Schlinkert Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-extglob"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-glob","text":"License: MIT By: Jon Schlinkert, Brian Woodward, Daniel Perez Repository: micromatch/is-glob The MIT License (MIT) Copyright (c) 2014-2017, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-glob"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-number","text":"License: MIT By: Jon Schlinkert, Olsten Larck, Rouven We\u00dfling Repository: jonschlinkert/is-number The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-number"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-reference","text":"License: MIT By: Rich Harris Repository: git+https://github.com/Rich-Harris/is-reference.git","title":"is-reference"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#is-wsl","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/is-wsl MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"is-wsl"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#isexe","text":"License: ISC By: Isaac Z. Schlueter Repository: git+https://github.com/isaacs/isexe.git The ISC License Copyright (c) Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"isexe"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#js-tokens","text":"License: MIT By: Simon Lydell Repository: lydell/js-tokens The MIT License (MIT) Copyright (c) 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024 Simon Lydell Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"js-tokens"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#launch-editor","text":"License: MIT By: Evan You Repository: git+https://github.com/yyx990803/launch-editor.git The MIT License (MIT) Copyright (c) 2017-present, Yuxi (Evan) You Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"launch-editor"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#launch-editor-middleware","text":"License: MIT By: Evan You Repository: git+https://github.com/yyx990803/launch-editor.git The MIT License (MIT) Copyright (c) 2017-present, Yuxi (Evan) You Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"launch-editor-middleware"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#lilconfig","text":"License: MIT By: antonk52 Repository: https://github.com/antonk52/lilconfig MIT License Copyright (c) 2022 Anton Kastritskiy Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"lilconfig"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#loader-utils","text":"License: MIT By: Tobias Koppers @sokra Repository: https://github.com/webpack/loader-utils.git Copyright JS Foundation and other contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"loader-utils"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#lodashcamelcase","text":"License: MIT By: John-David Dalton, Blaine Bublitz, Mathias Bynens Repository: lodash/lodash Copyright jQuery Foundation and other contributors https://jquery.org/ Based on Underscore.js, copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors http://underscorejs.org/ This software consists of voluntary contributions made by many individuals. For exact contribution history, see the revision history available at https://github.com/lodash/lodash The following license applies to all parts of this software except as documented below: ==== Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ==== Copyright and related rights for sample code are waived via CC0. Sample code is defined as all source code displayed within the prose of the documentation. CC0: http://creativecommons.org/publicdomain/zero/1.0/ ==== Files located in the node_modules and vendor directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms above.","title":"lodash.camelcase"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#lru-cache","text":"License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/node-lru-cache.git The ISC License Copyright (c) 2010-2023 Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"lru-cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#magic-string","text":"License: MIT By: Rich Harris Repository: https://github.com/rich-harris/magic-string Copyright 2018 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"magic-string"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#merge2","text":"License: MIT Repository: git@github.com:teambition/merge2.git The MIT License (MIT) Copyright (c) 2014-2020 Teambition Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"merge2"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#micromatch","text":"License: MIT By: Jon Schlinkert, Amila Welihinda, Bogdan Chadkin, Brian Woodward, Devon Govett, Elan Shanker, Fabr\u00edcio Matt\u00e9, Martin Kol\u00e1rik, Olsten Larck, Paul Miller, Tom Byrer, Tyler Akins, Peter Bright, Kuba Juszczyk Repository: micromatch/micromatch The MIT License (MIT) Copyright (c) 2014-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"micromatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#minimatch","text":"License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/minimatch.git The ISC License Copyright (c) 2011-2023 Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"minimatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#minipass","text":"License: ISC By: Isaac Z. Schlueter Repository: https://github.com/isaacs/minipass The ISC License Copyright (c) 2017-2023 npm, Inc., Isaac Z. Schlueter, and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"minipass"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#mlly","text":"License: MIT Repository: unjs/mlly MIT License Copyright (c) Pooya Parsa pooya@pi0.io Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"mlly"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#mrmime","text":"License: MIT By: Luke Edwards Repository: lukeed/mrmime The MIT License (MIT) Copyright (c) Luke Edwards luke.edwards05@gmail.com (https://lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"mrmime"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#ms","text":"License: MIT Repository: zeit/ms The MIT License (MIT) Copyright (c) 2016 Zeit, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"ms"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#normalize-path","text":"License: MIT By: Jon Schlinkert, Blaine Bublitz Repository: jonschlinkert/normalize-path The MIT License (MIT) Copyright (c) 2014-2018, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"normalize-path"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#object-assign","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/object-assign The MIT License (MIT) Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"object-assign"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#on-finished","text":"License: MIT By: Douglas Christopher Wilson, Jonathan Ong Repository: jshttp/on-finished (The MIT License) Copyright (c) 2013 Jonathan Ong me@jongleberry.com Copyright (c) 2014 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"on-finished"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#open","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/open MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"open"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#parse5","text":"License: MIT By: Ivan Nikulin, https://github.com/inikulin/parse5/graphs/contributors Repository: git://github.com/inikulin/parse5.git Copyright (c) 2013-2019 Ivan Nikulin (ifaaan@gmail.com, https://github.com/inikulin) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"parse5"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#parseurl","text":"License: MIT By: Douglas Christopher Wilson, Jonathan Ong Repository: pillarjs/parseurl (The MIT License) Copyright (c) 2014 Jonathan Ong me@jongleberry.com Copyright (c) 2014-2017 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"parseurl"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#path-key","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/path-key MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"path-key"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#path-scurry","text":"License: BlueOak-1.0.0 By: Isaac Z. Schlueter Repository: git+https://github.com/isaacs/path-scurry","title":"path-scurry"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#blue-oak-model-license","text":"Version 1.0.0","title":"Blue Oak Model License"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#purpose","text":"This license gives everyone as much permission to work with this software as possible, while protecting contributors from liability.","title":"Purpose"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#acceptance","text":"In order to receive this license, you must agree to its rules. The rules of this license are both obligations under that agreement and conditions to your license. You must not do anything with this software that triggers a rule that you cannot or will not follow.","title":"Acceptance"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#copyright","text":"Each contributor licenses you to do everything with this software that would otherwise infringe that contributor's copyright in it.","title":"Copyright"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#notices","text":"You must ensure that everyone who gets a copy of any part of this software from you, with or without changes, also gets the text of this license or a link to https://blueoakcouncil.org/license/1.0.0 .","title":"Notices"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#excuse","text":"If anyone notifies you in writing that you have not complied with Notices , you can keep your license by taking all practical steps to comply within 30 days after the notice. If you do not do so, your license ends immediately.","title":"Excuse"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#patent","text":"Each contributor licenses you to do everything with this software that would otherwise infringe any patent claims they can license or become able to license.","title":"Patent"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#reliability","text":"No contributor can revoke this license.","title":"Reliability"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#no-liability","text":"As far as the law allows, this software comes as is, without any warranty or condition, and no contributor will be liable to anyone for any damages related to this software or this license, under any kind of legal claim.","title":"No Liability"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#periscopic","text":"License: MIT Repository: Rich-Harris/periscopic Copyright (c) 2019 Rich Harris Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"periscopic"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#picocolors","text":"License: ISC By: Alexey Raspopov Repository: alexeyraspopov/picocolors ISC License Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"picocolors"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#picomatch","text":"License: MIT By: Jon Schlinkert Repository: micromatch/picomatch The MIT License (MIT) Copyright (c) 2017-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"picomatch"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#pify","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/pify The MIT License (MIT) Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"pify"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-import","text":"License: MIT By: Maxime Thirouin Repository: https://github.com/postcss/postcss-import.git The MIT License (MIT) Copyright (c) 2014 Maxime Thirouin, Jason Campbell & Kevin M\u00e5rtensson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"postcss-import"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-load-config","text":"License: MIT By: Michael Ciniawky, Ryan Dunckel, Mateusz Derks, Dalton Santos, Patrick Gilday, Fran\u00e7ois Wouts Repository: postcss/postcss-load-config The MIT License (MIT) Copyright Michael Ciniawsky michael.ciniawsky@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"postcss-load-config"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-modules","text":"License: MIT By: Alexander Madyankin Repository: https://github.com/css-modules/postcss-modules.git The MIT License (MIT) Copyright 2015-present Alexander Madyankin alexander@madyankin.name Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"postcss-modules"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-modules-extract-imports","text":"License: ISC By: Glen Maddern Repository: https://github.com/css-modules/postcss-modules-extract-imports.git Copyright 2015 Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"postcss-modules-extract-imports"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-modules-local-by-default","text":"License: MIT By: Mark Dalgleish Repository: https://github.com/css-modules/postcss-modules-local-by-default.git The MIT License (MIT) Copyright 2015 Mark Dalgleish mark.john.dalgleish@gmail.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"postcss-modules-local-by-default"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-modules-scope","text":"License: ISC By: Glen Maddern Repository: https://github.com/css-modules/postcss-modules-scope.git ISC License (ISC) Copyright (c) 2015, Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"postcss-modules-scope"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-modules-values","text":"License: ISC By: Glen Maddern Repository: git+https://github.com/css-modules/postcss-modules-values.git ISC License (ISC) Copyright (c) 2015, Glen Maddern Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"postcss-modules-values"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-selector-parser","text":"License: MIT By: Ben Briggs, Chris Eppstein Repository: postcss/postcss-selector-parser Copyright (c) Ben Briggs beneb.info@gmail.com (http://beneb.info) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"postcss-selector-parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#postcss-value-parser","text":"License: MIT By: Bogdan Chadkin Repository: https://github.com/TrySound/postcss-value-parser.git Copyright (c) Bogdan Chadkin trysound@yandex.ru Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"postcss-value-parser"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#queue-microtask","text":"License: MIT By: Feross Aboukhadijeh Repository: git://github.com/feross/queue-microtask.git The MIT License (MIT) Copyright (c) Feross Aboukhadijeh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"queue-microtask"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#read-cache","text":"License: MIT By: Bogdan Chadkin Repository: git+https://github.com/TrySound/read-cache.git The MIT License (MIT) Copyright 2016 Bogdan Chadkin trysound@yandex.ru Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"read-cache"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#readdirp","text":"License: MIT By: Thorsten Lorenz, Paul Miller Repository: git://github.com/paulmillr/readdirp.git MIT License Copyright (c) 2012-2019 Thorsten Lorenz, Paul Miller (https://paulmillr.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"readdirp"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#requires-port","text":"License: MIT By: Arnout Kazemier Repository: https://github.com/unshiftio/requires-port The MIT License (MIT) Copyright (c) 2015 Unshift.io, Arnout Kazemier, the Contributors. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"requires-port"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#resolveexports","text":"License: MIT By: Luke Edwards Repository: lukeed/resolve.exports The MIT License (MIT) Copyright (c) Luke Edwards luke.edwards05@gmail.com (lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"resolve.exports"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#reusify","text":"License: MIT By: Matteo Collina Repository: git+https://github.com/mcollina/reusify.git The MIT License (MIT) Copyright (c) 2015 Matteo Collina Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"reusify"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#run-parallel","text":"License: MIT By: Feross Aboukhadijeh Repository: git://github.com/feross/run-parallel.git The MIT License (MIT) Copyright (c) Feross Aboukhadijeh Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"run-parallel"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#shebang-command","text":"License: MIT By: Kevin M\u00e5rtensson Repository: kevva/shebang-command MIT License Copyright (c) Kevin M\u00e5rtensson kevinmartensson@gmail.com (github.com/kevva) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"shebang-command"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#shebang-regex","text":"License: MIT By: Sindre Sorhus Repository: sindresorhus/shebang-regex MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"shebang-regex"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#shell-quote","text":"License: MIT By: James Halliday Repository: http://github.com/ljharb/shell-quote.git The MIT License Copyright (c) 2013 James Halliday (mail@substack.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"shell-quote"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#sirv","text":"License: MIT By: Luke Edwards Repository: lukeed/sirv","title":"sirv"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#statuses","text":"License: MIT By: Douglas Christopher Wilson, Jonathan Ong Repository: jshttp/statuses The MIT License (MIT) Copyright (c) 2014 Jonathan Ong me@jongleberry.com Copyright (c) 2016 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"statuses"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#string-hash","text":"License: CC0-1.0 By: The Dark Sky Company Repository: git://github.com/darkskyapp/string-hash.git","title":"string-hash"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#strip-ansi","text":"License: MIT By: Sindre Sorhus Repository: chalk/strip-ansi MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"strip-ansi"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#strip-literal","text":"License: MIT By: Anthony Fu Repository: git+https://github.com/antfu/strip-literal.git MIT License Copyright (c) 2022 Anthony Fu https://github.com/antfu Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"strip-literal"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#to-regex-range","text":"License: MIT By: Jon Schlinkert, Rouven We\u00dfling Repository: micromatch/to-regex-range The MIT License (MIT) Copyright (c) 2015-present, Jon Schlinkert. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"to-regex-range"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#totalist","text":"License: MIT By: Luke Edwards Repository: lukeed/totalist The MIT License (MIT) Copyright (c) Luke Edwards luke.edwards05@gmail.com (lukeed.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"totalist"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#tsconfck","text":"License: MIT By: dominikg Repository: git+https://github.com/dominikg/tsconfck.git MIT License Copyright (c) 2021-present dominikg and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. -- Licenses for 3rd-party code included in tsconfck --","title":"tsconfck"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#strip-bom-and-strip-json-comments","text":"MIT License Copyright (c) Sindre Sorhus sindresorhus@gmail.com (https://sindresorhus.com) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"strip-bom and strip-json-comments"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#ufo","text":"License: MIT Repository: unjs/ufo MIT License Copyright (c) Pooya Parsa pooya@pi0.io Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"ufo"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#unpipe","text":"License: MIT By: Douglas Christopher Wilson Repository: stream-utils/unpipe (The MIT License) Copyright (c) 2015 Douglas Christopher Wilson doug@somethingdoug.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"unpipe"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#util-deprecate","text":"License: MIT By: Nathan Rajlich Repository: git://github.com/TooTallNate/util-deprecate.git (The MIT License) Copyright (c) 2014 Nathan Rajlich nathan@tootallnate.net Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"util-deprecate"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#utils-merge","text":"License: MIT By: Jared Hanson Repository: git://github.com/jaredhanson/utils-merge.git The MIT License (MIT) Copyright (c) 2013-2017 Jared Hanson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"utils-merge"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#vary","text":"License: MIT By: Douglas Christopher Wilson Repository: jshttp/vary (The MIT License) Copyright (c) 2014-2017 Douglas Christopher Wilson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"vary"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#which","text":"License: ISC By: Isaac Z. Schlueter Repository: git://github.com/isaacs/node-which.git The ISC License Copyright (c) Isaac Z. Schlueter and Contributors Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"which"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#ws","text":"License: MIT By: Einar Otto Stangvik Repository: git+https://github.com/websockets/ws.git Copyright (c) 2011 Einar Otto Stangvik einaros@gmail.com Copyright (c) 2013 Arnout Kazemier and contributors Copyright (c) 2016 Luigi Pinca and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"ws"},{"location":"_Disciplina/Code/my-react-app/node_modules/vite/LICENSE/#yaml","text":"License: ISC By: Eemeli Aro Repository: github:eemeli/yaml Copyright Eemeli Aro eemeli@gmail.com Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"yaml"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/","text":"which Like the unix which utility. Finds the first instance of a specified executable in the PATH environment variable. Does not cache the results, so hash -r is not needed when the PATH changes. USAGE var which = require('which') // async usage which('node', function (er, resolvedPath) { // er is returned if no \"node\" is found on the PATH // if it is found, then the absolute path to the exec is returned }) // or promise which('node').then(resolvedPath => { ... }).catch(er => { ... not found ... }) // sync usage // throws if not found var resolved = which.sync('node') // if nothrow option is used, returns null if not found resolved = which.sync('node', {nothrow: true}) // Pass options to override the PATH and PATHEXT environment vars. which('node', { path: someOtherPath }, function (er, resolved) { if (er) throw er console.log('found at %j', resolved) }) CLI USAGE Same as the BSD which(1) binary. usage: which [-as] program ... OPTIONS You may pass an options object as the second argument. path : Use instead of the PATH environment variable. pathExt : Use instead of the PATHEXT environment variable. all : Return all matches, instead of just the first one. Note that this means the function returns an array of strings instead of a single string.","title":"which"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/#which","text":"Like the unix which utility. Finds the first instance of a specified executable in the PATH environment variable. Does not cache the results, so hash -r is not needed when the PATH changes.","title":"which"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/#usage","text":"var which = require('which') // async usage which('node', function (er, resolvedPath) { // er is returned if no \"node\" is found on the PATH // if it is found, then the absolute path to the exec is returned }) // or promise which('node').then(resolvedPath => { ... }).catch(er => { ... not found ... }) // sync usage // throws if not found var resolved = which.sync('node') // if nothrow option is used, returns null if not found resolved = which.sync('node', {nothrow: true}) // Pass options to override the PATH and PATHEXT environment vars. which('node', { path: someOtherPath }, function (er, resolved) { if (er) throw er console.log('found at %j', resolved) })","title":"USAGE"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/#cli-usage","text":"Same as the BSD which(1) binary. usage: which [-as] program ...","title":"CLI USAGE"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/#options","text":"You may pass an options object as the second argument. path : Use instead of the PATH environment variable. pathExt : Use instead of the PATHEXT environment variable. all : Return all matches, instead of just the first one. Note that this means the function returns an array of strings instead of a single string.","title":"OPTIONS"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/","text":"Changes 2.0.2 Rename bin to node-which 2.0.1 generate changelog and publish on version bump enforce 100% test coverage Promise interface 2.0.0 Parallel tests, modern JavaScript, and drop support for node < 8 1.3.1 update deps update travis v1.3.0 Add nothrow option to which.sync update tap v1.2.14 appveyor: drop node 5 and 0.x travis-ci: add node 6, drop 0.x v1.2.13 test: Pass missing option to pass on windows update tap update isexe to 2.0.0 neveragain.tech pledge request v1.2.12 Removed unused require v1.2.11 Prevent changelog script from being included in package v1.2.10 Use env.PATH only, not env.Path v1.2.9 fix for paths starting with ../ Remove unused is-absolute module v1.2.8 bullet items in changelog that contain (but don't start with) # v1.2.7 strip 'update changelog' changelog entries out of changelog v1.2.6 make the changelog bulleted v1.2.5 make a changelog, and keep it up to date don't include tests in package Properly handle relative-path executables appveyor Attach error code to Not Found error Make tests pass on Windows v1.2.4 Fix typo v1.2.3 update isexe, fix regression in pathExt handling v1.2.2 update deps, use isexe module, test windows v1.2.1 Sometimes windows PATH entries are quoted Fixed a bug in the check for group and user mode bits. This bug was introduced during refactoring for supporting strict mode. doc cli v1.2.0 Add support for opt.all and -as cli flags test the bin update travis Allow checking for multiple programs in bin/which tap 2 v1.1.2 travis Refactored and fixed undefined error on Windows Support strict mode v1.1.1 test +g exes against secondary groups, if available Use windows exe semantics on cygwin & msys cwd should be first in path on win32, not last Handle lower-case 'env.Path' on Windows Update docs use single-quotes v1.1.0 Add tests, depend on is-absolute v1.0.9 which.js: root is allowed to execute files owned by anyone v1.0.8 don't use graceful-fs v1.0.7 add license to package.json v1.0.6 isc license 1.0.5 Awful typo 1.0.4 Test for path absoluteness properly win: Allow '' as a pathext if cmd has a . in it 1.0.3 Remove references to execPath Make which.sync() work on Windows by honoring the PATHEXT variable. Make isExe() always return true on Windows. MIT 1.0.2 Only files can be exes 1.0.1 Respect the PATHEXT env for win32 support should 0755 the bin binary guts package 1st","title":"Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#changes","text":"","title":"Changes"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#202","text":"Rename bin to node-which","title":"2.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#201","text":"generate changelog and publish on version bump enforce 100% test coverage Promise interface","title":"2.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#200","text":"Parallel tests, modern JavaScript, and drop support for node < 8","title":"2.0.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#131","text":"update deps update travis","title":"1.3.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v130","text":"Add nothrow option to which.sync update tap","title":"v1.3.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v1214","text":"appveyor: drop node 5 and 0.x travis-ci: add node 6, drop 0.x","title":"v1.2.14"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v1213","text":"test: Pass missing option to pass on windows update tap update isexe to 2.0.0 neveragain.tech pledge request","title":"v1.2.13"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v1212","text":"Removed unused require","title":"v1.2.12"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v1211","text":"Prevent changelog script from being included in package","title":"v1.2.11"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v1210","text":"Use env.PATH only, not env.Path","title":"v1.2.10"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v129","text":"fix for paths starting with ../ Remove unused is-absolute module","title":"v1.2.9"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v128","text":"bullet items in changelog that contain (but don't start with) #","title":"v1.2.8"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v127","text":"strip 'update changelog' changelog entries out of changelog","title":"v1.2.7"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v126","text":"make the changelog bulleted","title":"v1.2.6"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v125","text":"make a changelog, and keep it up to date don't include tests in package Properly handle relative-path executables appveyor Attach error code to Not Found error Make tests pass on Windows","title":"v1.2.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v124","text":"Fix typo","title":"v1.2.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v123","text":"update isexe, fix regression in pathExt handling","title":"v1.2.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v122","text":"update deps, use isexe module, test windows","title":"v1.2.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v121","text":"Sometimes windows PATH entries are quoted Fixed a bug in the check for group and user mode bits. This bug was introduced during refactoring for supporting strict mode. doc cli","title":"v1.2.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v120","text":"Add support for opt.all and -as cli flags test the bin update travis Allow checking for multiple programs in bin/which tap 2","title":"v1.2.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v112","text":"travis Refactored and fixed undefined error on Windows Support strict mode","title":"v1.1.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v111","text":"test +g exes against secondary groups, if available Use windows exe semantics on cygwin & msys cwd should be first in path on win32, not last Handle lower-case 'env.Path' on Windows Update docs use single-quotes","title":"v1.1.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v110","text":"Add tests, depend on is-absolute","title":"v1.1.0"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v109","text":"which.js: root is allowed to execute files owned by anyone","title":"v1.0.9"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v108","text":"don't use graceful-fs","title":"v1.0.8"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v107","text":"add license to package.json","title":"v1.0.7"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#v106","text":"isc license","title":"v1.0.6"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#105","text":"Awful typo","title":"1.0.5"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#104","text":"Test for path absoluteness properly win: Allow '' as a pathext if cmd has a . in it","title":"1.0.4"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#103","text":"Remove references to execPath Make which.sync() work on Windows by honoring the PATHEXT variable. Make isExe() always return true on Windows. MIT","title":"1.0.3"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#102","text":"Only files can be exes","title":"1.0.2"},{"location":"_Disciplina/Code/my-react-app/node_modules/which/CHANGELOG/#101","text":"Respect the PATHEXT env for win32 support should 0755 the bin binary guts package 1st","title":"1.0.1"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/","text":"which-boxed-primitive Which kind of boxed JS primitive is this? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and works despite ES6 Symbol.toStringTag. Example var whichBoxedPrimitive = require('which-boxed-primitive'); var assert = require('assert'); // unboxed primitives return `null` // boxed primitives return the builtin constructor name assert.equal(whichBoxedPrimitive(undefined), null); assert.equal(whichBoxedPrimitive(null), null); assert.equal(whichBoxedPrimitive(false), null); assert.equal(whichBoxedPrimitive(true), null); assert.equal(whichBoxedPrimitive(new Boolean(false)), 'Boolean'); assert.equal(whichBoxedPrimitive(new Boolean(true)), 'Boolean'); assert.equal(whichBoxedPrimitive(42), null); assert.equal(whichBoxedPrimitive(NaN), null); assert.equal(whichBoxedPrimitive(Infinity), null); assert.equal(whichBoxedPrimitive(new Number(42)), 'Number'); assert.equal(whichBoxedPrimitive(new Number(NaN)), 'Number'); assert.equal(whichBoxedPrimitive(new Number(Infinity)), 'Number'); assert.equal(whichBoxedPrimitive(''), null); assert.equal(whichBoxedPrimitive('foo'), null); assert.equal(whichBoxedPrimitive(new String('')), 'String'); assert.equal(whichBoxedPrimitive(new String('foo')), 'String'); assert.equal(whichBoxedPrimitive(Symbol()), null); assert.equal(whichBoxedPrimitive(Object(Symbol()), 'Symbol'); assert.equal(whichBoxedPrimitive(42n), null); assert.equal(whichBoxedPrimitive(Object(42n), 'BigInt'); // non-boxed-primitive objects return `undefined` assert.equal(whichBoxedPrimitive([]), undefined); assert.equal(whichBoxedPrimitive({}), undefined); assert.equal(whichBoxedPrimitive(/a/g), undefined); assert.equal(whichBoxedPrimitive(new RegExp('a', 'g')), undefined); assert.equal(whichBoxedPrimitive(new Date()), undefined); assert.equal(whichBoxedPrimitive(function () {}), undefined); assert.equal(whichBoxedPrimitive(function* () {}), undefined); assert.equal(whichBoxedPrimitive(x => x * x), undefined); assert.equal(whichBoxedPrimitive([]), undefined); Tests Simply clone the repo, npm install , and run npm test","title":"which-boxed-primitive Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/#which-boxed-primitive","text":"Which kind of boxed JS primitive is this? This module works cross-realm/iframe, does not depend on instanceof or mutable properties, and works despite ES6 Symbol.toStringTag.","title":"which-boxed-primitive"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/#example","text":"var whichBoxedPrimitive = require('which-boxed-primitive'); var assert = require('assert'); // unboxed primitives return `null` // boxed primitives return the builtin constructor name assert.equal(whichBoxedPrimitive(undefined), null); assert.equal(whichBoxedPrimitive(null), null); assert.equal(whichBoxedPrimitive(false), null); assert.equal(whichBoxedPrimitive(true), null); assert.equal(whichBoxedPrimitive(new Boolean(false)), 'Boolean'); assert.equal(whichBoxedPrimitive(new Boolean(true)), 'Boolean'); assert.equal(whichBoxedPrimitive(42), null); assert.equal(whichBoxedPrimitive(NaN), null); assert.equal(whichBoxedPrimitive(Infinity), null); assert.equal(whichBoxedPrimitive(new Number(42)), 'Number'); assert.equal(whichBoxedPrimitive(new Number(NaN)), 'Number'); assert.equal(whichBoxedPrimitive(new Number(Infinity)), 'Number'); assert.equal(whichBoxedPrimitive(''), null); assert.equal(whichBoxedPrimitive('foo'), null); assert.equal(whichBoxedPrimitive(new String('')), 'String'); assert.equal(whichBoxedPrimitive(new String('foo')), 'String'); assert.equal(whichBoxedPrimitive(Symbol()), null); assert.equal(whichBoxedPrimitive(Object(Symbol()), 'Symbol'); assert.equal(whichBoxedPrimitive(42n), null); assert.equal(whichBoxedPrimitive(Object(42n), 'BigInt'); // non-boxed-primitive objects return `undefined` assert.equal(whichBoxedPrimitive([]), undefined); assert.equal(whichBoxedPrimitive({}), undefined); assert.equal(whichBoxedPrimitive(/a/g), undefined); assert.equal(whichBoxedPrimitive(new RegExp('a', 'g')), undefined); assert.equal(whichBoxedPrimitive(new Date()), undefined); assert.equal(whichBoxedPrimitive(function () {}), undefined); assert.equal(whichBoxedPrimitive(function* () {}), undefined); assert.equal(whichBoxedPrimitive(x => x * x), undefined); assert.equal(whichBoxedPrimitive([]), undefined);","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2020-12-14 Commits [Tests] use shared travis-ci configs 8674582 [Tests] migrate tests to Github Actions dff6643 [meta] do not publish github action workflow files b26112a [meta] make auto-changelog config consistent 8d10175 [readme] fix repo URLs, remove defunct badges ab8db24 [Tests] run nyc on all tests; use tape runner 7d084df [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 576f6f3 [actions] add automatic rebasing / merge commit blocking 97efa53 [actions] add \"Allow Edits\" workflow fb1b4f7 [Dev Deps] update eslint , @ljharb/eslint-config , has-symbols , object-inspect , safe-publish-latest 1e03c61 [Deps] update is-boolean-object , is-number-object , is-string , is-symbol 13673df [Dev Deps] update auto-changelog , in-publish , tape 65a0e15 [Dev Deps] update eslint , @ljharb/eslint-config , tape f8a0afe [Deps] update is-bigint , is-boolean-object e7a1ce2 [actions] switch Automatic Rebase workflow to pull_request_target event e46f193 [Dev Deps] update @ljharb/eslint-config , tape df3da14 [Dev Deps] update auto-changelog ; add aud e2e8a12 [meta] add funding field 7df404b [Dev Deps] update auto-changelog 0d6b76d [Tests] only audit prod deps 246151c [meta] fix changelog c2d1685 [readme] Fix spelling error 25fb2b5 v1.0.1 - 2019-08-10 Commits [meta] avoid running safe-publish-latest when not publishing df44b27 v1.0.0 - 2019-08-10 Commits [Tests] add .travis.yml 764b0cf Initial commit da7d068 readme 1395bb2 [Tests] add tests 0ff580f implementation 8811c32 npm init cffdea9 [Tests] add npm run lint a8be993 [meta] add FUNDING.yml 941258c Only apps should have lockfiles 6857316 [Tests] use npx aud in posttest ee48a91","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#v102-2020-12-14","text":"","title":"v1.0.2 - 2020-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#commits","text":"[Tests] use shared travis-ci configs 8674582 [Tests] migrate tests to Github Actions dff6643 [meta] do not publish github action workflow files b26112a [meta] make auto-changelog config consistent 8d10175 [readme] fix repo URLs, remove defunct badges ab8db24 [Tests] run nyc on all tests; use tape runner 7d084df [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 576f6f3 [actions] add automatic rebasing / merge commit blocking 97efa53 [actions] add \"Allow Edits\" workflow fb1b4f7 [Dev Deps] update eslint , @ljharb/eslint-config , has-symbols , object-inspect , safe-publish-latest 1e03c61 [Deps] update is-boolean-object , is-number-object , is-string , is-symbol 13673df [Dev Deps] update auto-changelog , in-publish , tape 65a0e15 [Dev Deps] update eslint , @ljharb/eslint-config , tape f8a0afe [Deps] update is-bigint , is-boolean-object e7a1ce2 [actions] switch Automatic Rebase workflow to pull_request_target event e46f193 [Dev Deps] update @ljharb/eslint-config , tape df3da14 [Dev Deps] update auto-changelog ; add aud e2e8a12 [meta] add funding field 7df404b [Dev Deps] update auto-changelog 0d6b76d [Tests] only audit prod deps 246151c [meta] fix changelog c2d1685 [readme] Fix spelling error 25fb2b5","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#v101-2019-08-10","text":"","title":"v1.0.1 - 2019-08-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#commits_1","text":"[meta] avoid running safe-publish-latest when not publishing df44b27","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#v100-2019-08-10","text":"","title":"v1.0.0 - 2019-08-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-boxed-primitive/CHANGELOG/#commits_2","text":"[Tests] add .travis.yml 764b0cf Initial commit da7d068 readme 1395bb2 [Tests] add tests 0ff580f implementation 8811c32 npm init cffdea9 [Tests] add npm run lint a8be993 [meta] add FUNDING.yml 941258c Only apps should have lockfiles 6857316 [Tests] use npx aud in posttest ee48a91","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/","text":"which-builtin-type What is the type of this builtin JavaScript value? Works cross-realm, without instanceof , and can not be fooled by a constructor property. Example var whichBuiltinType = require('which-builtin-type'); var assert = require('assert'); assert.equal(undefined, whichBuiltinType(undefined)); assert.equal(null, whichBuiltinType(null)); assert.equal('Boolean', whichBuiltinType(false)); assert.equal('Boolean', whichBuiltinType(true)); assert.equal('Array', whichBuiltinType([])); assert.equal('Object', whichBuiltinType({})); assert.equal('RegExp', whichBuiltinType(/a/g)); assert.equal('RegExp', whichBuiltinType(new RegExp('a', 'g'))); assert.equal('Date', whichBuiltinType(new Date())); assert.equal('Number', whichBuiltinType(42)); assert.equal('Number', whichBuiltinType(NaN)); assert.equal('Number', whichBuiltinType(Infinity)); assert.equal('Number', whichBuiltinType(new Number(42))); assert.equal('String', whichBuiltinType('foo')); assert.equal('String', whichBuiltinType(Object('foo'))); assert.equal('Function', whichBuiltinType(function () {})); assert.equal('GeneratorFunction', whichBuiltinType(function* () {})); assert.equal('Function', whichBuiltinType(x => x * x)); assert.equal('Array', whichBuiltinType([])); assert.equal('Int8Array', whichBuiltinType(new Int8Array())); assert.equal('Uint8Array', whichBuiltinType(new Uint8Array())); assert.equal('Uint8ClampedArray', whichBuiltinType(new Uint8ClampedArray())); assert.equal('Int16Array', whichBuiltinType(new Int16Array())); assert.equal('Uint16Array', whichBuiltinType(new Uint16Array())); assert.equal('Int32Array', whichBuiltinType(new Int32Array())); assert.equal('Uint32Array', whichBuiltinType(new Uint32Array())); assert.equal('Float32Array', whichBuiltinType(new Float32Array())); assert.equal('Float64Array', whichBuiltinType(new Float64Array())); assert.equal('BigInt64Array', whichBuiltinType(new BigInt64Array())); assert.equal('BigUint64Array', whichBuiltinType(new BigUint64Array())); Tests Simply clone the repo, npm install , and run npm test","title":"which-builtin-type Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/#which-builtin-type","text":"What is the type of this builtin JavaScript value? Works cross-realm, without instanceof , and can not be fooled by a constructor property.","title":"which-builtin-type"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/#example","text":"var whichBuiltinType = require('which-builtin-type'); var assert = require('assert'); assert.equal(undefined, whichBuiltinType(undefined)); assert.equal(null, whichBuiltinType(null)); assert.equal('Boolean', whichBuiltinType(false)); assert.equal('Boolean', whichBuiltinType(true)); assert.equal('Array', whichBuiltinType([])); assert.equal('Object', whichBuiltinType({})); assert.equal('RegExp', whichBuiltinType(/a/g)); assert.equal('RegExp', whichBuiltinType(new RegExp('a', 'g'))); assert.equal('Date', whichBuiltinType(new Date())); assert.equal('Number', whichBuiltinType(42)); assert.equal('Number', whichBuiltinType(NaN)); assert.equal('Number', whichBuiltinType(Infinity)); assert.equal('Number', whichBuiltinType(new Number(42))); assert.equal('String', whichBuiltinType('foo')); assert.equal('String', whichBuiltinType(Object('foo'))); assert.equal('Function', whichBuiltinType(function () {})); assert.equal('GeneratorFunction', whichBuiltinType(function* () {})); assert.equal('Function', whichBuiltinType(x => x * x)); assert.equal('Array', whichBuiltinType([])); assert.equal('Int8Array', whichBuiltinType(new Int8Array())); assert.equal('Uint8Array', whichBuiltinType(new Uint8Array())); assert.equal('Uint8ClampedArray', whichBuiltinType(new Uint8ClampedArray())); assert.equal('Int16Array', whichBuiltinType(new Int16Array())); assert.equal('Uint16Array', whichBuiltinType(new Uint16Array())); assert.equal('Int32Array', whichBuiltinType(new Int32Array())); assert.equal('Uint32Array', whichBuiltinType(new Uint32Array())); assert.equal('Float32Array', whichBuiltinType(new Float32Array())); assert.equal('Float64Array', whichBuiltinType(new Float64Array())); assert.equal('BigInt64Array', whichBuiltinType(new BigInt64Array())); assert.equal('BigUint64Array', whichBuiltinType(new BigUint64Array()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.4 - 2024-07-29 Commits [readme] fix URLs f26fc22 [Dev Deps] update @ljharb/eslint-config , aud , available-typed-arrays , npmignore , object-inspect , object.assign , tape f724135 [Deps] update function.prototype.name , has-tostringtag , which-collection , which-typed-array 831119b v1.1.3 - 2022-11-02 Commits [meta] use npmignore to autogenerate an npmignore file 0ccf168 [Dev Deps] update aud , has-bigints , has-symbols , in-publish , object-inspect , object.assign , tape 2c87b2e [actions] update rebase action to use reusable workflow ab27caf [meta] simplify exports 680d056 [Deps] update which-typed-array 3ca0216 [meta] add sideEffects flag caa2221 v1.1.2 - 2022-04-12 Commits [actions] reuse common workflows b1b60aa [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 8115a20 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 86b3c3b [actions] update codecov uploader de30f4b [Deps] update function.prototype.name , is-finalizationregistry , which-typed-array 0ba20f5 [Refactor] use is-async-function 6f36d89 [Deps] update is-weakref d775476 v1.1.1 - 2021-08-06 Commits [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , available-typed-arrays , object-inspect , tape 8adae7d [Deps] update is-date-object , is-generator-function , is-regex , which-typed-array 805b158 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 9ec250a [readme] add github actions/codecov badges 75b51b4 v1.1.0 - 2021-04-18 Commits [Fix] prevent constructor or Symbol.toStringTag from lying about builtins 7638412 [actions] use node/install instead of node/run ; use codecov action 6a06770 [New] recognize Promise 0d79e3a [New] recognize WeakRef and FinalizationRegistry 020de6a [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , object-inspect , tape 71e47f5 [Deps] update function.prototype.name , is-regex f2d56b9 [meta] use prepublishOnly script for npm 7+ daae0a0 [Tests] increase coverage bd406f2 v1.0.1 - 2020-12-14 Commits [Tests] migrate tests to Github Actions 165a1b5 [meta] do not publish github action workflow files 851f508 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , has-bigints , object-inspect , object.assign , tape 5b0906c [Tests] run nyc on all tests; use tape runner 85924cd [readme] fix repo URLs, remove defunct badges 8fb4bb5 [Dev Deps] update @ljharb/eslint-config , available-typed-arrays , make-arrow-function , make-generator-function 9d65291 [Deps] update function.prototype.name , is-generator-function , is-regex , which-boxed-primitive , which-collection , which-typed-array 7900c10 [actions] add \"Allow Edits\" workflow f9f04f5 [actions] switch Automatic Rebase workflow to pull_request_target event 4452dee v1.0.0 - 2020-01-24 Commits Tests d65924f Initial commit a6208ff Implementation 0d1c341 readme 23ecfb6 npm init cce1b17 [meta] add auto-changelog f903f62 [actions] add automatic rebasing / merge commit blocking 71f9295 [Tests] use shared travis-ci configs 2d7a1f4 [Tests] add npm run lint a6372e2 Only apps should have lockfiles d6bd083 [meta] add funding field 377f67a [meta] add safe-publish-latest 99295e9","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v114-2024-07-29","text":"","title":"v1.1.4 - 2024-07-29"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits","text":"[readme] fix URLs f26fc22 [Dev Deps] update @ljharb/eslint-config , aud , available-typed-arrays , npmignore , object-inspect , object.assign , tape f724135 [Deps] update function.prototype.name , has-tostringtag , which-collection , which-typed-array 831119b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v113-2022-11-02","text":"","title":"v1.1.3 - 2022-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits_1","text":"[meta] use npmignore to autogenerate an npmignore file 0ccf168 [Dev Deps] update aud , has-bigints , has-symbols , in-publish , object-inspect , object.assign , tape 2c87b2e [actions] update rebase action to use reusable workflow ab27caf [meta] simplify exports 680d056 [Deps] update which-typed-array 3ca0216 [meta] add sideEffects flag caa2221","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v112-2022-04-12","text":"","title":"v1.1.2 - 2022-04-12"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits_2","text":"[actions] reuse common workflows b1b60aa [Dev Deps] update eslint , @ljharb/eslint-config , @es-shims/api , safe-publish-latest , tape 8115a20 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape 86b3c3b [actions] update codecov uploader de30f4b [Deps] update function.prototype.name , is-finalizationregistry , which-typed-array 0ba20f5 [Refactor] use is-async-function 6f36d89 [Deps] update is-weakref d775476","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v111-2021-08-06","text":"","title":"v1.1.1 - 2021-08-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits_3","text":"[Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , available-typed-arrays , object-inspect , tape 8adae7d [Deps] update is-date-object , is-generator-function , is-regex , which-typed-array 805b158 [Refactor] use has-tostringtag to behave correctly in the presence of symbol shams 9ec250a [readme] add github actions/codecov badges 75b51b4","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v110-2021-04-18","text":"","title":"v1.1.0 - 2021-04-18"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits_4","text":"[Fix] prevent constructor or Symbol.toStringTag from lying about builtins 7638412 [actions] use node/install instead of node/run ; use codecov action 6a06770 [New] recognize Promise 0d79e3a [New] recognize WeakRef and FinalizationRegistry 020de6a [Dev Deps] update eslint , @ljharb/eslint-config , aud , has-symbols , object-inspect , tape 71e47f5 [Deps] update function.prototype.name , is-regex f2d56b9 [meta] use prepublishOnly script for npm 7+ daae0a0 [Tests] increase coverage bd406f2","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v101-2020-12-14","text":"","title":"v1.0.1 - 2020-12-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits_5","text":"[Tests] migrate tests to Github Actions 165a1b5 [meta] do not publish github action workflow files 851f508 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , has-bigints , object-inspect , object.assign , tape 5b0906c [Tests] run nyc on all tests; use tape runner 85924cd [readme] fix repo URLs, remove defunct badges 8fb4bb5 [Dev Deps] update @ljharb/eslint-config , available-typed-arrays , make-arrow-function , make-generator-function 9d65291 [Deps] update function.prototype.name , is-generator-function , is-regex , which-boxed-primitive , which-collection , which-typed-array 7900c10 [actions] add \"Allow Edits\" workflow f9f04f5 [actions] switch Automatic Rebase workflow to pull_request_target event 4452dee","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#v100-2020-01-24","text":"","title":"v1.0.0 - 2020-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-builtin-type/CHANGELOG/#commits_6","text":"Tests d65924f Initial commit a6208ff Implementation 0d1c341 readme 23ecfb6 npm init cce1b17 [meta] add auto-changelog f903f62 [actions] add automatic rebasing / merge commit blocking 71f9295 [Tests] use shared travis-ci configs 2d7a1f4 [Tests] add npm run lint a6372e2 Only apps should have lockfiles d6bd083 [meta] add funding field 377f67a [meta] add safe-publish-latest 99295e9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/","text":"which-collection Which kind of Collection (Map, Set, WeakMap, WeakSet) is this JavaScript value? Works cross-realm, without instanceof , and despite Symbol.toStringTag. Example var whichCollection = require('which-collection'); var assert = require('assert'); assert.equal(false, whichCollection(undefined)); assert.equal(false, whichCollection(null)); assert.equal(false, whichCollection(false)); assert.equal(false, whichCollection(true)); assert.equal(false, whichCollection([])); assert.equal(false, whichCollection({})); assert.equal(false, whichCollection(/a/g)); assert.equal(false, whichCollection(new RegExp('a', 'g'))); assert.equal(false, whichCollection(new Date())); assert.equal(false, whichCollection(42)); assert.equal(false, whichCollection(NaN)); assert.equal(false, whichCollection(Infinity)); assert.equal(false, whichCollection(new Number(42))); assert.equal(false, whichCollection(42n)); assert.equal(false, whichCollection(Object(42n))); assert.equal(false, whichCollection('foo')); assert.equal(false, whichCollection(Object('foo'))); assert.equal(false, whichCollection(function () {})); assert.equal(false, whichCollection(function* () {})); assert.equal(false, whichCollection(x => x * x)); assert.equal(false, whichCollection([])); assert.equal('Map', whichCollection(new Map())); assert.equal('Set', whichCollection(new Set())); assert.equal('WeakMap', whichCollection(new WeakMap())); assert.equal('WeakSet', whichCollection(new WeakSet())); Tests Simply clone the repo, npm install , and run npm test","title":"which-collection Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/#which-collection","text":"Which kind of Collection (Map, Set, WeakMap, WeakSet) is this JavaScript value? Works cross-realm, without instanceof , and despite Symbol.toStringTag.","title":"which-collection"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/#example","text":"var whichCollection = require('which-collection'); var assert = require('assert'); assert.equal(false, whichCollection(undefined)); assert.equal(false, whichCollection(null)); assert.equal(false, whichCollection(false)); assert.equal(false, whichCollection(true)); assert.equal(false, whichCollection([])); assert.equal(false, whichCollection({})); assert.equal(false, whichCollection(/a/g)); assert.equal(false, whichCollection(new RegExp('a', 'g'))); assert.equal(false, whichCollection(new Date())); assert.equal(false, whichCollection(42)); assert.equal(false, whichCollection(NaN)); assert.equal(false, whichCollection(Infinity)); assert.equal(false, whichCollection(new Number(42))); assert.equal(false, whichCollection(42n)); assert.equal(false, whichCollection(Object(42n))); assert.equal(false, whichCollection('foo')); assert.equal(false, whichCollection(Object('foo'))); assert.equal(false, whichCollection(function () {})); assert.equal(false, whichCollection(function* () {})); assert.equal(false, whichCollection(x => x * x)); assert.equal(false, whichCollection([])); assert.equal('Map', whichCollection(new Map())); assert.equal('Set', whichCollection(new Set())); assert.equal('WeakMap', whichCollection(new WeakMap())); assert.equal('WeakSet', whichCollection(new WeakSet()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.0.2 - 2024-03-08 Commits [actions] reuse common workflows a5b2949 [Tests] migrate tests to Github Actions 283ec03 add types bf576db [actions] use node/install instead of node/run ; use codecov action 24968a2 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape f60b277 [Tests] run nyc on all tests 5700269 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape eb1f1a4 [actions] remove redundant finisher cd5b8fc [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape f5786fa [actions] update rebase action to use reusable workflow 7ac7b67 [actions] update codecov uploader b074105 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape ec640d6 [actions] add \"Allow Edits\" workflow 65d842e [readme] remove travis badge f106289 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape e784a1f [meta] use npmignore to autogenerate an npmignore file 95b503f [readme] add actions and codecov badges 121ba2d [Deps] update is-map , is-set , is-weakmap , is-weakset 4aa150f [meta] simplify \"exports\" 2afaed7 [Deps] update is-map , is-set ce44763 [actions] switch Automatic Rease workflow to pull_request_target event b16b664 [Dev Deps] update auto-changelog , tape 2b9c953 [meta] add missing engines.node dcdbfde [Dev Deps] update auto-changelog ; add aud 8e7f28d [meta] add sideEffects flag 3e0376b [Deps] update is-weakset 7b3e922 [Tests] only audit prod deps 3339fea v1.0.1 - 2020-01-26 Commits [actions] add automatic rebasing / merge commit blocking c3820b2 [patch] add \"exports\" 10983b5 [Deps] update is-map , is-set , is-weakmap , is-weakset 1565925 [Dev Deps] update eslint , @ljharb/eslint-config , tape 92ef871 [Dev Deps] update @ljharb/eslint-config 61e9cde v1.0.0 - 2019-11-13 Commits Initial commit a21fddf Tests ec86bc1 readme ffe969c implementation 9acb669 npm init 124a63e [meta] add auto-changelog , safe-publish-latest df0d6d4 [meta] add funding field; create FUNDING.yml 032c81c [Tests] add npm run lint 6ae406d fixup a2cad36 Only apps should have lockfiles 30b3aae","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#v102-2024-03-08","text":"","title":"v1.0.2 - 2024-03-08"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#commits","text":"[actions] reuse common workflows a5b2949 [Tests] migrate tests to Github Actions 283ec03 add types bf576db [actions] use node/install instead of node/run ; use codecov action 24968a2 [Dev Deps] update eslint , @ljharb/eslint-config , object-inspect , safe-publish-latest , tape f60b277 [Tests] run nyc on all tests 5700269 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape eb1f1a4 [actions] remove redundant finisher cd5b8fc [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape f5786fa [actions] update rebase action to use reusable workflow 7ac7b67 [actions] update codecov uploader b074105 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , object-inspect , tape ec640d6 [actions] add \"Allow Edits\" workflow 65d842e [readme] remove travis badge f106289 [Dev Deps] update @ljharb/eslint-config , aud , npmignore , object-inspect , tape e784a1f [meta] use npmignore to autogenerate an npmignore file 95b503f [readme] add actions and codecov badges 121ba2d [Deps] update is-map , is-set , is-weakmap , is-weakset 4aa150f [meta] simplify \"exports\" 2afaed7 [Deps] update is-map , is-set ce44763 [actions] switch Automatic Rease workflow to pull_request_target event b16b664 [Dev Deps] update auto-changelog , tape 2b9c953 [meta] add missing engines.node dcdbfde [Dev Deps] update auto-changelog ; add aud 8e7f28d [meta] add sideEffects flag 3e0376b [Deps] update is-weakset 7b3e922 [Tests] only audit prod deps 3339fea","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#v101-2020-01-26","text":"","title":"v1.0.1 - 2020-01-26"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#commits_1","text":"[actions] add automatic rebasing / merge commit blocking c3820b2 [patch] add \"exports\" 10983b5 [Deps] update is-map , is-set , is-weakmap , is-weakset 1565925 [Dev Deps] update eslint , @ljharb/eslint-config , tape 92ef871 [Dev Deps] update @ljharb/eslint-config 61e9cde","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#v100-2019-11-13","text":"","title":"v1.0.0 - 2019-11-13"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-collection/CHANGELOG/#commits_2","text":"Initial commit a21fddf Tests ec86bc1 readme ffe969c implementation 9acb669 npm init 124a63e [meta] add auto-changelog , safe-publish-latest df0d6d4 [meta] add funding field; create FUNDING.yml 032c81c [Tests] add npm run lint 6ae406d fixup a2cad36 Only apps should have lockfiles 30b3aae","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/","text":"which-typed-array Which kind of Typed Array is this JavaScript value? Works cross-realm, without instanceof , and despite Symbol.toStringTag. Example var whichTypedArray = require('which-typed-array'); var assert = require('assert'); assert.equal(false, whichTypedArray(undefined)); assert.equal(false, whichTypedArray(null)); assert.equal(false, whichTypedArray(false)); assert.equal(false, whichTypedArray(true)); assert.equal(false, whichTypedArray([])); assert.equal(false, whichTypedArray({})); assert.equal(false, whichTypedArray(/a/g)); assert.equal(false, whichTypedArray(new RegExp('a', 'g'))); assert.equal(false, whichTypedArray(new Date())); assert.equal(false, whichTypedArray(42)); assert.equal(false, whichTypedArray(NaN)); assert.equal(false, whichTypedArray(Infinity)); assert.equal(false, whichTypedArray(new Number(42))); assert.equal(false, whichTypedArray('foo')); assert.equal(false, whichTypedArray(Object('foo'))); assert.equal(false, whichTypedArray(function () {})); assert.equal(false, whichTypedArray(function* () {})); assert.equal(false, whichTypedArray(x => x * x)); assert.equal(false, whichTypedArray([])); assert.equal('Int8Array', whichTypedArray(new Int8Array())); assert.equal('Uint8Array', whichTypedArray(new Uint8Array())); assert.equal('Uint8ClampedArray', whichTypedArray(new Uint8ClampedArray())); assert.equal('Int16Array', whichTypedArray(new Int16Array())); assert.equal('Uint16Array', whichTypedArray(new Uint16Array())); assert.equal('Int32Array', whichTypedArray(new Int32Array())); assert.equal('Uint32Array', whichTypedArray(new Uint32Array())); assert.equal('Float32Array', whichTypedArray(new Float32Array())); assert.equal('Float64Array', whichTypedArray(new Float64Array())); assert.equal('BigInt64Array', whichTypedArray(new BigInt64Array())); assert.equal('BigUint64Array', whichTypedArray(new BigUint64Array())); Tests Simply clone the repo, npm install , and run npm test","title":"which-typed-array Version Badge"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/#which-typed-array","text":"Which kind of Typed Array is this JavaScript value? Works cross-realm, without instanceof , and despite Symbol.toStringTag.","title":"which-typed-array"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/#example","text":"var whichTypedArray = require('which-typed-array'); var assert = require('assert'); assert.equal(false, whichTypedArray(undefined)); assert.equal(false, whichTypedArray(null)); assert.equal(false, whichTypedArray(false)); assert.equal(false, whichTypedArray(true)); assert.equal(false, whichTypedArray([])); assert.equal(false, whichTypedArray({})); assert.equal(false, whichTypedArray(/a/g)); assert.equal(false, whichTypedArray(new RegExp('a', 'g'))); assert.equal(false, whichTypedArray(new Date())); assert.equal(false, whichTypedArray(42)); assert.equal(false, whichTypedArray(NaN)); assert.equal(false, whichTypedArray(Infinity)); assert.equal(false, whichTypedArray(new Number(42))); assert.equal(false, whichTypedArray('foo')); assert.equal(false, whichTypedArray(Object('foo'))); assert.equal(false, whichTypedArray(function () {})); assert.equal(false, whichTypedArray(function* () {})); assert.equal(false, whichTypedArray(x => x * x)); assert.equal(false, whichTypedArray([])); assert.equal('Int8Array', whichTypedArray(new Int8Array())); assert.equal('Uint8Array', whichTypedArray(new Uint8Array())); assert.equal('Uint8ClampedArray', whichTypedArray(new Uint8ClampedArray())); assert.equal('Int16Array', whichTypedArray(new Int16Array())); assert.equal('Uint16Array', whichTypedArray(new Uint16Array())); assert.equal('Int32Array', whichTypedArray(new Int32Array())); assert.equal('Uint32Array', whichTypedArray(new Uint32Array())); assert.equal('Float32Array', whichTypedArray(new Float32Array())); assert.equal('Float64Array', whichTypedArray(new Float64Array())); assert.equal('BigInt64Array', whichTypedArray(new BigInt64Array())); assert.equal('BigUint64Array', whichTypedArray(new BigUint64Array()));","title":"Example"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/#tests","text":"Simply clone the repo, npm install , and run npm test","title":"Tests"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . v1.1.15 - 2024-03-10 Commits [types] use a namespace; improve type f42bec3 [types] use shared config 464a9e3 [actions] remove redundant finisher; use reusable workflow d114ee8 [Dev Deps] update @types/node , tape , typescript ; add @arethetypeswrong/cli 9cc63d8 [types] add a helpful hover description 29ccf8d [Deps] update available-typed-arrays , call-bind , has-tostringtag 7ecfd8e v1.1.14 - 2024-02-01 Commits [patch] add types 49c4d4c [Dev Deps] update aud , npmignore , tape e5fab7b [Deps] update available-typed-arrays , call-bind 97e2b44 [Deps] update has-tostringtag 1efa8bf v1.1.13 - 2023-10-19 Commits [Refactor] avoid call-binding entirely when there is no method to bind 9ff452b v1.1.12 - 2023-10-19 Commits [Fix] somehow node 0.12 - 3 can hit here, and they lack slice but have set c28e9b8 [Deps] update call-bind a648554 [Dev Deps] update tape 7a094d6 v1.1.11 - 2023-07-17 Commits [Fix] node &lt; v0.6 lacks proper Object toString behavior b8fd654 [Dev Deps] update tape e1734c9 v1.1.10 - 2023-07-10 Commits [actions] update rebase action to use reusable workflow 2c10582 [Robustness] use call-bind b2335fd [Dev Deps] update @ljharb/eslint-config , aud , tape ad5e41b v1.1.9 - 2022-11-02 Commits [Dev Deps] update aud , is-callable , tape 9a20b3c [Refactor] use gopd instead of es-abstract helper 00157af [Deps] update is-typed-array 6714240 [meta] add sideEffects flag 89b96cc v1.1.8 - 2022-05-14 Commits [actions] reuse common workflows 95ea6c0 [meta] use npmignore to autogenerate an npmignore file d08436a [readme] add github actions/codecov badges 35ae3af [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 86e6e3a [actions] update codecov uploader 0aa6e30 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape a881a78 [Refactor] use for-each instead of foreach 9dafa03 [Deps] update es-abstract , is-typed-array 0684022 [Deps] update es-abstract , is-typed-array 633a529 v1.1.7 - 2021-08-30 Commits [Refactor] use globalThis if available 2a16d1f [meta] changelog cleanup ba99f56 [Dev Deps] update @ljharb/eslint-config 19a6e04 [Deps] update available-typed-arrays 50dbc58 [Deps] update is-typed-array c1b83ea v1.1.6 - 2021-08-06 Fixed [Fix] if Symbol.toStringTag exists but is not present, use Object.prototype.toString #51 #49 Commits [Dev Deps] update is-callable , tape 63eb1e3 [Deps] update is-typed-array c5056f0 v1.1.5 - 2021-08-05 Commits [actions] use node/install instead of node/run ; use codecov action 63fa8dd [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , is-callable , tape 1107c74 [Deps] update available-typed-arrays , call-bind , es-abstract , is-typed-array f953454 [Fix] use has-tostringtag to behave correctly in the presence of symbol shams 8aee720 [meta] use prepublishOnly script for npm 7+ 6c5167b v1.1.4 - 2020-12-05 Commits [meta] npmignore github action workflows aa427e7 v1.1.3 - 2020-12-05 Commits [Tests] migrate tests to Github Actions 803d4dd [Tests] run nyc on all tests 205a13f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , is-callable , tape 97ceb07 [actions] add \"Allow Edits\" workflow b140492 [Deps] update es-abstract ; use call-bind where applicable 2abdb87 [actions] switch Automatic Rebase workflow to pull_request_target event 256d34b [Dev Deps] update auto-changelog ; add aud ddea96f [meta] gitignore nyc output 8a812bd v1.1.2 - 2020-04-07 Commits [Dev Deps] update make-arrow-function , make-generator-function 28c61ef [Dev Deps] update @ljharb/eslint-config a233879 [Dev Deps] update auto-changelog df0134c [Fix] move foreach to dependencies 6ef29c0 [Tests] only audit prod deps eb21044 [Deps] update es-abstract 5ef0236 [Dev Deps] update tape 7456037 [Deps] update available-typed-arrays 8a856c9 v1.1.1 - 2020-01-24 Commits [Tests] use shared travis-ci configs 0a627d9 [meta] add auto-changelog 2a14c58 [meta] remove unused Makefile and associated utilities 75f7f22 [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 4162327 [Refactor] use es-abstract \u2019s callBound , available-typed-arrays , has-symbols 9b04a2a [readme] fix repo URLs, remove testling 03ed52f [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape bfbcf3e [actions] add automatic rebasing / merge commit blocking cc88ac5 [meta] create FUNDING.yml acbc723 [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , tape f1ab63e [Dev Deps] update eslint , @ljharb/eslint-config ; add safe-publish-latest ac9f50b [Tests] use npx aud instead of nsp or npm audit with hoops aaaa15d [Dev Deps] update eslint , @ljharb/eslint-config , tape 602fc9a [Deps] update available-typed-arrays , is-typed-array b2d69b6 [meta] add funding field 156f613 v1.1.0 - 2019-02-16 Commits [Tests] remove jscs 381c9b4 [Tests] up to node v8.2 , v7.10 , v6.11 , v5.8 ; improve matrix; newer npm breaks on older node 7015c19 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ; use nvm install-latest-npm ad67885 [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 dd94bfb [Refactor] use an array instead of an object for storing Typed Array names de98bc1 [meta] ignore test.html 06cfb1b [Tests] up to node v7.0 , v6.9 , v4.6 ; improve test matrix df76eaa [New] add BigInt64Array and BigUint64Array d6bca3a [Dev Deps] update jscs , nsp , eslint f23b45b [Dev Deps] update @ljharb/eslint-config , eslint , semver , tape ddb4484 [Dev Deps] update eslint , @ljharb/eslint-config , covert , is-callable , replace , semver , tape 4524e59 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 1ec7056 [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config 799487d [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 8092598 [Tests] up to node v11.10 a5aabb1 [Dev Deps] update @ljharb/eslint-config , eslint , nsp , semver , tape 277be33 [Tests] use npm audit instead of nsp ee97dc7 [Dev Deps] update tape , eslint , @ljharb/eslint-config 262ffb0 [Dev Deps] update jscs , eslint , @ljharb/eslint-config d6bbcfc [Tests] up to node v6.2 2ff89eb Only apps should have lockfiles e2bc271 [Dev Deps] update nsp , eslint , @ljharb/eslint-config b79e93b [Dev Deps] update nsp , eslint , @ljharb/eslint-config 016dbff [Dev Deps] update eslint , tape 6ce4bbc [Tests] on node v10.1 f0683a0 [Tests] up to node v7.2 2f29cef [Dev Deps] update replace 73b5ba6 [Deps] update function-bind c8a18c2 [Tests] on node v5.12 812102b [Tests] on node v5.10 271584f v1.0.1 - 2016-03-19 Commits [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver , is-callable 4a628c5 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , is-callable 8e09372 [Tests] up to node v5.6 , v4.3 3a35bf9 [Dev Deps] update jscs , eslint , @ljharb/eslint-config 9410d5e [Fix] Symbol.toStringTag is on the super-[[Prototype]] of Float32Array, not the [[Prototype]]. 7c40a3a [Tests] up to node v5.9 , v4.4 07878e7 Use the object form of \"author\" in package.json 65caa56 [Tests] use pretest/posttest for linting/security c170f7e [Deps] update is-typed-array 9ab324e [Deps] update function-bind a723142 [Deps] update is-typed-array ed82ce4 [Tests] on node v4.2 f581c20 v1.0.0 - 2015-10-05 Commits Dotfiles / Makefile 667f89a Tests. a14d05e package.json 560b1aa Read me a22096e Implementation 0b1ae28 Initial commit 4b32f0a","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v1115-2024-03-10","text":"","title":"v1.1.15 - 2024-03-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits","text":"[types] use a namespace; improve type f42bec3 [types] use shared config 464a9e3 [actions] remove redundant finisher; use reusable workflow d114ee8 [Dev Deps] update @types/node , tape , typescript ; add @arethetypeswrong/cli 9cc63d8 [types] add a helpful hover description 29ccf8d [Deps] update available-typed-arrays , call-bind , has-tostringtag 7ecfd8e","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v1114-2024-02-01","text":"","title":"v1.1.14 - 2024-02-01"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_1","text":"[patch] add types 49c4d4c [Dev Deps] update aud , npmignore , tape e5fab7b [Deps] update available-typed-arrays , call-bind 97e2b44 [Deps] update has-tostringtag 1efa8bf","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v1113-2023-10-19","text":"","title":"v1.1.13 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_2","text":"[Refactor] avoid call-binding entirely when there is no method to bind 9ff452b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v1112-2023-10-19","text":"","title":"v1.1.12 - 2023-10-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_3","text":"[Fix] somehow node 0.12 - 3 can hit here, and they lack slice but have set c28e9b8 [Deps] update call-bind a648554 [Dev Deps] update tape 7a094d6","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v1111-2023-07-17","text":"","title":"v1.1.11 - 2023-07-17"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_4","text":"[Fix] node &lt; v0.6 lacks proper Object toString behavior b8fd654 [Dev Deps] update tape e1734c9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v1110-2023-07-10","text":"","title":"v1.1.10 - 2023-07-10"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_5","text":"[actions] update rebase action to use reusable workflow 2c10582 [Robustness] use call-bind b2335fd [Dev Deps] update @ljharb/eslint-config , aud , tape ad5e41b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v119-2022-11-02","text":"","title":"v1.1.9 - 2022-11-02"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_6","text":"[Dev Deps] update aud , is-callable , tape 9a20b3c [Refactor] use gopd instead of es-abstract helper 00157af [Deps] update is-typed-array 6714240 [meta] add sideEffects flag 89b96cc","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v118-2022-05-14","text":"","title":"v1.1.8 - 2022-05-14"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_7","text":"[actions] reuse common workflows 95ea6c0 [meta] use npmignore to autogenerate an npmignore file d08436a [readme] add github actions/codecov badges 35ae3af [Dev Deps] update eslint , @ljharb/eslint-config , safe-publish-latest , tape 86e6e3a [actions] update codecov uploader 0aa6e30 [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , tape a881a78 [Refactor] use for-each instead of foreach 9dafa03 [Deps] update es-abstract , is-typed-array 0684022 [Deps] update es-abstract , is-typed-array 633a529","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v117-2021-08-30","text":"","title":"v1.1.7 - 2021-08-30"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_8","text":"[Refactor] use globalThis if available 2a16d1f [meta] changelog cleanup ba99f56 [Dev Deps] update @ljharb/eslint-config 19a6e04 [Deps] update available-typed-arrays 50dbc58 [Deps] update is-typed-array c1b83ea","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v116-2021-08-06","text":"","title":"v1.1.6 - 2021-08-06"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#fixed","text":"[Fix] if Symbol.toStringTag exists but is not present, use Object.prototype.toString #51 #49","title":"Fixed"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_9","text":"[Dev Deps] update is-callable , tape 63eb1e3 [Deps] update is-typed-array c5056f0","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v115-2021-08-05","text":"","title":"v1.1.5 - 2021-08-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_10","text":"[actions] use node/install instead of node/run ; use codecov action 63fa8dd [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , is-callable , tape 1107c74 [Deps] update available-typed-arrays , call-bind , es-abstract , is-typed-array f953454 [Fix] use has-tostringtag to behave correctly in the presence of symbol shams 8aee720 [meta] use prepublishOnly script for npm 7+ 6c5167b","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v114-2020-12-05","text":"","title":"v1.1.4 - 2020-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_11","text":"[meta] npmignore github action workflows aa427e7","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v113-2020-12-05","text":"","title":"v1.1.3 - 2020-12-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_12","text":"[Tests] migrate tests to Github Actions 803d4dd [Tests] run nyc on all tests 205a13f [Dev Deps] update eslint , @ljharb/eslint-config , aud , auto-changelog , is-callable , tape 97ceb07 [actions] add \"Allow Edits\" workflow b140492 [Deps] update es-abstract ; use call-bind where applicable 2abdb87 [actions] switch Automatic Rebase workflow to pull_request_target event 256d34b [Dev Deps] update auto-changelog ; add aud ddea96f [meta] gitignore nyc output 8a812bd","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v112-2020-04-07","text":"","title":"v1.1.2 - 2020-04-07"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_13","text":"[Dev Deps] update make-arrow-function , make-generator-function 28c61ef [Dev Deps] update @ljharb/eslint-config a233879 [Dev Deps] update auto-changelog df0134c [Fix] move foreach to dependencies 6ef29c0 [Tests] only audit prod deps eb21044 [Deps] update es-abstract 5ef0236 [Dev Deps] update tape 7456037 [Deps] update available-typed-arrays 8a856c9","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v111-2020-01-24","text":"","title":"v1.1.1 - 2020-01-24"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_14","text":"[Tests] use shared travis-ci configs 0a627d9 [meta] add auto-changelog 2a14c58 [meta] remove unused Makefile and associated utilities 75f7f22 [Tests] up to node v12.10 , v11.15 , v10.16 , v8.16 , v6.17 4162327 [Refactor] use es-abstract \u2019s callBound , available-typed-arrays , has-symbols 9b04a2a [readme] fix repo URLs, remove testling 03ed52f [Dev Deps] update eslint , @ljharb/eslint-config , replace , semver , tape bfbcf3e [actions] add automatic rebasing / merge commit blocking cc88ac5 [meta] create FUNDING.yml acbc723 [Dev Deps] update eslint , @ljharb/eslint-config , is-callable , tape f1ab63e [Dev Deps] update eslint , @ljharb/eslint-config ; add safe-publish-latest ac9f50b [Tests] use npx aud instead of nsp or npm audit with hoops aaaa15d [Dev Deps] update eslint , @ljharb/eslint-config , tape 602fc9a [Deps] update available-typed-arrays , is-typed-array b2d69b6 [meta] add funding field 156f613","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v110-2019-02-16","text":"","title":"v1.1.0 - 2019-02-16"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_15","text":"[Tests] remove jscs 381c9b4 [Tests] up to node v8.2 , v7.10 , v6.11 , v5.8 ; improve matrix; newer npm breaks on older node 7015c19 [Tests] up to node v10.0 , v9.11 , v8.11 , v6.14 , v4.9 ; use nvm install-latest-npm ad67885 [Tests] up to node v11.6 , v10.15 , v8.15 , v6.16 dd94bfb [Refactor] use an array instead of an object for storing Typed Array names de98bc1 [meta] ignore test.html 06cfb1b [Tests] up to node v7.0 , v6.9 , v4.6 ; improve test matrix df76eaa [New] add BigInt64Array and BigUint64Array d6bca3a [Dev Deps] update jscs , nsp , eslint f23b45b [Dev Deps] update @ljharb/eslint-config , eslint , semver , tape ddb4484 [Dev Deps] update eslint , @ljharb/eslint-config , covert , is-callable , replace , semver , tape 4524e59 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 1ec7056 [Dev Deps] update jscs , nsp , eslint , @ljharb/eslint-config 799487d [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver 8092598 [Tests] up to node v11.10 a5aabb1 [Dev Deps] update @ljharb/eslint-config , eslint , nsp , semver , tape 277be33 [Tests] use npm audit instead of nsp ee97dc7 [Dev Deps] update tape , eslint , @ljharb/eslint-config 262ffb0 [Dev Deps] update jscs , eslint , @ljharb/eslint-config d6bbcfc [Tests] up to node v6.2 2ff89eb Only apps should have lockfiles e2bc271 [Dev Deps] update nsp , eslint , @ljharb/eslint-config b79e93b [Dev Deps] update nsp , eslint , @ljharb/eslint-config 016dbff [Dev Deps] update eslint , tape 6ce4bbc [Tests] on node v10.1 f0683a0 [Tests] up to node v7.2 2f29cef [Dev Deps] update replace 73b5ba6 [Deps] update function-bind c8a18c2 [Tests] on node v5.12 812102b [Tests] on node v5.10 271584f","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v101-2016-03-19","text":"","title":"v1.0.1 - 2016-03-19"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_16","text":"[Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , semver , is-callable 4a628c5 [Dev Deps] update tape , jscs , nsp , eslint , @ljharb/eslint-config , is-callable 8e09372 [Tests] up to node v5.6 , v4.3 3a35bf9 [Dev Deps] update jscs , eslint , @ljharb/eslint-config 9410d5e [Fix] Symbol.toStringTag is on the super-[[Prototype]] of Float32Array, not the [[Prototype]]. 7c40a3a [Tests] up to node v5.9 , v4.4 07878e7 Use the object form of \"author\" in package.json 65caa56 [Tests] use pretest/posttest for linting/security c170f7e [Deps] update is-typed-array 9ab324e [Deps] update function-bind a723142 [Deps] update is-typed-array ed82ce4 [Tests] on node v4.2 f581c20","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#v100-2015-10-05","text":"","title":"v1.0.0 - 2015-10-05"},{"location":"_Disciplina/Code/my-react-app/node_modules/which-typed-array/CHANGELOG/#commits_17","text":"Dotfiles / Makefile 667f89a Tests. a14d05e package.json 560b1aa Read me a22096e Implementation 0b1ae28 Initial commit 4b32f0a","title":"Commits"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/","text":"word-wrap Wrap words to a specified length. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your :heart: and support. Install Install with npm : $ npm install --save word-wrap Usage var wrap = require('word-wrap'); wrap('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'); Results in: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Options options.width Type: Number Default: 50 The width of the text before wrapping to a new line. Example: wrap(str, {width: 60}); options.indent Type: String Default: `` (two spaces) The string to use at the beginning of each line. Example: wrap(str, {indent: ' '}); options.newline Type: String Default: \\n The string to use at the end of each line. Example: wrap(str, {newline: '\\n\\n'}); options.escape Type: function Default: function(str){return str;} An escape function to run on each line after splitting them. Example: var xmlescape = require('xml-escape'); wrap(str, { escape: function(string){ return xmlescape(string); } }); options.trim Type: Boolean Default: false Trim trailing whitespace from the returned string. This option is included since .trim() would also strip the leading indentation from the first line. Example: wrap(str, {trim: true}); options.cut Type: Boolean Default: false Break a word between any two letters when the word is longer than the specified width. Example: wrap(str, {cut: true}); About Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb Related projects You might also be interested in these projects: common-words : Updated list (JSON) of the 100 most common words in the English language. Useful for\u2026 more | homepage shuffle-words : Shuffle the words in a string and optionally the letters in each word using the\u2026 more | homepage unique-words : Returns an array of unique words, or the number of occurrences of each word in\u2026 more | homepage wordcount : Count the words in a string. Support for english, CJK and Cyrillic. | homepage Contributors Commits Contributor 47 jonschlinkert 7 OlafConijn 3 doowb 2 aashutoshrathi 2 lordvlad 2 hildjj 1 danilosampaio 1 2fd 1 leonard-thieu 1 mohd-akram 1 toddself 1 wolfgang42 1 zachhale Author Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile License Copyright \u00a9 2023, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on July 22, 2023.","title":"word-wrap NPM version NPM monthly downloads NPM total downloads Linux Build Status"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#word-wrap","text":"Wrap words to a specified length. Please consider following this project's author, Jon Schlinkert , and consider starring the project to show your :heart: and support.","title":"word-wrap"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#install","text":"Install with npm : $ npm install --save word-wrap","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#usage","text":"var wrap = require('word-wrap'); wrap('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'); Results in: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#options","text":"","title":"Options"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#optionswidth","text":"Type: Number Default: 50 The width of the text before wrapping to a new line. Example: wrap(str, {width: 60});","title":"options.width"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#optionsindent","text":"Type: String Default: `` (two spaces) The string to use at the beginning of each line. Example: wrap(str, {indent: ' '});","title":"options.indent"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#optionsnewline","text":"Type: String Default: \\n The string to use at the end of each line. Example: wrap(str, {newline: '\\n\\n'});","title":"options.newline"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#optionsescape","text":"Type: function Default: function(str){return str;} An escape function to run on each line after splitting them. Example: var xmlescape = require('xml-escape'); wrap(str, { escape: function(string){ return xmlescape(string); } });","title":"options.escape"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#optionstrim","text":"Type: Boolean Default: false Trim trailing whitespace from the returned string. This option is included since .trim() would also strip the leading indentation from the first line. Example: wrap(str, {trim: true});","title":"options.trim"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#optionscut","text":"Type: Boolean Default: false Break a word between any two letters when the word is longer than the specified width. Example: wrap(str, {cut: true});","title":"options.cut"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#about","text":"Contributing Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Running Tests Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command: $ npm install && npm test Building docs _(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_ To generate the readme, run the following command: $ npm install -g verbose/verb#dev verb-generate-readme && verb","title":"About"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#related-projects","text":"You might also be interested in these projects: common-words : Updated list (JSON) of the 100 most common words in the English language. Useful for\u2026 more | homepage shuffle-words : Shuffle the words in a string and optionally the letters in each word using the\u2026 more | homepage unique-words : Returns an array of unique words, or the number of occurrences of each word in\u2026 more | homepage wordcount : Count the words in a string. Support for english, CJK and Cyrillic. | homepage","title":"Related projects"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#contributors","text":"Commits Contributor 47 jonschlinkert 7 OlafConijn 3 doowb 2 aashutoshrathi 2 lordvlad 2 hildjj 1 danilosampaio 1 2fd 1 leonard-thieu 1 mohd-akram 1 toddself 1 wolfgang42 1 zachhale","title":"Contributors"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#author","text":"Jon Schlinkert GitHub Profile Twitter Profile LinkedIn Profile","title":"Author"},{"location":"_Disciplina/Code/my-react-app/node_modules/word-wrap/#license","text":"Copyright \u00a9 2023, Jon Schlinkert . Released under the MIT License . This file was generated by verb-generate-readme , v0.8.0, on July 22, 2023.","title":"License"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/","text":"yallist Yet Another Linked List There are many doubly-linked list implementations like it, but this one is mine. For when an array would be too big, and a Map can't be iterated in reverse order. basic usage var yallist = require('yallist') var myList = yallist.create([1, 2, 3]) myList.push('foo') myList.unshift('bar') // of course pop() and shift() are there, too console.log(myList.toArray()) // ['bar', 1, 2, 3, 'foo'] myList.forEach(function (k) { // walk the list head to tail }) myList.forEachReverse(function (k, index, list) { // walk the list tail to head }) var myDoubledList = myList.map(function (k) { return k + k }) // now myDoubledList contains ['barbar', 2, 4, 6, 'foofoo'] // mapReverse is also a thing var myDoubledListReverse = myList.mapReverse(function (k) { return k + k }) // ['foofoo', 6, 4, 2, 'barbar'] var reduced = myList.reduce(function (set, entry) { set += entry return set }, 'start') console.log(reduced) // 'startfoo123bar' api The whole API is considered \"public\". Functions with the same name as an Array method work more or less the same way. There's reverse versions of most things because that's the point. Yallist Default export, the class that holds and manages a list. Call it with either a forEach-able (like an array) or a set of arguments, to initialize the list. The Array-ish methods all act like you'd expect. No magic length, though, so if you change that it won't automatically prune or add empty spots. Yallist.create(..) Alias for Yallist function. Some people like factories. yallist.head The first node in the list yallist.tail The last node in the list yallist.length The number of nodes in the list. (Change this at your peril. It is not magic like Array length.) yallist.toArray() Convert the list to an array. yallist.forEach(fn, [thisp]) Call a function on each item in the list. yallist.forEachReverse(fn, [thisp]) Call a function on each item in the list, in reverse order. yallist.get(n) Get the data at position n in the list. If you use this a lot, probably better off just using an Array. yallist.getReverse(n) Get the data at position n , counting from the tail. yallist.map(fn, thisp) Create a new Yallist with the result of calling the function on each item. yallist.mapReverse(fn, thisp) Same as map , but in reverse. yallist.pop() Get the data from the list tail, and remove the tail from the list. yallist.push(item, ...) Insert one or more items to the tail of the list. yallist.reduce(fn, initialValue) Like Array.reduce. yallist.reduceReverse Like Array.reduce, but in reverse. yallist.reverse Reverse the list in place. yallist.shift() Get the data from the list head, and remove the head from the list. yallist.slice([from], [to]) Just like Array.slice, but returns a new Yallist. yallist.sliceReverse([from], [to]) Just like yallist.slice, but the result is returned in reverse. yallist.toArray() Create an array representation of the list. yallist.toArrayReverse() Create a reversed array representation of the list. yallist.unshift(item, ...) Insert one or more items to the head of the list. yallist.unshiftNode(node) Move a Node object to the front of the list. (That is, pull it out of wherever it lives, and make it the new head.) If the node belongs to a different list, then that list will remove it first. yallist.pushNode(node) Move a Node object to the end of the list. (That is, pull it out of wherever it lives, and make it the new tail.) If the node belongs to a list already, then that list will remove it first. yallist.removeNode(node) Remove a node from the list, preserving referential integrity of head and tail and other nodes. Will throw an error if you try to have a list remove a node that doesn't belong to it. Yallist.Node The class that holds the data and is actually the list. Call with var n = new Node(value, previousNode, nextNode) Note that if you do direct operations on Nodes themselves, it's very easy to get into weird states where the list is broken. Be careful :) node.next The next node in the list. node.prev The previous node in the list. node.value The data the node contains. node.list The list to which this node belongs. (Null if it does not belong to any list.)","title":"yallist"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallist","text":"Yet Another Linked List There are many doubly-linked list implementations like it, but this one is mine. For when an array would be too big, and a Map can't be iterated in reverse order.","title":"yallist"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#basic-usage","text":"var yallist = require('yallist') var myList = yallist.create([1, 2, 3]) myList.push('foo') myList.unshift('bar') // of course pop() and shift() are there, too console.log(myList.toArray()) // ['bar', 1, 2, 3, 'foo'] myList.forEach(function (k) { // walk the list head to tail }) myList.forEachReverse(function (k, index, list) { // walk the list tail to head }) var myDoubledList = myList.map(function (k) { return k + k }) // now myDoubledList contains ['barbar', 2, 4, 6, 'foofoo'] // mapReverse is also a thing var myDoubledListReverse = myList.mapReverse(function (k) { return k + k }) // ['foofoo', 6, 4, 2, 'barbar'] var reduced = myList.reduce(function (set, entry) { set += entry return set }, 'start') console.log(reduced) // 'startfoo123bar'","title":"basic usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#api","text":"The whole API is considered \"public\". Functions with the same name as an Array method work more or less the same way. There's reverse versions of most things because that's the point.","title":"api"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallist_1","text":"Default export, the class that holds and manages a list. Call it with either a forEach-able (like an array) or a set of arguments, to initialize the list. The Array-ish methods all act like you'd expect. No magic length, though, so if you change that it won't automatically prune or add empty spots.","title":"Yallist"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistcreate","text":"Alias for Yallist function. Some people like factories.","title":"Yallist.create(..)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallisthead","text":"The first node in the list","title":"yallist.head"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallisttail","text":"The last node in the list","title":"yallist.tail"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistlength","text":"The number of nodes in the list. (Change this at your peril. It is not magic like Array length.)","title":"yallist.length"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallisttoarray","text":"Convert the list to an array.","title":"yallist.toArray()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistforeachfn-thisp","text":"Call a function on each item in the list.","title":"yallist.forEach(fn, [thisp])"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistforeachreversefn-thisp","text":"Call a function on each item in the list, in reverse order.","title":"yallist.forEachReverse(fn, [thisp])"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistgetn","text":"Get the data at position n in the list. If you use this a lot, probably better off just using an Array.","title":"yallist.get(n)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistgetreversen","text":"Get the data at position n , counting from the tail.","title":"yallist.getReverse(n)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistmapfn-thisp","text":"Create a new Yallist with the result of calling the function on each item.","title":"yallist.map(fn, thisp)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistmapreversefn-thisp","text":"Same as map , but in reverse.","title":"yallist.mapReverse(fn, thisp)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistpop","text":"Get the data from the list tail, and remove the tail from the list.","title":"yallist.pop()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistpushitem","text":"Insert one or more items to the tail of the list.","title":"yallist.push(item, ...)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistreducefn-initialvalue","text":"Like Array.reduce.","title":"yallist.reduce(fn, initialValue)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistreducereverse","text":"Like Array.reduce, but in reverse.","title":"yallist.reduceReverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistreverse","text":"Reverse the list in place.","title":"yallist.reverse"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistshift","text":"Get the data from the list head, and remove the head from the list.","title":"yallist.shift()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistslicefrom-to","text":"Just like Array.slice, but returns a new Yallist.","title":"yallist.slice([from], [to])"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistslicereversefrom-to","text":"Just like yallist.slice, but the result is returned in reverse.","title":"yallist.sliceReverse([from], [to])"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallisttoarray_1","text":"Create an array representation of the list.","title":"yallist.toArray()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallisttoarrayreverse","text":"Create a reversed array representation of the list.","title":"yallist.toArrayReverse()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistunshiftitem","text":"Insert one or more items to the head of the list.","title":"yallist.unshift(item, ...)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistunshiftnodenode","text":"Move a Node object to the front of the list. (That is, pull it out of wherever it lives, and make it the new head.) If the node belongs to a different list, then that list will remove it first.","title":"yallist.unshiftNode(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistpushnodenode","text":"Move a Node object to the end of the list. (That is, pull it out of wherever it lives, and make it the new tail.) If the node belongs to a list already, then that list will remove it first.","title":"yallist.pushNode(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistremovenodenode","text":"Remove a node from the list, preserving referential integrity of head and tail and other nodes. Will throw an error if you try to have a list remove a node that doesn't belong to it.","title":"yallist.removeNode(node)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#yallistnode","text":"The class that holds the data and is actually the list. Call with var n = new Node(value, previousNode, nextNode) Note that if you do direct operations on Nodes themselves, it's very easy to get into weird states where the list is broken. Be careful :)","title":"Yallist.Node"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#nodenext","text":"The next node in the list.","title":"node.next"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#nodeprev","text":"The previous node in the list.","title":"node.prev"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#nodevalue","text":"The data the node contains.","title":"node.value"},{"location":"_Disciplina/Code/my-react-app/node_modules/yallist/#nodelist","text":"The list to which this node belongs. (Null if it does not belong to any list.)","title":"node.list"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/","text":"yocto-queue Tiny queue data structure You should use this package instead of an array if you do a lot of Array#push() and Array#shift() on large arrays, since Array#shift() has linear time complexity O(n) while Queue#dequeue() has constant time complexity O(1) . That makes a huge difference for large arrays. A queue is an ordered list of elements where an element is inserted at the end of the queue and is removed from the front of the queue. A queue works based on the first-in, first-out ( FIFO ) principle. Install $ npm install yocto-queue Usage const Queue = require('yocto-queue'); const queue = new Queue(); queue.enqueue('\ud83e\udd84'); queue.enqueue('\ud83c\udf08'); console.log(queue.size); //=> 2 console.log(...queue); //=> '\ud83e\udd84 \ud83c\udf08' console.log(queue.dequeue()); //=> '\ud83e\udd84' console.log(queue.dequeue()); //=> '\ud83c\udf08' API queue = new Queue() The instance is an Iterable , which means you can iterate over the queue front to back with a \u201cfor\u2026of\u201d loop, or use spreading to convert the queue to an array. Don't do this unless you really need to though, since it's slow. .enqueue(value) Add a value to the queue. .dequeue() Remove the next value in the queue. Returns the removed value or undefined if the queue is empty. .clear() Clear the queue. .size The size of the queue. Related quick-lru - Simple \u201cLeast Recently Used\u201d (LRU) cache","title":"yocto-queue"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#yocto-queue","text":"Tiny queue data structure You should use this package instead of an array if you do a lot of Array#push() and Array#shift() on large arrays, since Array#shift() has linear time complexity O(n) while Queue#dequeue() has constant time complexity O(1) . That makes a huge difference for large arrays. A queue is an ordered list of elements where an element is inserted at the end of the queue and is removed from the front of the queue. A queue works based on the first-in, first-out ( FIFO ) principle.","title":"yocto-queue"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#install","text":"$ npm install yocto-queue","title":"Install"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#usage","text":"const Queue = require('yocto-queue'); const queue = new Queue(); queue.enqueue('\ud83e\udd84'); queue.enqueue('\ud83c\udf08'); console.log(queue.size); //=> 2 console.log(...queue); //=> '\ud83e\udd84 \ud83c\udf08' console.log(queue.dequeue()); //=> '\ud83e\udd84' console.log(queue.dequeue()); //=> '\ud83c\udf08'","title":"Usage"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#api","text":"","title":"API"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#queue-new-queue","text":"The instance is an Iterable , which means you can iterate over the queue front to back with a \u201cfor\u2026of\u201d loop, or use spreading to convert the queue to an array. Don't do this unless you really need to though, since it's slow.","title":"queue = new Queue()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#enqueuevalue","text":"Add a value to the queue.","title":".enqueue(value)"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#dequeue","text":"Remove the next value in the queue. Returns the removed value or undefined if the queue is empty.","title":".dequeue()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#clear","text":"Clear the queue.","title":".clear()"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#size","text":"The size of the queue.","title":".size"},{"location":"_Disciplina/Code/my-react-app/node_modules/yocto-queue/readme/#related","text":"quick-lru - Simple \u201cLeast Recently Used\u201d (LRU) cache","title":"Related"},{"location":"_Disciplina/Roteiros/goms/","text":"Goms A Modelagem GOMS (Goals, Operators, Methods, and Selection rules) \u00e9 uma t\u00e9cnica utilizada para descrever o comportamento do usu\u00e1rio ao interagir com sistemas de interface, dividindo as a\u00e7\u00f5es em metas (goals), operadores (operators), m\u00e9todos (methods) e regras de sele\u00e7\u00e3o (selection rules). GOMS \u00e9 frequentemente utilizada para prever o tempo e a efici\u00eancia com que um usu\u00e1rio realiza tarefas espec\u00edficas, ajudando a avaliar o desempenho da interface antes de seu lan\u00e7amento. Estrutura do GOMS: Goals (Metas): O que o usu\u00e1rio deseja alcan\u00e7ar (exemplo: enviar um e-mail). Operators (Operadores): As a\u00e7\u00f5es b\u00e1sicas necess\u00e1rias para atingir a meta (exemplo: clicar, digitar, arrastar). Methods (M\u00e9todos): Os procedimentos ou passos que o usu\u00e1rio segue para atingir a meta. Selection Rules (Regras de Sele\u00e7\u00e3o): Regras que ajudam o usu\u00e1rio a decidir qual m\u00e9todo usar quando mais de um est\u00e1 dispon\u00edvel. Exemplo de Modelagem GOMS: Enviar um E-mail Simples em um Aplicativo de Webmail Cen\u00e1rio: Um usu\u00e1rio deseja enviar um e-mail para um colega usando um cliente de webmail, como o Gmail. Meta Principal: Enviar um e-mail para um colega. Passos na Modelagem GOMS: 1. Goals (Metas): Meta principal: Enviar um e-mail. Submetas: Abrir o cliente de e-mail. Iniciar um novo e-mail. Inserir o destinat\u00e1rio do e-mail. Escrever o assunto do e-mail. Escrever o corpo do e-mail. Enviar o e-mail. 2. Operators (Operadores): Esses s\u00e3o os operadores b\u00e1sicos que o usu\u00e1rio precisa realizar em cada etapa. Eles podem incluir: - Mover o cursor. - Clicar com o mouse. - Digitar no teclado. - Selecionar (ex.: contato, bot\u00e3o). - Verificar visualmente a interface (ex.: checar se o destinat\u00e1rio est\u00e1 correto). 3. Methods (M\u00e9todos): Os m\u00e9todos descrevem como cada meta e submeta \u00e9 realizada, usando operadores. Cada m\u00e9todo pode ter uma sequ\u00eancia de a\u00e7\u00f5es. M\u00e9todo 1: Abrir o cliente de e-mail 1. Digitar a URL do cliente de e-mail na barra de endere\u00e7o do navegador (Operador: digitar). 2. Pressionar a tecla Enter (Operador: pressionar tecla). 3. Esperar a p\u00e1gina carregar (Operador: aguardar). M\u00e9todo 2: Iniciar um novo e-mail 1. Mover o cursor at\u00e9 o bot\u00e3o \"Escrever\" (Operador: mover cursor). 2. Clicar no bot\u00e3o \"Escrever\" (Operador: clicar com o mouse). M\u00e9todo 3: Inserir o destinat\u00e1rio do e-mail 1. Mover o cursor at\u00e9 o campo \"Para:\" (Operador: mover cursor). 2. Clicar no campo \"Para:\" (Operador: clicar com o mouse). 3. Digitar o endere\u00e7o de e-mail do destinat\u00e1rio (Operador: digitar). M\u00e9todo 4: Inserir o assunto do e-mail 1. Mover o cursor at\u00e9 o campo \"Assunto\" (Operador: mover cursor). 2. Clicar no campo \"Assunto\" (Operador: clicar com o mouse). 3. Digitar o assunto (Operador: digitar). M\u00e9todo 5: Escrever o corpo do e-mail 1. Mover o cursor at\u00e9 o campo de texto do corpo do e-mail (Operador: mover cursor). 2. Clicar no campo de texto (Operador: clicar com o mouse). 3. Digitar o conte\u00fado do e-mail (Operador: digitar). M\u00e9todo 6: Enviar o e-mail 1. Mover o cursor at\u00e9 o bot\u00e3o \"Enviar\" (Operador: mover cursor). 2. Clicar no bot\u00e3o \"Enviar\" (Operador: clicar com o mouse). 4. Selection Rules (Regras de Sele\u00e7\u00e3o): Essas regras determinam qual m\u00e9todo o usu\u00e1rio vai escolher quando houver mais de uma maneira de realizar a tarefa. Regra 1: Se o usu\u00e1rio j\u00e1 estiver logado no cliente de e-mail, ele ir\u00e1 direto para o M\u00e9todo 2 (Iniciar um novo e-mail), pulando o M\u00e9todo 1 (Abrir o cliente de e-mail). Regra 2: Se o usu\u00e1rio j\u00e1 tiver o endere\u00e7o de e-mail do destinat\u00e1rio salvo nos contatos, ele pode digitar parte do nome e selecionar o contato na lista de sugest\u00f5es autom\u00e1ticas. Regra 3: Se o destinat\u00e1rio for o mais recente com quem o usu\u00e1rio trocou e-mails, o sistema pode sugerir automaticamente o destinat\u00e1rio quando o campo \"Para:\" for clicado. Exemplo Completo de GOMS: Vamos focar em um exemplo de execu\u00e7\u00e3o de uma submeta: Inserir o Destinat\u00e1rio do E-mail (M\u00e9todo 3). Submeta: Inserir o destinat\u00e1rio do e-mail. Meta: Preencher o campo \"Para:\" com o endere\u00e7o do destinat\u00e1rio. Operadores: Mover o cursor at\u00e9 o campo \"Para:\" Clicar no campo \"Para:\" Digitar o endere\u00e7o de e-mail do destinat\u00e1rio M\u00e9todo: O usu\u00e1rio pode digitar o endere\u00e7o de e-mail completo ou selecionar um contato sugerido pela fun\u00e7\u00e3o de autocompletar. Regras de Sele\u00e7\u00e3o: Se o contato do destinat\u00e1rio aparecer nas sugest\u00f5es de autocompletar, o usu\u00e1rio pode selecionar o nome com as setas do teclado e pressionar \"Enter\". Caso contr\u00e1rio, o usu\u00e1rio deve digitar o endere\u00e7o manualmente. Benef\u00edcios da Modelagem GOMS: Previs\u00e3o de Desempenho: GOMS pode ser usado para prever quanto tempo levar\u00e1 para um usu\u00e1rio concluir uma tarefa em uma interface espec\u00edfica. Identifica\u00e7\u00e3o de Problemas: Ao decompor as tarefas e a\u00e7\u00f5es, fica mais f\u00e1cil identificar pontos de atrito ou complexidade desnecess\u00e1ria que podem ser otimizados. Melhorias de Interface: Se uma tarefa envolve muitos operadores (muitos cliques, digita\u00e7\u00e3o, etc.), pode ser um sinal de que a interface pode ser simplificada. Conclus\u00e3o: A Modelagem GOMS \u00e9 uma poderosa ferramenta para analisar o comportamento do usu\u00e1rio ao interagir com uma interface. Ao modelar as metas, operadores, m\u00e9todos e regras de sele\u00e7\u00e3o, os designers podem otimizar a efici\u00eancia das intera\u00e7\u00f5es, prever o tempo necess\u00e1rio para realizar tarefas e identificar oportunidades de melhoria no design da interface. No exemplo acima, a GOMS ajuda a entender como um usu\u00e1rio interage com um cliente de e-mail e a melhorar a experi\u00eancia de enviar um e-mail, simplificando as a\u00e7\u00f5es e decis\u00f5es envolvidas no processo.","title":"Goms"},{"location":"_Disciplina/Roteiros/goms/#goms","text":"A Modelagem GOMS (Goals, Operators, Methods, and Selection rules) \u00e9 uma t\u00e9cnica utilizada para descrever o comportamento do usu\u00e1rio ao interagir com sistemas de interface, dividindo as a\u00e7\u00f5es em metas (goals), operadores (operators), m\u00e9todos (methods) e regras de sele\u00e7\u00e3o (selection rules). GOMS \u00e9 frequentemente utilizada para prever o tempo e a efici\u00eancia com que um usu\u00e1rio realiza tarefas espec\u00edficas, ajudando a avaliar o desempenho da interface antes de seu lan\u00e7amento.","title":"Goms"},{"location":"_Disciplina/Roteiros/goms/#estrutura-do-goms","text":"Goals (Metas): O que o usu\u00e1rio deseja alcan\u00e7ar (exemplo: enviar um e-mail). Operators (Operadores): As a\u00e7\u00f5es b\u00e1sicas necess\u00e1rias para atingir a meta (exemplo: clicar, digitar, arrastar). Methods (M\u00e9todos): Os procedimentos ou passos que o usu\u00e1rio segue para atingir a meta. Selection Rules (Regras de Sele\u00e7\u00e3o): Regras que ajudam o usu\u00e1rio a decidir qual m\u00e9todo usar quando mais de um est\u00e1 dispon\u00edvel.","title":"Estrutura do GOMS:"},{"location":"_Disciplina/Roteiros/goms/#exemplo-de-modelagem-goms-enviar-um-e-mail-simples-em-um-aplicativo-de-webmail","text":"","title":"Exemplo de Modelagem GOMS: Enviar um E-mail Simples em um Aplicativo de Webmail"},{"location":"_Disciplina/Roteiros/goms/#cenario","text":"Um usu\u00e1rio deseja enviar um e-mail para um colega usando um cliente de webmail, como o Gmail.","title":"Cen\u00e1rio:"},{"location":"_Disciplina/Roteiros/goms/#meta-principal","text":"Enviar um e-mail para um colega.","title":"Meta Principal:"},{"location":"_Disciplina/Roteiros/goms/#passos-na-modelagem-goms","text":"","title":"Passos na Modelagem GOMS:"},{"location":"_Disciplina/Roteiros/goms/#1-goals-metas","text":"Meta principal: Enviar um e-mail. Submetas: Abrir o cliente de e-mail. Iniciar um novo e-mail. Inserir o destinat\u00e1rio do e-mail. Escrever o assunto do e-mail. Escrever o corpo do e-mail. Enviar o e-mail.","title":"1. Goals (Metas):"},{"location":"_Disciplina/Roteiros/goms/#2-operators-operadores","text":"Esses s\u00e3o os operadores b\u00e1sicos que o usu\u00e1rio precisa realizar em cada etapa. Eles podem incluir: - Mover o cursor. - Clicar com o mouse. - Digitar no teclado. - Selecionar (ex.: contato, bot\u00e3o). - Verificar visualmente a interface (ex.: checar se o destinat\u00e1rio est\u00e1 correto).","title":"2. Operators (Operadores):"},{"location":"_Disciplina/Roteiros/goms/#3-methods-metodos","text":"Os m\u00e9todos descrevem como cada meta e submeta \u00e9 realizada, usando operadores. Cada m\u00e9todo pode ter uma sequ\u00eancia de a\u00e7\u00f5es. M\u00e9todo 1: Abrir o cliente de e-mail 1. Digitar a URL do cliente de e-mail na barra de endere\u00e7o do navegador (Operador: digitar). 2. Pressionar a tecla Enter (Operador: pressionar tecla). 3. Esperar a p\u00e1gina carregar (Operador: aguardar). M\u00e9todo 2: Iniciar um novo e-mail 1. Mover o cursor at\u00e9 o bot\u00e3o \"Escrever\" (Operador: mover cursor). 2. Clicar no bot\u00e3o \"Escrever\" (Operador: clicar com o mouse). M\u00e9todo 3: Inserir o destinat\u00e1rio do e-mail 1. Mover o cursor at\u00e9 o campo \"Para:\" (Operador: mover cursor). 2. Clicar no campo \"Para:\" (Operador: clicar com o mouse). 3. Digitar o endere\u00e7o de e-mail do destinat\u00e1rio (Operador: digitar). M\u00e9todo 4: Inserir o assunto do e-mail 1. Mover o cursor at\u00e9 o campo \"Assunto\" (Operador: mover cursor). 2. Clicar no campo \"Assunto\" (Operador: clicar com o mouse). 3. Digitar o assunto (Operador: digitar). M\u00e9todo 5: Escrever o corpo do e-mail 1. Mover o cursor at\u00e9 o campo de texto do corpo do e-mail (Operador: mover cursor). 2. Clicar no campo de texto (Operador: clicar com o mouse). 3. Digitar o conte\u00fado do e-mail (Operador: digitar). M\u00e9todo 6: Enviar o e-mail 1. Mover o cursor at\u00e9 o bot\u00e3o \"Enviar\" (Operador: mover cursor). 2. Clicar no bot\u00e3o \"Enviar\" (Operador: clicar com o mouse).","title":"3. Methods (M\u00e9todos):"},{"location":"_Disciplina/Roteiros/goms/#4-selection-rules-regras-de-selecao","text":"Essas regras determinam qual m\u00e9todo o usu\u00e1rio vai escolher quando houver mais de uma maneira de realizar a tarefa. Regra 1: Se o usu\u00e1rio j\u00e1 estiver logado no cliente de e-mail, ele ir\u00e1 direto para o M\u00e9todo 2 (Iniciar um novo e-mail), pulando o M\u00e9todo 1 (Abrir o cliente de e-mail). Regra 2: Se o usu\u00e1rio j\u00e1 tiver o endere\u00e7o de e-mail do destinat\u00e1rio salvo nos contatos, ele pode digitar parte do nome e selecionar o contato na lista de sugest\u00f5es autom\u00e1ticas. Regra 3: Se o destinat\u00e1rio for o mais recente com quem o usu\u00e1rio trocou e-mails, o sistema pode sugerir automaticamente o destinat\u00e1rio quando o campo \"Para:\" for clicado.","title":"4. Selection Rules (Regras de Sele\u00e7\u00e3o):"},{"location":"_Disciplina/Roteiros/goms/#exemplo-completo-de-goms","text":"Vamos focar em um exemplo de execu\u00e7\u00e3o de uma submeta: Inserir o Destinat\u00e1rio do E-mail (M\u00e9todo 3).","title":"Exemplo Completo de GOMS:"},{"location":"_Disciplina/Roteiros/goms/#submeta-inserir-o-destinatario-do-e-mail","text":"Meta: Preencher o campo \"Para:\" com o endere\u00e7o do destinat\u00e1rio. Operadores: Mover o cursor at\u00e9 o campo \"Para:\" Clicar no campo \"Para:\" Digitar o endere\u00e7o de e-mail do destinat\u00e1rio M\u00e9todo: O usu\u00e1rio pode digitar o endere\u00e7o de e-mail completo ou selecionar um contato sugerido pela fun\u00e7\u00e3o de autocompletar. Regras de Sele\u00e7\u00e3o: Se o contato do destinat\u00e1rio aparecer nas sugest\u00f5es de autocompletar, o usu\u00e1rio pode selecionar o nome com as setas do teclado e pressionar \"Enter\". Caso contr\u00e1rio, o usu\u00e1rio deve digitar o endere\u00e7o manualmente.","title":"Submeta: Inserir o destinat\u00e1rio do e-mail."},{"location":"_Disciplina/Roteiros/goms/#beneficios-da-modelagem-goms","text":"Previs\u00e3o de Desempenho: GOMS pode ser usado para prever quanto tempo levar\u00e1 para um usu\u00e1rio concluir uma tarefa em uma interface espec\u00edfica. Identifica\u00e7\u00e3o de Problemas: Ao decompor as tarefas e a\u00e7\u00f5es, fica mais f\u00e1cil identificar pontos de atrito ou complexidade desnecess\u00e1ria que podem ser otimizados. Melhorias de Interface: Se uma tarefa envolve muitos operadores (muitos cliques, digita\u00e7\u00e3o, etc.), pode ser um sinal de que a interface pode ser simplificada.","title":"Benef\u00edcios da Modelagem GOMS:"},{"location":"_Disciplina/Roteiros/goms/#conclusao","text":"A Modelagem GOMS \u00e9 uma poderosa ferramenta para analisar o comportamento do usu\u00e1rio ao interagir com uma interface. Ao modelar as metas, operadores, m\u00e9todos e regras de sele\u00e7\u00e3o, os designers podem otimizar a efici\u00eancia das intera\u00e7\u00f5es, prever o tempo necess\u00e1rio para realizar tarefas e identificar oportunidades de melhoria no design da interface. No exemplo acima, a GOMS ajuda a entender como um usu\u00e1rio interage com um cliente de e-mail e a melhorar a experi\u00eancia de enviar um e-mail, simplificando as a\u00e7\u00f5es e decis\u00f5es envolvidas no processo.","title":"Conclus\u00e3o:"},{"location":"_Disciplina/Roteiros/AHT/aht/","text":"An\u00e1lise Hier\u00e1rquica de Tarefas (AHT) Um Diagrama de An\u00e1lise Hier\u00e1rquica de Tarefas (AHT) \u00e9 uma ferramenta usada para decompor uma tarefa complexa em subtarefas mais simples e organizadas de forma hier\u00e1rquica. Ele ajuda a entender a estrutura de uma tarefa, identificando seus componentes e a rela\u00e7\u00e3o entre eles. Esse diagrama \u00e9 muito utilizado no design de interfaces e sistemas interativos, onde \u00e9 importante mapear as a\u00e7\u00f5es que o usu\u00e1rio executar\u00e1 para atingir um objetivo. Aqui est\u00e3o os principais elementos de um diagrama de AHT: Tarefa Principal : \u00c9 a tarefa geral que se deseja decompor. Geralmente, est\u00e1 no topo do diagrama. Subtarefas : S\u00e3o divis\u00f5es da tarefa principal, que podem ser divididas em a\u00e7\u00f5es menores. Cada subtarefa representa uma a\u00e7\u00e3o necess\u00e1ria para completar a tarefa. Rela\u00e7\u00e3o Hier\u00e1rquica : As subtarefas s\u00e3o conectadas \u00e0 tarefa principal por linhas, mostrando a rela\u00e7\u00e3o de depend\u00eancia ou sequ\u00eancia de execu\u00e7\u00e3o. Opera\u00e7\u00f5es : S\u00e3o as a\u00e7\u00f5es espec\u00edficas ou decis\u00f5es que o usu\u00e1rio deve tomar durante a execu\u00e7\u00e3o das subtarefas. Exemplo Simplificado de um Diagrama AHT Sistema de Biblioteca Reservar um Livro (Tarefa Principal) Fazer login no sistema (Subtarefa) Inserir nome de usu\u00e1rio Inserir senha Confirmar login Buscar livro no cat\u00e1logo (Subtarefa) Digitar nome do livro Selecionar categoria Ver resultados Selecionar livro para reservar (Subtarefa) Ver detalhes do livro Verificar disponibilidade Confirmar reserva (Subtarefa) Clicar em \"Reservar\" Receber confirma\u00e7\u00e3o Esse diagrama seria \u00fatil para identificar as etapas que o usu\u00e1rio segue e tamb\u00e9m os poss\u00edveis pontos onde poderia haver dificuldades ou oportunidades de otimiza\u00e7\u00e3o. No PlantUML , para desenhar um diagrama hier\u00e1rquico, voc\u00ea pode usar a sintaxe de WBS (Work Breakdown Structure) ou organizar os elementos hierarquicamente com setas e indenta\u00e7\u00e3o. Vou mostrar dois exemplos para representar um diagrama hier\u00e1rquico: Exemplo 1: Usando WBS (Work Breakdown Structure) O WBS \u00e9 uma estrutura de decomposi\u00e7\u00e3o hier\u00e1rquica que pode ser usada para representar um diagrama de An\u00e1lise Hier\u00e1rquica de Tarefas (AHT). Aqui est\u00e1 como criar esse tipo de diagrama em PlantUML: @startwbs * Reservar um Livro ** Fazer login no sistema *** Inserir nome de usu\u00e1rio *** Inserir senha *** Confirmar login ** Buscar livro no cat\u00e1logo *** Digitar nome do livro *** Selecionar categoria *** Ver resultados ** Selecionar livro para reservar *** Ver detalhes do livro *** Verificar disponibilidade ** Confirmar reserva *** Clicar em Reservar *** Receber confirma\u00e7\u00e3o @endwbs","title":"An\u00e1lise Hier\u00e1rquica de Tarefas (AHT)"},{"location":"_Disciplina/Roteiros/AHT/aht/#analise-hierarquica-de-tarefas-aht","text":"Um Diagrama de An\u00e1lise Hier\u00e1rquica de Tarefas (AHT) \u00e9 uma ferramenta usada para decompor uma tarefa complexa em subtarefas mais simples e organizadas de forma hier\u00e1rquica. Ele ajuda a entender a estrutura de uma tarefa, identificando seus componentes e a rela\u00e7\u00e3o entre eles. Esse diagrama \u00e9 muito utilizado no design de interfaces e sistemas interativos, onde \u00e9 importante mapear as a\u00e7\u00f5es que o usu\u00e1rio executar\u00e1 para atingir um objetivo. Aqui est\u00e3o os principais elementos de um diagrama de AHT: Tarefa Principal : \u00c9 a tarefa geral que se deseja decompor. Geralmente, est\u00e1 no topo do diagrama. Subtarefas : S\u00e3o divis\u00f5es da tarefa principal, que podem ser divididas em a\u00e7\u00f5es menores. Cada subtarefa representa uma a\u00e7\u00e3o necess\u00e1ria para completar a tarefa. Rela\u00e7\u00e3o Hier\u00e1rquica : As subtarefas s\u00e3o conectadas \u00e0 tarefa principal por linhas, mostrando a rela\u00e7\u00e3o de depend\u00eancia ou sequ\u00eancia de execu\u00e7\u00e3o. Opera\u00e7\u00f5es : S\u00e3o as a\u00e7\u00f5es espec\u00edficas ou decis\u00f5es que o usu\u00e1rio deve tomar durante a execu\u00e7\u00e3o das subtarefas.","title":"An\u00e1lise Hier\u00e1rquica de Tarefas (AHT)"},{"location":"_Disciplina/Roteiros/AHT/aht/#exemplo-simplificado-de-um-diagrama-aht","text":"","title":"Exemplo Simplificado de um Diagrama AHT"},{"location":"_Disciplina/Roteiros/AHT/aht/#sistema-de-biblioteca","text":"Reservar um Livro (Tarefa Principal) Fazer login no sistema (Subtarefa) Inserir nome de usu\u00e1rio Inserir senha Confirmar login Buscar livro no cat\u00e1logo (Subtarefa) Digitar nome do livro Selecionar categoria Ver resultados Selecionar livro para reservar (Subtarefa) Ver detalhes do livro Verificar disponibilidade Confirmar reserva (Subtarefa) Clicar em \"Reservar\" Receber confirma\u00e7\u00e3o Esse diagrama seria \u00fatil para identificar as etapas que o usu\u00e1rio segue e tamb\u00e9m os poss\u00edveis pontos onde poderia haver dificuldades ou oportunidades de otimiza\u00e7\u00e3o. No PlantUML , para desenhar um diagrama hier\u00e1rquico, voc\u00ea pode usar a sintaxe de WBS (Work Breakdown Structure) ou organizar os elementos hierarquicamente com setas e indenta\u00e7\u00e3o. Vou mostrar dois exemplos para representar um diagrama hier\u00e1rquico:","title":"Sistema de Biblioteca"},{"location":"_Disciplina/Roteiros/AHT/aht/#exemplo-1-usando-wbs-work-breakdown-structure","text":"O WBS \u00e9 uma estrutura de decomposi\u00e7\u00e3o hier\u00e1rquica que pode ser usada para representar um diagrama de An\u00e1lise Hier\u00e1rquica de Tarefas (AHT). Aqui est\u00e1 como criar esse tipo de diagrama em PlantUML: @startwbs * Reservar um Livro ** Fazer login no sistema *** Inserir nome de usu\u00e1rio *** Inserir senha *** Confirmar login ** Buscar livro no cat\u00e1logo *** Digitar nome do livro *** Selecionar categoria *** Ver resultados ** Selecionar livro para reservar *** Ver detalhes do livro *** Verificar disponibilidade ** Confirmar reserva *** Clicar em Reservar *** Receber confirma\u00e7\u00e3o @endwbs","title":"Exemplo 1: Usando WBS (Work Breakdown Structure)"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/","text":"Prot\u00f3tipo Para criar prot\u00f3tipos em PlantUML a partir de cada tarefa da An\u00e1lise Hier\u00e1rquica de Tarefas (AHT) para o processo de reservar um livro , podemos criar uma interface visual separada para cada subtarefa. Isso vai simular como seria o layout ou a estrutura de uma interface de usu\u00e1rio para cada etapa do processo. Abaixo est\u00e3o os exemplos de prot\u00f3tipos para cada tarefa. 1. Fazer login no sistema @startuml skinparam rectangle { BackgroundColor LightSkyBlue BorderColor Navy RoundCorner 20 } rectangle \"Tela de Login\" { rectangle \"Inserir nome de usu\u00e1rio\" rectangle \"Inserir senha\" rectangle \"Confirmar login\" rectangle \"[Bot\u00e3o] Entrar\" } @enduml 2. Buscar livro no cat\u00e1logo @startuml skinparam rectangle { BackgroundColor LightYellow BorderColor GoldenRod RoundCorner 20 } rectangle \"Buscar Livro no Cat\u00e1logo\" { rectangle \"Campo de busca: Digitar nome do livro\" rectangle \"Selecionar categoria\" rectangle \"[Bot\u00e3o] Buscar\" rectangle \"Exibir resultados\" } @enduml 3. Selecionar livro para reservar @startuml skinparam rectangle { BackgroundColor LightGreen BorderColor DarkGreen RoundCorner 20 } rectangle \"Selecionar Livro para Reservar\" { rectangle \"Ver detalhes do livro\" rectangle \"Verificar disponibilidade\" rectangle \"[Bot\u00e3o] Reservar\" } @enduml 4. Confirmar reserva @startuml skinparam rectangle { BackgroundColor LightCoral BorderColor DarkRed RoundCorner 20 } rectangle \"Confirmar Reserva\" { rectangle \"Clicar em Reservar\" rectangle \"Receber confirma\u00e7\u00e3o\" rectangle \"[Bot\u00e3o] OK\" } @enduml Explica\u00e7\u00e3o: Visual de Cada Tarefa : Cada tarefa foi convertida em um prot\u00f3tipo de interface separada, simulando como seria a tela do sistema para cada a\u00e7\u00e3o espec\u00edfica (login, busca, sele\u00e7\u00e3o e confirma\u00e7\u00e3o). Estilo : Usei cores diferentes e o skinparam para melhorar a visibilidade e estilo dos prot\u00f3tipos. Componentes de UI : As caixas representam campos de texto, bot\u00f5es e \u00e1reas de intera\u00e7\u00e3o para cada tarefa. Como Usar: Copie cada bloco de c\u00f3digo em seu editor PlantUML para gerar os diagramas individualmente. Esses prot\u00f3tipos podem ser usados para simular como seria a interface do usu\u00e1rio em cada fase do processo de reserva de livros. Esses exemplos podem ser expandidos ou ajustados conforme as necessidades do seu projeto!","title":"Prot\u00f3tipo"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#prototipo","text":"Para criar prot\u00f3tipos em PlantUML a partir de cada tarefa da An\u00e1lise Hier\u00e1rquica de Tarefas (AHT) para o processo de reservar um livro , podemos criar uma interface visual separada para cada subtarefa. Isso vai simular como seria o layout ou a estrutura de uma interface de usu\u00e1rio para cada etapa do processo. Abaixo est\u00e3o os exemplos de prot\u00f3tipos para cada tarefa.","title":"Prot\u00f3tipo"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#1-fazer-login-no-sistema","text":"@startuml skinparam rectangle { BackgroundColor LightSkyBlue BorderColor Navy RoundCorner 20 } rectangle \"Tela de Login\" { rectangle \"Inserir nome de usu\u00e1rio\" rectangle \"Inserir senha\" rectangle \"Confirmar login\" rectangle \"[Bot\u00e3o] Entrar\" } @enduml","title":"1. Fazer login no sistema"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#2-buscar-livro-no-catalogo","text":"@startuml skinparam rectangle { BackgroundColor LightYellow BorderColor GoldenRod RoundCorner 20 } rectangle \"Buscar Livro no Cat\u00e1logo\" { rectangle \"Campo de busca: Digitar nome do livro\" rectangle \"Selecionar categoria\" rectangle \"[Bot\u00e3o] Buscar\" rectangle \"Exibir resultados\" } @enduml","title":"2. Buscar livro no cat\u00e1logo"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#3-selecionar-livro-para-reservar","text":"@startuml skinparam rectangle { BackgroundColor LightGreen BorderColor DarkGreen RoundCorner 20 } rectangle \"Selecionar Livro para Reservar\" { rectangle \"Ver detalhes do livro\" rectangle \"Verificar disponibilidade\" rectangle \"[Bot\u00e3o] Reservar\" } @enduml","title":"3. Selecionar livro para reservar"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#4-confirmar-reserva","text":"@startuml skinparam rectangle { BackgroundColor LightCoral BorderColor DarkRed RoundCorner 20 } rectangle \"Confirmar Reserva\" { rectangle \"Clicar em Reservar\" rectangle \"Receber confirma\u00e7\u00e3o\" rectangle \"[Bot\u00e3o] OK\" } @enduml","title":"4. Confirmar reserva"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#explicacao","text":"Visual de Cada Tarefa : Cada tarefa foi convertida em um prot\u00f3tipo de interface separada, simulando como seria a tela do sistema para cada a\u00e7\u00e3o espec\u00edfica (login, busca, sele\u00e7\u00e3o e confirma\u00e7\u00e3o). Estilo : Usei cores diferentes e o skinparam para melhorar a visibilidade e estilo dos prot\u00f3tipos. Componentes de UI : As caixas representam campos de texto, bot\u00f5es e \u00e1reas de intera\u00e7\u00e3o para cada tarefa.","title":"Explica\u00e7\u00e3o:"},{"location":"_Disciplina/Roteiros/Prot%C3%B3tipo/prot%C3%B3tipo/#como-usar","text":"Copie cada bloco de c\u00f3digo em seu editor PlantUML para gerar os diagramas individualmente. Esses prot\u00f3tipos podem ser usados para simular como seria a interface do usu\u00e1rio em cada fase do processo de reserva de livros. Esses exemplos podem ser expandidos ou ajustados conforme as necessidades do seu projeto!","title":"Como Usar:"},{"location":"_Disciplina/Roteiros/React/01_Intro/","text":"Introdu\u00e7\u00e3o ao React com HTML e CDN Objetivo: Apresentar os conceitos b\u00e1sicos do React e como integr\u00e1-lo em uma p\u00e1gina HTML utilizando um link para a CDN, sem a necessidade de um ambiente de desenvolvimento local como o Node.js. Estrutura do Roteiro: 1. Introdu\u00e7\u00e3o ao React Defini\u00e7\u00e3o : React \u00e9 uma biblioteca JavaScript criada pelo Facebook para criar interfaces de usu\u00e1rio de forma declarativa e eficiente. Vantagens : Componentes reutiliz\u00e1veis. Atualiza\u00e7\u00f5es r\u00e1pidas do DOM (Virtual DOM). Facilita a cria\u00e7\u00e3o de Single Page Applications (SPAs). 2. Preparando o Ambiente N\u00e3o \u00e9 necess\u00e1rio instalar nada localmente para este exemplo inicial, vamos usar uma p\u00e1gina HTML e um link para a biblioteca via CDN. 3. Estrutura B\u00e1sica do Projeto HTML B\u00e1sico : Comece com a cria\u00e7\u00e3o de uma p\u00e1gina HTML simples contendo um elemento <div> que ser\u00e1 usado como \u201cponto de montagem\u201d para o React. <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>React Introdu\u00e7\u00e3o</title> </head> <body> <!-- Div onde o React renderizar\u00e1 o conte\u00fado --> <div id=\"root\"></div> <!-- Scripts do React via CDN --> <script src=\"https://unpkg.com/react@17/umd/react.production.min.js\" crossorigin></script> <script src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\" crossorigin></script> <!-- Nosso script JavaScript --> <script src=\"app.js\"></script> </body> </html> 4. Criando um Elemento React Crie o arquivo app.js com o seguinte c\u00f3digo: ReactDOM.render( React.createElement( 'h1', null, 'Hello, World!' ), document.getElementById('root'))","title":"01 Intro"},{"location":"_Disciplina/Roteiros/React/01_Intro/#introducao-ao-react-com-html-e-cdn","text":"","title":"Introdu\u00e7\u00e3o ao React com HTML e CDN"},{"location":"_Disciplina/Roteiros/React/01_Intro/#objetivo","text":"Apresentar os conceitos b\u00e1sicos do React e como integr\u00e1-lo em uma p\u00e1gina HTML utilizando um link para a CDN, sem a necessidade de um ambiente de desenvolvimento local como o Node.js.","title":"Objetivo:"},{"location":"_Disciplina/Roteiros/React/01_Intro/#estrutura-do-roteiro","text":"","title":"Estrutura do Roteiro:"},{"location":"_Disciplina/Roteiros/React/01_Intro/#1-introducao-ao-react","text":"Defini\u00e7\u00e3o : React \u00e9 uma biblioteca JavaScript criada pelo Facebook para criar interfaces de usu\u00e1rio de forma declarativa e eficiente. Vantagens : Componentes reutiliz\u00e1veis. Atualiza\u00e7\u00f5es r\u00e1pidas do DOM (Virtual DOM). Facilita a cria\u00e7\u00e3o de Single Page Applications (SPAs).","title":"1. Introdu\u00e7\u00e3o ao React"},{"location":"_Disciplina/Roteiros/React/01_Intro/#2-preparando-o-ambiente","text":"N\u00e3o \u00e9 necess\u00e1rio instalar nada localmente para este exemplo inicial, vamos usar uma p\u00e1gina HTML e um link para a biblioteca via CDN.","title":"2. Preparando o Ambiente"},{"location":"_Disciplina/Roteiros/React/01_Intro/#3-estrutura-basica-do-projeto","text":"HTML B\u00e1sico : Comece com a cria\u00e7\u00e3o de uma p\u00e1gina HTML simples contendo um elemento <div> que ser\u00e1 usado como \u201cponto de montagem\u201d para o React. <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>React Introdu\u00e7\u00e3o</title> </head> <body> <!-- Div onde o React renderizar\u00e1 o conte\u00fado --> <div id=\"root\"></div> <!-- Scripts do React via CDN --> <script src=\"https://unpkg.com/react@17/umd/react.production.min.js\" crossorigin></script> <script src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\" crossorigin></script> <!-- Nosso script JavaScript --> <script src=\"app.js\"></script> </body> </html>","title":"3. Estrutura B\u00e1sica do Projeto"},{"location":"_Disciplina/Roteiros/React/01_Intro/#4-criando-um-elemento-react","text":"Crie o arquivo app.js com o seguinte c\u00f3digo: ReactDOM.render( React.createElement( 'h1', null, 'Hello, World!' ), document.getElementById('root'))","title":"4. Criando um Elemento React"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/","text":"Criando um App React com Vite Por que usar Vite? Vite \u00e9 uma ferramenta de constru\u00e7\u00e3o de front-end que oferece um desenvolvimento r\u00e1pido e uma experi\u00eancia de usu\u00e1rio aprimorada, especialmente para projetos React. Ela \u00e9 mais leve e r\u00e1pida que ferramentas como Webpack, proporcionando hot module replacement (HMR) quase instant\u00e2neo. Criando o Projeto 1. Instale o Node.js e npm (ou yarn): Certifique-se de ter o Node.js instalado em sua m\u00e1quina. Voc\u00ea pode baix\u00e1-lo em https://nodejs.org/ . Download the node.js LTS binary for Windows and extract it to your desired location Add the path of the nodejs folder to the PATH environment variable: ( Shortcut winkey+R and enter: rundll32 sysdm.cpl,EditEnvironmentVariables ) 2. Crie um novo projeto: Bash npm create vite@latest my-react-app --template react Substitua my-react-app pelo nome desejado para seu projeto. 3. Instale as depend\u00eancias: Bash cd my-react-app npm install 4. Inicie o servidor de desenvolvimento: Bash npm run dev Seu aplicativo estar\u00e1 dispon\u00edvel em http://localhost:3000/ . Construindo o App: Um Contador Simples 1. Abra o arquivo src/App.jsx : JavaScript import React, { useState } from'react'; functionApp() { const [count, setCount] = useState(0); return ( <div> <p>Voc\u00ea clicou {count} vezes</p> <buttononClick={() => setCount(count + 1)}> Clique para incrementar </button> </div> ); } export default App; Explica\u00e7\u00e3o: useState: Hook do React que permite gerenciar o estado local de um componente. count: Vari\u00e1vel de estado que armazena o n\u00famero de cliques. setCount: Fun\u00e7\u00e3o para atualizar o valor de count. onClick: Manipulador de eventos que incrementa o valor de count quando o bot\u00e3o \u00e9 clicado. Demonstra\u00e7\u00e3o de Outros Conceitos Outro pontos fundamentais do React: Componentes: Criar componentes funcionais e de classe para modularizar seu c\u00f3digo. Props: Passar dados entre componentes usando props. JSX: Utilizar JSX para criar a estrutura HTML de seus componentes. Ciclo de vida: Entender os m\u00e9todos do ciclo de vida de um componente (componentDidMount, componentDidUpdate, etc.). Condicionalmente renderizar elementos: Usar operadores l\u00f3gicos para mostrar ou ocultar elementos. Listas: Renderizar listas de elementos usando o m\u00e9todo map . Eventos: Manipular diversos tipos de eventos (e.g., onMouseOver , onSubmit ). Pr\u00f3ximos Passos Redux: Gerencie o estado global de sua aplica\u00e7\u00e3o. React Router: Crie rotas para navegar entre diferentes p\u00e1ginas. Hooks: Utilize hooks personalizados para criar l\u00f3gica reutiliz\u00e1vel. Styled Components: Estilize seus componentes de forma mais declarativa. Exemplo mais completo: Uma lista de tarefas JavaScript import React, { useState } from'react'; functionApp() { const [tasks, setTasks] = useState([]); const [newTask, setNewTask] = useState(''); const handleAddTask = () => { setTasks([...tasks, newTask]); setNewTask(''); }; return ( <div> <inputtype=\"text\"value={newTask}onChange={(e) => setNewTask(e.target.value)} /> <buttononClick={handleAddTask}>Adicionar</button> <ul> {tasks.map((task) => ( <li key={task}>{task}</li> ))} </ul> </div> ); } export default App; Este exemplo demonstra: M\u00faltiplos estados: tasks para armazenar a lista de tarefas e newTask para o valor do input. Manipula\u00e7\u00e3o de eventos: onChange para atualizar o valor do input e onClick para adicionar uma nova tarefa. Renderiza\u00e7\u00e3o de listas: Usando o m\u00e9todo map para renderizar cada tarefa como um item de lista.","title":"02 NodeViteReact"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#criando-um-app-react-com-vite","text":"","title":"Criando um App React com Vite"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#por-que-usar-vite","text":"Vite \u00e9 uma ferramenta de constru\u00e7\u00e3o de front-end que oferece um desenvolvimento r\u00e1pido e uma experi\u00eancia de usu\u00e1rio aprimorada, especialmente para projetos React. Ela \u00e9 mais leve e r\u00e1pida que ferramentas como Webpack, proporcionando hot module replacement (HMR) quase instant\u00e2neo.","title":"Por que usar Vite?"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#criando-o-projeto","text":"1. Instale o Node.js e npm (ou yarn): Certifique-se de ter o Node.js instalado em sua m\u00e1quina. Voc\u00ea pode baix\u00e1-lo em https://nodejs.org/ . Download the node.js LTS binary for Windows and extract it to your desired location Add the path of the nodejs folder to the PATH environment variable: ( Shortcut winkey+R and enter: rundll32 sysdm.cpl,EditEnvironmentVariables ) 2. Crie um novo projeto: Bash npm create vite@latest my-react-app --template react Substitua my-react-app pelo nome desejado para seu projeto. 3. Instale as depend\u00eancias: Bash cd my-react-app npm install 4. Inicie o servidor de desenvolvimento: Bash npm run dev Seu aplicativo estar\u00e1 dispon\u00edvel em http://localhost:3000/ .","title":"Criando o Projeto"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#construindo-o-app-um-contador-simples","text":"1. Abra o arquivo src/App.jsx : JavaScript import React, { useState } from'react'; functionApp() { const [count, setCount] = useState(0); return ( <div> <p>Voc\u00ea clicou {count} vezes</p> <buttononClick={() => setCount(count + 1)}> Clique para incrementar </button> </div> ); } export default App; Explica\u00e7\u00e3o: useState: Hook do React que permite gerenciar o estado local de um componente. count: Vari\u00e1vel de estado que armazena o n\u00famero de cliques. setCount: Fun\u00e7\u00e3o para atualizar o valor de count. onClick: Manipulador de eventos que incrementa o valor de count quando o bot\u00e3o \u00e9 clicado.","title":"Construindo o App: Um Contador Simples"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#demonstracao-de-outros-conceitos","text":"Outro pontos fundamentais do React: Componentes: Criar componentes funcionais e de classe para modularizar seu c\u00f3digo. Props: Passar dados entre componentes usando props. JSX: Utilizar JSX para criar a estrutura HTML de seus componentes. Ciclo de vida: Entender os m\u00e9todos do ciclo de vida de um componente (componentDidMount, componentDidUpdate, etc.). Condicionalmente renderizar elementos: Usar operadores l\u00f3gicos para mostrar ou ocultar elementos. Listas: Renderizar listas de elementos usando o m\u00e9todo map . Eventos: Manipular diversos tipos de eventos (e.g., onMouseOver , onSubmit ).","title":"Demonstra\u00e7\u00e3o de Outros Conceitos"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#proximos-passos","text":"Redux: Gerencie o estado global de sua aplica\u00e7\u00e3o. React Router: Crie rotas para navegar entre diferentes p\u00e1ginas. Hooks: Utilize hooks personalizados para criar l\u00f3gica reutiliz\u00e1vel. Styled Components: Estilize seus componentes de forma mais declarativa.","title":"Pr\u00f3ximos Passos"},{"location":"_Disciplina/Roteiros/React/02_NodeViteReact/#exemplo-mais-completo-uma-lista-de-tarefas","text":"JavaScript import React, { useState } from'react'; functionApp() { const [tasks, setTasks] = useState([]); const [newTask, setNewTask] = useState(''); const handleAddTask = () => { setTasks([...tasks, newTask]); setNewTask(''); }; return ( <div> <inputtype=\"text\"value={newTask}onChange={(e) => setNewTask(e.target.value)} /> <buttononClick={handleAddTask}>Adicionar</button> <ul> {tasks.map((task) => ( <li key={task}>{task}</li> ))} </ul> </div> ); } export default App; Este exemplo demonstra: M\u00faltiplos estados: tasks para armazenar a lista de tarefas e newTask para o valor do input. Manipula\u00e7\u00e3o de eventos: onChange para atualizar o valor do input e onClick para adicionar uma nova tarefa. Renderiza\u00e7\u00e3o de listas: Usando o m\u00e9todo map para renderizar cada tarefa como um item de lista.","title":"Exemplo mais completo: Uma lista de tarefas"},{"location":"_Disciplina/Roteiros/React/03_Spa/","text":"SPA Uma SPA (Single Page Application) \u00e9 um tipo de aplica\u00e7\u00e3o web em que todo o conte\u00fado necess\u00e1rio para navegar pelo site \u00e9 carregado inicialmente ou dinamicamente sem recarregar a p\u00e1gina inteira. Ao contr\u00e1rio de um site tradicional, onde cada vez que o usu\u00e1rio clica em um link ou navega para uma nova se\u00e7\u00e3o h\u00e1 um carregamento completo da p\u00e1gina, em uma SPA apenas o conte\u00fado espec\u00edfico da p\u00e1gina \u00e9 atualizado, o que proporciona uma experi\u00eancia de usu\u00e1rio mais r\u00e1pida e fluida. Caracter\u00edsticas principais de uma SPA: 1. Carregamento \u00fanico de p\u00e1gina : Na primeira visita do usu\u00e1rio, a aplica\u00e7\u00e3o faz um grande carregamento inicial, mas depois disso, todo o conte\u00fado \u00e9 dinamicamente atualizado na mesma p\u00e1gina sem a necessidade de recarregar toda a estrutura da p\u00e1gina. 2. Navega\u00e7\u00e3o mais r\u00e1pida : Como o navegador n\u00e3o precisa recarregar toda a p\u00e1gina e apenas atualiza partes do conte\u00fado, a navega\u00e7\u00e3o \u00e9 mais r\u00e1pida em compara\u00e7\u00e3o com aplica\u00e7\u00f5es tradicionais que recarregam a p\u00e1gina inteira a cada clique. 3. Uso de APIs : Geralmente, uma SPA se comunica com o servidor atrav\u00e9s de APIs, como REST ou GraphQL, para buscar dados dinamicamente. A p\u00e1gina permanece carregada enquanto os dados s\u00e3o atualizados. 4. Hist\u00f3rico de navega\u00e7\u00e3o : As SPAs utilizam o hist\u00f3rico do navegador para manipular as URLs sem realmente recarregar a p\u00e1gina, o que permite que o bot\u00e3o de \"voltar\" e \"avan\u00e7ar\" do navegador funcionem normalmente. Ferramentas como o React Router ajudam a gerenciar esse comportamento. 5. Frameworks e bibliotecas comuns : Frameworks como React , Vue.js , Angular , e ferramentas como Vite ou Webpack s\u00e3o amplamente usadas para construir SPAs. Eles permitem um carregamento eficiente e a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis. Vantagens de uma SPA: Melhor experi\u00eancia do usu\u00e1rio (UX) : Navega\u00e7\u00e3o suave, sem interrup\u00e7\u00f5es devido a recarregamentos de p\u00e1gina. Aplica\u00e7\u00f5es mais interativas : Ideal para aplicativos ricos em intera\u00e7\u00e3o, como redes sociais, dashboards e sistemas de gerenciamento. Desempenho aprimorado : Depois do carregamento inicial, as requisi\u00e7\u00f5es s\u00e3o menores e mais r\u00e1pidas, j\u00e1 que apenas os dados mudam, e n\u00e3o o layout completo da p\u00e1gina. Desvantagens: SEO : Embora o SEO para SPAs tenha melhorado com t\u00e9cnicas como server-side rendering (SSR) e prerendering, ainda pode ser mais desafiador quando comparado a sites tradicionais. Carregamento inicial maior : A aplica\u00e7\u00e3o pode ter um tempo de carregamento inicial mais longo devido \u00e0 necessidade de carregar grande parte do conte\u00fado e do c\u00f3digo de uma vez. Exemplos de SPAs: Aplicativos de redes sociais como Facebook e Instagram . Sistemas de email como Gmail . Aplicativos de gest\u00e3o como Trello . Sites com grande interatividade, como dashboards ou plataformas de e-learning. Em resumo, uma SPA oferece uma navega\u00e7\u00e3o mais fluida e r\u00e1pida, especialmente \u00fatil para aplica\u00e7\u00f5es din\u00e2micas e interativas, mas exige um planejamento cuidadoso em termos de carregamento inicial e SEO. Criando um SPA para um Evento com React e Vite Entendendo o Contexto Antes de propormos uma estrutura para o SPA, \u00e9 importante entender alguns detalhes sobre o evento: Tipo de evento: Confer\u00eancia, workshop, feira, etc. P\u00fablico-alvo: Profissionais, estudantes, p\u00fablico geral. Funcionalidades: Agenda, palestrantes, inscri\u00e7\u00e3o, chat, etc. Design: Estilo visual, identidade visual do evento. Integra\u00e7\u00f5es: Plataformas de pagamento, sistemas de gest\u00e3o de eventos. Estrutura Proposta Com base em um cen\u00e1rio geral, podemos propor uma estrutura b\u00e1sica para o SPA: my-event-app/ public/ index.html src/ components/ Header.jsx Footer.jsx Navbar.jsx EventCard.jsx SpeakerCard.jsx // ... outros componentes pages/ Home.jsx Schedule.jsx Speakers.jsx About.jsx Registration.jsx // ... outras p\u00e1ginas utils/ api.js // Para chamadas \u00e0 API helpers.js // Fun\u00e7\u00f5es auxiliares styles/ global.css theme.css App.jsx index.css main.jsx Componentes Principais: Header: Cont\u00e9m o logo, menu de navega\u00e7\u00e3o e outras informa\u00e7\u00f5es gerais. Footer: Cont\u00e9m informa\u00e7\u00f5es de contato, redes sociais e outros links relevantes. Navbar: Menu de navega\u00e7\u00e3o principal. EventCard: Componente para exibir informa\u00e7\u00f5es sobre cada evento (t\u00edtulo, data, hor\u00e1rio, descri\u00e7\u00e3o). SpeakerCard: Componente para exibir informa\u00e7\u00f5es sobre cada palestrante (nome, foto, bio). Outras p\u00e1ginas: Home: P\u00e1gina inicial com informa\u00e7\u00f5es gerais sobre o evento. Schedule: Agenda completa do evento. Speakers: Lista de palestrantes. About: Informa\u00e7\u00f5es sobre os organizadores e patrocinadores. Registration: Formul\u00e1rio de inscri\u00e7\u00e3o. Funcionalidades Essenciais: Navega\u00e7\u00e3o: Implementar navega\u00e7\u00e3o entre as diferentes p\u00e1ginas utilizando um roteador como o React Router. Carregamento de dados: Utilizar o Fetch API ou uma biblioteca como Axios para buscar dados da API do evento (agenda, palestrantes, etc.). Gerenciamento de estado: Utilizar um gerenciador de estado como o Redux ou o Context API para compartilhar dados entre componentes. Formul\u00e1rios: Implementar formul\u00e1rios para inscri\u00e7\u00e3o, busca e outras intera\u00e7\u00f5es. Responsividade: Garantir que o SPA funcione em diferentes dispositivos (desktop, mobile, tablet). Acessibilidade: Seguir as diretrizes de acessibilidade para garantir que o SPA seja utiliz\u00e1vel por todos. Tecnologias Adicionais: Styling: Utilizar CSS, Sass ou uma biblioteca de estilos como o Material UI ou o Tailwind CSS. Icones: Utilizar bibliotecas de \u00edcones como o FontAwesome ou o Material Icons. Anima\u00e7\u00f5es: Utilizar bibliotecas de anima\u00e7\u00e3o como o Framer Motion ou o React Spring. Testes: Implementar testes unit\u00e1rios e de integra\u00e7\u00e3o para garantir a qualidade do c\u00f3digo. Exemplo de Componente EventCard: import React from 'react'; function EventCard({ title, date, description }) { return ( `<div className=\"event-card\">` `<h2>`{title}`</h2>` `<p>`{date}`</p>` `<p>`{description}`</p>` `</div>` ); } export default EventCard; Use o c\u00f3digo com cuidado. Pr\u00f3ximos Passos: Definir a arquitetura: Escolher uma arquitetura de componentes e como organizar o c\u00f3digo. Criar o design: Desenvolver o design visual do SPA. Implementar as funcionalidades: Desenvolver cada componente e funcionalidade de acordo com o design e os requisitos do evento. Testar e depurar: Realizar testes e corrigir bugs. Deploy: Hospedar o SPA em um servidor. Considera\u00e7\u00f5es Adicionais: Personaliza\u00e7\u00e3o: Adaptar a estrutura e as funcionalidades de acordo com as necessidades espec\u00edficas do evento. Otimiza\u00e7\u00e3o: Otimizar o desempenho do SPA para garantir uma boa experi\u00eancia do usu\u00e1rio. Seguran\u00e7a: Implementar medidas de seguran\u00e7a para proteger os dados dos usu\u00e1rios.","title":"03 Spa"},{"location":"_Disciplina/Roteiros/React/03_Spa/#spa","text":"Uma SPA (Single Page Application) \u00e9 um tipo de aplica\u00e7\u00e3o web em que todo o conte\u00fado necess\u00e1rio para navegar pelo site \u00e9 carregado inicialmente ou dinamicamente sem recarregar a p\u00e1gina inteira. Ao contr\u00e1rio de um site tradicional, onde cada vez que o usu\u00e1rio clica em um link ou navega para uma nova se\u00e7\u00e3o h\u00e1 um carregamento completo da p\u00e1gina, em uma SPA apenas o conte\u00fado espec\u00edfico da p\u00e1gina \u00e9 atualizado, o que proporciona uma experi\u00eancia de usu\u00e1rio mais r\u00e1pida e fluida.","title":"SPA"},{"location":"_Disciplina/Roteiros/React/03_Spa/#caracteristicas-principais-de-uma-spa","text":"1. Carregamento \u00fanico de p\u00e1gina : Na primeira visita do usu\u00e1rio, a aplica\u00e7\u00e3o faz um grande carregamento inicial, mas depois disso, todo o conte\u00fado \u00e9 dinamicamente atualizado na mesma p\u00e1gina sem a necessidade de recarregar toda a estrutura da p\u00e1gina. 2. Navega\u00e7\u00e3o mais r\u00e1pida : Como o navegador n\u00e3o precisa recarregar toda a p\u00e1gina e apenas atualiza partes do conte\u00fado, a navega\u00e7\u00e3o \u00e9 mais r\u00e1pida em compara\u00e7\u00e3o com aplica\u00e7\u00f5es tradicionais que recarregam a p\u00e1gina inteira a cada clique. 3. Uso de APIs : Geralmente, uma SPA se comunica com o servidor atrav\u00e9s de APIs, como REST ou GraphQL, para buscar dados dinamicamente. A p\u00e1gina permanece carregada enquanto os dados s\u00e3o atualizados. 4. Hist\u00f3rico de navega\u00e7\u00e3o : As SPAs utilizam o hist\u00f3rico do navegador para manipular as URLs sem realmente recarregar a p\u00e1gina, o que permite que o bot\u00e3o de \"voltar\" e \"avan\u00e7ar\" do navegador funcionem normalmente. Ferramentas como o React Router ajudam a gerenciar esse comportamento. 5. Frameworks e bibliotecas comuns : Frameworks como React , Vue.js , Angular , e ferramentas como Vite ou Webpack s\u00e3o amplamente usadas para construir SPAs. Eles permitem um carregamento eficiente e a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis.","title":"Caracter\u00edsticas principais de uma SPA:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#vantagens-de-uma-spa","text":"Melhor experi\u00eancia do usu\u00e1rio (UX) : Navega\u00e7\u00e3o suave, sem interrup\u00e7\u00f5es devido a recarregamentos de p\u00e1gina. Aplica\u00e7\u00f5es mais interativas : Ideal para aplicativos ricos em intera\u00e7\u00e3o, como redes sociais, dashboards e sistemas de gerenciamento. Desempenho aprimorado : Depois do carregamento inicial, as requisi\u00e7\u00f5es s\u00e3o menores e mais r\u00e1pidas, j\u00e1 que apenas os dados mudam, e n\u00e3o o layout completo da p\u00e1gina.","title":"Vantagens de uma SPA:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#desvantagens","text":"SEO : Embora o SEO para SPAs tenha melhorado com t\u00e9cnicas como server-side rendering (SSR) e prerendering, ainda pode ser mais desafiador quando comparado a sites tradicionais. Carregamento inicial maior : A aplica\u00e7\u00e3o pode ter um tempo de carregamento inicial mais longo devido \u00e0 necessidade de carregar grande parte do conte\u00fado e do c\u00f3digo de uma vez.","title":"Desvantagens:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#exemplos-de-spas","text":"Aplicativos de redes sociais como Facebook e Instagram . Sistemas de email como Gmail . Aplicativos de gest\u00e3o como Trello . Sites com grande interatividade, como dashboards ou plataformas de e-learning. Em resumo, uma SPA oferece uma navega\u00e7\u00e3o mais fluida e r\u00e1pida, especialmente \u00fatil para aplica\u00e7\u00f5es din\u00e2micas e interativas, mas exige um planejamento cuidadoso em termos de carregamento inicial e SEO.","title":"Exemplos de SPAs:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#criando-um-spa-para-um-evento-com-react-e-vite","text":"","title":"Criando um SPA para um Evento com React e Vite"},{"location":"_Disciplina/Roteiros/React/03_Spa/#entendendo-o-contexto","text":"Antes de propormos uma estrutura para o SPA, \u00e9 importante entender alguns detalhes sobre o evento: Tipo de evento: Confer\u00eancia, workshop, feira, etc. P\u00fablico-alvo: Profissionais, estudantes, p\u00fablico geral. Funcionalidades: Agenda, palestrantes, inscri\u00e7\u00e3o, chat, etc. Design: Estilo visual, identidade visual do evento. Integra\u00e7\u00f5es: Plataformas de pagamento, sistemas de gest\u00e3o de eventos.","title":"Entendendo o Contexto"},{"location":"_Disciplina/Roteiros/React/03_Spa/#estrutura-proposta","text":"Com base em um cen\u00e1rio geral, podemos propor uma estrutura b\u00e1sica para o SPA: my-event-app/ public/ index.html src/ components/ Header.jsx Footer.jsx Navbar.jsx EventCard.jsx SpeakerCard.jsx // ... outros componentes pages/ Home.jsx Schedule.jsx Speakers.jsx About.jsx Registration.jsx // ... outras p\u00e1ginas utils/ api.js // Para chamadas \u00e0 API helpers.js // Fun\u00e7\u00f5es auxiliares styles/ global.css theme.css App.jsx index.css main.jsx","title":"Estrutura Proposta"},{"location":"_Disciplina/Roteiros/React/03_Spa/#componentes-principais","text":"Header: Cont\u00e9m o logo, menu de navega\u00e7\u00e3o e outras informa\u00e7\u00f5es gerais. Footer: Cont\u00e9m informa\u00e7\u00f5es de contato, redes sociais e outros links relevantes. Navbar: Menu de navega\u00e7\u00e3o principal. EventCard: Componente para exibir informa\u00e7\u00f5es sobre cada evento (t\u00edtulo, data, hor\u00e1rio, descri\u00e7\u00e3o). SpeakerCard: Componente para exibir informa\u00e7\u00f5es sobre cada palestrante (nome, foto, bio).","title":"Componentes Principais:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#outras-paginas","text":"Home: P\u00e1gina inicial com informa\u00e7\u00f5es gerais sobre o evento. Schedule: Agenda completa do evento. Speakers: Lista de palestrantes. About: Informa\u00e7\u00f5es sobre os organizadores e patrocinadores. Registration: Formul\u00e1rio de inscri\u00e7\u00e3o.","title":"Outras p\u00e1ginas:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#funcionalidades-essenciais","text":"Navega\u00e7\u00e3o: Implementar navega\u00e7\u00e3o entre as diferentes p\u00e1ginas utilizando um roteador como o React Router. Carregamento de dados: Utilizar o Fetch API ou uma biblioteca como Axios para buscar dados da API do evento (agenda, palestrantes, etc.). Gerenciamento de estado: Utilizar um gerenciador de estado como o Redux ou o Context API para compartilhar dados entre componentes. Formul\u00e1rios: Implementar formul\u00e1rios para inscri\u00e7\u00e3o, busca e outras intera\u00e7\u00f5es. Responsividade: Garantir que o SPA funcione em diferentes dispositivos (desktop, mobile, tablet). Acessibilidade: Seguir as diretrizes de acessibilidade para garantir que o SPA seja utiliz\u00e1vel por todos.","title":"Funcionalidades Essenciais:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#tecnologias-adicionais","text":"Styling: Utilizar CSS, Sass ou uma biblioteca de estilos como o Material UI ou o Tailwind CSS. Icones: Utilizar bibliotecas de \u00edcones como o FontAwesome ou o Material Icons. Anima\u00e7\u00f5es: Utilizar bibliotecas de anima\u00e7\u00e3o como o Framer Motion ou o React Spring. Testes: Implementar testes unit\u00e1rios e de integra\u00e7\u00e3o para garantir a qualidade do c\u00f3digo.","title":"Tecnologias Adicionais:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#exemplo-de-componente-eventcard","text":"import React from 'react'; function EventCard({ title, date, description }) { return ( `<div className=\"event-card\">` `<h2>`{title}`</h2>` `<p>`{date}`</p>` `<p>`{description}`</p>` `</div>` ); } export default EventCard;","title":"Exemplo de Componente EventCard:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#use-o-codigo-com-cuidado","text":"","title":"Use o c\u00f3digo com cuidado."},{"location":"_Disciplina/Roteiros/React/03_Spa/#proximos-passos","text":"Definir a arquitetura: Escolher uma arquitetura de componentes e como organizar o c\u00f3digo. Criar o design: Desenvolver o design visual do SPA. Implementar as funcionalidades: Desenvolver cada componente e funcionalidade de acordo com o design e os requisitos do evento. Testar e depurar: Realizar testes e corrigir bugs. Deploy: Hospedar o SPA em um servidor.","title":"Pr\u00f3ximos Passos:"},{"location":"_Disciplina/Roteiros/React/03_Spa/#consideracoes-adicionais","text":"Personaliza\u00e7\u00e3o: Adaptar a estrutura e as funcionalidades de acordo com as necessidades espec\u00edficas do evento. Otimiza\u00e7\u00e3o: Otimizar o desempenho do SPA para garantir uma boa experi\u00eancia do usu\u00e1rio. Seguran\u00e7a: Implementar medidas de seguran\u00e7a para proteger os dados dos usu\u00e1rios.","title":"Considera\u00e7\u00f5es Adicionais:"},{"location":"_Disciplina/Roteiros/React/04_Componentes/","text":"Criar um SPA (Single Page Application) utilizando React com Vite Passos para criar um SPA React com Vite: 1. Instalar o Vite : Vite \u00e9 uma ferramenta de constru\u00e7\u00e3o que facilita a cria\u00e7\u00e3o de apps modernos com uma performance excelente. Para come\u00e7ar, abra seu terminal e execute o seguinte comando: npm create vite@latest my-spa-app O Vite ir\u00e1 te guiar na configura\u00e7\u00e3o inicial do projeto. Escolha as seguintes op\u00e7\u00f5es: Project name : my-spa-app (ou o nome que preferir) Select a framework : React Select a variant : JavaScript ou TypeScript , dependendo de sua prefer\u00eancia. 2. Instalar as depend\u00eancias : Ap\u00f3s criar o projeto, v\u00e1 para a pasta do projeto e instale as depend\u00eancias: cd my-spa-app npm install 3. Estrutura de pastas : Ao concluir, a estrutura do projeto ser\u00e1 algo como: public src assets App.jsx main.jsx index.css index.html vite.config.js 4. Iniciar o servidor de desenvolvimento : Agora voc\u00ea pode iniciar o servidor de desenvolvimento e ver o app rodando: npm run dev 5. Criando Componentes de Rotas (React Router) : Para um SPA, \u00e9 comum utilizar o React Router para navega\u00e7\u00e3o. Instale-o: npm install react-router-dom Em seguida, configure as rotas no arquivo App.jsx : import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; import Home from './components/Home'; import About from './components/About'; function App() { return ( <Router> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"/about\" element={<About />} /> </Routes> </Router> ); } export default App; 6. Criar P\u00e1ginas (Componentes) : Crie os componentes para as p\u00e1ginas: src/components/Home.jsx : function Home() { return <h1>Welcome to Home Page</h1>; } export default Home; src/components/About.jsx : function About() { return <h1>About Us</h1>; } export default About; 7. Estilos (CSS) : Para adicionar estilos, voc\u00ea pode usar o arquivo index.css ou criar estilos espec\u00edficos para cada componente. 8. Build do projeto : Quando quiser fazer o build do projeto para produ\u00e7\u00e3o, basta rodar: npm run build Expandindo sua SPA Para criar uma landing page com React, voc\u00ea pode estruturar a aplica\u00e7\u00e3o com diversos componentes reutiliz\u00e1veis. Vou sugerir tr\u00eas componentes t\u00edpicos que voc\u00ea pode incluir em uma landing page e fornecer o c\u00f3digo para cada um: 1. Hero Section Esse componente \u00e9 o primeiro que o usu\u00e1rio v\u00ea, geralmente inclui uma mensagem de boas-vindas, uma breve descri\u00e7\u00e3o e um call-to-action (CTA). // src/components/Hero.jsx function Hero() { return ( <section className=\"hero\"> <div className=\"container\"> <h1>Welcome to Our Product</h1> <p>Discover the best solution for your needs with our cutting-edge product.</p> <a href=\"#signup\" className=\"cta-button\">Get Started</a> </div> </section> ); } export default Hero; 2. Features Section Este componente destaca os principais recursos ou benef\u00edcios do produto/servi\u00e7o oferecido pela landing page. // src/components/Features.jsx function Features() { return ( <section className=\"features\"> <div className=\"container\"> <h2>Main Features</h2> <div className=\"feature-list\"> <div className=\"feature\"> <h3>Feature One</h3> <p>Explanation of the first feature and its benefits.</p> </div> <div className=\"feature\"> <h3>Feature Two</h3> <p>Explanation of the second feature and its benefits.</p> </div> <div className=\"feature\"> <h3>Feature Three</h3> <p>Explanation of the third feature and its benefits.</p> </div> </div> </div> </section> ); } export default Features; 3. Testimonial Section Um componente de depoimentos para mostrar feedback de usu\u00e1rios satisfeitos. // src/components/Testimonials.jsx function Testimonials() { return ( <section className=\"testimonials\"> <div className=\"container\"> <h2>What Our Customers Say</h2> <div className=\"testimonial-list\"> <div className=\"testimonial\"> <p>\"This product changed my life! Highly recommended.\"</p> <span>- John Doe</span> </div> <div className=\"testimonial\"> <p>\"A game-changer in the industry, I'm beyond impressed.\"</p> <span>- Jane Smith</span> </div> <div className=\"testimonial\"> <p>\"Excellent customer service and fantastic results.\"</p> <span>- Michael Lee</span> </div> </div> </div> </section> ); } export default Testimonials; Como combinar esses componentes: Agora voc\u00ea pode combinar esses componentes dentro do arquivo principal App.jsx : import Hero from './components/Hero'; import Features from './components/Features'; import Testimonials from './components/Testimonials'; function App() { return ( <> <Hero /> <Features /> <Testimonials /> </> ); } export default App; Estilos (CSS) Para estilizar os componentes, adicione CSS no arquivo index.css ou crie arquivos CSS espec\u00edficos para cada componente. /* index.css */ .hero { background-color: #f0f8ff; padding: 50px 0; text-align: center; } .features { background-color: #fff; padding: 50px 0; text-align: center; } .testimonials { background-color: #f8f9fa; padding: 50px 0; text-align: center; } .cta-button { padding: 10px 20px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 5px; } Com esses tr\u00eas componentes \u2014 Hero , Features , e Testimonials \u2014 voc\u00ea pode criar uma landing page atrativa e funcional para destacar seu produto ou servi\u00e7o. A organiza\u00e7\u00e3o de uma aplica\u00e7\u00e3o React pode ser melhorada ao diferenciar Pages (p\u00e1ginas) de Components (componentes). A distin\u00e7\u00e3o entre essas duas categorias \u00e9 importante para manter o c\u00f3digo escal\u00e1vel, reutiliz\u00e1vel e de f\u00e1cil manuten\u00e7\u00e3o. Vou explicar a diferen\u00e7a e como voc\u00ea pode organiz\u00e1-los de forma eficiente. Diferen\u00e7a entre Pages e Components Pages (P\u00e1ginas) : O que s\u00e3o : S\u00e3o componentes que representam rotas individuais da aplica\u00e7\u00e3o, geralmente associadas a uma URL espec\u00edfica. Cada Page \u00e9 uma \"p\u00e1gina\" completa e geralmente agrupa v\u00e1rios componentes. Fun\u00e7\u00e3o : Uma page cont\u00e9m a estrutura e layout principal da p\u00e1gina e usa outros componentes para construir sua interface. \u00c9 respons\u00e1vel por representar uma tela completa da aplica\u00e7\u00e3o. Exemplo : HomePage, AboutPage, ContactPage, DashboardPage, etc. Components (Componentes) : O que s\u00e3o : S\u00e3o blocos reutiliz\u00e1veis menores de interface, que podem ser usados em v\u00e1rias p\u00e1ginas. Componentes s\u00e3o mais modulares e t\u00eam uma \u00fanica responsabilidade, como um bot\u00e3o, um formul\u00e1rio, ou uma tabela. Fun\u00e7\u00e3o : Eles n\u00e3o est\u00e3o vinculados a uma URL espec\u00edfica e podem ser combinados dentro de Pages ou outros componentes. Exemplo : Navbar, Footer, Button, Card, Modal, FormField, etc. Organiza\u00e7\u00e3o de Pages e Components Uma boa pr\u00e1tica \u00e9 criar pastas separadas para Pages e Components no diret\u00f3rio src . Isso ajuda a organizar o c\u00f3digo e deixar claro o prop\u00f3sito de cada arquivo. Estrutura de diret\u00f3rio recomendada: src/ \u2502 \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 Button.jsx \u2502 \u251c\u2500\u2500 Card.jsx \u2502 \u251c\u2500\u2500 Navbar.jsx \u2502 \u2514\u2500\u2500 Footer.jsx \u2502 \u251c\u2500\u2500 pages/ \u2502 \u251c\u2500\u2500 HomePage.jsx \u2502 \u251c\u2500\u2500 AboutPage.jsx \u2502 \u251c\u2500\u2500 ContactPage.jsx \u2502 \u2514\u2500\u2500 DashboardPage.jsx \u2502 \u251c\u2500\u2500 App.jsx \u251c\u2500\u2500 main.jsx \u2514\u2500\u2500 index.css Exemplo de uso pr\u00e1tico HomePage.jsx (P\u00e1gina) import React from 'react'; import Navbar from '../components/Navbar'; import Footer from '../components/Footer'; import Features from '../components/Features'; import Hero from '../components/Hero'; function HomePage() { return ( <> <Navbar /> <Hero /> <Features /> <Footer /> </> ); } export default HomePage; Aqui, a p\u00e1gina HomePage serve como a estrutura principal da p\u00e1gina de \"Home\", e ela reutiliza componentes como Navbar , Hero , Features e Footer . Cada componente pode ser reutilizado em outras p\u00e1ginas, mantendo o c\u00f3digo modular. Navbar.jsx (Componente) function Navbar() { return ( <nav> <h1>Logo</h1> <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/about\">About</a></li> <li><a href=\"/contact\">Contact</a></li> </ul> </nav> ); } export default Navbar; O Navbar \u00e9 um componente que pode ser utilizado em v\u00e1rias p\u00e1ginas, como HomePage , AboutPage e ContactPage . Ele cont\u00e9m a l\u00f3gica e a estrutura do menu de navega\u00e7\u00e3o. AboutPage.jsx (P\u00e1gina) import React from 'react'; import Navbar from '../components/Navbar'; import Footer from '../components/Footer'; function AboutPage() { return ( <> <Navbar /> <section className=\"about\"> <h1>About Us</h1> <p>We are a company that values...</p> </section> <Footer /> </> ); } export default AboutPage; Aqui, a AboutPage tamb\u00e9m reutiliza os mesmos componentes de Navbar e Footer , mas tem um conte\u00fado \u00fanico no corpo da p\u00e1gina, como a se\u00e7\u00e3o \"About Us\". Resumo da Organiza\u00e7\u00e3o: P\u00e1ginas ( Pages ) representam rotas e normalmente combinam v\u00e1rios componentes para formar uma tela completa. Componentes ( Components ) s\u00e3o elementos mais simples e reutiliz\u00e1veis que comp\u00f5em partes da interface. Manter pastas separadas para p\u00e1ginas e componentes ajuda na escalabilidade e clareza do c\u00f3digo. Ao seguir essa organiza\u00e7\u00e3o, voc\u00ea mant\u00e9m o c\u00f3digo mais estruturado, f\u00e1cil de entender e de escalar conforme a aplica\u00e7\u00e3o cresce.","title":"04 Componentes"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#criar-um-spa-single-page-application-utilizando-react-com-vite","text":"","title":"Criar um SPA (Single Page Application) utilizando React com Vite"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#passos-para-criar-um-spa-react-com-vite","text":"1. Instalar o Vite : Vite \u00e9 uma ferramenta de constru\u00e7\u00e3o que facilita a cria\u00e7\u00e3o de apps modernos com uma performance excelente. Para come\u00e7ar, abra seu terminal e execute o seguinte comando: npm create vite@latest my-spa-app O Vite ir\u00e1 te guiar na configura\u00e7\u00e3o inicial do projeto. Escolha as seguintes op\u00e7\u00f5es: Project name : my-spa-app (ou o nome que preferir) Select a framework : React Select a variant : JavaScript ou TypeScript , dependendo de sua prefer\u00eancia. 2. Instalar as depend\u00eancias : Ap\u00f3s criar o projeto, v\u00e1 para a pasta do projeto e instale as depend\u00eancias: cd my-spa-app npm install 3. Estrutura de pastas : Ao concluir, a estrutura do projeto ser\u00e1 algo como: public src assets App.jsx main.jsx index.css index.html vite.config.js 4. Iniciar o servidor de desenvolvimento : Agora voc\u00ea pode iniciar o servidor de desenvolvimento e ver o app rodando: npm run dev 5. Criando Componentes de Rotas (React Router) : Para um SPA, \u00e9 comum utilizar o React Router para navega\u00e7\u00e3o. Instale-o: npm install react-router-dom Em seguida, configure as rotas no arquivo App.jsx : import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; import Home from './components/Home'; import About from './components/About'; function App() { return ( <Router> <Routes> <Route path=\"/\" element={<Home />} /> <Route path=\"/about\" element={<About />} /> </Routes> </Router> ); } export default App; 6. Criar P\u00e1ginas (Componentes) : Crie os componentes para as p\u00e1ginas: src/components/Home.jsx : function Home() { return <h1>Welcome to Home Page</h1>; } export default Home; src/components/About.jsx : function About() { return <h1>About Us</h1>; } export default About; 7. Estilos (CSS) : Para adicionar estilos, voc\u00ea pode usar o arquivo index.css ou criar estilos espec\u00edficos para cada componente. 8. Build do projeto : Quando quiser fazer o build do projeto para produ\u00e7\u00e3o, basta rodar: npm run build","title":"Passos para criar um SPA React com Vite:"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#expandindo-sua-spa","text":"Para criar uma landing page com React, voc\u00ea pode estruturar a aplica\u00e7\u00e3o com diversos componentes reutiliz\u00e1veis. Vou sugerir tr\u00eas componentes t\u00edpicos que voc\u00ea pode incluir em uma landing page e fornecer o c\u00f3digo para cada um:","title":"Expandindo sua SPA"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#1-hero-section","text":"Esse componente \u00e9 o primeiro que o usu\u00e1rio v\u00ea, geralmente inclui uma mensagem de boas-vindas, uma breve descri\u00e7\u00e3o e um call-to-action (CTA). // src/components/Hero.jsx function Hero() { return ( <section className=\"hero\"> <div className=\"container\"> <h1>Welcome to Our Product</h1> <p>Discover the best solution for your needs with our cutting-edge product.</p> <a href=\"#signup\" className=\"cta-button\">Get Started</a> </div> </section> ); } export default Hero;","title":"1. Hero Section"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#2-features-section","text":"Este componente destaca os principais recursos ou benef\u00edcios do produto/servi\u00e7o oferecido pela landing page. // src/components/Features.jsx function Features() { return ( <section className=\"features\"> <div className=\"container\"> <h2>Main Features</h2> <div className=\"feature-list\"> <div className=\"feature\"> <h3>Feature One</h3> <p>Explanation of the first feature and its benefits.</p> </div> <div className=\"feature\"> <h3>Feature Two</h3> <p>Explanation of the second feature and its benefits.</p> </div> <div className=\"feature\"> <h3>Feature Three</h3> <p>Explanation of the third feature and its benefits.</p> </div> </div> </div> </section> ); } export default Features;","title":"2. Features Section"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#3-testimonial-section","text":"Um componente de depoimentos para mostrar feedback de usu\u00e1rios satisfeitos. // src/components/Testimonials.jsx function Testimonials() { return ( <section className=\"testimonials\"> <div className=\"container\"> <h2>What Our Customers Say</h2> <div className=\"testimonial-list\"> <div className=\"testimonial\"> <p>\"This product changed my life! Highly recommended.\"</p> <span>- John Doe</span> </div> <div className=\"testimonial\"> <p>\"A game-changer in the industry, I'm beyond impressed.\"</p> <span>- Jane Smith</span> </div> <div className=\"testimonial\"> <p>\"Excellent customer service and fantastic results.\"</p> <span>- Michael Lee</span> </div> </div> </div> </section> ); } export default Testimonials;","title":"3. Testimonial Section"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#como-combinar-esses-componentes","text":"Agora voc\u00ea pode combinar esses componentes dentro do arquivo principal App.jsx : import Hero from './components/Hero'; import Features from './components/Features'; import Testimonials from './components/Testimonials'; function App() { return ( <> <Hero /> <Features /> <Testimonials /> </> ); } export default App;","title":"Como combinar esses componentes:"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#estilos-css","text":"Para estilizar os componentes, adicione CSS no arquivo index.css ou crie arquivos CSS espec\u00edficos para cada componente. /* index.css */ .hero { background-color: #f0f8ff; padding: 50px 0; text-align: center; } .features { background-color: #fff; padding: 50px 0; text-align: center; } .testimonials { background-color: #f8f9fa; padding: 50px 0; text-align: center; } .cta-button { padding: 10px 20px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 5px; } Com esses tr\u00eas componentes \u2014 Hero , Features , e Testimonials \u2014 voc\u00ea pode criar uma landing page atrativa e funcional para destacar seu produto ou servi\u00e7o. A organiza\u00e7\u00e3o de uma aplica\u00e7\u00e3o React pode ser melhorada ao diferenciar Pages (p\u00e1ginas) de Components (componentes). A distin\u00e7\u00e3o entre essas duas categorias \u00e9 importante para manter o c\u00f3digo escal\u00e1vel, reutiliz\u00e1vel e de f\u00e1cil manuten\u00e7\u00e3o. Vou explicar a diferen\u00e7a e como voc\u00ea pode organiz\u00e1-los de forma eficiente.","title":"Estilos (CSS)"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#diferenca-entre-pages-e-components","text":"Pages (P\u00e1ginas) : O que s\u00e3o : S\u00e3o componentes que representam rotas individuais da aplica\u00e7\u00e3o, geralmente associadas a uma URL espec\u00edfica. Cada Page \u00e9 uma \"p\u00e1gina\" completa e geralmente agrupa v\u00e1rios componentes. Fun\u00e7\u00e3o : Uma page cont\u00e9m a estrutura e layout principal da p\u00e1gina e usa outros componentes para construir sua interface. \u00c9 respons\u00e1vel por representar uma tela completa da aplica\u00e7\u00e3o. Exemplo : HomePage, AboutPage, ContactPage, DashboardPage, etc. Components (Componentes) : O que s\u00e3o : S\u00e3o blocos reutiliz\u00e1veis menores de interface, que podem ser usados em v\u00e1rias p\u00e1ginas. Componentes s\u00e3o mais modulares e t\u00eam uma \u00fanica responsabilidade, como um bot\u00e3o, um formul\u00e1rio, ou uma tabela. Fun\u00e7\u00e3o : Eles n\u00e3o est\u00e3o vinculados a uma URL espec\u00edfica e podem ser combinados dentro de Pages ou outros componentes. Exemplo : Navbar, Footer, Button, Card, Modal, FormField, etc.","title":"Diferen\u00e7a entre Pages e Components"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#organizacao-de-pages-e-components","text":"Uma boa pr\u00e1tica \u00e9 criar pastas separadas para Pages e Components no diret\u00f3rio src . Isso ajuda a organizar o c\u00f3digo e deixar claro o prop\u00f3sito de cada arquivo.","title":"Organiza\u00e7\u00e3o de Pages e Components"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#estrutura-de-diretorio-recomendada","text":"src/ \u2502 \u251c\u2500\u2500 components/ \u2502 \u251c\u2500\u2500 Button.jsx \u2502 \u251c\u2500\u2500 Card.jsx \u2502 \u251c\u2500\u2500 Navbar.jsx \u2502 \u2514\u2500\u2500 Footer.jsx \u2502 \u251c\u2500\u2500 pages/ \u2502 \u251c\u2500\u2500 HomePage.jsx \u2502 \u251c\u2500\u2500 AboutPage.jsx \u2502 \u251c\u2500\u2500 ContactPage.jsx \u2502 \u2514\u2500\u2500 DashboardPage.jsx \u2502 \u251c\u2500\u2500 App.jsx \u251c\u2500\u2500 main.jsx \u2514\u2500\u2500 index.css","title":"Estrutura de diret\u00f3rio recomendada:"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#exemplo-de-uso-pratico","text":"","title":"Exemplo de uso pr\u00e1tico"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#homepagejsx-pagina","text":"import React from 'react'; import Navbar from '../components/Navbar'; import Footer from '../components/Footer'; import Features from '../components/Features'; import Hero from '../components/Hero'; function HomePage() { return ( <> <Navbar /> <Hero /> <Features /> <Footer /> </> ); } export default HomePage; Aqui, a p\u00e1gina HomePage serve como a estrutura principal da p\u00e1gina de \"Home\", e ela reutiliza componentes como Navbar , Hero , Features e Footer . Cada componente pode ser reutilizado em outras p\u00e1ginas, mantendo o c\u00f3digo modular.","title":"HomePage.jsx (P\u00e1gina)"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#navbarjsx-componente","text":"function Navbar() { return ( <nav> <h1>Logo</h1> <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/about\">About</a></li> <li><a href=\"/contact\">Contact</a></li> </ul> </nav> ); } export default Navbar; O Navbar \u00e9 um componente que pode ser utilizado em v\u00e1rias p\u00e1ginas, como HomePage , AboutPage e ContactPage . Ele cont\u00e9m a l\u00f3gica e a estrutura do menu de navega\u00e7\u00e3o.","title":"Navbar.jsx (Componente)"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#aboutpagejsx-pagina","text":"import React from 'react'; import Navbar from '../components/Navbar'; import Footer from '../components/Footer'; function AboutPage() { return ( <> <Navbar /> <section className=\"about\"> <h1>About Us</h1> <p>We are a company that values...</p> </section> <Footer /> </> ); } export default AboutPage; Aqui, a AboutPage tamb\u00e9m reutiliza os mesmos componentes de Navbar e Footer , mas tem um conte\u00fado \u00fanico no corpo da p\u00e1gina, como a se\u00e7\u00e3o \"About Us\".","title":"AboutPage.jsx (P\u00e1gina)"},{"location":"_Disciplina/Roteiros/React/04_Componentes/#resumo-da-organizacao","text":"P\u00e1ginas ( Pages ) representam rotas e normalmente combinam v\u00e1rios componentes para formar uma tela completa. Componentes ( Components ) s\u00e3o elementos mais simples e reutiliz\u00e1veis que comp\u00f5em partes da interface. Manter pastas separadas para p\u00e1ginas e componentes ajuda na escalabilidade e clareza do c\u00f3digo. Ao seguir essa organiza\u00e7\u00e3o, voc\u00ea mant\u00e9m o c\u00f3digo mais estruturado, f\u00e1cil de entender e de escalar conforme a aplica\u00e7\u00e3o cresce.","title":"Resumo da Organiza\u00e7\u00e3o:"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/","text":"Exibir dados no seu aplicativo Vite com React usando tr\u00eas abordagens diferentes: com const , importa\u00e7\u00e3o direta e usando fetch . 1. Exibindo dados com const Se os dados forem pequenos e voc\u00ea quiser armazen\u00e1-los diretamente no c\u00f3digo, pode usar uma constante. import React from 'react'; // Dados armazenados em uma constante const users = [ { id: 1, name: \"John Doe\", email: \"john@example.com\" }, { id: 2, name: \"Jane Doe\", email: \"jane@example.com\" } ]; const App = () => { return ( <div> <h1>Users List (Usando Const)</h1> <ul> {users.map((user) => ( <li key={user.id}> {user.name} - {user.email} </li> ))} </ul> </div> ); }; export default App; 2. Exibindo dados com importa\u00e7\u00e3o direta de JSON Se os dados estiverem em um arquivo JSON local, voc\u00ea pode import\u00e1-los diretamente. Passo 1: Crie o arquivo JSON Crie um arquivo data.json (por exemplo) na mesma pasta do seu componente ou dentro da pasta src . // data.json { \"users\": [ { \"id\": 1, \"name\": \"John Doe\", \"email\": \"john@example.com\" }, { \"id\": 2, \"name\": \"Jane Doe\", \"email\": \"jane@example.com\" } ] } Passo 2: Importe o JSON no componente import React from 'react'; import data from './data.json'; // ajuste o caminho conforme necess\u00e1rio const App = () => { return ( <div> <h1>Users List (Usando Import Direto)</h1> <ul> {data.users.map((user) => ( <li key={user.id}> {user.name} - {user.email} </li> ))} </ul> </div> ); }; export default App; 3. Exibindo dados com fetch Se voc\u00ea quiser buscar dados dinamicamente de um arquivo JSON, voc\u00ea pode usar fetch . Coloque o arquivo JSON na pasta public para que o Vite sirva o arquivo corretamente. Passo 1: Crie o arquivo JSON no diret\u00f3rio public Crie o arquivo public/data.json . // public/data.json { \"users\": [ { \"id\": 1, \"name\": \"John Doe\", \"email\": \"john@example.com\" }, { \"id\": 2, \"name\": \"Jane Doe\", \"email\": \"jane@example.com\" } ] } Passo 2: Use fetch para buscar o arquivo JSON import React, { useState, useEffect } from 'react'; const App = () => { const [data, setData] = useState(null); const [loading, setLoading] = useState(true); useEffect(() => { fetch('/data.json') // Caminho relativo ao diret\u00f3rio public .then((response) => response.json()) .then((data) => { setData(data); setLoading(false); }) .catch((error) => { console.error('Erro ao carregar dados:', error); setLoading(false); }); }, []); if (loading) { return <div>Loading...</div>; } return ( <div> <h1>Users List (Usando Fetch)</h1> <ul> {data.users.map((user) => ( <li key={user.id}> {user.name} - {user.email} </li> ))} </ul> </div> ); }; export default App;","title":"05 Lendo Json"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#1-exibindo-dados-com-const","text":"Se os dados forem pequenos e voc\u00ea quiser armazen\u00e1-los diretamente no c\u00f3digo, pode usar uma constante. import React from 'react'; // Dados armazenados em uma constante const users = [ { id: 1, name: \"John Doe\", email: \"john@example.com\" }, { id: 2, name: \"Jane Doe\", email: \"jane@example.com\" } ]; const App = () => { return ( <div> <h1>Users List (Usando Const)</h1> <ul> {users.map((user) => ( <li key={user.id}> {user.name} - {user.email} </li> ))} </ul> </div> ); }; export default App;","title":"1. Exibindo dados com const"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#2-exibindo-dados-com-importacao-direta-de-json","text":"Se os dados estiverem em um arquivo JSON local, voc\u00ea pode import\u00e1-los diretamente.","title":"2. Exibindo dados com importa\u00e7\u00e3o direta de JSON"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#passo-1-crie-o-arquivo-json","text":"Crie um arquivo data.json (por exemplo) na mesma pasta do seu componente ou dentro da pasta src . // data.json { \"users\": [ { \"id\": 1, \"name\": \"John Doe\", \"email\": \"john@example.com\" }, { \"id\": 2, \"name\": \"Jane Doe\", \"email\": \"jane@example.com\" } ] }","title":"Passo 1: Crie o arquivo JSON"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#passo-2-importe-o-json-no-componente","text":"import React from 'react'; import data from './data.json'; // ajuste o caminho conforme necess\u00e1rio const App = () => { return ( <div> <h1>Users List (Usando Import Direto)</h1> <ul> {data.users.map((user) => ( <li key={user.id}> {user.name} - {user.email} </li> ))} </ul> </div> ); }; export default App;","title":"Passo 2: Importe o JSON no componente"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#3-exibindo-dados-com-fetch","text":"Se voc\u00ea quiser buscar dados dinamicamente de um arquivo JSON, voc\u00ea pode usar fetch . Coloque o arquivo JSON na pasta public para que o Vite sirva o arquivo corretamente.","title":"3. Exibindo dados com fetch"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#passo-1-crie-o-arquivo-json-no-diretorio-public","text":"Crie o arquivo public/data.json . // public/data.json { \"users\": [ { \"id\": 1, \"name\": \"John Doe\", \"email\": \"john@example.com\" }, { \"id\": 2, \"name\": \"Jane Doe\", \"email\": \"jane@example.com\" } ] }","title":"Passo 1: Crie o arquivo JSON no diret\u00f3rio public"},{"location":"_Disciplina/Roteiros/React/05_Lendo%20Json/#passo-2-use-fetch-para-buscar-o-arquivo-json","text":"import React, { useState, useEffect } from 'react'; const App = () => { const [data, setData] = useState(null); const [loading, setLoading] = useState(true); useEffect(() => { fetch('/data.json') // Caminho relativo ao diret\u00f3rio public .then((response) => response.json()) .then((data) => { setData(data); setLoading(false); }) .catch((error) => { console.error('Erro ao carregar dados:', error); setLoading(false); }); }, []); if (loading) { return <div>Loading...</div>; } return ( <div> <h1>Users List (Usando Fetch)</h1> <ul> {data.users.map((user) => ( <li key={user.id}> {user.name} - {user.email} </li> ))} </ul> </div> ); }; export default App;","title":"Passo 2: Use fetch para buscar o arquivo JSON"},{"location":"base/5w2h/","text":"Introdu\u00e7\u00e3o O 5W2H \u00e9 uma ferramenta administrativa que pode ser utilizada para diferentes contextos dentro de uma organiza\u00e7\u00e3o, como na organiza\u00e7\u00e3o para planejamento estrat\u00e9gico e guia na execu\u00e7\u00e3o de a\u00e7\u00f5es. O 5W2H baseia-se em 7 perguntas (What?, Why?, Where?, Who?, When?, How? e How much?), com o intuito de esclarecer e organizar ideias. A ferramenta ser\u00e1 utilizada como um guia de a\u00e7\u00f5es, tornando os objetivos mais evidentes para a equipe, auxiliando na compreens\u00e3o, organiza\u00e7\u00e3o e tomadas de decis\u00f5es no projeto. Metodologia A equipe se reuniu para esclarecimento sobre o tema do projeto, a partir dos pontos debatidos foi poss\u00edvel responder \u00e0s quest\u00f5es do 5W2H. Quest\u00f5es 5W2H Vers\u00e3o 1.0 Vis\u00e3o geral Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Aplicativo Web App para.... Why? (Por que isso ser\u00e1 feito?) Para auxiliar... Where? (Onde ser\u00e1 feito?) O trabalho ser\u00e1 realizado.... When? (Quando ser\u00e1 feito?) Durante o semestre de XXXX Who? (Quem ir\u00e1 fazer?) A equipe \u00e9 formada pelos alunos... How? (Como ser\u00e1 feito?) Utilizando metodologia RUP/UP e ferramentas como... How much? (Quanto custar\u00e1?) O custo do projeto ser\u00e1 o tempo e esfor\u00e7o para o desenvolvimento da aplica\u00e7\u00e3o Vers\u00e3o 2.0 Vis\u00e3o produto Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Ger\u00eancia de XXXX Why? (Por que isso ser\u00e1 feito?) Para auxiliar na... Where? (Onde ser\u00e1 feito?) No...) When? (Quando ser\u00e1 feito?) A ger\u00eancia ser\u00e1.... Who? (Quem ir\u00e1 fazer?) Pessoa(s).... How? (Como ser\u00e1 feito?) Utilizando o nome do aplicativo... How much? (Quanto custar\u00e1?) Tempo.... Conclus\u00e3o O 5W2H \u00e9 um t\u00e9cnica bem simples e de f\u00e1cil entendimento, sem a necessidade de um especialista. Dentro da disciplina a t\u00e9cnica fornece um entendimento melhor, para a equipe, sobre o projeto como responsabilidades, motiva\u00e7\u00e3o e organiza\u00e7\u00e3o de a\u00e7\u00f5es. Refer\u00eancias Bibliogr\u00e1ficas 5W2H: disponivel em :https://www../ O que \u00e9 5W2H, disponivel em :https://www... Autor(es) Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/08/20 1.0 Cria\u00e7\u00e3o do documento xxx xxxx 09/09/20 2.0 Adicionada vis\u00e3o produto xxxx xxxx","title":"5W2H"},{"location":"base/5w2h/#introducao","text":"O 5W2H \u00e9 uma ferramenta administrativa que pode ser utilizada para diferentes contextos dentro de uma organiza\u00e7\u00e3o, como na organiza\u00e7\u00e3o para planejamento estrat\u00e9gico e guia na execu\u00e7\u00e3o de a\u00e7\u00f5es. O 5W2H baseia-se em 7 perguntas (What?, Why?, Where?, Who?, When?, How? e How much?), com o intuito de esclarecer e organizar ideias. A ferramenta ser\u00e1 utilizada como um guia de a\u00e7\u00f5es, tornando os objetivos mais evidentes para a equipe, auxiliando na compreens\u00e3o, organiza\u00e7\u00e3o e tomadas de decis\u00f5es no projeto.","title":"Introdu\u00e7\u00e3o"},{"location":"base/5w2h/#metodologia","text":"A equipe se reuniu para esclarecimento sobre o tema do projeto, a partir dos pontos debatidos foi poss\u00edvel responder \u00e0s quest\u00f5es do 5W2H.","title":"Metodologia"},{"location":"base/5w2h/#questoes-5w2h","text":"","title":"Quest\u00f5es 5W2H"},{"location":"base/5w2h/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"base/5w2h/#visao-geral","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Aplicativo Web App para.... Why? (Por que isso ser\u00e1 feito?) Para auxiliar... Where? (Onde ser\u00e1 feito?) O trabalho ser\u00e1 realizado.... When? (Quando ser\u00e1 feito?) Durante o semestre de XXXX Who? (Quem ir\u00e1 fazer?) A equipe \u00e9 formada pelos alunos... How? (Como ser\u00e1 feito?) Utilizando metodologia RUP/UP e ferramentas como... How much? (Quanto custar\u00e1?) O custo do projeto ser\u00e1 o tempo e esfor\u00e7o para o desenvolvimento da aplica\u00e7\u00e3o","title":"Vis\u00e3o geral"},{"location":"base/5w2h/#versao-20","text":"","title":"Vers\u00e3o 2.0"},{"location":"base/5w2h/#visao-produto","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Ger\u00eancia de XXXX Why? (Por que isso ser\u00e1 feito?) Para auxiliar na... Where? (Onde ser\u00e1 feito?) No...) When? (Quando ser\u00e1 feito?) A ger\u00eancia ser\u00e1.... Who? (Quem ir\u00e1 fazer?) Pessoa(s).... How? (Como ser\u00e1 feito?) Utilizando o nome do aplicativo... How much? (Quanto custar\u00e1?) Tempo....","title":"Vis\u00e3o produto"},{"location":"base/5w2h/#conclusao","text":"O 5W2H \u00e9 um t\u00e9cnica bem simples e de f\u00e1cil entendimento, sem a necessidade de um especialista. Dentro da disciplina a t\u00e9cnica fornece um entendimento melhor, para a equipe, sobre o projeto como responsabilidades, motiva\u00e7\u00e3o e organiza\u00e7\u00e3o de a\u00e7\u00f5es.","title":"Conclus\u00e3o"},{"location":"base/5w2h/#referencias-bibliograficas","text":"5W2H: disponivel em :https://www../ O que \u00e9 5W2H, disponivel em :https://www...","title":"Refer\u00eancias Bibliogr\u00e1ficas"},{"location":"base/5w2h/#autores","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/08/20 1.0 Cria\u00e7\u00e3o do documento xxx xxxx 09/09/20 2.0 Adicionada vis\u00e3o produto xxxx xxxx","title":"Autor(es)"},{"location":"base/Brainstorm/","text":"Introdu\u00e7\u00e3o O brainstorm \u00e9 uma t\u00e9cnica de elicita\u00e7\u00e3o de requisitos que consiste em reunir a equipe e discutir sobre diversos t\u00f3picos gerais do projeto apresentados no documento problema de neg\u00f3cio. No brainstorm o di\u00e1logo \u00e9 incentivado e cr\u00edticas s\u00e3o evitadas para permitir que todos colaborem com suas pr\u00f3prias ideias. Metodologia A equipe se reuniu para debater ideias gerais sobre o projeto via..., come\u00e7ou .... e terminou..., onde o XXXX XXXX foi o moderador, direcionando a equipe com quest\u00f5es pr\u00e9-elaboradas, e transcrevendo as respostas para o documento. Brainstorm Vers\u00e3o 1.0 Perguntas 1. Qual o objetivo principal da aplica\u00e7\u00e3o? XXXX - Deve ser uma plataforma onde qualquer pessoa possa... ZZZ - A plataforma deve fornece... YYYY - O objetivo da aplica\u00e7\u00e3o \u00e9.... WWWW - O principal objetivo da aplica\u00e7\u00e3o \u00e9 a... KKKK - A plataforma deve gerenciar... 2. Como ser\u00e1 o processo para cadastrar um novo clientetorneio? XXXX - O moderador dever\u00e1 fazer login e... YYYY - O cliente... WWWW - Com o usu\u00e1rio logado, ele dever\u00e1... ZZZZ - O cliente... KKK - O cliente... --- ### 3. Como ser\u00e1 a forma de adicionar produtos? XXXX - O cliente ao cadastrar... YYYYY - O produto tem... ZZZZ - O produto.... XXXX - O produto.... --- ### 4. Outras perguntas pertinentes ao contexto XXXX - Com a localiza\u00e7\u00e3o... YYYY - O cliente... ZZZ - O cliente... --- ### 5. \"Outras perguntas pertinentes ao contexto\", Como seria a forma de adicionar do cliente adicionar os produtos ? XXX - O cliente.... ### 6. Quais informa\u00e7\u00f5es seriam interessante para o cliente? XXX - Informa\u00e7\u00f5es... ZZZZ - O cliente usu\u00e1rio poder\u00e1 acessar informa\u00e7\u00f5es... WWWWs - O usu\u00e1rio poder\u00e1 ver scouts de partidas do torneio, ver as regras dos torneios, locais e data das partidas. ### Requisitos elicitados |ID|Descri\u00e7\u00e3o| |----|-------------| |BS01| O cliente...| |BS02| O cliente...| |BS03| O cliente...| |BS04| O cliente...| |BS05| O cliente...| |BS06| O cliente...| |BS07| O cliente...| |BS08| O cliente...| |BS09| O cliente...| |BS10| O produto...| |BS11| O produto...| |BS12| O produto...| |BS13| O produto...| |BS14| O produto...| |BS15| O produto...| ## Conclus\u00e3o Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns dos primeiros requisitos do projeto. ## Refer\u00eancias Bibliogr\u00e1ficas > BARBOSA, S. D. J; DA SILVA, B. S. Intera\u00e7\u00e3o humano-computador. Elsevier, 2010. ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | DD/MM/YYYY | 1.0 | Cria\u00e7\u00e3o do documento | XXX XXXX, XXXX XXXX, YYY YYYY e ZZZ XXXX |","title":"Brainstorm"},{"location":"base/Brainstorm/#introducao","text":"O brainstorm \u00e9 uma t\u00e9cnica de elicita\u00e7\u00e3o de requisitos que consiste em reunir a equipe e discutir sobre diversos t\u00f3picos gerais do projeto apresentados no documento problema de neg\u00f3cio. No brainstorm o di\u00e1logo \u00e9 incentivado e cr\u00edticas s\u00e3o evitadas para permitir que todos colaborem com suas pr\u00f3prias ideias.","title":"Introdu\u00e7\u00e3o"},{"location":"base/Brainstorm/#metodologia","text":"A equipe se reuniu para debater ideias gerais sobre o projeto via..., come\u00e7ou .... e terminou..., onde o XXXX XXXX foi o moderador, direcionando a equipe com quest\u00f5es pr\u00e9-elaboradas, e transcrevendo as respostas para o documento.","title":"Metodologia"},{"location":"base/Brainstorm/#brainstorm","text":"","title":"Brainstorm"},{"location":"base/Brainstorm/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"base/Brainstorm/#perguntas","text":"","title":"Perguntas"},{"location":"base/Brainstorm/#1-qual-o-objetivo-principal-da-aplicacao","text":"XXXX - Deve ser uma plataforma onde qualquer pessoa possa... ZZZ - A plataforma deve fornece... YYYY - O objetivo da aplica\u00e7\u00e3o \u00e9.... WWWW - O principal objetivo da aplica\u00e7\u00e3o \u00e9 a... KKKK - A plataforma deve gerenciar...","title":"1. Qual o objetivo principal da aplica\u00e7\u00e3o?"},{"location":"base/Brainstorm/#2-como-sera-o-processo-para-cadastrar-um-novo-clientetorneio","text":"XXXX - O moderador dever\u00e1 fazer login e... YYYY - O cliente... WWWW - Com o usu\u00e1rio logado, ele dever\u00e1... ZZZZ - O cliente... KKK - O cliente... --- ### 3. Como ser\u00e1 a forma de adicionar produtos? XXXX - O cliente ao cadastrar... YYYYY - O produto tem... ZZZZ - O produto.... XXXX - O produto.... --- ### 4. Outras perguntas pertinentes ao contexto XXXX - Com a localiza\u00e7\u00e3o... YYYY - O cliente... ZZZ - O cliente... --- ### 5. \"Outras perguntas pertinentes ao contexto\", Como seria a forma de adicionar do cliente adicionar os produtos ? XXX - O cliente.... ### 6. Quais informa\u00e7\u00f5es seriam interessante para o cliente? XXX - Informa\u00e7\u00f5es... ZZZZ - O cliente usu\u00e1rio poder\u00e1 acessar informa\u00e7\u00f5es... WWWWs - O usu\u00e1rio poder\u00e1 ver scouts de partidas do torneio, ver as regras dos torneios, locais e data das partidas. ### Requisitos elicitados |ID|Descri\u00e7\u00e3o| |----|-------------| |BS01| O cliente...| |BS02| O cliente...| |BS03| O cliente...| |BS04| O cliente...| |BS05| O cliente...| |BS06| O cliente...| |BS07| O cliente...| |BS08| O cliente...| |BS09| O cliente...| |BS10| O produto...| |BS11| O produto...| |BS12| O produto...| |BS13| O produto...| |BS14| O produto...| |BS15| O produto...| ## Conclus\u00e3o Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns dos primeiros requisitos do projeto. ## Refer\u00eancias Bibliogr\u00e1ficas > BARBOSA, S. D. J; DA SILVA, B. S. Intera\u00e7\u00e3o humano-computador. Elsevier, 2010. ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | DD/MM/YYYY | 1.0 | Cria\u00e7\u00e3o do documento | XXX XXXX, XXXX XXXX, YYY YYYY e ZZZ XXXX |","title":"2. Como ser\u00e1 o processo para cadastrar um novo clientetorneio?"},{"location":"base/doc_template/","text":"Introdu\u00e7\u00e3o Metodologia Desenvolvimento (Renomeie este t\u00f3pico) Vers\u00e3o 1.0 Conclus\u00e3o Refer\u00eancias Autor(es) Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/aa 1.0 Cria\u00e7\u00e3o do documento Autores","title":"Titulo do documento"},{"location":"base/doc_template/#introducao","text":"","title":"Introdu\u00e7\u00e3o"},{"location":"base/doc_template/#metodologia","text":"","title":"Metodologia"},{"location":"base/doc_template/#desenvolvimento-renomeie-este-topico","text":"","title":"Desenvolvimento (Renomeie este t\u00f3pico)"},{"location":"base/doc_template/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"base/doc_template/#conclusao","text":"","title":"Conclus\u00e3o"},{"location":"base/doc_template/#referencias","text":"","title":"Refer\u00eancias"},{"location":"base/doc_template/#autores","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/aa 1.0 Cria\u00e7\u00e3o do documento Autores","title":"Autor(es)"},{"location":"base/documento_de_visao/","text":"Introdu\u00e7\u00e3o O prop\u00f3sito deste documento \u00e9 fornecer uma vis\u00e3o geral sobre o projeto que ser\u00e1 realizado na disciplina Arquitetura e Desenho de Software 2020/1, na Universidade de Bras\u00edlia. Sendo assim, Nesse documento ser\u00e3o descritas de maneira resumida as principais funcionalidades, usabilidades, o problema que ser\u00e1 abordado e os objetivos da equipe. Descri\u00e7\u00e3o do Problema Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. Problema Dificuldade em gerenciar e organizar... Impactados Usu\u00e1rios.... Consequ\u00eancia A cria\u00e7\u00e3o de novos.... Solu\u00e7\u00e3o Utilizar a aplica\u00e7\u00e3o que ser\u00e1 desenvolvida visando resolver... Objetivos O objetivo da equipe de desenvolvimento \u00e9 fornecer... Descri\u00e7\u00e3o do Usu\u00e1rio Os usu\u00e1rios ser\u00e3o.... Recursos do produto Conta O cliente poder\u00e1 realizar seu cadastro.... Loja O cliente poder\u00e1 cadastrar uma loja \u00fanica.... Produto O cliente poder\u00e1 cadastrar.... Pesquisa sobre Lojas O cliente poder\u00e1 pesquisar... Restri\u00e7\u00f5es A aplica\u00e7\u00e3o n\u00e3o ser\u00e1 respons\u00e1vel... Refer\u00eancias Bibliogr\u00e1ficas Documento de vis\u00e3o. Dispon\u00edvel em https://www... Acesso em dd/MM/yyYY Documento de vis\u00e3o. Dispon\u00edvel em Acesso em dd/MM/yyYY Versionamento Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento XXX XXXX e ZZZ ZZZZ","title":"Documento de Vis\u00e3o"},{"location":"base/documento_de_visao/#introducao","text":"O prop\u00f3sito deste documento \u00e9 fornecer uma vis\u00e3o geral sobre o projeto que ser\u00e1 realizado na disciplina Arquitetura e Desenho de Software 2020/1, na Universidade de Bras\u00edlia. Sendo assim, Nesse documento ser\u00e3o descritas de maneira resumida as principais funcionalidades, usabilidades, o problema que ser\u00e1 abordado e os objetivos da equipe.","title":"Introdu\u00e7\u00e3o"},{"location":"base/documento_de_visao/#descricao-do-problema","text":"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.","title":"Descri\u00e7\u00e3o do Problema"},{"location":"base/documento_de_visao/#problema","text":"Dificuldade em gerenciar e organizar...","title":"Problema"},{"location":"base/documento_de_visao/#impactados","text":"Usu\u00e1rios....","title":"Impactados"},{"location":"base/documento_de_visao/#consequencia","text":"A cria\u00e7\u00e3o de novos....","title":"Consequ\u00eancia"},{"location":"base/documento_de_visao/#solucao","text":"Utilizar a aplica\u00e7\u00e3o que ser\u00e1 desenvolvida visando resolver...","title":"Solu\u00e7\u00e3o"},{"location":"base/documento_de_visao/#objetivos","text":"O objetivo da equipe de desenvolvimento \u00e9 fornecer...","title":"Objetivos"},{"location":"base/documento_de_visao/#descricao-do-usuario","text":"Os usu\u00e1rios ser\u00e3o....","title":"Descri\u00e7\u00e3o do Usu\u00e1rio"},{"location":"base/documento_de_visao/#recursos-do-produto","text":"","title":"Recursos do produto"},{"location":"base/documento_de_visao/#conta","text":"O cliente poder\u00e1 realizar seu cadastro....","title":"Conta"},{"location":"base/documento_de_visao/#loja","text":"O cliente poder\u00e1 cadastrar uma loja \u00fanica....","title":"Loja"},{"location":"base/documento_de_visao/#produto","text":"O cliente poder\u00e1 cadastrar....","title":"Produto"},{"location":"base/documento_de_visao/#pesquisa-sobre-lojas","text":"O cliente poder\u00e1 pesquisar...","title":"Pesquisa sobre Lojas"},{"location":"base/documento_de_visao/#restricoes","text":"A aplica\u00e7\u00e3o n\u00e3o ser\u00e1 respons\u00e1vel...","title":"Restri\u00e7\u00f5es"},{"location":"base/documento_de_visao/#referencias-bibliograficas","text":"Documento de vis\u00e3o. Dispon\u00edvel em https://www... Acesso em dd/MM/yyYY Documento de vis\u00e3o. Dispon\u00edvel em Acesso em dd/MM/yyYY","title":"Refer\u00eancias Bibliogr\u00e1ficas"},{"location":"base/documento_de_visao/#versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento XXX XXXX e ZZZ ZZZZ","title":"Versionamento"},{"location":"base/entrevista/","text":"Introdu\u00e7\u00e3o A t\u00e9cnica da entrevista trata-se de uma conversa guiada por um roteiro de perguntas ou t\u00f3picos, na qual visa questionar o stakeholders sobre o sistema atual e esclarecer as suas necessidades sobre o sistema que ser\u00e1 desenvolvido. A entrevista permite investiga\u00e7\u00e3o em profundidade sobre um problema, dessa forma coletar uma grande quantidade de informa\u00e7\u00f5es para o sistema. Metodologia Para esta entrevista optamos por seguir um modelo de entrevista aberta, onde ter\u00e1 uma s\u00e9rie de perguntas de apoio pr\u00e9-definidas com finalidade do stakeholders expor informa\u00e7\u00f5es importantes para o sistema. As quest\u00f5es s\u00e3o formuladas e filtradas, de acordo com o interesse da equipe com o prop\u00f3sito de orientar o entrevistador durante a entrevista. O entrevistador e entrevistado tem liberdade para abordar qualquer assunto relacionado ao sistema durante a entrevista. Roteiro Voc\u00ea.... ? Como funcionava.... ? Voc\u00ea j\u00e1 usou alguma aplica\u00e7\u00e3o.... Teve algum problema.... ? O que voc\u00ea acha de uma aplica\u00e7\u00e3o..... ? Para voc\u00ea qual seria o sistema ideal.... ? Voc\u00ea gostaria de poder se cadastrar..... voc\u00ea gostaria que as informa\u00e7\u00f5es... Entrevistas Vers\u00e3o 1.0 Entrevista 1 Nome Papel xxxx Pedro Entrevistador xxxx xxxx Entrevistado Data Hor\u00e1rio de inicio Hor\u00e1rio de fim Descri\u00e7\u00e3o 03/09/20 12:11 12:38 Entrevista realizada via hangouts. Nome do participante Di\u00e1logo durante a apresenta\u00e7\u00e3o dos projetos XXX XXXX: Voc\u00ea... XXX XXXX: Sim.... XXX XXXX: Como... XXXX XXXX: J\u00e1... Requisitos elicitados ID Descri\u00e7\u00e3o REQ01 O ... REQ02 O ... REQ03 O ... REQ04 O ... REQ05 O ... REQ06 O ... REQ07 O ... REQ08 O ... REQ09 O ... REQ10 O ... Conclus\u00e3o Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns requisitos importantes para o projeto. Refer\u00eancias Autor(es) Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento xxx XXXX DD/MM/YYYY 2.0 Adi\u00e7\u00e3o da entrevista 1 XXX XXXX DD/MM/YYYY 2.1 Adi\u00e7\u00e3o dos requisitos elicitados e conclus\u00e3o XXXX XXXXX","title":"Entrevista"},{"location":"base/entrevista/#introducao","text":"A t\u00e9cnica da entrevista trata-se de uma conversa guiada por um roteiro de perguntas ou t\u00f3picos, na qual visa questionar o stakeholders sobre o sistema atual e esclarecer as suas necessidades sobre o sistema que ser\u00e1 desenvolvido. A entrevista permite investiga\u00e7\u00e3o em profundidade sobre um problema, dessa forma coletar uma grande quantidade de informa\u00e7\u00f5es para o sistema.","title":"Introdu\u00e7\u00e3o"},{"location":"base/entrevista/#metodologia","text":"Para esta entrevista optamos por seguir um modelo de entrevista aberta, onde ter\u00e1 uma s\u00e9rie de perguntas de apoio pr\u00e9-definidas com finalidade do stakeholders expor informa\u00e7\u00f5es importantes para o sistema. As quest\u00f5es s\u00e3o formuladas e filtradas, de acordo com o interesse da equipe com o prop\u00f3sito de orientar o entrevistador durante a entrevista. O entrevistador e entrevistado tem liberdade para abordar qualquer assunto relacionado ao sistema durante a entrevista.","title":"Metodologia"},{"location":"base/entrevista/#roteiro","text":"Voc\u00ea.... ? Como funcionava.... ? Voc\u00ea j\u00e1 usou alguma aplica\u00e7\u00e3o.... Teve algum problema.... ? O que voc\u00ea acha de uma aplica\u00e7\u00e3o..... ? Para voc\u00ea qual seria o sistema ideal.... ? Voc\u00ea gostaria de poder se cadastrar..... voc\u00ea gostaria que as informa\u00e7\u00f5es...","title":"Roteiro"},{"location":"base/entrevista/#entrevistas","text":"","title":"Entrevistas"},{"location":"base/entrevista/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"base/entrevista/#entrevista-1","text":"Nome Papel xxxx Pedro Entrevistador xxxx xxxx Entrevistado Data Hor\u00e1rio de inicio Hor\u00e1rio de fim Descri\u00e7\u00e3o 03/09/20 12:11 12:38 Entrevista realizada via hangouts. Nome do participante Di\u00e1logo durante a apresenta\u00e7\u00e3o dos projetos XXX XXXX: Voc\u00ea... XXX XXXX: Sim.... XXX XXXX: Como... XXXX XXXX: J\u00e1...","title":"Entrevista 1"},{"location":"base/entrevista/#requisitos-elicitados","text":"ID Descri\u00e7\u00e3o REQ01 O ... REQ02 O ... REQ03 O ... REQ04 O ... REQ05 O ... REQ06 O ... REQ07 O ... REQ08 O ... REQ09 O ... REQ10 O ...","title":"Requisitos elicitados"},{"location":"base/entrevista/#conclusao","text":"Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns requisitos importantes para o projeto.","title":"Conclus\u00e3o"},{"location":"base/entrevista/#referencias","text":"","title":"Refer\u00eancias"},{"location":"base/entrevista/#autores","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento xxx XXXX DD/MM/YYYY 2.0 Adi\u00e7\u00e3o da entrevista 1 XXX XXXX DD/MM/YYYY 2.1 Adi\u00e7\u00e3o dos requisitos elicitados e conclus\u00e3o XXXX XXXXX","title":"Autor(es)"},{"location":"base/mapa_mental/","text":"Introdu\u00e7\u00e3o Mapa mental consiste em criar resumos cheios de s\u00edmbolos, cores, setas e frases de efeito com o objetivo de organizar o conte\u00fado e facilitar associa\u00e7\u00f5es entre as informa\u00e7\u00f5es destacadas. Esse material \u00e9 muito indicado para pessoas que t\u00eam facilidade de aprender de forma visual. Metodologia Foi levantado um ponto importante sobre o app e, assim, foi produzido o mapa mental. O documento foi produzido utilizando a ferramenta... Mapa mental - Geral. Vers\u00e3o 1.0 Mapa mental 1 Mapa mental 2 Conclus\u00e3o O mapa mental \u00e9 uma ficha de estudos que ajuda a dar uma vis\u00e3o geral do tema, e ajuda a fixar os pontos mais importantes sobre o app. Refer\u00eancias Mapa MentalXXX, Dispon\u00edvel em: https://www..... Ferramentas para Mapas Mentais. Dispon\u00edvel em: https://www.... Plataforma para usu\u00e1rios colaborar no desenho... Dispon\u00edvel em: https://... Versionamento Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/yy 1.0 Cria\u00e7\u00e3o do documento xxx xxxx dd/mm/yy 2.0 Adicionado Mapa mental 2 xxxx xxxx","title":"Mapas Mentais"},{"location":"base/mapa_mental/#introducao","text":"Mapa mental consiste em criar resumos cheios de s\u00edmbolos, cores, setas e frases de efeito com o objetivo de organizar o conte\u00fado e facilitar associa\u00e7\u00f5es entre as informa\u00e7\u00f5es destacadas. Esse material \u00e9 muito indicado para pessoas que t\u00eam facilidade de aprender de forma visual.","title":"Introdu\u00e7\u00e3o"},{"location":"base/mapa_mental/#metodologia","text":"Foi levantado um ponto importante sobre o app e, assim, foi produzido o mapa mental. O documento foi produzido utilizando a ferramenta...","title":"Metodologia"},{"location":"base/mapa_mental/#mapa-mental-geral","text":"","title":"Mapa mental - Geral."},{"location":"base/mapa_mental/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"base/mapa_mental/#mapa-mental-1","text":"","title":"Mapa mental 1"},{"location":"base/mapa_mental/#mapa-mental-2","text":"","title":"Mapa mental 2"},{"location":"base/mapa_mental/#conclusao","text":"O mapa mental \u00e9 uma ficha de estudos que ajuda a dar uma vis\u00e3o geral do tema, e ajuda a fixar os pontos mais importantes sobre o app.","title":"Conclus\u00e3o"},{"location":"base/mapa_mental/#referencias","text":"Mapa MentalXXX, Dispon\u00edvel em: https://www..... Ferramentas para Mapas Mentais. Dispon\u00edvel em: https://www.... Plataforma para usu\u00e1rios colaborar no desenho... Dispon\u00edvel em: https://...","title":"Refer\u00eancias"},{"location":"base/mapa_mental/#versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/yy 1.0 Cria\u00e7\u00e3o do documento xxx xxxx dd/mm/yy 2.0 Adicionado Mapa mental 2 xxxx xxxx","title":"Versionamento"},{"location":"base/metodologia/","text":"Introdu\u00e7\u00e3o A metodologia pode ser definida como a sistematiza\u00e7\u00e3o de m\u00e9todos e t\u00e9cnicas com o intuito de se alcan\u00e7ar um objetivo. Este documento aborda os m\u00e9todos e t\u00e9cnica de metodologias, processos e pr\u00e1ticas (Scrum, XP, Kanban, RUP) de acordo com o objetivo da equipe e da disciplina. Metodologia A equipe utiliza v\u00e1rios m\u00e9todos e t\u00e9cnicas de diversas metodologias, processos e pr\u00e1ticas, para o desenvolvimento. Com o estudo e experi\u00eancia da equipe sobre as metodologias \u00e1geis, foi poss\u00edvel identificar aspectos das diversas metodologias, que a equipe utiliza para o desenvolvimento do projeto. Metodologias, processos e pr\u00e1ticas identificados: RUP/UP : RUP/UP \u00e9 uma metodologia.... POO (OOP Oriented Object Programming) : POO (OOP) \u00e9 uma... RUP (Rational Unified Process) : O Rational Unified Process \u00e9 um Processo de Engenharia de Software. Ele fornece.... - [Kanban](https://www...): O sistema kanban \u00e9 uma metodologia \u00e1gil.... ## Metodologias de desenvolvimento: ### Vers\u00e3o 1.0 ### RUP (Rational Unified Process) #### Pr\u00e1ticas: - **Desenvolvimento iterativo**: A abordagem iterativa \u00e9 necess\u00e1ria para.... - **Verifica\u00e7\u00e3o da qualidade de software**: A qualidade deve ser revista com respeito aos requisitos com base... ### Kanban O Kanban \u00e9 t\u00e9cnica que prop\u00f5e a utiliza\u00e7\u00e3o de cart\u00f5es em um quadro... - **Lista de Tarefas**: Cont\u00e9m todas as tarefas do projeto. - **Incremento**: Cont\u00e9m as tarefas a serem executadas durante a Sprint. - **Em andamento**: Cont\u00e9m as tarefas que est\u00e3o em andamento. - **Revis\u00e3o**: Cont\u00e9m as tarefas que precisam ser revisadas para conclus\u00e3o. - **Concluido**: Cont\u00e9m as tarefas que j\u00e1 foram revisadas e conclu\u00eddas. ## Conclus\u00e3o Com o estudo das metodologias..... ## Refer\u00eancias > [1] SCRUM, Disponivel em: https://www.... > [2] Sistema Kanban, Disponivel em: https://www... > [3] Extreme Programming, Disponivel em: http://www... > [5] Rational Unified Process, Disponivel em: https://www... > [6] EXTREME PROGRAMMING, Disponivel em: https://www... ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | 05/mm/xx | 1.0 | Cria\u00e7\u00e3o | xxx xxx e xxxxx xxxxx | | 06/mm/xx | 1.1 | Adicionado | xxx xxxx e xxxxx xxxx | | 06/mm/XX | 1.2 | Adicionado | xxx xxxx e xxxxxx xxxxxx | | 06/mm/xx | 1.3 | Adicionado xxxx | xxx xxxx e xxxx xxxxx | | 06/mm/xx | 1.4 | Adicionadoxxxx | xxxx xxxxx e xxxx xxxxx | | mm/mm/xx | 1.5 | Revis\u00e3o do documento | xxxx xxxxx | | mm/mm/xx | 1.6 | Ajuste no topico Scrum | xxxx xxxx e xxxx xxxx |","title":"Metodologia"},{"location":"base/metodologia/#introducao","text":"A metodologia pode ser definida como a sistematiza\u00e7\u00e3o de m\u00e9todos e t\u00e9cnicas com o intuito de se alcan\u00e7ar um objetivo. Este documento aborda os m\u00e9todos e t\u00e9cnica de metodologias, processos e pr\u00e1ticas (Scrum, XP, Kanban, RUP) de acordo com o objetivo da equipe e da disciplina.","title":"Introdu\u00e7\u00e3o"},{"location":"base/metodologia/#metodologia","text":"A equipe utiliza v\u00e1rios m\u00e9todos e t\u00e9cnicas de diversas metodologias, processos e pr\u00e1ticas, para o desenvolvimento. Com o estudo e experi\u00eancia da equipe sobre as metodologias \u00e1geis, foi poss\u00edvel identificar aspectos das diversas metodologias, que a equipe utiliza para o desenvolvimento do projeto. Metodologias, processos e pr\u00e1ticas identificados: RUP/UP : RUP/UP \u00e9 uma metodologia.... POO (OOP Oriented Object Programming) : POO (OOP) \u00e9 uma... RUP (Rational Unified Process) : O Rational Unified Process \u00e9 um Processo de Engenharia de Software. Ele fornece.... - [Kanban](https://www...): O sistema kanban \u00e9 uma metodologia \u00e1gil.... ## Metodologias de desenvolvimento: ### Vers\u00e3o 1.0 ### RUP (Rational Unified Process) #### Pr\u00e1ticas: - **Desenvolvimento iterativo**: A abordagem iterativa \u00e9 necess\u00e1ria para.... - **Verifica\u00e7\u00e3o da qualidade de software**: A qualidade deve ser revista com respeito aos requisitos com base... ### Kanban O Kanban \u00e9 t\u00e9cnica que prop\u00f5e a utiliza\u00e7\u00e3o de cart\u00f5es em um quadro... - **Lista de Tarefas**: Cont\u00e9m todas as tarefas do projeto. - **Incremento**: Cont\u00e9m as tarefas a serem executadas durante a Sprint. - **Em andamento**: Cont\u00e9m as tarefas que est\u00e3o em andamento. - **Revis\u00e3o**: Cont\u00e9m as tarefas que precisam ser revisadas para conclus\u00e3o. - **Concluido**: Cont\u00e9m as tarefas que j\u00e1 foram revisadas e conclu\u00eddas. ## Conclus\u00e3o Com o estudo das metodologias..... ## Refer\u00eancias > [1] SCRUM, Disponivel em: https://www.... > [2] Sistema Kanban, Disponivel em: https://www... > [3] Extreme Programming, Disponivel em: http://www... > [5] Rational Unified Process, Disponivel em: https://www... > [6] EXTREME PROGRAMMING, Disponivel em: https://www... ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | 05/mm/xx | 1.0 | Cria\u00e7\u00e3o | xxx xxx e xxxxx xxxxx | | 06/mm/xx | 1.1 | Adicionado | xxx xxxx e xxxxx xxxx | | 06/mm/XX | 1.2 | Adicionado | xxx xxxx e xxxxxx xxxxxx | | 06/mm/xx | 1.3 | Adicionado xxxx | xxx xxxx e xxxx xxxxx | | 06/mm/xx | 1.4 | Adicionadoxxxx | xxxx xxxxx e xxxx xxxxx | | mm/mm/xx | 1.5 | Revis\u00e3o do documento | xxxx xxxxx | | mm/mm/xx | 1.6 | Ajuste no topico Scrum | xxxx xxxx e xxxx xxxx |","title":"Metodologia"},{"location":"base/prototipo_alta_fidelidade/","text":"Introdu\u00e7\u00e3o A constru\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade auxilia a equipe de desenvolvimento a encontrar um n\u00edvel de detalhes abrangentes, extrair funcionalidades, testar usabilidade, e tamb\u00e9m fornece uma base para o gerenciamento do projeto pois com o prot\u00f3tipo \u00e9 poss\u00edvel realizar estimativas de quanto tempo ser\u00e1 necess\u00e1rio desempenhar em cada funcionalidade. Metodologia Iniciamos o projeto atrav\u00e9s dos levantamentos iniciais da equipe, ap\u00f3s discuss\u00f5es a ferramenta Figma foi selecionada para produzir o prot\u00f3tipo de alta fidelidade com aux\u00edlio do Material Design Color Tool. Prot\u00f3tipo de alta fidelidade Vers\u00e3o 1.0 Tela Login Tela Cadastro 1 Tela Cadastro 2 Tela Esqueceu Senha Tela do Feed Tela Feed com configura\u00e7\u00f5es Tela Perfil Tela Cadastrar torneio 1 Tela Cadastrar torneio 2 Tela Cadastrar torneio 3 Tela Cadastrar torneio 4 Tela com meus torneios Tela de inscri\u00e7\u00e3o em torneio Na primeira vers\u00e3o do prot\u00f3tipo utilizamos a ferramenta Material Design Color Tool para auxiliar na cria\u00e7\u00e3o da paleta de cores do aplicativo, definimos as cores base do aplicativo mas as cores definidas para as telas 12 e 13 ainda n\u00e3o foram decididas. Vers\u00e3o 2.0 Tela Login Tela Cadastro Tela Esqueceu Senha Tela Perfil Tela do Feed Tela Cadastrar em um torneio Tela Cadastrar torneio Tela Cadastrar torneio 2 Tela dos meus torneios Tela das chaves do torneio Tela das estat\u00edscicas Tela de adicionar resultado das partidas link para o Prot\u00f3tipo Conclus\u00e3o A partir da elabora\u00e7\u00e3o do prot\u00f3tipo foi poss\u00edvel ter uma no\u00e7\u00e3o inicial da interface do usu\u00e1rio, definindo fluxo, paleta de cores, bot\u00f5es, app bars e diversas outras funcionalidades Refer\u00eancias Material Design Color Tool. Dispon\u00edvel em: https://material.io/resources/color/#!/?view.left=0&view.right=0 PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK\u00ae 5a. ed. EUA: Project Management Institute, 2013. Ferramenta Figma. Dispon\u00edvel em https://www.figma.com Autor(es) Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 07/09/20 1.0 Cria\u00e7\u00e3o do documento Lucas Alexandre e Matheus Estanislau 07/09/20 1.1 Adicionado as imagens do prot\u00f3tipo Lucas Alexandre e Matheus Estanislau 07/09/20 1.2 Adicionado conclus\u00e3o e refer\u00eancias Lucas Alexandre e Matheus Estanislau 26/10/20 2.0 Adicionada a vers\u00e3o 2.0 do prot\u00f3tipo Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan","title":"Prot\u00f3tipo"},{"location":"base/prototipo_alta_fidelidade/#introducao","text":"A constru\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade auxilia a equipe de desenvolvimento a encontrar um n\u00edvel de detalhes abrangentes, extrair funcionalidades, testar usabilidade, e tamb\u00e9m fornece uma base para o gerenciamento do projeto pois com o prot\u00f3tipo \u00e9 poss\u00edvel realizar estimativas de quanto tempo ser\u00e1 necess\u00e1rio desempenhar em cada funcionalidade.","title":"Introdu\u00e7\u00e3o"},{"location":"base/prototipo_alta_fidelidade/#metodologia","text":"Iniciamos o projeto atrav\u00e9s dos levantamentos iniciais da equipe, ap\u00f3s discuss\u00f5es a ferramenta Figma foi selecionada para produzir o prot\u00f3tipo de alta fidelidade com aux\u00edlio do Material Design Color Tool.","title":"Metodologia"},{"location":"base/prototipo_alta_fidelidade/#prototipo-de-alta-fidelidade","text":"","title":"Prot\u00f3tipo de alta fidelidade"},{"location":"base/prototipo_alta_fidelidade/#versao-10","text":"","title":"Vers\u00e3o 1.0"},{"location":"base/prototipo_alta_fidelidade/#tela-login","text":"","title":"Tela Login"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastro-1","text":"","title":"Tela Cadastro 1"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastro-2","text":"","title":"Tela Cadastro 2"},{"location":"base/prototipo_alta_fidelidade/#tela-esqueceu-senha","text":"","title":"Tela Esqueceu Senha"},{"location":"base/prototipo_alta_fidelidade/#tela-do-feed","text":"","title":"Tela do Feed"},{"location":"base/prototipo_alta_fidelidade/#tela-feed-com-configuracoes","text":"","title":"Tela Feed com configura\u00e7\u00f5es"},{"location":"base/prototipo_alta_fidelidade/#tela-perfil","text":"","title":"Tela Perfil"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-1","text":"","title":"Tela Cadastrar torneio 1"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-2","text":"","title":"Tela Cadastrar torneio 2"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-3","text":"","title":"Tela Cadastrar torneio 3"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-4","text":"","title":"Tela Cadastrar torneio 4"},{"location":"base/prototipo_alta_fidelidade/#tela-com-meus-torneios","text":"","title":"Tela com meus torneios"},{"location":"base/prototipo_alta_fidelidade/#tela-de-inscricao-em-torneio","text":"Na primeira vers\u00e3o do prot\u00f3tipo utilizamos a ferramenta Material Design Color Tool para auxiliar na cria\u00e7\u00e3o da paleta de cores do aplicativo, definimos as cores base do aplicativo mas as cores definidas para as telas 12 e 13 ainda n\u00e3o foram decididas.","title":"Tela de inscri\u00e7\u00e3o em torneio"},{"location":"base/prototipo_alta_fidelidade/#versao-20","text":"","title":"Vers\u00e3o 2.0"},{"location":"base/prototipo_alta_fidelidade/#tela-login_1","text":"","title":"Tela Login"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastro","text":"","title":"Tela Cadastro"},{"location":"base/prototipo_alta_fidelidade/#tela-esqueceu-senha_1","text":"","title":"Tela Esqueceu Senha"},{"location":"base/prototipo_alta_fidelidade/#tela-perfil_1","text":"","title":"Tela Perfil"},{"location":"base/prototipo_alta_fidelidade/#tela-do-feed_1","text":"","title":"Tela do Feed"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-em-um-torneio","text":"","title":"Tela Cadastrar em um torneio"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio","text":"","title":"Tela Cadastrar torneio"},{"location":"base/prototipo_alta_fidelidade/#tela-cadastrar-torneio-2_1","text":"","title":"Tela Cadastrar torneio 2"},{"location":"base/prototipo_alta_fidelidade/#tela-dos-meus-torneios","text":"","title":"Tela dos meus torneios"},{"location":"base/prototipo_alta_fidelidade/#tela-das-chaves-do-torneio","text":"","title":"Tela das chaves do torneio"},{"location":"base/prototipo_alta_fidelidade/#tela-das-estatiscicas","text":"","title":"Tela das estat\u00edscicas"},{"location":"base/prototipo_alta_fidelidade/#tela-de-adicionar-resultado-das-partidas","text":"link para o Prot\u00f3tipo","title":"Tela de adicionar resultado das partidas"},{"location":"base/prototipo_alta_fidelidade/#conclusao","text":"A partir da elabora\u00e7\u00e3o do prot\u00f3tipo foi poss\u00edvel ter uma no\u00e7\u00e3o inicial da interface do usu\u00e1rio, definindo fluxo, paleta de cores, bot\u00f5es, app bars e diversas outras funcionalidades","title":"Conclus\u00e3o"},{"location":"base/prototipo_alta_fidelidade/#referencias","text":"Material Design Color Tool. Dispon\u00edvel em: https://material.io/resources/color/#!/?view.left=0&view.right=0 PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK\u00ae 5a. ed. EUA: Project Management Institute, 2013. Ferramenta Figma. Dispon\u00edvel em https://www.figma.com","title":"Refer\u00eancias"},{"location":"base/prototipo_alta_fidelidade/#autores","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 07/09/20 1.0 Cria\u00e7\u00e3o do documento Lucas Alexandre e Matheus Estanislau 07/09/20 1.1 Adicionado as imagens do prot\u00f3tipo Lucas Alexandre e Matheus Estanislau 07/09/20 1.2 Adicionado conclus\u00e3o e refer\u00eancias Lucas Alexandre e Matheus Estanislau 26/10/20 2.0 Adicionada a vers\u00e3o 2.0 do prot\u00f3tipo Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan","title":"Autor(es)"},{"location":"sprint/sprint1/","text":"Sprint 1 (05/02/24 \u00e0 12/04/2024) Planejamento de Intera\u00e7\u00e3o Presentes na reuni\u00e3o: XXXXX Lista de Tarefas da Intera\u00e7\u00e3o Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar 5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX Sprint Retrospective/Review Meeting Presentes na reuni\u00e3o: XXXX Dividas da Intera\u00e7\u00e3o Riscos Encontrados Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado. Pontos Positivos Pontos Negativos O que podemos melhorar? Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo. A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros. Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/ Ferramentas utilizadas Reuni\u00e3o: Hangouts Colheita dos pontos: Mentimeter","title":"Sprint 1"},{"location":"sprint/sprint1/#sprint-1-050224-a-12042024","text":"","title":"Sprint 1 (05/02/24 \u00e0 12/04/2024)"},{"location":"sprint/sprint1/#planejamento-de-interacao","text":"","title":"Planejamento de Intera\u00e7\u00e3o"},{"location":"sprint/sprint1/#presentes-na-reuniao-xxxxx","text":"","title":"Presentes na reuni\u00e3o: XXXXX"},{"location":"sprint/sprint1/#lista-de-tarefas-da-interacao","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar 5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX","title":"Lista de Tarefas da Intera\u00e7\u00e3o"},{"location":"sprint/sprint1/#sprint-retrospectivereview-meeting","text":"","title":"Sprint Retrospective/Review Meeting"},{"location":"sprint/sprint1/#presentes-na-reuniao-xxxx","text":"","title":"Presentes na reuni\u00e3o: XXXX"},{"location":"sprint/sprint1/#dividas-da-interacao","text":"","title":"Dividas da Intera\u00e7\u00e3o"},{"location":"sprint/sprint1/#riscos-encontrados","text":"Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.","title":"Riscos Encontrados"},{"location":"sprint/sprint1/#pontos-positivos","text":"","title":"Pontos Positivos"},{"location":"sprint/sprint1/#pontos-negativos","text":"","title":"Pontos Negativos"},{"location":"sprint/sprint1/#o-que-podemos-melhorar","text":"Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo. A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros. Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/","title":"O que podemos melhorar?"},{"location":"sprint/sprint1/#ferramentas-utilizadas","text":"Reuni\u00e3o: Hangouts Colheita dos pontos: Mentimeter","title":"Ferramentas utilizadas"}]}